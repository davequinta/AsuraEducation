
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-dsqgdBtnWun6oxDg9q1xezEyITXQ8QsMdFm+JDoDk6Tzx9AEE1XcUEhWff/M2Jv85ucTVJCjp/2fGbh6Omtrgg==" rel="stylesheet" href="https://github.githubassets.com/assets/frameworks-41c2037bf12f1e46d8f08b88a04a8d8f.css" />
  
    <link crossorigin="anonymous" media="all" integrity="sha512-laSfoi4gdhl6Kk1KvWW1HJ1mn6jL6UFhXicUQFZzdrCHxxMOR7LzishtoFm1VYZGrsQNot/c/ygUXDR0wI1p7A==" rel="stylesheet" href="https://github.githubassets.com/assets/github-f903efdb4f13a3360e0e453a10f271c0.css" />
    
    
    
    

  <meta name="viewport" content="width=device-width">
  
  <title>face-api.js/face-api.js at master Â· justadudewhohacks/face-api.js</title>
    <meta name="description" content="JavaScript API for face detection and face recognition in the browser and nodejs with tensorflow.js - justadudewhohacks/face-api.js">
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    <meta name="twitter:image:src" content="https://avatars2.githubusercontent.com/u/31125521?s=400&amp;v=4" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary" /><meta name="twitter:title" content="justadudewhohacks/face-api.js" /><meta name="twitter:description" content="JavaScript API for face detection and face recognition in the browser and nodejs with tensorflow.js - justadudewhohacks/face-api.js" />
    <meta property="og:image" content="https://avatars2.githubusercontent.com/u/31125521?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="justadudewhohacks/face-api.js" /><meta property="og:url" content="https://github.com/justadudewhohacks/face-api.js" /><meta property="og:description" content="JavaScript API for face detection and face recognition in the browser and nodejs with tensorflow.js - justadudewhohacks/face-api.js" />

  <link rel="assets" href="https://github.githubassets.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6NDA3NjY1NDMwOjk5ZmU1ZmIxMDFkNjk3ZWQ1MWVhMjY3MTExNWZhZGI0ZDNkNzBkMGNlN2JjZGM4NGFhZjFkOTdmMWM2ODUwMjg=--91f86750ac7a5add8eed88de08a1917178523850">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="831A:68CE:1D17C04:3073A53:5D060DEA" data-pjax-transient>


  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

      <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
    <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">

  <meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="831A:68CE:1D17C04:3073A53:5D060DEA" /><meta name="octolytics-dimension-region_edge" content="iad" /><meta name="octolytics-dimension-region_render" content="iad" /><meta name="octolytics-actor-id" content="11913893" /><meta name="octolytics-actor-login" content="davequinta" /><meta name="octolytics-actor-hash" content="b69ee74b0bf5036a8b05ea2aab50f5004dd583526ebca8d8807d138e50049629" />
<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />



    <meta name="google-analytics" content="UA-3769691-2">

  <meta class="js-ga-set" name="userId" content="638dcd77bb225e73001d9f8d3627186b">

<meta class="js-ga-set" name="dimension1" content="Logged In">



  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="davequinta">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="NGZmZjkxMjUyNDNlOWRlYzM4ZGQ4NWM2NWI0NGVjZjVmZDdmNWQ3MzE4NzA2NWFiMTIxNWE2YWQ3NGVkYmNmMnx7InJlbW90ZV9hZGRyZXNzIjoiMTkwLjYyLjI1MS4xOTMiLCJyZXF1ZXN0X2lkIjoiODMxQTo2OENFOjFEMTdDMDQ6MzA3M0E1Mzo1RDA2MERFQSIsInRpbWVzdGFtcCI6MTU2MDY3Nzg3MiwiaG9zdCI6ImdpdGh1Yi5jb20ifQ==">

    <meta name="enabled-features" content="UNIVERSE_BANNER,MARKETPLACE_INVOICED_BILLING,MARKETPLACE_SOCIAL_PROOF_CUSTOMERS,MARKETPLACE_TRENDING_SOCIAL_PROOF,MARKETPLACE_RECOMMENDATIONS,NOTIFY_ON_BLOCK,RELATED_ISSUES">

  <meta name="html-safe-nonce" content="c62c05d4012d15467adc671e9c72164e0cefb9be">

  <meta http-equiv="x-pjax-version" content="97f648acda912928301d540e824d166b">
  

      <link href="https://github.com/justadudewhohacks/face-api.js/commits/master.atom" rel="alternate" title="Recent Commits to face-api.js:master" type="application/atom+xml">

  <meta name="go-import" content="github.com/justadudewhohacks/face-api.js git https://github.com/justadudewhohacks/face-api.js.git">

  <meta name="octolytics-dimension-user_id" content="31125521" /><meta name="octolytics-dimension-user_login" content="justadudewhohacks" /><meta name="octolytics-dimension-repository_id" content="134035452" /><meta name="octolytics-dimension-repository_nwo" content="justadudewhohacks/face-api.js" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="134035452" /><meta name="octolytics-dimension-repository_network_root_nwo" content="justadudewhohacks/face-api.js" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />


    <link rel="canonical" href="https://github.com/justadudewhohacks/face-api.js/blob/master/dist/face-api.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://github.githubassets.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-enabled" content="true">



  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-in env-production page-responsive page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="p-3 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    


          <header class="Header js-details-container Details flex-wrap flex-lg-nowrap p-responsive" role="banner">

    <div class="Header-item d-none d-lg-flex">
      <a class="Header-link" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg class="octicon octicon-mark-github v-align-middle" height="32" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>

    </div>

    <div class="Header-item d-lg-none">
      <button class="Header-link btn-link js-details-target" type="button" aria-label="Toggle navigation" aria-expanded="false">
        <svg height="24" class="octicon octicon-three-bars" viewBox="0 0 12 16" version="1.1" width="18" aria-hidden="true"><path fill-rule="evenodd" d="M11.41 9H.59C0 9 0 8.59 0 8c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zm0-4H.59C0 5 0 4.59 0 4c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zM.59 11H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1H.59C0 13 0 12.59 0 12c0-.59 0-1 .59-1z"/></svg>
      </button>
    </div>

    <div class="Header-item Header-item--full flex-column flex-lg-row width-full flex-order-2 flex-lg-order-none mr-0 mr-lg-3 mt-3 mt-lg-0 Details-content--hidden">
        <div class="header-search flex-self-stretch flex-lg-self-auto mr-0 mr-lg-3 mb-3 mb-lg-0 scoped-search site-scoped-search js-site-search position-relative js-jump-to"
  role="combobox"
  aria-owns="jump-to-results"
  aria-label="Search or jump to"
  aria-haspopup="listbox"
  aria-expanded="false"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" role="search" aria-label="Site" data-scope-type="Repository" data-scope-id="134035452" data-scoped-search-url="/justadudewhohacks/face-api.js/search" data-unscoped-search-url="/search" action="/justadudewhohacks/face-api.js/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <label class="form-control input-sm header-search-wrapper p-0 header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center js-chromeless-input-container">
        <input type="text"
          class="form-control input-sm header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
          data-hotkey="s,/"
          name="q"
          value=""
          placeholder="Search or jump toâ¦"
          data-unscoped-placeholder="Search or jump toâ¦"
          data-scoped-placeholder="Search or jump toâ¦"
          autocapitalize="off"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          aria-label="Search or jump toâ¦"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations#csrf-token=+is8K8KgGhjdGKuQyX0e4BBDysD1a85BsiUcEUSZxJxwcYjMEo4ZgG9mY6K6KTaY2WUljc4zPfFe+YvJF7q4Hw=="
          spellcheck="false"
          autocomplete="off"
          >
          <input type="hidden" class="js-site-search-type-field" name="type" >
            <img src="https://github.githubassets.com/images/search-key-slash.svg" alt="" class="mr-2 header-search-key-slash">

            <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
              
<ul class="d-none js-jump-to-suggestions-template-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>
  </a>
</li>

</ul>

<ul class="d-none js-jump-to-no-results-template-container">
  <li class="d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2">
    <span class="text-gray">No suggested jump to results</span>
  </li>
</ul>

<ul id="jump-to-results" role="listbox" class="p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>
  </a>
</li>


    <li class="d-flex flex-justify-center flex-items-center p-0 f5 js-jump-to-suggestion">
      <img src="https://github.githubassets.com/images/spinners/octocat-spinner-128.gif" alt="Octocat Spinner Icon" class="m-2" width="28">
    </li>
</ul>

            </div>
      </label>
</form>  </div>
</div>


      <nav class="d-flex flex-column flex-lg-row flex-self-stretch flex-lg-self-auto" aria-label="Global">
    <a class="Header-link d-block d-lg-none py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" data-ga-click="Header, click, Nav menu - item:dashboard:user" aria-label="Dashboard" href="/dashboard">
      Dashboard
</a>
  <a class="js-selected-navigation-item Header-link  mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" data-hotkey="g p" data-ga-click="Header, click, Nav menu - item:pulls context:user" aria-label="Pull requests you created" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls" href="/pulls">
    Pull requests
</a>
  <a class="js-selected-navigation-item Header-link  mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" data-hotkey="g i" data-ga-click="Header, click, Nav menu - item:issues context:user" aria-label="Issues you created" data-selected-links="/issues /issues/assigned /issues/mentioned /issues" href="/issues">
    Issues
</a>
    <div class="mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15">
      <a class="js-selected-navigation-item Header-link" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-octo-click="marketplace_click" data-octo-dimensions="location:nav_bar" data-selected-links=" /marketplace" href="/marketplace">
        Marketplace
</a>      
    </div>

  <a class="js-selected-navigation-item Header-link  mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore" href="/explore">
    Explore
</a>
    <a class="Header-link d-block d-lg-none mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" aria-label="View profile and more" aria-expanded="false" aria-haspopup="false" href="https://github.com/davequinta">
      <img class="avatar" src="https://avatars0.githubusercontent.com/u/11913893?s=40&amp;v=4" width="20" height="20" alt="@davequinta" />
      davequinta
</a>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="pQ+MHOwP7QetGN86PxxI+ELMePWGe1ohSi1M8jBMYSDaDAbkeZfex8VqH5r/ycnjPsj+3XaHo8lDIW4OHsNyHg==" />
      <button type="submit" class="Header-link mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15 d-lg-none btn-link d-block width-full text-left" data-ga-click="Header, sign out, icon:logout" style="padding-left: 2px;">
        <svg class="octicon octicon-sign-out v-align-middle" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 9V7H8V5h4V3l4 3-4 3zm-2 3H6V3L2 1h8v3h1V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v11.38c0 .39.22.73.55.91L6 16.01V13h4c.55 0 1-.45 1-1V8h-1v4z"/></svg>
        Sign out
      </button>
</form></nav>

    </div>

    <div class="Header-item Header-item--full flex-justify-center d-lg-none position-relative">
      <div class="css-truncate css-truncate-target width-fit position-absolute left-0 right-0 text-center">
              <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
    <a class="Header-link" href="/justadudewhohacks">justadudewhohacks</a>
    /
    <a class="Header-link" href="/justadudewhohacks/face-api.js">face-api.js</a>

</div>
    </div>

    <div class="Header-item position-relative d-none d-lg-flex">
      

    </div>

    <div class="Header-item mr-0 mr-lg-3 flex-order-1 flex-lg-order-none">
      

    <a aria-label="You have no unread notifications" class="Header-link notification-indicator position-relative tooltipped tooltipped-s js-socket-channel js-notification-indicator" data-hotkey="g n" data-ga-click="Header, go to notifications, icon:read" data-channel="notification-changed:11913893" href="/notifications">
        <span class="mail-status "></span>
        <svg class="octicon octicon-bell" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"/></svg>
</a>
    </div>


    <div class="Header-item position-relative d-none d-lg-flex">
      <details class="details-overlay details-reset">
  <summary class="Header-link"
      aria-label="Create newâ¦"
      data-ga-click="Header, create new, icon:add">
    <svg class="octicon octicon-plus" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5v2z"/></svg> <span class="dropdown-caret"></span>
  </summary>
  <details-menu class="dropdown-menu dropdown-menu-sw">
    
<a role="menuitem" class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a role="menuitem" class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a role="menuitem" class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a role="menuitem" class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>


  <div role="none" class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="justadudewhohacks/face-api.js">This repository</span>
  </div>
    <a role="menuitem" class="dropdown-item" href="/justadudewhohacks/face-api.js/issues/new" data-ga-click="Header, create new issue" data-skip-pjax>
      New issue
    </a>


  </details-menu>
</details>

    </div>

    <div class="Header-item position-relative mr-0 d-none d-lg-flex">
      
<details class="details-overlay details-reset">
  <summary class="Header-link"
    aria-label="View profile and more"
    data-ga-click="Header, show menu, icon:avatar">
    <img alt="@davequinta" class="avatar" src="https://avatars0.githubusercontent.com/u/11913893?s=40&amp;v=4" height="20" width="20">
    <span class="dropdown-caret"></span>
  </summary>
  <details-menu class="dropdown-menu dropdown-menu-sw mt-2" style="width: 180px">
    <div class="header-nav-current-user css-truncate"><a role="menuitem" class="no-underline user-profile-link px-3 pt-2 pb-2 mb-n2 mt-n1 d-block" href="/davequinta" data-ga-click="Header, go to profile, text:Signed in as">Signed in as <strong class="css-truncate-target">davequinta</strong></a></div>
    <div role="none" class="dropdown-divider"></div>

      <div class="pl-3 pr-3 f6 user-status-container js-user-status-context pb-1" data-url="/users/status?compact=1&amp;link_mentions=0&amp;truncate=1">
        
<div class="js-user-status-container
    user-status-compact rounded-1 px-2 py-1 mt-2
    border
  " data-team-hovercards-enabled>
  <details class="js-user-status-details details-reset details-overlay details-overlay-dark">
    <summary class="btn-link btn-block link-gray no-underline js-toggle-user-status-edit toggle-user-status-edit " aria-haspopup="dialog" role="menuitem" data-hydro-click="{&quot;event_type&quot;:&quot;user_profile.click&quot;,&quot;payload&quot;:{&quot;profile_user_id&quot;:31125521,&quot;target&quot;:&quot;EDIT_USER_STATUS&quot;,&quot;user_id&quot;:11913893,&quot;client_id&quot;:&quot;2069667669.1545833518&quot;,&quot;originating_request_id&quot;:&quot;831A:68CE:1D17C04:3073A53:5D060DEA&quot;,&quot;originating_url&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/blob/master/dist/face-api.js&quot;,&quot;referrer&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/tree/master/dist&quot;}}" data-hydro-click-hmac="7090068ce7ea77a77f5401620f5801df8494875753cf09a5512c07d2c7b92a53">
      <div class="d-flex">
        <div class="f6 lh-condensed user-status-header
          d-inline-block v-align-middle
            user-status-emoji-only-header circle
            pr-2
"
            style="max-width: 29px"
          >
          <div class="user-status-emoji-container flex-shrink-0 mr-1  lh-condensed-ultra v-align-bottom" style="margin-top: 2px;">
            <div><g-emoji class="g-emoji" alias="coffee" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png">âï¸</g-emoji></div>
          </div>
        </div>
        <div class="
          d-inline-block v-align-middle
          
          
           css-truncate css-truncate-target 
           user-status-message-wrapper f6"
           style="line-height: 20px;" >
          <div class="d-inline-block text-gray-dark v-align-text-top text-left">
                <span>Drinking coffee and coding!</span>
          </div>
        </div>
      </div>
</summary>    <details-dialog class="details-dialog rounded-1 anim-fade-in fast Box Box--overlay" role="dialog" tabindex="-1">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="position-relative flex-auto js-user-status-form" action="/users/status?compact=1&amp;link_mentions=0&amp;truncate=1" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="_method" value="put" /><input type="hidden" name="authenticity_token" value="c3VfkpokciArXg7VkruwgcpzBden+CjPtNg+TAYFod8zyPi4GWGbFu9ky+zYOm6EPTU8DY8bej/jsIUw8vFcBg==" />
        <div class="Box-header bg-gray border-bottom p-3">
          <button class="Box-btn-octicon js-toggle-user-status-edit btn-octicon float-right" type="reset" aria-label="Close dialog" data-close-dialog>
            <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
          </button>
          <h3 class="Box-title f5 text-bold text-gray-dark">Edit status</h3>
        </div>
        <input type="hidden" name="emoji" class="js-user-status-emoji-field" value=":coffee:">
        <input type="hidden" name="organization_id" class="js-user-status-org-id-field" value="">
        <div class="px-3 py-2 text-gray-dark">
          <div class="js-characters-remaining-container position-relative mt-2">
            <div class="input-group d-table form-group my-0 js-user-status-form-group">
              <span class="input-group-button d-table-cell v-align-middle" style="width: 1%">
                <button type="button" aria-label="Choose an emoji" class="btn-outline btn js-toggle-user-status-emoji-picker btn-open-emoji-picker p-0">
                  <span class="js-user-status-original-emoji" hidden><div><g-emoji class="g-emoji" alias="coffee" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png">âï¸</g-emoji></div></span>
                  <span class="js-user-status-custom-emoji"><div><g-emoji class="g-emoji" alias="coffee" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png">âï¸</g-emoji></div></span>
                  <span class="js-user-status-no-emoji-icon" hidden>
                    <svg class="octicon octicon-smiley" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4.81 12.81a6.72 6.72 0 0 1-2.17 1.45c-.83.36-1.72.53-2.64.53-.92 0-1.81-.17-2.64-.53-.81-.34-1.55-.83-2.17-1.45a6.773 6.773 0 0 1-1.45-2.17A6.59 6.59 0 0 1 1.21 8c0-.92.17-1.81.53-2.64.34-.81.83-1.55 1.45-2.17.62-.62 1.36-1.11 2.17-1.45A6.59 6.59 0 0 1 8 1.21c.92 0 1.81.17 2.64.53.81.34 1.55.83 2.17 1.45.62.62 1.11 1.36 1.45 2.17.36.83.53 1.72.53 2.64 0 .92-.17 1.81-.53 2.64-.34.81-.83 1.55-1.45 2.17zM4 6.8v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2H5.2C4.53 8 4 7.47 4 6.8zm5 0v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2h-.59C9.53 8 9 7.47 9 6.8zm4 3.2c-.72 1.88-2.91 3-5 3s-4.28-1.13-5-3c-.14-.39.23-1 .66-1h8.59c.41 0 .89.61.75 1z"/></svg>
                  </span>
                </button>
              </span>
              <text-expander keys=": @" data-mention-url="/autocomplete/user-suggestions" data-emoji-url="/autocomplete/emoji">
                <input
                  type="text"
                  autocomplete="off"
                  data-no-org-url="/autocomplete/user-suggestions"
                  data-org-url="/suggestions?mention_suggester=1"
                  data-maxlength="80"
                  class="d-table-cell width-full form-control js-user-status-message-field js-characters-remaining-field"
                  placeholder="What's happening?"
                  name="message"
                  value="Drinking coffee and coding!"
                  aria-label="What is your current status?">
              </text-expander>
              <div class="error">Could not update your status, please try again.</div>
            </div>
            <div style="margin-left: 53px" class="my-1 text-small label-characters-remaining js-characters-remaining" data-suffix="remaining" hidden>
              80 remaining
            </div>
          </div>
          <include-fragment class="js-user-status-emoji-picker" data-url="/users/status/emoji"></include-fragment>
          <div class="overflow-auto ml-n3 mr-n3 px-3 border-bottom" style="max-height: 33vh">
            <div class="user-status-suggestions js-user-status-suggestions collapsed overflow-hidden">
              <h4 class="f6 text-normal my-3">Suggestions:</h4>
              <div class="mx-3 mt-2 clearfix">
                  <div class="float-left col-6">
                      <button type="button" value=":palm_tree:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="palm_tree" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f334.png">ð´</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left" style="border-left: 1px solid transparent">
                          On vacation
                        </div>
                      </button>
                      <button type="button" value=":face_with_thermometer:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="face_with_thermometer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f912.png">ð¤</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left" style="border-left: 1px solid transparent">
                          Out sick
                        </div>
                      </button>
                  </div>
                  <div class="float-left col-6">
                      <button type="button" value=":house:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="house" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3e0.png">ð </g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left" style="border-left: 1px solid transparent">
                          Working from home
                        </div>
                      </button>
                      <button type="button" value=":dart:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png">ð¯</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left" style="border-left: 1px solid transparent">
                          Focusing
                        </div>
                      </button>
                  </div>
              </div>
            </div>
            <div class="user-status-limited-availability-container">
              <div class="form-checkbox my-0">
                <input type="checkbox" name="limited_availability" value="1" class="js-user-status-limited-availability-checkbox" data-default-message="I may be slow to respond." aria-describedby="limited-availability-help-text-truncate-true-compact-true" id="limited-availability-truncate-true-compact-true">
                <label class="d-block f5 text-gray-dark mb-1" for="limited-availability-truncate-true-compact-true">
                  Busy
                </label>
                <p class="note" id="limited-availability-help-text-truncate-true-compact-true">
                  When others mention you, assign you, or request your review,
                  GitHub will let them know that you have limited availability.
                </p>
              </div>
            </div>
          </div>
            

<div class="d-inline-block f5 mr-2 pt-3 pb-2" >
  <div class="d-inline-block mr-1">
    Clear status
  </div>

  <details class="js-user-status-expire-drop-down f6 dropdown details-reset details-overlay d-inline-block mr-2">
    <summary class="f5 btn-link link-gray-dark border px-2 py-1 rounded-1" aria-haspopup="true">
      <div class="js-user-status-expiration-interval-selected d-inline-block v-align-baseline">
        Never
      </div>
      <div class="dropdown-caret"></div>
    </summary>

    <ul class="dropdown-menu dropdown-menu-se pl-0 overflow-auto" style="width: 220px; max-height: 15.5em">
      <li>
        <button type="button" class="btn-link dropdown-item js-user-status-expire-button ws-normal" title="Never">
          <span class="d-inline-block text-bold mb-1">Never</span>
          <div class="f6 lh-condensed">Keep this status until you clear your status or edit your status.</div>
        </button>
      </li>
      <li class="dropdown-divider" role="none"></li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="in 30 minutes" value="2019-06-16T04:07:52-06:00">
            in 30 minutes
          </button>
        </li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="in 1 hour" value="2019-06-16T04:37:52-06:00">
            in 1 hour
          </button>
        </li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="in 4 hours" value="2019-06-16T07:37:52-06:00">
            in 4 hours
          </button>
        </li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="today" value="2019-06-16T23:59:59-06:00">
            today
          </button>
        </li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="this week" value="2019-06-16T23:59:59-06:00">
            this week
          </button>
        </li>
    </ul>
  </details>
  <input class="js-user-status-expiration-date-input" type="hidden" name="expires_at" value="">
</div>

          <include-fragment class="js-user-status-org-picker" data-url="/users/status/organizations"></include-fragment>
        </div>
        <div class="d-flex flex-items-center flex-justify-between p-3 border-top">
          <button type="submit"  class="width-full btn btn-primary mr-2 js-user-status-submit">
            Set status
          </button>
          <button type="button"  class="width-full js-clear-user-status-button btn ml-2 js-user-status-exists">
            Clear status
          </button>
        </div>
</form>    </details-dialog>
  </details>
</div>

      </div>
      <div role="none" class="dropdown-divider"></div>



    <a role="menuitem" class="dropdown-item" href="/davequinta" data-ga-click="Header, go to profile, text:your profile">Your profile</a>
    <a role="menuitem" class="dropdown-item" href="/davequinta?tab=repositories" data-ga-click="Header, go to repositories, text:your repositories">Your repositories</a>

    <a role="menuitem" class="dropdown-item" href="/davequinta?tab=projects" data-ga-click="Header, go to projects, text:your projects">Your projects</a>

    <a role="menuitem" class="dropdown-item" href="/davequinta?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">Your stars</a>
      <a role="menuitem" class="dropdown-item" href="https://gist.github.com/mine" data-ga-click="Header, your gists, text:your gists">Your gists</a>

    <div role="none" class="dropdown-divider"></div>
    <a role="menuitem" class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
    <a role="menuitem" class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">Settings</a>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="logout-form" action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="lnwnQgUs8piARxT/Plk9WGfy3left266EBp8TTbMKlfpf626kLTBWOg11F/+jLxDG/ZYf29Ll1IZFl6xGEM5aQ==" />
      
      <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout" role="menuitem">
        Sign out
      </button>
</form>  </details-menu>
</details>

    </div>

  </header>

      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>


    <div id="js-flash-container">

</div>



  <div class="application-main " data-commit-hovercards-enabled>
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main  >
      


  






  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav pt-0 pt-lg-4 ">
    <div class="repohead-details-container clearfix container-lg p-responsive d-none d-lg-block">

      <ul class="pagehead-actions">



    <li >
      
    <details class="dropdown details-reset details-overlay d-inline-block float-left"
      data-deferred-details-content-url="/justadudewhohacks/face-api.js/used_by_contents"
    >
      <summary class="btn btn-sm btn-with-count" data-menu-button>
        <svg class="octicon octicon-package v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1 4.27v7.47c0 .45.3.84.75.97l6.5 1.73c.16.05.34.05.5 0l6.5-1.73c.45-.13.75-.52.75-.97V4.27c0-.45-.3-.84-.75-.97l-6.5-1.74a1.4 1.4 0 0 0-.5 0L1.75 3.3c-.45.13-.75.52-.75.97zm7 9.09l-6-1.59V5l6 1.61v6.75zM2 4l2.5-.67L11 5.06l-2.5.67L2 4zm13 7.77l-6 1.59V6.61l2-.55V8.5l2-.53V5.53L15 5v6.77zm-2-7.24L6.5 2.8l2-.53L15 4l-2 .53z"/></svg>
        Used by
        <div class="dropdown-caret"></div>
      </summary>
      <include-fragment>
        <div class="dropdown-menu dropdown-menu-s p-3 text-center" style="width:360px;">
          <img width="32" height="32" alt="Loading..." class="my-0" src="https://github.githubassets.com/images/spinners/octocat-spinner-64.gif" />
          <p class="pt-1 m-0 f5 text-gray-light">
            Loading dependents...
          </p>
        </div>
      </include-fragment>
    </details>
    <a class="social-count"
      href="/justadudewhohacks/face-api.js/network/dependents"
      aria-label="385 repositories depend on this package"
    >
      385
    </a>

    </li>

  <li>
    
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form data-remote="true" class="clearfix js-social-form js-social-container" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="qJ7PIjIxdzXO26Y/lUlfMyDrnmG/pNUVrGQHwrWNpHkkkoSSOeX8cAdo7xn4V7UGQNtxLGbjCFjz+FomdyLQQg==" />      <input type="hidden" name="repository_id" value="134035452">

      <details class="details-reset details-overlay select-menu float-left">
        <summary class="select-menu-button float-left btn btn-sm btn-with-count" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;WATCH_BUTTON&quot;,&quot;repository_id&quot;:134035452,&quot;client_id&quot;:&quot;2069667669.1545833518&quot;,&quot;originating_request_id&quot;:&quot;831A:68CE:1D17C04:3073A53:5D060DEA&quot;,&quot;originating_url&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/blob/master/dist/face-api.js&quot;,&quot;referrer&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/tree/master/dist&quot;,&quot;user_id&quot;:11913893}}" data-hydro-click-hmac="24936bdd9d327ead19654637b301dabcd7235086f0fc693f207133cb79eb0f31" data-ga-click="Repository, click Watch settings, action:blob#show">          <span data-menu-button>
              <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
              Watch
          </span>
</summary>        <details-menu
          class="select-menu-modal position-absolute mt-5"
          style="z-index: 99;">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
          </div>
          <div class="select-menu-list">
            <button type="submit" name="do" value="included" class="select-menu-item width-full" aria-checked="true" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Not watching</span>
                <span class="description">Be notified only when participating or @mentioned.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                  Watch
                </span>
              </div>
            </button>

            <button type="submit" name="do" value="release_only" class="select-menu-item width-full" aria-checked="false" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Releases only</span>
                <span class="description">Be notified of new releases, and when participating or @mentioned.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                  Unwatch releases
                </span>
              </div>
            </button>

            <button type="submit" name="do" value="subscribed" class="select-menu-item width-full" aria-checked="false" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Watching</span>
                <span class="description">Be notified of all conversations.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                  Unwatch
                </span>
              </div>
            </button>

            <button type="submit" name="do" value="ignore" class="select-menu-item width-full" aria-checked="false" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Ignoring</span>
                <span class="description">Never be notified.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-mute v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                  Stop ignoring
                </span>
              </div>
            </button>
          </div>
        </details-menu>
      </details>
        <a class="social-count js-social-count"
          href="/justadudewhohacks/face-api.js/watchers"
          aria-label="185 users are watching this repository">
          185
        </a>
</form>
  </li>

  <li>
      <div class="js-toggler-container js-social-container starring-container on">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="starred js-social-form" action="/justadudewhohacks/face-api.js/unstar" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="U6yzsfxOb5Thw1vhBIfx/MvlQzBi4n8QOARs9oN8dzulwzhXtmx2bfh1y+SY+fDNbScmjLgz6rI4KApY8OvKcQ==" />
      <input type="hidden" name="context" value="repository"></input>
      <button type="submit" class="btn btn-sm btn-with-count js-toggler-target" aria-label="Unstar this repository" title="Unstar justadudewhohacks/face-api.js" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;UNSTAR_BUTTON&quot;,&quot;repository_id&quot;:134035452,&quot;client_id&quot;:&quot;2069667669.1545833518&quot;,&quot;originating_request_id&quot;:&quot;831A:68CE:1D17C04:3073A53:5D060DEA&quot;,&quot;originating_url&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/blob/master/dist/face-api.js&quot;,&quot;referrer&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/tree/master/dist&quot;,&quot;user_id&quot;:11913893}}" data-hydro-click-hmac="23535572737efde07ef14cfb25f4dec279f3e202d1d369ea78a8ece1f90ef2d9" data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">        <svg class="octicon octicon-star v-align-text-bottom" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
        Unstar
</button>        <a class="social-count js-social-count" href="/justadudewhohacks/face-api.js/stargazers"
           aria-label="6006 users starred this repository">
          6,006
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="unstarred js-social-form" action="/justadudewhohacks/face-api.js/star" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="3LNe/T7EBUF0mDjX2l6Jm86vbp8M7NtoeDgEABkRQ6OscC4afXb5lyya8BDOKpXTJ9Pl5hl8Trz3aduVt1nM4w==" />
      <input type="hidden" name="context" value="repository"></input>
      <button type="submit" class="btn btn-sm btn-with-count js-toggler-target" aria-label="Unstar this repository" title="Star justadudewhohacks/face-api.js" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;STAR_BUTTON&quot;,&quot;repository_id&quot;:134035452,&quot;client_id&quot;:&quot;2069667669.1545833518&quot;,&quot;originating_request_id&quot;:&quot;831A:68CE:1D17C04:3073A53:5D060DEA&quot;,&quot;originating_url&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/blob/master/dist/face-api.js&quot;,&quot;referrer&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/tree/master/dist&quot;,&quot;user_id&quot;:11913893}}" data-hydro-click-hmac="bf75fe0eed89a74b12c897d684ee455e312aa66fa79f6872f2dc9db34908bcc5" data-ga-click="Repository, click star button, action:blob#show; text:Star">        <svg class="octicon octicon-star v-align-text-bottom" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
        Star
</button>        <a class="social-count js-social-count" href="/justadudewhohacks/face-api.js/stargazers"
           aria-label="6006 users starred this repository">
          6,006
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="btn-with-count" action="/justadudewhohacks/face-api.js/fork" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="+uKaSLrHUAiqyJq1MqvSqeFTukGA3eubTJhcJsZpqL9yaOy+SOLLjIZc4DZSNLUBJOtGCYBZbKFb8ysaqZK3DA==" />
            <button class="btn btn-sm btn-with-count" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;FORK_BUTTON&quot;,&quot;repository_id&quot;:134035452,&quot;client_id&quot;:&quot;2069667669.1545833518&quot;,&quot;originating_request_id&quot;:&quot;831A:68CE:1D17C04:3073A53:5D060DEA&quot;,&quot;originating_url&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/blob/master/dist/face-api.js&quot;,&quot;referrer&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/tree/master/dist&quot;,&quot;user_id&quot;:11913893}}" data-hydro-click-hmac="70f78fa25cf8302c73c6509c006ea92e0172d33ae4a9bf8829619c6eed38bc82" data-ga-click="Repository, show fork modal, action:blob#show; text:Fork" type="submit" title="Fork your own copy of justadudewhohacks/face-api.js to your account" aria-label="Fork your own copy of justadudewhohacks/face-api.js to your account">              <svg class="octicon octicon-repo-forked v-align-text-bottom" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
</button></form>
    <a href="/justadudewhohacks/face-api.js/network/members" class="social-count"
       aria-label="804 users forked this repository">
      804
    </a>
  </li>
</ul>

      <h1 class="public ">
    <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a class="url fn" rel="author" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=31125521" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/justadudewhohacks">justadudewhohacks</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a data-pjax="#js-repo-pjax-container" href="/justadudewhohacks/face-api.js">face-api.js</a></strong>
  

</h1>

    </div>
    
<nav class="hx_reponav reponav js-repo-nav js-sidenav-container-pjax container-lg p-responsive d-none d-lg-block"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
    aria-label="Repository"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item selected reponav-item" itemprop="url" data-hotkey="g c" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /justadudewhohacks/face-api.js" href="/justadudewhohacks/face-api.js">
      <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /justadudewhohacks/face-api.js/issues" href="/justadudewhohacks/face-api.js/issues">
        <svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">86</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /justadudewhohacks/face-api.js/pulls" href="/justadudewhohacks/face-api.js/pulls">
      <svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">1</span>
      <meta itemprop="position" content="3">
</a>  </span>


    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /justadudewhohacks/face-api.js/projects" href="/justadudewhohacks/face-api.js/projects">
      <svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>

    <a class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /justadudewhohacks/face-api.js/wiki" href="/justadudewhohacks/face-api.js/wiki">
      <svg class="octicon octicon-book" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>
    <a data-skip-pjax="true" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy /justadudewhohacks/face-api.js/security/advisories" href="/justadudewhohacks/face-api.js/security/advisories">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="octicon" height="16px" width="16px">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M1 2l7-2 7 2v6.02C15 12.69 9.69 16 8 16c-1.69 0-7-3.31-7-7.98V2zm1 .75L8 1l6 1.75v5.268C14 12.104 9.45 15 8 15c-1.45 0-6-2.896-6-6.982V2.75z"></path>
    <path d="M3 3.5L8 2v12c-1.207 0-5-2.482-5-5.985V3.5z"></path>
</svg>

      Security
</a>
    <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse people /justadudewhohacks/face-api.js/pulse" href="/justadudewhohacks/face-api.js/pulse">
      <svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
      Insights
</a>

</nav>

  <div class="reponav-wrapper reponav-small d-lg-none">
  <nav class="reponav js-reponav text-center no-wrap"
       itemscope
       itemtype="http://schema.org/BreadcrumbList">

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a class="js-selected-navigation-item selected reponav-item" itemprop="url" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /justadudewhohacks/face-api.js" href="/justadudewhohacks/face-api.js">
        <span itemprop="name">Code</span>
        <meta itemprop="position" content="1">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /justadudewhohacks/face-api.js/issues" href="/justadudewhohacks/face-api.js/issues">
          <span itemprop="name">Issues</span>
          <span class="Counter">86</span>
          <meta itemprop="position" content="2">
</a>      </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /justadudewhohacks/face-api.js/pulls" href="/justadudewhohacks/face-api.js/pulls">
        <span itemprop="name">Pull requests</span>
        <span class="Counter">1</span>
        <meta itemprop="position" content="3">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /justadudewhohacks/face-api.js/projects" href="/justadudewhohacks/face-api.js/projects">
          <span itemprop="name">Projects</span>
          <span class="Counter">0</span>
          <meta itemprop="position" content="4">
</a>      </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_wiki /justadudewhohacks/face-api.js/wiki" href="/justadudewhohacks/face-api.js/wiki">
          <span itemprop="name">Wiki</span>
          <meta itemprop="position" content="5">
</a>      </span>

      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy /justadudewhohacks/face-api.js/security/advisories" href="/justadudewhohacks/face-api.js/security/advisories">
        <span itemprop="name">Security</span>
        <meta itemprop="position" content="6">
</a>
      <a class="js-selected-navigation-item reponav-item" data-selected-links="pulse /justadudewhohacks/face-api.js/pulse" href="/justadudewhohacks/face-api.js/pulse">
        Pulse
</a>
      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="community /justadudewhohacks/face-api.js/community" href="/justadudewhohacks/face-api.js/community">
          Community
</a>      </span>

  </nav>
</div>


  </div>
<div class="container-lg new-discussion-timeline experiment-repo-nav  p-responsive">
  <div class="repository-content ">

    
    


  
    <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/justadudewhohacks/face-api.js/blob/2e4f59956838f712ab247e185add5c203a362fc1/dist/face-api.js">Permalink</a>

    <!-- blob contrib key: blob_contributors:v21:d5806a4f22b5e382448a7a98b1b61792 -->
      

    <div class="d-flex flex-items-start flex-shrink-0 mb-2 flex-column flex-md-row">
      <span class="d-flex flex-justify-between width-full width-md-auto">
        
<details class="details-reset details-overlay select-menu branch-select-menu  hx_rsm" id="branch-select-menu">
  <summary class="btn btn-sm select-menu-button css-truncate"
           data-hotkey="w"
           
           title="Switch branches or tags">
    <i>Branch:</i>
    <span class="css-truncate-target">master</span>
  </summary>

  <details-menu class="select-menu-modal hx_rsm-modal position-absolute" style="z-index: 99;" src="/justadudewhohacks/face-api.js/ref-list/master/dist/face-api.js?source_action=show&amp;source_controller=blob" preload>
    <include-fragment class="select-menu-loading-overlay anim-pulse">
      <svg height="32" class="octicon octicon-octoface" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M14.7 5.34c.13-.32.55-1.59-.13-3.31 0 0-1.05-.33-3.44 1.3-1-.28-2.07-.32-3.13-.32s-2.13.04-3.13.32c-2.39-1.64-3.44-1.3-3.44-1.3-.68 1.72-.26 2.99-.13 3.31C.49 6.21 0 7.33 0 8.69 0 13.84 3.33 15 7.98 15S16 13.84 16 8.69c0-1.36-.49-2.48-1.3-3.35zM8 14.02c-3.3 0-5.98-.15-5.98-3.35 0-.76.38-1.48 1.02-2.07 1.07-.98 2.9-.46 4.96-.46 2.07 0 3.88-.52 4.96.46.65.59 1.02 1.3 1.02 2.07 0 3.19-2.68 3.35-5.98 3.35zM5.49 9.01c-.66 0-1.2.8-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.54-1.78-1.2-1.78zm5.02 0c-.66 0-1.2.79-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.53-1.78-1.2-1.78z"/></svg>
    </include-fragment>
  </details-menu>
</details>

        <div class="BtnGroup flex-shrink-0 d-md-none">
          <a href="/justadudewhohacks/face-api.js/find/master"
                class="js-pjax-capture-input btn btn-sm BtnGroup-item"
                data-pjax
                data-hotkey="t">
            Find file
          </a>
          <clipboard-copy value="dist/face-api.js" class="btn btn-sm BtnGroup-item">
            Copy path
          </clipboard-copy>
        </div>
      </span>
      <h2 id="blob-path" class="breadcrumb flex-auto min-width-0 text-normal flex-md-self-center ml-md-2 mr-md-3 my-2 my-md-0">
        <span class="js-repo-root text-bold"><span class="js-path-segment"><a data-pjax="true" href="/justadudewhohacks/face-api.js"><span>face-api.js</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/justadudewhohacks/face-api.js/tree/master/dist"><span>dist</span></a></span><span class="separator">/</span><strong class="final-path">face-api.js</strong>
      </h2>

      <div class="BtnGroup flex-shrink-0 d-none d-md-inline-block">
        <a href="/justadudewhohacks/face-api.js/find/master"
              class="js-pjax-capture-input btn btn-sm BtnGroup-item"
              data-pjax
              data-hotkey="t">
          Find file
        </a>
        <clipboard-copy value="dist/face-api.js" class="btn btn-sm BtnGroup-item">
          Copy path
        </clipboard-copy>
      </div>
    </div>



    
  <div class="Box Box--condensed d-flex flex-column flex-shrink-0">
      <div class="Box-body d-flex flex-justify-between bg-blue-light flex-column flex-md-row flex-items-start flex-md-items-center">
        <span class="pr-md-4 f6">
          <a rel="author" data-skip-pjax="true" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=31125521" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/justadudewhohacks"><img class="avatar" src="https://avatars1.githubusercontent.com/u/31125521?s=40&amp;v=4" width="20" height="20" alt="@justadudewhohacks" /></a>
          <a class="text-bold link-gray-dark lh-default v-align-middle" rel="author" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=31125521" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/justadudewhohacks">justadudewhohacks</a>
            <span class="lh-default v-align-middle">
              <a data-pjax="true" title="check in latest build" class="link-gray" href="/justadudewhohacks/face-api.js/commit/5c7e120fea0249168c1e6d3843694c6ca51bb48f">check in latest build</a>
            </span>
        </span>
        <span class="d-inline-block flex-shrink-0 v-align-bottom f6 mt-2 mt-md-0">
          <a class="pr-2 text-mono link-gray" href="/justadudewhohacks/face-api.js/commit/5c7e120fea0249168c1e6d3843694c6ca51bb48f" data-pjax>5c7e120</a>
          <relative-time datetime="2019-05-07T19:56:22Z">May 7, 2019</relative-time>
        </span>
      </div>

    <div class="Box-body d-flex flex-items-center flex-auto f6 border-bottom-0 flex-wrap" >
      <details class="details-reset details-overlay details-overlay-dark lh-default text-gray-dark float-left mr-2" id="blob_contributors_box">
        <summary class="btn-link" aria-haspopup="dialog">
          <span><strong>1</strong> contributor</span>
        </summary>
        <details-dialog
          class="Box Box--overlay d-flex flex-column anim-fade-in fast"
          aria-label="Users who have contributed to this file"
          src="/justadudewhohacks/face-api.js/contributors/master/dist/face-api.js/list" preload>
          <div class="Box-header">
            <button class="Box-btn-octicon btn-octicon float-right" type="button" aria-label="Close dialog" data-close-dialog>
              <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
            </button>
            <h3 class="Box-title">
              Users who have contributed to this file
            </h3>
          </div>
          <include-fragment class="octocat-spinner my-3" aria-label="Loading..."></include-fragment>
        </details-dialog>
      </details>
    </div>
  </div>





    <div class="Box mt-3 position-relative">
      
<div class="Box-header py-2 d-flex flex-column flex-shrink-0 flex-md-row flex-md-items-center">

  <div class="text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1 mt-2 mt-md-0">
      6488 lines (6299 sloc)
      <span class="file-info-divider"></span>
    820 KB
  </div>

  <div class="d-flex py-1 py-md-0 flex-auto flex-order-1 flex-md-order-2 flex-sm-grow-0 flex-justify-between">

    <div class="BtnGroup">
      <a id="raw-url" class="btn btn-sm BtnGroup-item" href="/justadudewhohacks/face-api.js/raw/master/dist/face-api.js">Raw</a>
        <a class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b" href="/justadudewhohacks/face-api.js/blame/master/dist/face-api.js">Blame</a>
      <a rel="nofollow" class="btn btn-sm BtnGroup-item" href="/justadudewhohacks/face-api.js/commits/master/dist/face-api.js">History</a>
    </div>


    <div>
            <a class="btn-octicon tooltipped tooltipped-nw hide-sm"
               href="x-github-client://openRepo/https://github.com/justadudewhohacks/face-api.js?branch=master&amp;filepath=dist%2Fface-api.js"
               aria-label="Open this file in GitHub Desktop"
               data-ga-click="Repository, open with desktop, type:windows">
                <svg class="octicon octicon-device-desktop" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
            </a>

            <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form js-update-url-with-hash" action="/justadudewhohacks/face-api.js/edit/master/dist/face-api.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="9BzSUIWH2j4H44WyoqLF3CLGZa89d/Fj52mvMLf7GZ7vULrrwJM7I4++u/Zj/KtvWSgcNZRdKR0odNoa1cB0Dw==" />
              <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
                aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
                <svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
              </button>
</form>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form" action="/justadudewhohacks/face-api.js/delete/master/dist/face-api.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="nvr6ts1WDk5I5eZQQAZEQXDQgc1d89G0XybRJhHGVxS9T8iMoBKCBbj9cEQ+b5Kp4Yggq8V3P/P3Ed2uYbwhKg==" />
            <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
              aria-label="Fork this project and delete the file" data-disable-with>
              <svg class="octicon octicon-trashcan" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
            </button>
</form>    </div>
  </div>
</div>




      

  <div itemprop="text" class="Box-body p-0 blob-wrapper data type-javascript ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span> (<span class="pl-c1">global</span>, <span class="pl-smi">factory</span>) {</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typeof</span> <span class="pl-c1">exports</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">module</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> <span class="pl-en">factory</span>(<span class="pl-c1">exports</span>) <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typeof</span> define <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">define</span>.<span class="pl-smi">amd</span> <span class="pl-k">?</span> <span class="pl-en">define</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>exports<span class="pl-pds">&#39;</span></span>], factory) <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line">    (<span class="pl-c1">global</span> <span class="pl-k">=</span> <span class="pl-c1">global</span> <span class="pl-k">||</span> self, <span class="pl-en">factory</span>(<span class="pl-c1">global</span>.<span class="pl-smi">faceapi</span> <span class="pl-k">=</span> <span class="pl-c1">global</span>.<span class="pl-smi">faceapi</span> <span class="pl-k">||</span> {}));</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line">}(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-c1">exports</span>) { <span class="pl-s"><span class="pl-pds">&#39;</span>use strict<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span>! *****************************************************************************</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Copyright (c) Microsoft Corporation. All rights reserved.</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    this file except in compliance with the License. You may obtain a copy of the</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    License at http://www.apache.org/licenses/LICENSE-2.0</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    MERCHANTABLITY OR NON-INFRINGEMENT.</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    See the Apache Version 2.0 License for specific language governing permissions</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    and limitations under the License.</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    ***************************************************************************** <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> global Reflect, Promise <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">extendStatics</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line">        extendStatics <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-smi">setPrototypeOf</span> <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line">            ({ __proto__<span class="pl-k">:</span> [] } <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">function</span> (<span class="pl-smi">d</span>, <span class="pl-smi">b</span>) { <span class="pl-smi">d</span>.<span class="pl-smi">__proto__</span> <span class="pl-k">=</span> b; }) <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> (<span class="pl-smi">d</span>, <span class="pl-smi">b</span>) { <span class="pl-k">for</span> (<span class="pl-k">var</span> p <span class="pl-k">in</span> b) <span class="pl-k">if</span> (<span class="pl-smi">b</span>.<span class="pl-en">hasOwnProperty</span>(p)) d[p] <span class="pl-k">=</span> b[p]; };</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">extendStatics</span>(d, b);</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">__extends</span>(<span class="pl-smi">d</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">extendStatics</span>(d, b);</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">__</span>() { <span class="pl-c1">this</span>.<span class="pl-c1">constructor</span> <span class="pl-k">=</span> d; }</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">d</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> b <span class="pl-k">===</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(b) <span class="pl-k">:</span> (<span class="pl-smi">__</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> <span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>, <span class="pl-k">new</span> <span class="pl-en">__</span>());</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">__assign</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">        __assign <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-smi">assign</span> <span class="pl-k">||</span> <span class="pl-k">function</span> <span class="pl-en">__assign</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> s, i <span class="pl-k">=</span> <span class="pl-c1">1</span>, n <span class="pl-k">=</span> <span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">                s <span class="pl-k">=</span> <span class="pl-c1">arguments</span>[i];</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> p <span class="pl-k">in</span> s) <span class="pl-k">if</span> (<span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">hasOwnProperty</span>.<span class="pl-c1">call</span>(s, p)) t[p] <span class="pl-k">=</span> s[p];</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> t;</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">__assign</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>);</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">__awaiter</span>(<span class="pl-smi">thisArg</span>, <span class="pl-smi">_arguments</span>, <span class="pl-c1">P</span>, <span class="pl-smi">generator</span>) {</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">new</span> (<span class="pl-c1">P</span> <span class="pl-k">||</span> (<span class="pl-c1">P</span> <span class="pl-k">=</span> <span class="pl-c1">Promise</span>))(<span class="pl-k">function</span> (<span class="pl-smi">resolve</span>, <span class="pl-smi">reject</span>) {</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">fulfilled</span>(<span class="pl-smi">value</span>) { <span class="pl-k">try</span> { <span class="pl-en">step</span>(<span class="pl-smi">generator</span>.<span class="pl-c1">next</span>(value)); } <span class="pl-k">catch</span> (e) { <span class="pl-en">reject</span>(e); } }</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">rejected</span>(<span class="pl-smi">value</span>) { <span class="pl-k">try</span> { <span class="pl-en">step</span>(generator[<span class="pl-s"><span class="pl-pds">&quot;</span>throw<span class="pl-pds">&quot;</span></span>](value)); } <span class="pl-k">catch</span> (e) { <span class="pl-en">reject</span>(e); } }</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">step</span>(<span class="pl-smi">result</span>) { <span class="pl-smi">result</span>.<span class="pl-smi">done</span> <span class="pl-k">?</span> <span class="pl-en">resolve</span>(<span class="pl-smi">result</span>.<span class="pl-c1">value</span>) <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">P</span>(<span class="pl-k">function</span> (<span class="pl-smi">resolve</span>) { <span class="pl-en">resolve</span>(<span class="pl-smi">result</span>.<span class="pl-c1">value</span>); }).<span class="pl-c1">then</span>(fulfilled, rejected); }</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">step</span>((generator <span class="pl-k">=</span> <span class="pl-smi">generator</span>.<span class="pl-c1">apply</span>(thisArg, _arguments <span class="pl-k">||</span> [])).<span class="pl-c1">next</span>());</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">__generator</span>(<span class="pl-smi">thisArg</span>, <span class="pl-smi">body</span>) {</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _ <span class="pl-k">=</span> { label<span class="pl-k">:</span> <span class="pl-c1">0</span>, <span class="pl-en">sent</span><span class="pl-k">:</span> <span class="pl-k">function</span>() { <span class="pl-k">if</span> (t[<span class="pl-c1">0</span>] <span class="pl-k">&amp;</span> <span class="pl-c1">1</span>) <span class="pl-k">throw</span> t[<span class="pl-c1">1</span>]; <span class="pl-k">return</span> t[<span class="pl-c1">1</span>]; }, trys<span class="pl-k">:</span> [], ops<span class="pl-k">:</span> [] }, f, y, t, g;</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> g <span class="pl-k">=</span> { next<span class="pl-k">:</span> <span class="pl-en">verb</span>(<span class="pl-c1">0</span>), <span class="pl-s"><span class="pl-pds">&quot;</span>throw<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> <span class="pl-en">verb</span>(<span class="pl-c1">1</span>), <span class="pl-s"><span class="pl-pds">&quot;</span>return<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> <span class="pl-en">verb</span>(<span class="pl-c1">2</span>) }, <span class="pl-k">typeof</span> <span class="pl-c1">Symbol</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> (g[<span class="pl-c1">Symbol</span>.<span class="pl-smi">iterator</span>] <span class="pl-k">=</span> <span class="pl-k">function</span>() { <span class="pl-k">return</span> <span class="pl-c1">this</span>; }), g;</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">verb</span>(<span class="pl-smi">n</span>) { <span class="pl-k">return</span> <span class="pl-k">function</span> (<span class="pl-smi">v</span>) { <span class="pl-k">return</span> <span class="pl-en">step</span>([n, v]); }; }</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">step</span>(<span class="pl-smi">op</span>) {</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (f) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Generator is already executing.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (_) <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (f <span class="pl-k">=</span> <span class="pl-c1">1</span>, y <span class="pl-k">&amp;&amp;</span> (t <span class="pl-k">=</span> op[<span class="pl-c1">0</span>] <span class="pl-k">&amp;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> y[<span class="pl-s"><span class="pl-pds">&quot;</span>return<span class="pl-pds">&quot;</span></span>] <span class="pl-k">:</span> op[<span class="pl-c1">0</span>] <span class="pl-k">?</span> y[<span class="pl-s"><span class="pl-pds">&quot;</span>throw<span class="pl-pds">&quot;</span></span>] <span class="pl-k">||</span> ((t <span class="pl-k">=</span> y[<span class="pl-s"><span class="pl-pds">&quot;</span>return<span class="pl-pds">&quot;</span></span>]) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">t</span>.<span class="pl-c1">call</span>(y), <span class="pl-c1">0</span>) <span class="pl-k">:</span> <span class="pl-smi">y</span>.<span class="pl-c1">next</span>) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(t <span class="pl-k">=</span> <span class="pl-smi">t</span>.<span class="pl-c1">call</span>(y, op[<span class="pl-c1">1</span>])).<span class="pl-smi">done</span>) <span class="pl-k">return</span> t;</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (y <span class="pl-k">=</span> <span class="pl-c1">0</span>, t) op <span class="pl-k">=</span> [op[<span class="pl-c1">0</span>] <span class="pl-k">&amp;</span> <span class="pl-c1">2</span>, <span class="pl-smi">t</span>.<span class="pl-c1">value</span>];</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (op[<span class="pl-c1">0</span>]) {</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">case</span> <span class="pl-c1">1</span>: t <span class="pl-k">=</span> op; <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">4</span>: <span class="pl-smi">_</span>.<span class="pl-c1">label</span><span class="pl-k">++</span>; <span class="pl-k">return</span> { value<span class="pl-k">:</span> op[<span class="pl-c1">1</span>], done<span class="pl-k">:</span> <span class="pl-c1">false</span> };</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">5</span>: <span class="pl-smi">_</span>.<span class="pl-c1">label</span><span class="pl-k">++</span>; y <span class="pl-k">=</span> op[<span class="pl-c1">1</span>]; op <span class="pl-k">=</span> [<span class="pl-c1">0</span>]; <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">7</span>: op <span class="pl-k">=</span> <span class="pl-smi">_</span>.<span class="pl-smi">ops</span>.<span class="pl-c1">pop</span>(); <span class="pl-smi">_</span>.<span class="pl-smi">trys</span>.<span class="pl-c1">pop</span>(); <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">default</span>:</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-k">!</span>(t <span class="pl-k">=</span> <span class="pl-smi">_</span>.<span class="pl-smi">trys</span>, t <span class="pl-k">=</span> <span class="pl-smi">t</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> t[<span class="pl-smi">t</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>]) <span class="pl-k">&amp;&amp;</span> (op[<span class="pl-c1">0</span>] <span class="pl-k">===</span> <span class="pl-c1">6</span> <span class="pl-k">||</span> op[<span class="pl-c1">0</span>] <span class="pl-k">===</span> <span class="pl-c1">2</span>)) { _ <span class="pl-k">=</span> <span class="pl-c1">0</span>; <span class="pl-k">continue</span>; }</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (op[<span class="pl-c1">0</span>] <span class="pl-k">===</span> <span class="pl-c1">3</span> <span class="pl-k">&amp;&amp;</span> (<span class="pl-k">!</span>t <span class="pl-k">||</span> (op[<span class="pl-c1">1</span>] <span class="pl-k">&gt;</span> t[<span class="pl-c1">0</span>] <span class="pl-k">&amp;&amp;</span> op[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> t[<span class="pl-c1">3</span>]))) { <span class="pl-smi">_</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> op[<span class="pl-c1">1</span>]; <span class="pl-k">break</span>; }</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (op[<span class="pl-c1">0</span>] <span class="pl-k">===</span> <span class="pl-c1">6</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_</span>.<span class="pl-c1">label</span> <span class="pl-k">&lt;</span> t[<span class="pl-c1">1</span>]) { <span class="pl-smi">_</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> t[<span class="pl-c1">1</span>]; t <span class="pl-k">=</span> op; <span class="pl-k">break</span>; }</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (t <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_</span>.<span class="pl-c1">label</span> <span class="pl-k">&lt;</span> t[<span class="pl-c1">2</span>]) { <span class="pl-smi">_</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> t[<span class="pl-c1">2</span>]; <span class="pl-smi">_</span>.<span class="pl-smi">ops</span>.<span class="pl-c1">push</span>(op); <span class="pl-k">break</span>; }</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (t[<span class="pl-c1">2</span>]) <span class="pl-smi">_</span>.<span class="pl-smi">ops</span>.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">_</span>.<span class="pl-smi">trys</span>.<span class="pl-c1">pop</span>(); <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line">                op <span class="pl-k">=</span> <span class="pl-smi">body</span>.<span class="pl-c1">call</span>(thisArg, _);</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">catch</span> (e) { op <span class="pl-k">=</span> [<span class="pl-c1">6</span>, e]; y <span class="pl-k">=</span> <span class="pl-c1">0</span>; } <span class="pl-k">finally</span> { f <span class="pl-k">=</span> t <span class="pl-k">=</span> <span class="pl-c1">0</span>; }</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (op[<span class="pl-c1">0</span>] <span class="pl-k">&amp;</span> <span class="pl-c1">5</span>) <span class="pl-k">throw</span> op[<span class="pl-c1">1</span>]; <span class="pl-k">return</span> { value<span class="pl-k">:</span> op[<span class="pl-c1">0</span>] <span class="pl-k">?</span> op[<span class="pl-c1">1</span>] <span class="pl-k">:</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>, done<span class="pl-k">:</span> <span class="pl-c1">true</span> };</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@license</span></span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Copyright 2019 Google LLC. All Rights Reserved.</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * you may not use this file except in compliance with the License.</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * You may obtain a copy of the License at</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * http://www.apache.org/licenses/LICENSE-2.0</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Unless required by applicable law or agreed to in writing, software</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * See the License for the specific language governing permissions and</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * limitations under the License.</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * =============================================================================</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line">    var extendStatics$1=function(e,t){return (extendStatics$1=Object.setPrototypeOf||{__proto__:[]}instanceof Array&amp;&amp;function(e,t){e.__proto__=t;}||function(e,t){for(var n in t)t.hasOwnProperty(n)&amp;&amp;(e[n]=t[n]);})(e,t)};function __extends$1(e,t){function n(){this.constructor=e;}extendStatics$1(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n);}var __assign$1=function(){return (__assign$1=Object.assign||function(e){for(var t,n=1,r=arguments.length;n&lt;r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&amp;&amp;(e[o]=t[o]);return e}).apply(this,arguments)};function __awaiter$1(e,t,n,r){return new(n||(n=Promise))(function(o,a){function i(e){try{u(r.next(e));}catch(e){a(e);}}function s(e){try{u(r.throw(e));}catch(e){a(e);}}function u(e){e.done?o(e.value):new n(function(t){t(e.value);}).then(i,s);}u((r=r.apply(e,t||[])).next());})}function __generator$1(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&amp;o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},&quot;function&quot;==typeof Symbol&amp;&amp;(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError(&quot;Generator is already executing.&quot;);for(;i;)try{if(n=1,r&amp;&amp;(o=2&amp;a[0]?r.return:a[0]?r.throw||((o=r.return)&amp;&amp;o.call(r),0):r.next)&amp;&amp;!(o=o.call(r,a[1])).done)return o;switch(r=0,o&amp;&amp;(a=[2&amp;a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length&gt;0&amp;&amp;o[o.length-1])&amp;&amp;(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&amp;&amp;(!o||a[1]&gt;o[0]&amp;&amp;a[1]&lt;o[3])){i.label=a[1];break}if(6===a[0]&amp;&amp;i.label&lt;o[1]){i.label=o[1],o=a;break}if(o&amp;&amp;i.label&lt;o[2]){i.label=o[2],i.ops.push(a);break}o[2]&amp;&amp;i.ops.pop(),i.trys.pop();continue}a=t.call(e,i);}catch(e){a=[6,e],r=0;}finally{n=o=0;}if(5&amp;a[0])throw a[1];return {value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}var contexts={},WEBGL_ATTRIBUTES={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function setWebGLContext(e,t){contexts[e]=t;}function getWebGLContext(e){e in contexts||(contexts[e]=getWebGLRenderingContext(e));var t=contexts[e];return t.isContextLost()?(delete contexts[e],getWebGLContext(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),contexts[e])}function getWebGLRenderingContext(e){if(1!==e&amp;&amp;2!==e)throw new Error(&quot;Cannot get WebGL rendering context, WebGL is disabled.&quot;);var t=document.createElement(&quot;canvas&quot;);return t.addEventListener(&quot;webglcontextlost&quot;,function(t){t.preventDefault(),delete contexts[e];},!1),1===e?t.getContext(&quot;webgl&quot;,WEBGL_ATTRIBUTES)||t.getContext(&quot;experimental-webgl&quot;,WEBGL_ATTRIBUTES):t.getContext(&quot;webgl2&quot;,WEBGL_ATTRIBUTES)}function isMobile(){var e=navigator.userAgent||navigator.vendor||window.opera;return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}function shuffle(e){for(var t=e.length,n=0,r=0;t&gt;0;)r=Math.random()*t|0,n=e[--t],e[t]=e[r],e[r]=n;}function clamp(e,t,n){return Math.max(e,Math.min(t,n))}function nearestLargerEven(e){return e%2==0?e:e+1}function sum(e){for(var t=0,n=0;n&lt;e.length;n++)t+=e[n];return t}function randUniform(e,t){var n=Math.random();return t*n+(1-n)*e}function distSquared(e,t){for(var n=0,r=0;r&lt;e.length;r++){var o=Number(e[r])-Number(t[r]);n+=o*o;}return n}function assert(e,t){if(!e)throw new Error(&quot;string&quot;==typeof t?t:t())}function assertShapesMatch(e,t,n){void 0===n&amp;&amp;(n=&quot;&quot;),assert(arraysEqual(e,t),function(){return n+&quot; Shapes &quot;+e+&quot; and &quot;+t+&quot; must match&quot;});}function assertNonNull(e){assert(null!=e,function(){return &quot;The input to the tensor constructor must be a non-null value.&quot;});}function flatten(e,t){if(void 0===t&amp;&amp;(t=[]),null==t&amp;&amp;(t=[]),Array.isArray(e)||isTypedArray(e))for(var n=0;n&lt;e.length;++n)flatten(e[n],t);else t.push(e);return t}function sizeFromShape(e){if(0===e.length)return 1;for(var t=e[0],n=1;n&lt;e.length;n++)t*=e[n];return t}function isScalarShape(e){return 0===e.length}function arraysEqual(e,t){if(e===t)return !0;if(null==e||null==t)return !1;if(e.length!==t.length)return !1;for(var n=0;n&lt;e.length;n++)if(e[n]!==t[n])return !1;return !0}function isInt(e){return e%1==0}function tanh(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return -1;var t=Math.exp(2*e);return (t-1)/(t+1)}function sizeToSquarishShape(e){var t=Math.ceil(Math.sqrt(e));return [t,Math.ceil(e/t)]}function createShuffledIndices(e){for(var t=new Uint32Array(e),n=0;n&lt;e;++n)t[n]=n;return shuffle(t),t}function rightPad(e,t){return t&lt;=e.length?e:e+&quot; &quot;.repeat(t-e.length)}function repeatedTry(e,t,n){return void 0===t&amp;&amp;(t=function(e){return 0}),new Promise(function(r,o){var a=0,i=function(){if(e())r();else{var s=t(++a);null!=n&amp;&amp;a&gt;=n?o():setTimeout(i,s);}};i();})}function inferFromImplicitShape(e,t){for(var n=1,r=-1,o=0;o&lt;e.length;++o)if(e[o]&gt;=0)n*=e[o];else if(-1===e[o]){if(-1!==r)throw Error(&quot;Shapes can only have 1 implicit size. Found -1 at dim &quot;+r+&quot; and dim &quot;+o);r=o;}else if(e[o]&lt;0)throw Error(&quot;Shapes can not be &lt; 0. Found &quot;+e[o]+&quot; at dim &quot;+o);if(-1===r){if(t&gt;0&amp;&amp;t!==n)throw Error(&quot;Size(&quot;+t+&quot;) must match the product of shape &quot;+e);return e}if(0===n)throw Error(&quot;Cannot infer the missing size in [&quot;+e+&quot;] when there are 0 elements&quot;);if(t%n!=0)throw Error(&quot;The implicit shape can&#39;t be a fractional number. Got &quot;+t+&quot; / &quot;+n);var a=e.slice();return a[r]=t/n,a}function parseAxisParam(e,t){var n=t.length;return assert((e=null==e?t.map(function(e,t){return t}):[].concat(e)).every(function(e){return e&gt;=-n&amp;&amp;e&lt;n}),function(){return &quot;All values in axis param must be in range [-&quot;+n+&quot;, &quot;+n+&quot;) but got axis &quot;+e}),assert(e.every(function(e){return isInt(e)}),function(){return &quot;All values in axis param must be integers but got axis &quot;+e}),e.map(function(e){return e&lt;0?n+e:e})}function squeezeShape(e,t){for(var n=[],r=[],o=null==t?null:parseAxisParam(t,e).sort(),a=0,i=0;i&lt;e.length;++i){if(null!=o){if(o[a]===i&amp;&amp;1!==e[i])throw new Error(&quot;Can&#39;t squeeze axis &quot;+i+&quot; since its dim &#39;&quot;+e[i]+&quot;&#39; is not 1&quot;);(null==o[a]||o[a]&gt;i)&amp;&amp;1===e[i]&amp;&amp;(n.push(e[i]),r.push(i)),o[a]&lt;=i&amp;&amp;a++;}1!==e[i]&amp;&amp;(n.push(e[i]),r.push(i));}return {newShape:n,keptDims:r}}function getTypedArrayFromDType(e,t){var n=null;if(null==e||&quot;float32&quot;===e)n=new Float32Array(t);else if(&quot;int32&quot;===e)n=new Int32Array(t);else{if(&quot;bool&quot;!==e)throw new Error(&quot;Unknown data type &quot;+e);n=new Uint8Array(t);}return n}function getArrayFromDType(e,t){var n=null;if(null==e||&quot;float32&quot;===e)n=new Float32Array(t);else if(&quot;int32&quot;===e)n=new Int32Array(t);else if(&quot;bool&quot;===e)n=new Uint8Array(t);else{if(&quot;string&quot;!==e)throw new Error(&quot;Unknown data type &quot;+e);n=new Array(t);}return n}function checkComputationForErrors(e,t,n){if(&quot;float32&quot;===t)for(var r=0;r&lt;e.length;r++){var o=e[r];if(isNaN(o)||!isFinite(o))throw Error(&quot;The result of the &#39;&quot;+n+&quot;&#39; is &quot;+o+&quot;.&quot;)}}function checkConversionForErrors(e,t){for(var n=0;n&lt;e.length;n++){var r=e[n];if(isNaN(r)||!isFinite(r))throw Error(&quot;A tensor of type &quot;+t+&quot; being uploaded contains &quot;+r+&quot;.&quot;)}}function hasEncodingLoss(e,t){return &quot;complex64&quot;!==t&amp;&amp;((&quot;float32&quot;!==t||&quot;complex64&quot;===e)&amp;&amp;((&quot;int32&quot;!==t||&quot;float32&quot;===e||&quot;complex64&quot;===e)&amp;&amp;(&quot;bool&quot;!==t||&quot;bool&quot;!==e)))}function isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function bytesPerElement(e){if(&quot;float32&quot;===e||&quot;int32&quot;===e)return 4;if(&quot;complex64&quot;===e)return 8;if(&quot;bool&quot;===e)return 1;throw new Error(&quot;Unknown dtype &quot;+e)}function bytesFromStringArray(e){if(null==e)return 0;var t=0;return e.forEach(function(e){return t+=2*e.length}),t}function isString(e){return &quot;string&quot;==typeof e||e instanceof String}function isBoolean(e){return &quot;boolean&quot;==typeof e}function isNumber(e){return &quot;number&quot;==typeof e}function inferDtype(e){return Array.isArray(e)?inferDtype(e[0]):e instanceof Float32Array?&quot;float32&quot;:e instanceof Int32Array||e instanceof Uint8Array?&quot;int32&quot;:isNumber(e)?&quot;float32&quot;:isString(e)?&quot;string&quot;:isBoolean(e)?&quot;bool&quot;:&quot;float32&quot;}function isFunction(e){return !!(e&amp;&amp;e.constructor&amp;&amp;e.call&amp;&amp;e.apply)}function nearestDivisor(e,t){for(var n=t;n&lt;e;++n)if(e%n==0)return n;return e}function computeStrides(e){var t=e.length;if(t&lt;2)return [];var n=new Array(t-1);n[t-2]=e[t-1];for(var r=t-3;r&gt;=0;--r)n[r]=n[r+1]*e[r+1];return n}function toTypedArray(e,t,n){if(&quot;string&quot;===t)throw new Error(&quot;Cannot convert a string[] to a TypedArray&quot;);if(Array.isArray(e)&amp;&amp;(e=flatten(e)),n&amp;&amp;checkConversionForErrors(e,t),noConversionNeeded(e,t))return e;if(null==t||&quot;float32&quot;===t||&quot;complex64&quot;===t)return new Float32Array(e);if(&quot;int32&quot;===t)return new Int32Array(e);if(&quot;bool&quot;===t){for(var r=new Uint8Array(e.length),o=0;o&lt;r.length;++o)0!==Math.round(e[o])&amp;&amp;(r[o]=1);return r}throw new Error(&quot;Unknown data type &quot;+t)}function createNestedArray(e,t,n){var r=new Array;if(1===t.length)for(var o=t[0],a=0;a&lt;o;a++)r[a]=n[e+a];else{o=t[0];var i=t.slice(1),s=i.reduce(function(e,t){return e*t});for(a=0;a&lt;o;a++)r[a]=createNestedArray(e+a*s,i,n);}return r}function toNestedArray(e,t){if(0===e.length)return t[0];var n=e.reduce(function(e,t){return e*t});if(0===n)return [];if(n!==t.length)throw new Error(&quot;[&quot;+e+&quot;] does not match the input size.&quot;);return createNestedArray(0,e,t)}function noConversionNeeded(e,t){return e instanceof Float32Array&amp;&amp;&quot;float32&quot;===t||e instanceof Int32Array&amp;&amp;&quot;int32&quot;===t||e instanceof Uint8Array&amp;&amp;&quot;bool&quot;===t}function makeOnesTypedArray(e,t){for(var n=makeZerosTypedArray(e,t),r=0;r&lt;n.length;r++)n[r]=1;return n}function makeZerosTypedArray(e,t){if(null==t||&quot;float32&quot;===t||&quot;complex64&quot;===t)return new Float32Array(e);if(&quot;int32&quot;===t)return new Int32Array(e);if(&quot;bool&quot;===t)return new Uint8Array(e);throw new Error(&quot;Unknown data type &quot;+t)}function now(){if(&quot;undefined&quot;!=typeof performance)return performance.now();if(&quot;undefined&quot;!=typeof process){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}throw new Error(&quot;Cannot measure time in this environment. You should run tf.js in the browser or in Node.js&quot;)}function assertNonNegativeIntegerDimensions(e){e.forEach(function(t){assert(Number.isInteger(t)&amp;&amp;t&gt;=0,function(){return &quot;Tensor must have a shape comprised of positive integers but got shape [&quot;+e+&quot;].&quot;});});}var util=Object.freeze({shuffle:shuffle,clamp:clamp,nearestLargerEven:nearestLargerEven,sum:sum,randUniform:randUniform,distSquared:distSquared,assert:assert,assertShapesMatch:assertShapesMatch,assertNonNull:assertNonNull,flatten:flatten,sizeFromShape:sizeFromShape,isScalarShape:isScalarShape,arraysEqual:arraysEqual,isInt:isInt,tanh:tanh,sizeToSquarishShape:sizeToSquarishShape,createShuffledIndices:createShuffledIndices,rightPad:rightPad,repeatedTry:repeatedTry,inferFromImplicitShape:inferFromImplicitShape,parseAxisParam:parseAxisParam,squeezeShape:squeezeShape,getTypedArrayFromDType:getTypedArrayFromDType,getArrayFromDType:getArrayFromDType,checkComputationForErrors:checkComputationForErrors,checkConversionForErrors:checkConversionForErrors,hasEncodingLoss:hasEncodingLoss,isTypedArray:isTypedArray,bytesPerElement:bytesPerElement,bytesFromStringArray:bytesFromStringArray,isString:isString,isBoolean:isBoolean,isNumber:isNumber,inferDtype:inferDtype,isFunction:isFunction,nearestDivisor:nearestDivisor,computeStrides:computeStrides,toTypedArray:toTypedArray,toNestedArray:toNestedArray,makeOnesTypedArray:makeOnesTypedArray,makeZerosTypedArray:makeZerosTypedArray,now:now,assertNonNegativeIntegerDimensions:assertNonNegativeIntegerDimensions}),Profiler=function(){function e(e,t){this.backendTimer=e,this.logger=t,null==t&amp;&amp;(this.logger=new Logger);}return e.prototype.profileKernel=function(e,t){var n,r=this,o=this.backendTimer.time(function(){n=t();});return (Array.isArray(n)?n:[n]).forEach(function(t){var n=t.dataSync();checkComputationForErrors(n,t.dtype,e),o.then(function(o){var a=&quot;&quot;;null!=o.getExtraProfileInfo&amp;&amp;(a=o.getExtraProfileInfo()),r.logger.logKernelProfile(e,t,n,o.kernelMs,a);});}),n},e}(),Logger=function(){function e(){}return e.prototype.logKernelProfile=function(e,t,n,r,o){var a=rightPad(r+&quot;ms&quot;,9),i=rightPad(e,25),s=t.rank,u=t.size,c=rightPad(t.shape.toString(),14);console.log(&quot;%c&quot;+i+&quot;\t%c&quot;+a+&quot;\t%c&quot;+s+&quot;D &quot;+c+&quot;\t%c&quot;+u+&quot;\t%c&quot;+o,&quot;font-weight:bold&quot;,&quot;color:red&quot;,&quot;color:blue&quot;,&quot;color: orange&quot;,&quot;color: green&quot;);},e}(),FORMAT_LIMIT_NUM_VALS=20,FORMAT_NUM_FIRST_LAST_VALS=3,FORMAT_NUM_SIG_DIGITS=7;function tensorToString(e,t,n,r){var o=computeStrides(t),a=computeMaxSizePerColumn(e,t,n,o),i=t.length,s=subTensorToString(e,t,n,o,a),u=[&quot;Tensor&quot;];return r&amp;&amp;(u.push(&quot;  dtype: &quot;+n),u.push(&quot;  rank: &quot;+i),u.push(&quot;  shape: [&quot;+t+&quot;]&quot;),u.push(&quot;  values:&quot;)),u.push(s.map(function(e){return &quot;    &quot;+e}).join(&quot;\n&quot;)),u.join(&quot;\n&quot;)}function computeMaxSizePerColumn(e,t,n,r){var o=sizeFromShape(t),a=r[r.length-1],i=new Array(a).fill(0),s=t.length,u=&quot;complex64&quot;===n?createComplexTuples(e):e;if(s&gt;1)for(var c=0;c&lt;o/a;c++)for(var l=c*a,p=0;p&lt;a;p++)i[p]=Math.max(i[p],valToString(u[l+p],0,n).length);return i}function valToString(e,t,n){return rightPad(Array.isArray(e)?parseFloat(e[0].toFixed(FORMAT_NUM_SIG_DIGITS))+&quot; + &quot;+parseFloat(e[1].toFixed(FORMAT_NUM_SIG_DIGITS))+&quot;j&quot;:isString(e)?&quot;&#39;&quot;+e+&quot;&#39;&quot;:&quot;bool&quot;===n?boolNumToString(e):parseFloat(e.toFixed(FORMAT_NUM_SIG_DIGITS)).toString(),t)}function boolNumToString(e){return 0===e?&quot;false&quot;:&quot;true&quot;}function subTensorToString(e,t,n,r,o,a){void 0===a&amp;&amp;(a=!0);var i=&quot;complex64&quot;===n?2:1,s=t[0],u=t.length;if(0===u)return &quot;complex64&quot;===n?[valToString(createComplexTuples(e)[0],0,n)]:&quot;bool&quot;===n?[boolNumToString(e[0])]:[e[0].toString()];if(1===u){if(s&gt;FORMAT_LIMIT_NUM_VALS){var c=FORMAT_NUM_FIRST_LAST_VALS*i,l=Array.from(e.slice(0,c)),p=Array.from(e.slice(s-FORMAT_NUM_FIRST_LAST_VALS*i,s));return &quot;complex64&quot;===n&amp;&amp;(l=createComplexTuples(l),p=createComplexTuples(p)),[&quot;[&quot;+l.map(function(e,t){return valToString(e,o[t],n)}).join(&quot;, &quot;)+&quot;, ..., &quot;+p.map(function(e,t){return valToString(e,o[s-FORMAT_NUM_FIRST_LAST_VALS+t],n)}).join(&quot;, &quot;)+&quot;]&quot;]}return [&quot;[&quot;+(&quot;complex64&quot;===n?createComplexTuples(e):Array.from(e)).map(function(e,t){return valToString(e,o[t],n)}).join(&quot;, &quot;)+&quot;]&quot;]}var d=t.slice(1),h=r.slice(1),f=r[0]*i,m=[];if(s&gt;FORMAT_LIMIT_NUM_VALS){for(var g=0;g&lt;FORMAT_NUM_FIRST_LAST_VALS;g++){var v=(y=g*f)+f;m.push.apply(m,subTensorToString(e.slice(y,v),d,n,h,o,!1));}m.push(&quot;...&quot;);for(g=s-FORMAT_NUM_FIRST_LAST_VALS;g&lt;s;g++){v=(y=g*f)+f;m.push.apply(m,subTensorToString(e.slice(y,v),d,n,h,o,g===s-1));}}else for(g=0;g&lt;s;g++){var y;v=(y=g*f)+f;m.push.apply(m,subTensorToString(e.slice(y,v),d,n,h,o,g===s-1));}var x=2===u?&quot;,&quot;:&quot;&quot;;m[0]=&quot;[&quot;+m[0]+x;for(g=1;g&lt;m.length-1;g++)m[g]=&quot; &quot;+m[g]+x;var E=&quot;,\n&quot;;for(g=2;g&lt;u;g++)E+=&quot;\n&quot;;return m[m.length-1]=&quot; &quot;+m[m.length-1]+&quot;]&quot;+(a?&quot;&quot;:E),m}function createComplexTuples(e){for(var t=[],n=0;n&lt;e.length;n+=2)t.push([e[n],e[n+1]]);return t}var TensorBuffer=function(){function e(e,t,n){var r=this;if(this.dtype=t,this.shape=e.slice(),this.size=sizeFromShape(e),null!=n){var o=n.length;assert(o===this.size,function(){return &quot;Length of values &#39;&quot;+o+&quot;&#39; does not match the size inferred by the shape &#39;&quot;+r.size+&quot;&#39;.&quot;});}if(&quot;complex64&quot;===t)throw new Error(&quot;complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).&quot;);this.values=n||getArrayFromDType(t,this.size),this.strides=computeStrides(e);}return e.prototype.set=function(e){for(var t=this,n=[],r=1;r&lt;arguments.length;r++)n[r-1]=arguments[r];0===n.length&amp;&amp;(n=[0]),assert(n.length===this.rank,function(){return &quot;The number of provided coordinates (&quot;+n.length+&quot;) must match the rank (&quot;+t.rank+&quot;)&quot;});var o=this.locToIndex(n);this.values[o]=e;},e.prototype.get=function(){for(var e=[],t=0;t&lt;arguments.length;t++)e[t]=arguments[t];0===e.length&amp;&amp;(e=[0]);for(var n=0,r=0,o=e;r&lt;o.length;r++){var a=o[r];if(a&lt;0||a&gt;=this.shape[n]){var i=&quot;Requested out of range element at &quot;+e+&quot;.   Buffer shape=&quot;+this.shape;throw new Error(i)}n++;}for(var s=e[e.length-1],u=0;u&lt;e.length-1;++u)s+=this.strides[u]*e[u];return this.values[s]},e.prototype.locToIndex=function(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];for(var t=e[e.length-1],n=0;n&lt;e.length-1;++n)t+=this.strides[n]*e[n];return t},e.prototype.indexToLoc=function(e){if(0===this.rank)return [];if(1===this.rank)return [e];for(var t=new Array(this.shape.length),n=0;n&lt;t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t},Object.defineProperty(e.prototype,&quot;rank&quot;,{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.toTensor=function(){return Tensor.make(this.shape,{values:this.values},this.dtype)},e}(),trackerFn=null,opHandler=null,deprecationWarningFn=null;function setTensorTracker(e){trackerFn=e;}function setOpHandler(e){opHandler=e;}function setDeprecationWarningFn(e){deprecationWarningFn=e;}var Tensor=function(){function e(e,t,n,r,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||&quot;float32&quot;,this.size=sizeFromShape(e),this.strides=computeStrides(e),this.dataId=null!=r?r:{},this.id=trackerFn().nextTensorId(),this.rankType=this.rank&lt;5?this.rank.toString():&quot;higher&quot;,trackerFn().registerTensor(this,o),null!=n&amp;&amp;trackerFn().write(this.dataId,n);}return e.make=function(t,n,r,o){return new e(t,r,n.values,n.dataId,o)},e.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},e.prototype.asScalar=function(){return this.throwIfDisposed(),assert(1===this.size,function(){return &quot;The array must have only 1 element.&quot;}),this.reshape([])},e.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},e.prototype.as2D=function(e,t){return this.throwIfDisposed(),this.reshape([e,t])},e.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),this.reshape([e,t,n])},e.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),this.reshape([e,t,n,r])},e.prototype.as5D=function(e,t,n,r,o){return this.throwIfDisposed(),this.reshape([e,t,n,r,o])},e.prototype.asType=function(e){return this.throwIfDisposed(),opHandler.cast(this,e)},Object.defineProperty(e.prototype,&quot;rank&quot;,{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.buffer=function(){return __awaiter$1(this,void 0,void 0,function(){var e;return __generator$1(this,function(t){switch(t.label){case 0:return [4,this.data()];case 1:return e=t.sent(),[2,opHandler.buffer(this.shape,this.dtype,e)]}})})},e.prototype.bufferSync=function(){return opHandler.buffer(this.shape,this.dtype,this.dataSync())},e.prototype.array=function(){return __awaiter$1(this,void 0,void 0,function(){var e;return __generator$1(this,function(t){switch(t.label){case 0:return [4,this.data()];case 1:return e=t.sent(),[2,toNestedArray(this.shape,e)]}})})},e.prototype.arraySync=function(){return toNestedArray(this.shape,this.dataSync())},e.prototype.data=function(){return __awaiter$1(this,void 0,void 0,function(){return __generator$1(this,function(e){return this.throwIfDisposed(),[2,trackerFn().read(this.dataId)]})})},e.prototype.dataSync=function(){return this.throwIfDisposed(),trackerFn().readSync(this.dataId)},e.prototype.dispose=function(){this.isDisposed||(trackerFn().disposeTensor(this),this.isDisposedInternal=!0);},Object.defineProperty(e.prototype,&quot;isDisposed&quot;,{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),e.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error(&quot;Tensor is disposed.&quot;)},e.prototype.toFloat=function(){return this.asType(&quot;float32&quot;)},e.prototype.toInt=function(){return this.asType(&quot;int32&quot;)},e.prototype.toBool=function(){return this.asType(&quot;bool&quot;)},e.prototype.print=function(e){return void 0===e&amp;&amp;(e=!1),opHandler.print(this,e)},e.prototype.reshape=function(e){return this.throwIfDisposed(),opHandler.reshape(this,e)},e.prototype.reshapeAs=function(e){return this.throwIfDisposed(),this.reshape(e.shape)},e.prototype.expandDims=function(e){return void 0===e&amp;&amp;(e=0),opHandler.expandDims(this,e)},e.prototype.cumsum=function(e,t,n){return void 0===e&amp;&amp;(e=0),void 0===t&amp;&amp;(t=!1),void 0===n&amp;&amp;(n=!1),opHandler.cumsum(this,e,t,n)},e.prototype.squeeze=function(e){return this.throwIfDisposed(),opHandler.squeeze(this,e)},e.prototype.clone=function(){return this.throwIfDisposed(),opHandler.clone(this)},e.prototype.oneHot=function(e,t,n){return this.throwIfDisposed(),opHandler.oneHot(this,e,t,n)},e.prototype.toString=function(e){return void 0===e&amp;&amp;(e=!1),tensorToString(this.dataSync(),this.shape,this.dtype,e)},e.prototype.tile=function(e){return this.throwIfDisposed(),opHandler.tile(this,e)},e.prototype.gather=function(e,t){return void 0===t&amp;&amp;(t=0),this.throwIfDisposed(),opHandler.gather(this,e,t)},e.prototype.matMul=function(e,t,n){return void 0===t&amp;&amp;(t=!1),void 0===n&amp;&amp;(n=!1),this.throwIfDisposed(),opHandler.matMul(this,e,t,n)},e.prototype.dot=function(e){return this.throwIfDisposed(),opHandler.dot(this,e)},e.prototype.norm=function(e,t,n){return void 0===e&amp;&amp;(e=&quot;euclidean&quot;),void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1),this.throwIfDisposed(),opHandler.norm(this,e,t,n)},e.prototype.slice=function(e,t){return this.throwIfDisposed(),opHandler.slice(this,e,t)},e.prototype.reverse=function(e){return this.throwIfDisposed(),opHandler.reverse(this,e)},e.prototype.concat=function(t,n){return void 0===n&amp;&amp;(n=0),this.throwIfDisposed(),t instanceof e&amp;&amp;(t=[t]),opHandler.concat([this].concat(t),n)},e.prototype.split=function(e,t){return void 0===t&amp;&amp;(t=0),this.throwIfDisposed(),opHandler.split(this,e,t)},e.prototype.stack=function(e,t){return void 0===t&amp;&amp;(t=0),opHandler.stack([this,e],t)},e.prototype.unstack=function(e){return void 0===e&amp;&amp;(e=0),opHandler.unstack(this,e)},e.prototype.pad=function(e,t){return void 0===t&amp;&amp;(t=0),opHandler.pad(this,e,t)},e.prototype.batchNormalization=function(e,t,n,r,o){return void 0===n&amp;&amp;(n=.001),deprecationWarningFn(&quot;tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon&quot;),this.batchNorm(e,t,o,r,n)},e.prototype.batchNorm=function(e,t,n,r,o){return void 0===o&amp;&amp;(o=.001),this.throwIfDisposed(),opHandler.batchNorm(this,e,t,n,r,o)},e.prototype.all=function(e,t){return void 0===e&amp;&amp;(e=null),void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.all(this,e,t)},e.prototype.any=function(e,t){return void 0===e&amp;&amp;(e=null),void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.any(this,e,t)},e.prototype.logSumExp=function(e,t){return void 0===e&amp;&amp;(e=null),void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.logSumExp(this,e,t)},e.prototype.sum=function(e,t){return void 0===e&amp;&amp;(e=null),void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.sum(this,e,t)},e.prototype.prod=function(e,t){return void 0===e&amp;&amp;(e=null),void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.prod(this,e,t)},e.prototype.mean=function(e,t){return void 0===e&amp;&amp;(e=null),void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.mean(this,e,t)},e.prototype.min=function(e,t){return void 0===e&amp;&amp;(e=null),void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.min(this,e,t)},e.prototype.max=function(e,t){return void 0===e&amp;&amp;(e=null),void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.max(this,e,t)},e.prototype.argMin=function(e){return void 0===e&amp;&amp;(e=null),this.throwIfDisposed(),opHandler.argMin(this,e)},e.prototype.argMax=function(e){return void 0===e&amp;&amp;(e=null),this.throwIfDisposed(),opHandler.argMax(this,e)},e.prototype.cast=function(e){return this.throwIfDisposed(),opHandler.cast(this,e)},e.prototype.add=function(e){return this.throwIfDisposed(),opHandler.add(this,e)},e.prototype.addStrict=function(e){return this.throwIfDisposed(),opHandler.addStrict(this,e)},e.prototype.atan2=function(e){return this.throwIfDisposed(),opHandler.atan2(this,e)},e.prototype.sub=function(e){return this.throwIfDisposed(),opHandler.sub(this,e)},e.prototype.subStrict=function(e){return this.throwIfDisposed(),opHandler.subStrict(this,e)},e.prototype.pow=function(e){return this.throwIfDisposed(),opHandler.pow(this,e)},e.prototype.powStrict=function(e){return this.throwIfDisposed(),opHandler.powStrict(this,e)},e.prototype.mul=function(e){return this.throwIfDisposed(),opHandler.mul(this,e)},e.prototype.mulStrict=function(e){return this.throwIfDisposed(),opHandler.mulStrict(this,e)},e.prototype.div=function(e){return this.throwIfDisposed(),opHandler.div(this,e)},e.prototype.floorDiv=function(e){return this.throwIfDisposed(),opHandler.floorDiv(this,e)},e.prototype.divStrict=function(e){return this.throwIfDisposed(),opHandler.divStrict(this,e)},e.prototype.minimum=function(e){return this.throwIfDisposed(),opHandler.minimum(this,e)},e.prototype.minimumStrict=function(e){return this.throwIfDisposed(),opHandler.minimumStrict(this,e)},e.prototype.maximum=function(e){return this.throwIfDisposed(),opHandler.maximum(this,e)},e.prototype.maximumStrict=function(e){return this.throwIfDisposed(),opHandler.maximumStrict(this,e)},e.prototype.mod=function(e){return this.throwIfDisposed(),opHandler.mod(this,e)},e.prototype.modStrict=function(e){return this.throwIfDisposed(),opHandler.modStrict(this,e)},e.prototype.squaredDifference=function(e){return this.throwIfDisposed(),opHandler.squaredDifference(this,e)},e.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),opHandler.squaredDifferenceStrict(this,e)},e.prototype.transpose=function(e){return this.throwIfDisposed(),opHandler.transpose(this,e)},e.prototype.notEqual=function(e){return this.throwIfDisposed(),opHandler.notEqual(this,e)},e.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),opHandler.notEqualStrict(this,e)},e.prototype.less=function(e){return this.throwIfDisposed(),opHandler.less(this,e)},e.prototype.lessStrict=function(e){return this.throwIfDisposed(),opHandler.lessStrict(this,e)},e.prototype.equal=function(e){return this.throwIfDisposed(),opHandler.equal(this,e)},e.prototype.equalStrict=function(e){return this.throwIfDisposed(),opHandler.equalStrict(this,e)},e.prototype.lessEqual=function(e){return this.throwIfDisposed(),opHandler.lessEqual(this,e)},e.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),opHandler.lessEqualStrict(this,e)},e.prototype.greater=function(e){return this.throwIfDisposed(),opHandler.greater(this,e)},e.prototype.greaterStrict=function(e){return this.throwIfDisposed(),opHandler.greaterStrict(this,e)},e.prototype.greaterEqual=function(e){return this.throwIfDisposed(),opHandler.greaterEqual(this,e)},e.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),opHandler.greaterEqualStrict(this,e)},e.prototype.logicalAnd=function(e){return this.throwIfDisposed(),opHandler.logicalAnd(this,e)},e.prototype.logicalOr=function(e){return this.throwIfDisposed(),opHandler.logicalOr(this,e)},e.prototype.logicalNot=function(){return this.throwIfDisposed(),opHandler.logicalNot(this)},e.prototype.logicalXor=function(e){return this.throwIfDisposed(),opHandler.logicalXor(this,e)},e.prototype.where=function(e,t){return this.throwIfDisposed(),opHandler.where(e,this,t)},e.prototype.neg=function(){return this.throwIfDisposed(),opHandler.neg(this)},e.prototype.ceil=function(){return this.throwIfDisposed(),opHandler.ceil(this)},e.prototype.floor=function(){return this.throwIfDisposed(),opHandler.floor(this)},e.prototype.sign=function(){return this.throwIfDisposed(),opHandler.sign(this)},e.prototype.exp=function(){return this.throwIfDisposed(),opHandler.exp(this)},e.prototype.expm1=function(){return this.throwIfDisposed(),opHandler.expm1(this)},e.prototype.log=function(){return this.throwIfDisposed(),opHandler.log(this)},e.prototype.log1p=function(){return this.throwIfDisposed(),opHandler.log1p(this)},e.prototype.sqrt=function(){return this.throwIfDisposed(),opHandler.sqrt(this)},e.prototype.rsqrt=function(){return this.throwIfDisposed(),opHandler.rsqrt(this)},e.prototype.square=function(){return this.throwIfDisposed(),opHandler.square(this)},e.prototype.reciprocal=function(){return this.throwIfDisposed(),opHandler.reciprocal(this)},e.prototype.abs=function(){return this.throwIfDisposed(),opHandler.abs(this)},e.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),opHandler.clipByValue(this,e,t)},e.prototype.relu=function(){return this.throwIfDisposed(),opHandler.relu(this)},e.prototype.elu=function(){return this.throwIfDisposed(),opHandler.elu(this)},e.prototype.selu=function(){return this.throwIfDisposed(),opHandler.selu(this)},e.prototype.leakyRelu=function(e){return void 0===e&amp;&amp;(e=.2),this.throwIfDisposed(),opHandler.leakyRelu(this,e)},e.prototype.prelu=function(e){return this.throwIfDisposed(),opHandler.prelu(this,e)},e.prototype.sigmoid=function(){return this.throwIfDisposed(),opHandler.sigmoid(this)},e.prototype.logSigmoid=function(){return this.throwIfDisposed(),opHandler.logSigmoid(this)},e.prototype.softplus=function(){return this.throwIfDisposed(),opHandler.softplus(this)},e.prototype.zerosLike=function(){return this.throwIfDisposed(),opHandler.zerosLike(this)},e.prototype.onesLike=function(){return this.throwIfDisposed(),opHandler.onesLike(this)},e.prototype.sin=function(){return this.throwIfDisposed(),opHandler.sin(this)},e.prototype.cos=function(){return this.throwIfDisposed(),opHandler.cos(this)},e.prototype.tan=function(){return this.throwIfDisposed(),opHandler.tan(this)},e.prototype.asin=function(){return this.throwIfDisposed(),opHandler.asin(this)},e.prototype.acos=function(){return this.throwIfDisposed(),opHandler.acos(this)},e.prototype.atan=function(){return this.throwIfDisposed(),opHandler.atan(this)},e.prototype.sinh=function(){return this.throwIfDisposed(),opHandler.sinh(this)},e.prototype.cosh=function(){return this.throwIfDisposed(),opHandler.cosh(this)},e.prototype.tanh=function(){return this.throwIfDisposed(),opHandler.tanh(this)},e.prototype.asinh=function(){return this.throwIfDisposed(),opHandler.asinh(this)},e.prototype.acosh=function(){return this.throwIfDisposed(),opHandler.acosh(this)},e.prototype.atanh=function(){return this.throwIfDisposed(),opHandler.atanh(this)},e.prototype.erf=function(){return this.throwIfDisposed(),opHandler.erf(this)},e.prototype.round=function(){return this.throwIfDisposed(),opHandler.round(this)},e.prototype.step=function(e){return void 0===e&amp;&amp;(e=0),this.throwIfDisposed(),opHandler.step(this,e)},e.prototype.softmax=function(e){return void 0===e&amp;&amp;(e=-1),this.throwIfDisposed(),opHandler.softmax(this,e)},e.prototype.logSoftmax=function(e){return void 0===e&amp;&amp;(e=-1),this.throwIfDisposed(),opHandler.logSoftmax(this,e)},e.prototype.resizeBilinear=function(e,t){return void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.image.resizeBilinear(this,e,t)},e.prototype.resizeNearestNeighbor=function(e,t){return void 0===t&amp;&amp;(t=!1),this.throwIfDisposed(),opHandler.image.resizeNearestNeighbor(this,e,t)},e.prototype.conv1d=function(e,t,n,r,o,a){return void 0===r&amp;&amp;(r=&quot;NWC&quot;),void 0===o&amp;&amp;(o=1),this.throwIfDisposed(),opHandler.conv1d(this,e,t,n,r,o,a)},e.prototype.conv2d=function(e,t,n,r,o,a){return void 0===r&amp;&amp;(r=&quot;NHWC&quot;),void 0===o&amp;&amp;(o=[1,1]),this.throwIfDisposed(),opHandler.conv2d(this,e,t,n,r,o,a)},e.prototype.conv2dTranspose=function(e,t,n,r,o){return this.throwIfDisposed(),opHandler.conv2dTranspose(this,e,t,n,r,o)},e.prototype.depthwiseConv2D=function(e,t,n,r,o,a){return void 0===r&amp;&amp;(r=&quot;NHWC&quot;),void 0===o&amp;&amp;(o=[1,1]),this.throwIfDisposed(),opHandler.depthwiseConv2d(this,e,t,n,r,o,a)},e.prototype.separableConv2d=function(e,t,n,r,o,a){return void 0===o&amp;&amp;(o=[1,1]),void 0===a&amp;&amp;(a=&quot;NHWC&quot;),this.throwIfDisposed(),opHandler.separableConv2d(this,e,t,n,r,o,a)},e.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),opHandler.avgPool(this,e,t,n,r)},e.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),opHandler.maxPool(this,e,t,n,r)},e.prototype.localResponseNormalization=function(e,t,n,r){return void 0===e&amp;&amp;(e=5),void 0===t&amp;&amp;(t=1),void 0===n&amp;&amp;(n=1),void 0===r&amp;&amp;(r=.5),opHandler.localResponseNormalization(this,e,t,n,r)},e.prototype.pool=function(e,t,n,r,o){return this.throwIfDisposed(),opHandler.pool(this,e,t,n,r,o)},e.prototype.variable=function(e,t,n){return void 0===e&amp;&amp;(e=!0),this.throwIfDisposed(),Variable.variable(this,e,t,n)},e.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),opHandler.unsortedSegmentSum(this,e,t)},e.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),opHandler.batchToSpaceND(this,e,t)},e.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),opHandler.spaceToBatchND(this,e,t)},e.prototype.topk=function(e,t){return void 0===e&amp;&amp;(e=1),void 0===t&amp;&amp;(t=!0),this.throwIfDisposed(),opHandler.topk(this,e,t)},e.prototype.stridedSlice=function(e,t,n,r,o,a,i,s){return void 0===r&amp;&amp;(r=0),void 0===o&amp;&amp;(o=0),void 0===a&amp;&amp;(a=0),void 0===i&amp;&amp;(i=0),void 0===s&amp;&amp;(s=0),this.throwIfDisposed(),opHandler.stridedSlice(this,e,t,n,r,o,a,i,s)},e.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),opHandler.depthToSpace(this,e,t)},e.prototype.fft=function(){return this.throwIfDisposed(),opHandler.spectral.fft(this)},e.prototype.ifft=function(){return this.throwIfDisposed(),opHandler.spectral.ifft(this)},e.prototype.rfft=function(){return this.throwIfDisposed(),opHandler.spectral.rfft(this)},e.prototype.irfft=function(){return this.throwIfDisposed(),opHandler.spectral.irfft(this)},e}();Object.defineProperty(Tensor,Symbol.hasInstance,{value:function(e){return !!e&amp;&amp;null!=e.dataId&amp;&amp;null!=e.shape&amp;&amp;null!=e.dtype}});var Variable=function(e){function t(t,n,r){void 0===n&amp;&amp;(n=!0);var o=e.call(this,t.shape,t.dtype,null,t.dataId)||this;o.trainable=n,o.name=r,null==o.name&amp;&amp;(o.name=trackerFn().nextVariableId().toString());try{trackerFn().registerVariable(o);}catch(e){throw trackerFn().disposeTensor(o),e}return o}return __extends$1(t,e),t.variable=function(e,n,r,o){return void 0===n&amp;&amp;(n=!0),null!=o&amp;&amp;o!==e.dtype&amp;&amp;(e=e.asType(o)),new t(e,n,r)},t.prototype.assign=function(e){if(e.dtype!==this.dtype)throw new Error(&quot;dtype of the new value (&quot;+e.dtype+&quot;) and previous value (&quot;+this.dtype+&quot;) must match&quot;);if(!arraysEqual(e.shape,this.shape))throw new Error(&quot;shape of the new value (&quot;+e.shape+&quot;) and previous value (&quot;+this.shape+&quot;) must match&quot;);trackerFn().disposeTensor(this),this.dataId=e.dataId,trackerFn().registerTensor(this);},t}(Tensor);Object.defineProperty(Variable,Symbol.hasInstance,{value:function(e){return e instanceof Tensor&amp;&amp;null!=e.assign&amp;&amp;e.assign instanceof Function}});var Rank,UpcastInt32AndMap,UpcastBoolAndMap,UpcastFloat32AndMap,UpcastComplex64AndMap,variable=Variable.variable;function getFilteredNodesXToY(e,t,n){for(var r={},o={},a=0;a&lt;t.length;a++)r[t[a].id]=!0;for(a=0;a&lt;e.length;a++){var i=(f=e[a]).inputs;for(var s in i){for(var u=i[s],c=!1,l=0;l&lt;t.length;l++)if(r[u.id]){f.outputs.forEach(function(e){return r[e.id]=!0}),c=!0,o[f.id]=!0;break}if(c)break}}var p={};p[n.id]=!0;var d={};for(a=e.length-1;a&gt;=0;a--)for(i=(f=e[a]).inputs,l=0;l&lt;f.outputs.length;l++)if(p[f.outputs[l].id]){for(var s in i)p[i[s].id]=!0,d[f.id]=!0;break}var h=[];for(a=0;a&lt;e.length;a++){var f;if(o[(f=e[a]).id]&amp;&amp;d[f.id]){var m={};for(var s in f.inputs){var g=f.inputs[s];r[g.id]&amp;&amp;(m[s]=g);}var v=Object.assign({},f);v.inputs=m,v.outputs=f.outputs,h.push(v);}}return h}function backpropagateGradients(e,t,n){for(var r=function(r){var o=t[r],a=[];if(o.outputs.forEach(function(t){var n=e[t.id];if(null!=n)a.push(n);else{var r=Tensor.make(t.shape,{values:makeZerosTypedArray(t.size,t.dtype)},t.dtype);a.push(r);}}),null==o.gradient)throw new Error(&quot;Cannot compute gradient: gradient function not found for &quot;+o.name+&quot;.&quot;);var i=o.gradient(1===o.outputs.length?a[0]:a),s=function(t){if(!(t in i))throw new Error(&quot;Cannot backprop through input &quot;+t+&quot;. Available gradients found: &quot;+Object.keys(i)+&quot;.&quot;);var r=n(function(){return i[t]()});if(&quot;float32&quot;!==r.dtype)throw new Error(&quot;Error in gradient for op &quot;+o.name+&quot;. The gradient of input &quot;+t+&quot; must have &#39;float32&#39; dtype, but has &#39;&quot;+r.dtype+&quot;&#39;&quot;);var a=o.inputs[t];if(!arraysEqual(r.shape,a.shape))throw new Error(&quot;Error in gradient for op &quot;+o.name+&quot;. The gradient of input &#39;&quot;+t+&quot;&#39; has shape &#39;&quot;+r.shape+&quot;&#39;, which does not match the shape of the input &#39;&quot;+a.shape+&quot;&#39;&quot;);if(null==e[a.id])e[a.id]=r;else{var s=e[a.id];e[a.id]=s.add(r),s.dispose();}};for(var u in o.inputs)s(u);},o=t.length-1;o&gt;=0;o--)r(o);}!function(e){e.R0=&quot;R0&quot;,e.R1=&quot;R1&quot;,e.R2=&quot;R2&quot;,e.R3=&quot;R3&quot;,e.R4=&quot;R4&quot;,e.R5=&quot;R5&quot;,e.R6=&quot;R6&quot;;}(Rank||(Rank={})),function(e){e.float32=&quot;float32&quot;,e.int32=&quot;int32&quot;,e.bool=&quot;int32&quot;,e.complex64=&quot;complex64&quot;;}(UpcastInt32AndMap||(UpcastInt32AndMap={})),function(e){e.float32=&quot;float32&quot;,e.int32=&quot;int32&quot;,e.bool=&quot;bool&quot;,e.complex64=&quot;complex64&quot;;}(UpcastBoolAndMap||(UpcastBoolAndMap={})),function(e){e.float32=&quot;float32&quot;,e.int32=&quot;float32&quot;,e.bool=&quot;float32&quot;,e.complex64=&quot;complex64&quot;;}(UpcastFloat32AndMap||(UpcastFloat32AndMap={})),function(e){e.float32=&quot;complex64&quot;,e.int32=&quot;complex64&quot;,e.bool=&quot;complex64&quot;,e.complex64=&quot;complex64&quot;;}(UpcastComplex64AndMap||(UpcastComplex64AndMap={}));var upcastTypeMap={float32:UpcastFloat32AndMap,int32:UpcastInt32AndMap,bool:UpcastBoolAndMap,complex64:UpcastComplex64AndMap};function upcastType(e,t){if(&quot;string&quot;===e||&quot;string&quot;===t){if(&quot;string&quot;===e&amp;&amp;&quot;string&quot;===t)return &quot;string&quot;;throw new Error(&quot;Can not upcast &quot;+e+&quot; with &quot;+t)}return upcastTypeMap[e][t]}function sumOutType(e){return upcastType(e,&quot;int32&quot;)}function makeTypesMatch(e,t){if(e.dtype===t.dtype)return [e,t];var n=upcastType(e.dtype,t.dtype);return [e.cast(n),t.cast(n)]}function assertTypesMatch(e,t){assert(e.dtype===t.dtype,function(){return &quot;The dtypes of the first(&quot;+e.dtype+&quot;) and second(&quot;+t.dtype+&quot;) input must match&quot;});}function isTensorInList(e,t){for(var n=0;n&lt;t.length;n++)if(t[n].id===e.id)return !0;return !1}function getTensorsInContainer(e){var t=[];return walkTensorContainer(e,t,new Set),t}function walkTensorContainer(e,t,n){if(null!=e)if(e instanceof Tensor)t.push(e);else if(isIterable(e)){var r=e;for(var o in r){var a=r[o];n.has(a)||(n.add(a),walkTensorContainer(a,t,n));}}}function isIterable(e){return Array.isArray(e)||&quot;object&quot;==typeof e}var Type,tensor_util=Object.freeze({makeTypesMatch:makeTypesMatch,assertTypesMatch:assertTypesMatch,isTensorInList:isTensorInList,getTensorsInContainer:getTensorsInContainer}),Engine=function(){function e(e,t,n){this.backend=e,this.safeMode=t,this.debugMode=n,this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.profiling=!1,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiler=new Profiler(e),this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null};}return e.prototype.moveData=function(e){this.write(e,this.readSync(e));},e.prototype.tidy=function(e,t){var n,r=this,o=null;if(null==t){if(&quot;function&quot;!=typeof e)throw new Error(&quot;Please provide a function to tidy()&quot;);t=e;}else{if(&quot;string&quot;!=typeof e&amp;&amp;!(e instanceof String))throw new Error(&quot;When calling with two arguments, the first argument to tidy() must be a string&quot;);if(&quot;function&quot;!=typeof t)throw new Error(&quot;When calling with two arguments, the 2nd argument to tidy() must be a function&quot;);o=e;}return this.scopedRun(function(){return r.startScope(o)},function(){return r.endScope(n)},function(){return (n=t())instanceof Promise&amp;&amp;console.error(&quot;Cannot return a Promise inside of tidy.&quot;),n})},e.prototype.scopedRun=function(e,t,n){e();try{var r=n();return t(),r}catch(e){throw t(),e}},e.prototype.nextTensorId=function(){return e.nextTensorId++},e.prototype.nextVariableId=function(){return e.nextVariableId++},e.prototype.clone=function(e){var t=Tensor.make(e.shape,{dataId:e.dataId},e.dtype);return this.addTapeNode([e],t,function(e){return [e.toFloat()]}),t},e.prototype.runKernel=function(e,t,n){var r,o=this,a=[],i=this.isTapeOn(),s=null!=this.activeScope?this.activeScope.name:&quot;&quot;,u=function(e){i&amp;&amp;(a=e.map(function(e){return o.keep(o.clone(e))}));},c=this.numBytes,l=this.numTensors;if(this.scopedRun(function(){return o.kernelDepth++},function(){return o.kernelDepth--},function(){r=o.debugMode()?o.profiler.profileKernel(s,function(){return e(o.backend,u)}):e(o.backend,u);}),i){var p={id:this.nextTapeNodeId++,name:s,inputs:t,outputs:Array.isArray(r)?r:[r],saved:a};null!=n&amp;&amp;(p.gradient=function(e){return n(e,a)}),this.activeTape.push(p);}return this.profiling&amp;&amp;this.activeProfile.kernels.push({name:s,bytesAdded:this.numBytes-c,totalBytesSnapshot:this.numBytes,tensorsAdded:this.numTensors-l,totalTensorsSnapshot:this.numTensors,inputShapes:Object.keys(t).map(function(e){return t[e].shape}),outputShape:Array.isArray(r)?r.map(function(e){return e.shape}):r.shape}),r},e.prototype.registerTensor=function(e,t){var n=this.tensorInfo.has(e.dataId)?this.tensorInfo.get(e.dataId).refCount:0;if(this.numTensors++,&quot;string&quot;===e.dtype&amp;&amp;this.numStringTensors++,0===n){this.numDataBuffers++;var r=0;&quot;complex64&quot;!==e.dtype&amp;&amp;&quot;string&quot;!==e.dtype&amp;&amp;(r=e.size*bytesPerElement(e.dtype)),this.tensorInfo.set(e.dataId,{backend:null!=t?t:this.backend,dtype:e.dtype,shape:e.shape,bytes:r,refCount:0}),this.numBytes+=r,null!=t?t.register(e.dataId,e.shape,e.dtype):this.backend.register(e.dataId,e.shape,e.dtype);}this.tensorInfo.get(e.dataId).refCount++,e instanceof Variable||this.track(e);},e.prototype.registerVariable=function(e){if(null!=this.registeredVariables[e.name])throw new Error(&quot;Variable with name &quot;+e.name+&quot; was already registered&quot;);this.registeredVariables[e.name]=e;},e.prototype.disposeTensor=function(e){if(this.tensorInfo.has(e.dataId)){this.numTensors--,&quot;string&quot;===e.dtype&amp;&amp;this.numStringTensors--;var t=this.tensorInfo.get(e.dataId);t.refCount&lt;=1?(&quot;complex64&quot;!==e.dtype&amp;&amp;(this.numBytes-=t.bytes),this.numDataBuffers--,t.backend.disposeData(e.dataId),this.tensorInfo.delete(e.dataId)):this.tensorInfo.get(e.dataId).refCount--;}},e.prototype.disposeVariables=function(){for(var e in this.registeredVariables){var t=this.registeredVariables[e];this.disposeTensor(t),delete this.registeredVariables[e];}},e.prototype.memory=function(){var e=this.backend.memory();return e.numTensors=this.numTensors,e.numDataBuffers=this.numDataBuffers,e.numBytes=this.numBytes,this.numStringTensors&gt;0&amp;&amp;(e.unreliable=!0,null==e.reasons&amp;&amp;(e.reasons=[]),e.reasons.push(&quot;Memory usage by string tensors is approximate (2 bytes per character)&quot;)),e},e.prototype.profile=function(e){return __awaiter$1(this,void 0,void 0,function(){var t,n;return __generator$1(this,function(r){return this.profiling=!0,t=this.numBytes,n=this.numTensors,this.activeProfile.kernels=[],this.activeProfile.result=e(),this.profiling=!1,this.activeProfile.peakBytes=Math.max.apply(Math,this.activeProfile.kernels.map(function(e){return e.totalBytesSnapshot})),this.activeProfile.newBytes=this.numBytes-t,this.activeProfile.newTensors=this.numTensors-n,[2,this.activeProfile]})})},e.prototype.isTapeOn=function(){return this.gradientDepth&gt;0&amp;&amp;0===this.kernelDepth},e.prototype.addTapeNode=function(e,t,n){var r={};e.forEach(function(e,t){r[t]=e;});var o={id:this.nextTapeNodeId++,name:this.activeScope.name,inputs:r,outputs:[t],gradient:function(e){var t={};return n(e).forEach(function(e,n){t[n]=function(){return e};}),t}};this.activeTape.push(o);},e.prototype.keep=function(e){if(1===this.scopeStack.length&amp;&amp;this.safeMode)throw new Error(&quot;Safe mode is ON. Enclose all tensor operations inside tf.tidy(): tf.tidy(() =&gt; {...}) to avoid memory leaks.&quot;);return e.kept=!0,e},e.prototype.startTape=function(){0===this.gradientDepth&amp;&amp;(this.activeTape=[]),this.gradientDepth++;},e.prototype.endTape=function(){this.gradientDepth--;},e.prototype.startScope=function(e){var t={track:[],name:&quot;unnamed scope&quot;,id:this.nextScopeId++};e&amp;&amp;(t.name=e),this.scopeStack.push(t),this.activeScope=t;},e.prototype.endScope=function(e){for(var t=this,n=getTensorsInContainer(e),r=new Set(n.map(function(e){return e.id})),o=0;o&lt;this.activeScope.track.length;o++){var a=this.activeScope.track[o];a.kept||r.has(a.id)||a.dispose();}var i=this.scopeStack.pop();this.activeScope=0===this.scopeStack.length?null:this.scopeStack[this.scopeStack.length-1],n.forEach(function(e){e.kept||e.scopeId!==i.id||t.track(e);});},e.prototype.gradients=function(e,t,n,r){var o=this;if(void 0===r&amp;&amp;(r=!1),assert(t.length&gt;0,function(){return &quot;gradients() received an empty list of xs.&quot;}),null!=n&amp;&amp;&quot;float32&quot;!==n.dtype)throw new Error(&quot;dy must have &#39;float32&#39; dtype, but has &#39;&quot;+n.dtype+&quot;&#39;&quot;);var a=this.scopedRun(function(){return o.startTape()},function(){return o.endTape()},function(){return o.tidy(&quot;forward&quot;,e)});assert(a instanceof Tensor,function(){return &quot;The result y returned by f() must be a tensor.&quot;});var i=getFilteredNodesXToY(this.activeTape,t,a);if(!r&amp;&amp;0===i.length&amp;&amp;t.length&gt;0)throw new Error(&quot;Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.&quot;);return this.tidy(&quot;backward&quot;,function(){var e={};e[a.id]=null==n?ones(a.shape):n,backpropagateGradients(e,i,function(e){return o.tidy(e)});var r=t.map(function(t){return e[t.id]});return 0===o.gradientDepth&amp;&amp;(o.activeTape.forEach(function(e){for(var t in e.saved)e.saved[t].dispose();}),o.activeTape=null),{value:a,grads:r}})},e.prototype.customGrad=function(e){var t=this;return assert(isFunction(e),function(){return &quot;The f passed in customGrad(f) must be a function.&quot;}),function(){for(var n,r=[],o=0;o&lt;arguments.length;o++)r[o]=arguments[o];assert(r.every(function(e){return e instanceof Tensor}),function(){return &quot;The args passed in customGrad(f)(x1, x2,...) must all be tensors&quot;});var a={};return r.forEach(function(e,t){a[t]=e;}),t.runKernel(function(t,o){return assert((n=e.apply(void 0,r.concat([o]))).value instanceof Tensor,function(){return &quot;The function f passed in customGrad(f) must return an object where `obj.value` is a tensor&quot;}),assert(isFunction(n.gradFunc),function(){return &quot;The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.&quot;}),n.value},a,function(e,t){var o=n.gradFunc(e,t),a=Array.isArray(o)?o:[o];assert(a.length===r.length,function(){return &quot;The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).&quot;}),assert(a.every(function(e){return e instanceof Tensor}),function(){return &quot;The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.&quot;});var i={};return a.forEach(function(e,t){i[t]=function(){return e};}),i})}},e.prototype.write=function(e,t){var n=this.tensorInfo.get(e);if(&quot;string&quot;===n.dtype){var r=bytesFromStringArray(t);this.numBytes+=r-n.bytes,n.bytes=r;}this.backend!==n.backend&amp;&amp;(n.backend.disposeData(e),n.backend=this.backend,this.backend.register(e,n.shape,n.dtype)),this.backend.write(e,t);},e.prototype.readSync=function(e){return this.tensorInfo.get(e).backend.readSync(e)},e.prototype.read=function(e){return this.tensorInfo.get(e).backend.read(e)},e.prototype.fromPixels=function(e,t){return this.backend.fromPixels(e,t)},e.prototype.time=function(e){return __awaiter$1(this,void 0,void 0,function(){var t,n;return __generator$1(this,function(r){switch(r.label){case 0:return t=now(),[4,this.backend.time(e)];case 1:return (n=r.sent()).wallMs=now()-t,[2,n]}})})},e.prototype.track=function(e){if(1===this.scopeStack.length&amp;&amp;this.safeMode)throw new Error(&quot;Safe mode is ON. Enclose all tensor operations inside tf.tidy(): tf.tidy(() =&gt; {op();...}); to avoid memory leaks.&quot;);return null!=this.activeScope&amp;&amp;(e.scopeId=this.activeScope.id,this.activeScope.track.push(e)),e},e.nextTensorId=0,e.nextVariableId=0,e}();function ones(e){var t=makeOnesTypedArray(sizeFromShape(e),&quot;float32&quot;);return Tensor.make(e,{values:t})}!function(e){e[e.NUMBER=0]=&quot;NUMBER&quot;,e[e.BOOLEAN=1]=&quot;BOOLEAN&quot;,e[e.STRING=2]=&quot;STRING&quot;;}(Type||(Type={}));var MAX_TEXTURE_SIZE,MAX_TEXTURES_IN_SHADER,URL_PROPERTIES=[{name:&quot;DEBUG&quot;,type:Type.BOOLEAN},{name:&quot;IS_BROWSER&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_LAZILY_UNPACK&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_CPU_FORWARD&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_PACK&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_PACK_BATCHNORMALIZATION&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_PACK_CLIP&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_PACK_DEPTHWISECONV&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_PACK_ARRAY_OPERATIONS&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_PACK_IMAGE_OPERATIONS&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_PACK_REDUCE&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_CONV_IM2COL&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_MAX_TEXTURE_SIZE&quot;,type:Type.NUMBER},{name:&quot;WEBGL_NUM_MB_BEFORE_PAGING&quot;,type:Type.NUMBER},{name:&quot;WEBGL_MAX_TEXTURES_IN_SHADER&quot;,type:Type.NUMBER},{name:&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;,type:Type.NUMBER},{name:&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_VERSION&quot;,type:Type.NUMBER},{name:&quot;WEBGL_RENDER_FLOAT32_ENABLED&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_DOWNLOAD_FLOAT_ENABLED&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_FENCE_API_ENABLED&quot;,type:Type.BOOLEAN},{name:&quot;WEBGL_SIZE_UPLOAD_UNIFORM&quot;,type:Type.NUMBER},{name:&quot;BACKEND&quot;,type:Type.STRING},{name:&quot;EPSILON&quot;,type:Type.NUMBER},{name:&quot;PROD&quot;,type:Type.BOOLEAN},{name:&quot;TENSORLIKE_CHECK_SHAPE_CONSISTENCY&quot;,type:Type.BOOLEAN},{name:&quot;DEPRECATION_WARNINGS_ENABLED&quot;,type:Type.BOOLEAN}];function isWebGLVersionEnabled(e){try{if(null!=getWebGLContext(e))return !0}catch(e){return !1}return !1}function getWebGLMaxTextureSize(e){if(null==MAX_TEXTURE_SIZE){var t=getWebGLContext(e);MAX_TEXTURE_SIZE=t.getParameter(t.MAX_TEXTURE_SIZE);}return MAX_TEXTURE_SIZE}function getMaxTexturesInShader(e){if(null==MAX_TEXTURES_IN_SHADER){var t=getWebGLContext(e);MAX_TEXTURES_IN_SHADER=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS);}return Math.min(16,MAX_TEXTURES_IN_SHADER)}function getWebGLDisjointQueryTimerVersion(e){if(0===e)return 0;var t=getWebGLContext(e);return hasExtension(t,&quot;EXT_disjoint_timer_query_webgl2&quot;)&amp;&amp;2===e?2:hasExtension(t,&quot;EXT_disjoint_timer_query&quot;)?1:0}function isRenderToFloatTextureEnabled(e){if(0===e)return !1;var t=getWebGLContext(e);if(1===e){if(!hasExtension(t,&quot;OES_texture_float&quot;))return !1}else if(!hasExtension(t,&quot;EXT_color_buffer_float&quot;))return !1;return createFloatTextureAndBindToFramebuffer(t,e)}function isDownloadFloatTextureEnabled(e){if(0===e)return !1;var t=getWebGLContext(e);if(1===e){if(!hasExtension(t,&quot;OES_texture_float&quot;))return !1;if(!hasExtension(t,&quot;WEBGL_color_buffer_float&quot;))return !1}else if(!hasExtension(t,&quot;EXT_color_buffer_float&quot;))return !1;return createFloatTextureAndBindToFramebuffer(t,e)}function isWebGLFenceEnabled(e){return 2===e&amp;&amp;null!=getWebGLContext(e).fenceSync}function isChrome(){return &quot;undefined&quot;!=typeof navigator&amp;&amp;null!=navigator&amp;&amp;null!=navigator.userAgent&amp;&amp;/Chrome/.test(navigator.userAgent)&amp;&amp;/Google Inc/.test(navigator.vendor)}var TENSORFLOWJS_FLAGS_PREFIX=&quot;tfjsflags&quot;;function getFeaturesFromURL(){var e={};if(&quot;undefined&quot;==typeof window||void 0===window.location||void 0===window.location.search)return e;var t=getQueryParams(window.location.search);if(TENSORFLOWJS_FLAGS_PREFIX in t){var n={};t[TENSORFLOWJS_FLAGS_PREFIX].split(&quot;,&quot;).forEach(function(e){var t=e.split(&quot;:&quot;),r=t[0],o=t[1];n[r]=o;}),URL_PROPERTIES.forEach(function(t){t.name in n&amp;&amp;(console.log(&quot;Setting feature override from URL &quot;+t.name+&quot;: &quot;+n[t.name]),t.type===Type.NUMBER?e[t.name]=+n[t.name]:t.type===Type.BOOLEAN?e[t.name]=&quot;true&quot;===n[t.name]:t.type===Type.STRING?e[t.name]=n[t.name]:console.warn(&quot;Unknown URL param: &quot;+t.name+&quot;.&quot;));});}return e}function hasExtension(e,t){return null!=e.getExtension(t)}function createFloatTextureAndBindToFramebuffer(e,t){var n=e.createFramebuffer(),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);var o=2===t?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,o,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);var a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(n),a}function getQueryParams(e){var t={};return e.replace(/[?&amp;]([^=?&amp;]+)(?:=([^&amp;]*))?/g,function(e){for(var n=[],r=1;r&lt;arguments.length;r++)n[r-1]=arguments[r];return decodeParam(t,n[0],n[1]),n.join(&quot;=&quot;)}),t}function decodeParam(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||&quot;&quot;);}var BEFORE_PAGING_CONSTANT=600;function getNumMBBeforePaging(){return window.screen.height*window.screen.width*window.devicePixelRatio*BEFORE_PAGING_CONSTANT/1024}var _global,EPSILON_FLOAT16=1e-4,TEST_EPSILON_FLOAT16=.1,EPSILON_FLOAT32=1e-7,TEST_EPSILON_FLOAT32=.001,Environment=function(){function e(e){this.features={},this.registry={},this.registryFactory={},null!=e&amp;&amp;(this.features=e),this.get(&quot;DEBUG&quot;)&amp;&amp;console.warn(&quot;Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.&quot;);}return e.setBackend=function(e,t){if(void 0===t&amp;&amp;(t=!1),!(e in ENV.registry))throw new Error(&quot;Backend name &#39;&quot;+e+&quot;&#39; not found in registry&quot;);ENV.engine.backend=ENV.findBackend(e),ENV.backendName=e;},e.getBackend=function(){return ENV.initEngine(),ENV.backendName},e.disposeVariables=function(){ENV.engine.disposeVariables();},e.memory=function(){return ENV.engine.memory()},e.profile=function(e){return ENV.engine.profile(e)},e.tidy=function(e,t){return ENV.engine.tidy(e,t)},e.dispose=function(e){getTensorsInContainer(e).forEach(function(e){return e.dispose()});},e.keep=function(e){return ENV.engine.keep(e)},e.time=function(e){return ENV.engine.time(e)},e.prototype.get=function(e){return e in this.features?this.features[e]:(this.features[e]=this.evaluateFeature(e),this.features[e])},e.prototype.getFeatures=function(){return this.features},e.prototype.set=function(e,t){this.features[e]=t;},e.prototype.getBestBackendName=function(){var e=this;if(0===Object.keys(this.registry).length)throw new Error(&quot;No backend found in registry.&quot;);return Object.keys(this.registry).map(function(t){return {name:t,entry:e.registry[t]}}).sort(function(e,t){return t.entry.priority-e.entry.priority})[0].name},e.prototype.evaluateFeature=function(e){if(&quot;DEBUG&quot;===e)return !1;if(&quot;IS_BROWSER&quot;===e)return &quot;undefined&quot;!=typeof window;if(&quot;IS_NODE&quot;===e)return &quot;undefined&quot;!=typeof process&amp;&amp;void 0!==process.versions&amp;&amp;void 0!==process.versions.node;if(&quot;IS_CHROME&quot;===e)return isChrome();if(&quot;WEBGL_CPU_FORWARD&quot;===e)return !0;if(&quot;WEBGL_PACK&quot;===e)return 0!==this.get(&quot;WEBGL_VERSION&quot;);if(&quot;WEBGL_PACK_BATCHNORMALIZATION&quot;===e)return this.get(&quot;WEBGL_PACK&quot;);if(&quot;WEBGL_PACK_CLIP&quot;===e)return this.get(&quot;WEBGL_PACK&quot;);if(&quot;WEBGL_PACK_DEPTHWISECONV&quot;===e)return this.get(&quot;WEBGL_PACK&quot;);if(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;===e)return this.get(&quot;WEBGL_PACK&quot;);if(&quot;WEBGL_PACK_ARRAY_OPERATIONS&quot;===e)return this.get(&quot;WEBGL_PACK&quot;);if(&quot;WEBGL_PACK_IMAGE_OPERATIONS&quot;===e)return this.get(&quot;WEBGL_PACK&quot;);if(&quot;WEBGL_PACK_REDUCE&quot;===e)return this.get(&quot;WEBGL_PACK&quot;);if(&quot;WEBGL_LAZILY_UNPACK&quot;===e)return this.get(&quot;WEBGL_PACK&quot;);if(&quot;WEBGL_CONV_IM2COL&quot;===e)return this.get(&quot;WEBGL_PACK&quot;);if(&quot;WEBGL_NUM_MB_BEFORE_PAGING&quot;===e)return this.get(&quot;PROD&quot;)||!this.get(&quot;IS_BROWSER&quot;)?Number.POSITIVE_INFINITY:getNumMBBeforePaging();if(&quot;WEBGL_MAX_TEXTURE_SIZE&quot;===e)return getWebGLMaxTextureSize(this.get(&quot;WEBGL_VERSION&quot;));if(&quot;WEBGL_MAX_TEXTURES_IN_SHADER&quot;===e)return getMaxTexturesInShader(this.get(&quot;WEBGL_VERSION&quot;));if(&quot;IS_TEST&quot;===e)return !1;if(&quot;BACKEND&quot;===e)return this.getBestBackendName();if(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;===e){var t=this.get(&quot;WEBGL_VERSION&quot;);return 0===t?0:getWebGLDisjointQueryTimerVersion(t)}if(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE&quot;===e)return this.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;)&gt;0&amp;&amp;!isMobile();if(&quot;HAS_WEBGL&quot;===e)return this.get(&quot;WEBGL_VERSION&quot;)&gt;0;if(&quot;WEBGL_VERSION&quot;===e)return isWebGLVersionEnabled(2)?2:isWebGLVersionEnabled(1)?1:0;if(&quot;WEBGL_RENDER_FLOAT32_ENABLED&quot;===e)return isRenderToFloatTextureEnabled(this.get(&quot;WEBGL_VERSION&quot;));if(&quot;WEBGL_DOWNLOAD_FLOAT_ENABLED&quot;===e)return isDownloadFloatTextureEnabled(this.get(&quot;WEBGL_VERSION&quot;));if(&quot;WEBGL_FENCE_API_ENABLED&quot;===e)return isWebGLFenceEnabled(this.get(&quot;WEBGL_VERSION&quot;));if(&quot;WEBGL_SIZE_UPLOAD_UNIFORM&quot;===e)return this.get(&quot;WEBGL_RENDER_FLOAT32_ENABLED&quot;)?4:0;if(&quot;TEST_EPSILON&quot;===e)return 32===this.backend.floatPrecision()?TEST_EPSILON_FLOAT32:TEST_EPSILON_FLOAT16;if(&quot;EPSILON&quot;===e)return 32===this.backend.floatPrecision()?EPSILON_FLOAT32:EPSILON_FLOAT16;if(&quot;PROD&quot;===e)return !1;if(&quot;TENSORLIKE_CHECK_SHAPE_CONSISTENCY&quot;===e)return !this.get(&quot;PROD&quot;);if(&quot;DEPRECATION_WARNINGS_ENABLED&quot;===e)return !0;throw new Error(&quot;Unknown feature &quot;+e+&quot;.&quot;)},e.prototype.setFeatures=function(e){this.features=Object.assign({},e);},e.prototype.reset=function(){this.features=getFeaturesFromURL(),null!=this.globalEngine&amp;&amp;(this.globalEngine=null);},Object.defineProperty(e.prototype,&quot;backend&quot;,{get:function(){return this.engine.backend},enumerable:!0,configurable:!0}),e.prototype.findBackend=function(e){return e in this.registry?this.registry[e].backend:null},e.prototype.findBackendFactory=function(e){return e in this.registryFactory?this.registryFactory[e]:null},e.prototype.registerBackend=function(e,t,n){var r=this;if(void 0===n&amp;&amp;(n=1),e in this.registry)return console.warn(e+&quot; backend was already registered. Reusing existing backend&quot;),!1;try{var o=t();return o.setDataMover({moveData:function(e){return r.engine.moveData(e)}}),this.registry[e]={backend:o,priority:n},this.registryFactory[e]=t,!0}catch(t){return console.warn(&quot;Registration of backend &quot;+e+&quot; failed&quot;),console.warn(t.stack||t.message),!1}},e.prototype.removeBackend=function(e){if(!(e in this.registry))throw new Error(e+&quot; backend not found in registry&quot;);this.registry[e].backend.dispose(),delete this.registry[e];},Object.defineProperty(e.prototype,&quot;engine&quot;,{get:function(){return this.initEngine(),this.globalEngine},enumerable:!0,configurable:!0}),e.prototype.initEngine=function(){var e=this;if(null==this.globalEngine){this.backendName=this.get(&quot;BACKEND&quot;);var t=this.findBackend(this.backendName);this.globalEngine=new Engine(t,!1,function(){return e.get(&quot;DEBUG&quot;)});}},Object.defineProperty(e.prototype,&quot;global&quot;,{get:function(){return getGlobalNamespace()},enumerable:!0,configurable:!0}),e}();function getGlobalNamespace(){if(null==_global){var e=void 0;if(&quot;undefined&quot;!=typeof window)e=window;else if(&quot;undefined&quot;!=typeof global)e=global;else{if(&quot;undefined&quot;==typeof process)throw new Error(&quot;Could not find a global object&quot;);e=process;}_global=e;}return _global}function getOrMakeEnvironment(){var e=getGlobalNamespace();return null==e.ENV&amp;&amp;(e.ENV=new Environment(getFeaturesFromURL())),setTensorTracker(function(){return e.ENV.engine}),e.ENV}function enableProdMode(){ENV.set(&quot;PROD&quot;,!0);}function enableDebugMode(){ENV.set(&quot;DEBUG&quot;,!0);}function disableDeprecationWarnings(){ENV.set(&quot;DEPRECATION_WARNINGS_ENABLED&quot;,!1),console.warn(&quot;TensorFlow.js deprecation warnings have been disabled.&quot;);}function deprecationWarn(e){ENV.get(&quot;DEPRECATION_WARNINGS_ENABLED&quot;)&amp;&amp;console.warn(e+&quot; You can disable deprecation warnings with tf.disableDeprecationWarnings().&quot;);}setDeprecationWarningFn(deprecationWarn);var ENV=getOrMakeEnvironment(),environment=Object.freeze({EPSILON_FLOAT16:EPSILON_FLOAT16,EPSILON_FLOAT32:EPSILON_FLOAT32,Environment:Environment,enableProdMode:enableProdMode,enableDebugMode:enableDebugMode,disableDeprecationWarnings:disableDeprecationWarnings,deprecationWarn:deprecationWarn,ENV:ENV});function inferShape(e){var t=e;if(isTypedArray(e))return [e.length];if(!Array.isArray(e))return [];for(var n=[];Array.isArray(t)||isTypedArray(t);)n.push(t.length),t=t[0];return Array.isArray(e)&amp;&amp;ENV.get(&quot;TENSORLIKE_CHECK_SHAPE_CONSISTENCY&quot;)&amp;&amp;deepAssertShapeConsistency(e,n,[]),n}function deepAssertShapeConsistency(e,t,n){if(n=n||[],Array.isArray(e)||isTypedArray(e)){assert(t.length&gt;0,function(){return &quot;Element arr[&quot;+n.join(&quot;][&quot;)+&quot;] should be a primitive, but is an array of &quot;+e.length+&quot; elements&quot;}),assert(e.length===t[0],function(){return &quot;Element arr[&quot;+n.join(&quot;][&quot;)+&quot;] should have &quot;+t[0]+&quot; elements, but has &quot;+e.length+&quot; elements&quot;});for(var r=t.slice(1),o=0;o&lt;e.length;++o)deepAssertShapeConsistency(e[o],r,n.concat(o));}else assert(0===t.length,function(){return &quot;Element arr[&quot;+n.join(&quot;][&quot;)+&quot;] is a primitive, but should be an array/TypedArray of &quot;+t[0]+&quot; elements&quot;});}function assertDtype(e,t,n,r){if(null!=e&amp;&amp;(&quot;numeric&quot;!==e&amp;&amp;e!==t||&quot;numeric&quot;===e&amp;&amp;&quot;string&quot;===t))throw new Error(&quot;Argument &#39;&quot;+n+&quot;&#39; passed to &#39;&quot;+r+&quot;&#39; must be &quot;+e+&quot; tensor, but got &quot;+t+&quot; tensor&quot;)}function convertToTensor(e,t,n,r){if(void 0===r&amp;&amp;(r=&quot;numeric&quot;),e instanceof Tensor)return assertDtype(r,e.dtype,t,n),e;var o=inferDtype(e);if(&quot;string&quot;!==o&amp;&amp;[&quot;bool&quot;,&quot;int32&quot;,&quot;float32&quot;].indexOf(r)&gt;=0&amp;&amp;(o=r),assertDtype(r,o,t,n),null==e||!isTypedArray(e)&amp;&amp;!Array.isArray(e)&amp;&amp;&quot;number&quot;!=typeof e&amp;&amp;&quot;boolean&quot;!=typeof e&amp;&amp;&quot;string&quot;!=typeof e){var a=null==e?&quot;null&quot;:e.constructor.name;throw new Error(&quot;Argument &#39;&quot;+t+&quot;&#39; passed to &#39;&quot;+n+&quot;&#39; must be a Tensor or TensorLike, but got &#39;&quot;+a+&quot;&#39;&quot;)}var i=inferShape(e);isTypedArray(e)||Array.isArray(e)||(e=[e]);var s=&quot;string&quot;!==o?toTypedArray(e,o,ENV.get(&quot;DEBUG&quot;)):flatten(e);return Tensor.make(i,{values:s},o)}function convertToTensorArray(e,t,n,r){if(void 0===r&amp;&amp;(r=&quot;numeric&quot;),!Array.isArray(e))throw new Error(&quot;Argument &quot;+t+&quot; passed to &quot;+n+&quot; must be a `Tensor[]` or `TensorLike[]`&quot;);return e.map(function(e,r){return convertToTensor(e,t+&quot;[&quot;+r+&quot;]&quot;,n)},r)}function grad(e){return assert(isFunction(e),function(){return &quot;The f passed in grad(f) must be a function&quot;}),function(t,n){var r=convertToTensor(t,&quot;x&quot;,&quot;tf.grad&quot;,null),o=null!=n?convertToTensor(n,&quot;dy&quot;,&quot;tf.grad&quot;):null;return ENV.engine.tidy(function(){var t=ENV.engine.gradients(function(){return e(r)},[r],o),n=t.value,a=t.grads;return null!=o&amp;&amp;assertShapesMatch(n.shape,o.shape,&quot;The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)&quot;),checkGrads(a),a[0]})}}function grads(e){return assert(isFunction(e),function(){return &quot;The f passed in grads(f) must be a function&quot;}),function(t,n){assert(Array.isArray(t),function(){return &quot;The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s&quot;});var r=convertToTensorArray(t,&quot;args&quot;,&quot;tf.grads&quot;,null),o=null!=n?convertToTensor(n,&quot;dy&quot;,&quot;tf.grads&quot;):null;return ENV.engine.tidy(function(){var t=ENV.engine.gradients(function(){return e.apply(void 0,r)},r,o),n=t.value,a=t.grads;return null!=o&amp;&amp;assertShapesMatch(n.shape,o.shape,&quot;The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])&quot;),checkGrads(a),a})}}function valueAndGrad(e){return assert(isFunction(e),function(){return &quot;The f passed in valueAndGrad(f) must be a function&quot;}),function(t,n){assert(t instanceof Tensor,function(){return &quot;The x passed in valueAndGrad(f)(x) must be a tensor&quot;}),assert(null==n||n instanceof Tensor,function(){return &quot;The dy passed in valueAndGrad(f)(x, dy) must be a tensor&quot;});var r=ENV.engine.gradients(function(){return e(t)},[t],n),o=r.grads,a=r.value;return checkGrads(o),{grad:o[0],value:a}}}function valueAndGrads(e){return assert(isFunction(e),function(){return &quot;The f passed in valueAndGrads(f) must be a function&quot;}),function(t,n){assert(Array.isArray(t)&amp;&amp;t.every(function(e){return e instanceof Tensor}),function(){return &quot;The args passed in valueAndGrads(f)(args) must be array of tensors&quot;}),assert(null==n||n instanceof Tensor,function(){return &quot;The dy passed in valueAndGrads(f)(args, dy) must be a tensor&quot;});var r=ENV.engine.gradients(function(){return e.apply(void 0,t)},t,n);return null!=n&amp;&amp;assertShapesMatch(r.value.shape,n.shape,&quot;The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])&quot;),checkGrads(r.grads),r}}function variableGrads(e,t){if(assert(isFunction(e),function(){return &quot;The f passed in variableGrads(f) must be a function&quot;}),assert(null==t||Array.isArray(t)&amp;&amp;t.every(function(e){return e instanceof Variable}),function(){return &quot;The varList passed in variableGrads(f, varList) must be an array of variables&quot;}),null==t)for(var n in t=[],ENV.engine.registeredVariables)t.push(ENV.engine.registeredVariables[n]);var r=t.length;assert((t=t.filter(function(e){return e.trainable})).length&gt;0,function(){return &quot;variableGrads() expects at least one of the input variables to be trainable, but none of the &quot;+r+&quot; variables is trainable.&quot;});var o=ENV.engine.gradients(e,t,null,!0),a=o.value,i=o.grads;assert(i.some(function(e){return null!=e}),function(){return &quot;Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().&quot;}),assert(0===a.rank,function(){return &quot;The f passed in variableGrads(f) must return a scalar, but it returned a rank-&quot;+a.rank+&quot; tensor&quot;});var s={};return t.forEach(function(e,t){null!=i[t]&amp;&amp;(s[e.name]=i[t]);}),{value:a,grads:s}}function customGrad(e){return ENV.engine.customGrad(e)}function checkGrads(e){if(e.filter(function(e){return null==e}).length&gt;0)throw new Error(&quot;Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.&quot;)}var tidy=Environment.tidy,keep=Environment.keep,dispose=Environment.dispose,time=Environment.time,profile=Environment.profile;function warn(){for(var e=[],t=0;t&lt;arguments.length;t++)e[t]=arguments[t];ENV.get(&quot;IS_TEST&quot;)||console.warn.apply(console,e);}function getReshaped(e,t,n,r){void 0===r&amp;&amp;(r=!0);var o=[];if(r)(o=o.concat(t.slice(0))).push(e[0]/n),o=o.concat(e.slice(1));else{o=o.concat(e[0]);for(var a=t.length,i=0;i&lt;a;++i)o=o.concat([e[i+1]/t[i],t[i]]);o=o.concat(e.slice(a+1));}return o}function getPermuted(e,t,n){void 0===n&amp;&amp;(n=!0);var r=[];if(n){r.push(t);for(var o=t+1;o&lt;e;++o)o&lt;=2*t?(r.push(o),r.push(o-(t+1))):r.push(o);}else{var a=[],i=[];for(o=1;o&lt;e;++o)o&gt;=2*t+1||o%2==1?i.push(o):a.push(o);r.push.apply(r,a),r.push(0),r.push.apply(r,i);}return r}function getReshapedPermuted(e,t,n,r){void 0===r&amp;&amp;(r=!0);var o=[];r?o.push(e[0]/n):o.push(e[0]*n);for(var a=1;a&lt;e.length;++a)a&lt;=t.length?r?o.push(t[a-1]*e[a]):o.push(e[a]/t[a-1]):o.push(e[a]);return o}function getSliceBeginCoords(e,t){for(var n=[0],r=0;r&lt;t;++r)n.push(e[r][0]);return n}function getSliceSize(e,t,n){for(var r=e.slice(0,1),o=0;o&lt;n;++o)r.push(e[o+1]-t[o][0]-t[o][1]);return r}function axesAreInnerMostDims(e,t){for(var n=0;n&lt;e.length;++n)if(e[e.length-n-1]!==t-1-n)return !1;return !0}function combineLocations(e,t,n){for(var r=e.length+t.length,o=[],a=0,i=0,s=0;s&lt;r;s++)-1===n.indexOf(s)?o.push(e[a++]):o.push(t[i++]);return o}function computeOutAndReduceShapes(e,t){for(var n=[],r=e.length,o=0;o&lt;r;o++)-1===t.indexOf(o)&amp;&amp;n.push(e[o]);return [n,t.map(function(t){return e[t]})]}function expandShapeToKeepDim(e,t){return combineLocations(e,t.map(function(e){return 1}),t)}function assertAxesAreInnerMostDims(e,t,n){assert(axesAreInnerMostDims(t,n),function(){return e+&quot; supports only inner-most axes for now. Got axes &quot;+t+&quot; and rank-&quot;+n+&quot; input.&quot;});}function getAxesPermutation(e,t){if(axesAreInnerMostDims(e,t))return null;for(var n=[],r=0;r&lt;t;++r)-1===e.indexOf(r)&amp;&amp;n.push(r);return e.forEach(function(e){return n.push(e)}),n}function getUndoAxesPermutation(e){return e.map(function(e,t){return [t,e]}).sort(function(e,t){return e[1]-t[1]}).map(function(e){return e[0]})}function getInnerMostAxes(e,t){for(var n=[],r=t-e;r&lt;t;++r)n.push(r);return n}function assertParamsConsistent(e,t){var n=e[0].length;e.forEach(function(e,t){assert(e.length===n,function(){return &quot;Error in concat&quot;+n+&quot;D: rank of tensors[&quot;+t+&quot;] must be the same as the rank of the rest (&quot;+n+&quot;)&quot;});}),assert(t&gt;=0&amp;&amp;t&lt;n,function(){return &quot;Error in concat&quot;+n+&quot;D: axis must be between 0 and &quot;+(n-1)+&quot;.&quot;});var r=e[0];e.forEach(function(e,o){for(var a=0;a&lt;n;a++)assert(a===t||e[a]===r[a],function(){return &quot;Error in concat&quot;+n+&quot;D: Shape of tensors[&quot;+o+&quot;] (&quot;+e+&quot;) does not match the shape of the rest (&quot;+r+&quot;) along the non-concatenated axis &quot;+o+&quot;.&quot;});});}function computeOutShape(e,t){for(var n=e[0].slice(),r=1;r&lt;e.length;r++)n[t]+=e[r][t];return n}function prepareAndValidate(e,t){if(e.rank&lt;1)throw new Error(&quot;tf.gatherND() expects the input to be rank 1 or higher, but the rank was &quot;+e.rank+&quot;.&quot;);if(t.rank&lt;1)throw new Error(&quot;tf.gatherND() expects the indices to be rank 1 or higher, but the rank was &quot;+t.rank+&quot;.&quot;);if(&quot;int32&quot;!==t.dtype)throw new Error(&quot;tf.gatherND() expects the indices to be int32 type, but the dtype was &quot;+t.dtype+&quot;.&quot;);if(t.shape[t.rank-1]&gt;e.rank)throw new Error(&quot;index innermost dimension length must be &lt;= tensor rank; saw: &quot;+t.shape[t.rank-1]+&quot; vs. &quot;+e.rank);if(0===e.size)throw new Error(&quot;Requested more than 0 entries, but input is empty. Input shape: &quot;+e.shape+&quot;.&quot;);for(var n=t.shape,r=n[n.length-1],o=1,a=0;a&lt;n.length-1;++a)o*=n[a];var i=e.shape,s=n.slice();s.pop();var u=1;for(a=r;a&lt;e.rank;++a)u*=i[a],s.push(i[a]);var c=computeStrides(e.shape).map(function(e){return e/u}).concat([1]).slice(0,r);return [s,o,u,c]}var PARALLELIZE_THRESHOLD=30;function computeOptimalWindowSize(e){return e&lt;=PARALLELIZE_THRESHOLD?e:nearestDivisor(e,Math.floor(Math.sqrt(e)))}function validateUpdateShape(e,t,n){var r=t.rank&gt;1?t.shape[t.rank-1]:1,o=t.rank&gt;1?t.rank-1:1,a=&quot;Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: &quot;+n.shape+&quot;, indices.shape: &quot;+t.shape+&quot;, shape: &quot;+e+&quot;, sliceDim: &quot;+r+&quot;, and batchDim: &quot;+o+&quot;.&quot;;if(n.rank&lt;o)throw new Error(a+&quot; update.rank &lt; &quot;+o+&quot;. &quot;);if(e.length&lt;r+(n.rank-o))throw new Error(a+&quot; Output shape length &lt; &quot;+(r+(n.rank-o)));if(n.rank!==o+e.length-r)throw new Error(a+&quot; update.rank != &quot;+(o+e.length-r));for(var i=0;i&lt;o;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+&quot; updates.shape[&quot;+i+&quot;] (&quot;+n.shape[i]+&quot;) != indices.shape[&quot;+i+&quot;] (&quot;+t.shape[i]+&quot;).&quot;);for(i=0;i&lt;n.rank-o;++i)if(n.shape[i+o]!==e[i+r])throw new Error(a+&quot; updates.shape[&quot;+(i+o)+&quot;] (&quot;+n.shape[i+o]+&quot;) != shape[&quot;+(i+o)+&quot;] (&quot;+e[i+o]+&quot;)&quot;)}function validateInput(e,t,n){if(t.rank&lt;1)throw new Error(&quot;tf.scatterND() expects the indices to be rank 1 or higher, but the rank was &quot;+t.rank+&quot;.&quot;);if(e.rank&lt;1)throw new Error(&quot;tf.scatterND() expects the updates to be rank 1 or higher, but the rank was &quot;+e.rank+&quot;.&quot;);if(&quot;int32&quot;!==t.dtype)throw new Error(&quot;The dtype of &#39;indices&#39; should be int32, but got dtype: &quot;+t.dtype);if(n.length&lt;1)throw new Error(&quot;Output rank must be greater or equal to 1, but got shape: &quot;+n);if(0===n.length){if(0===t.size)throw new Error(&quot;Indices specified for empty output. indices shape: &quot;+t.shape);if(0===e.size)throw new Error(&quot;Updates specified for empty output. updates shape: &quot;+e.shape)}validateUpdateShape(n,t,e);}function calculateShapes(e,t,n){for(var r=t.rank&gt;1?t.shape[t.rank-1]:1,o=n.length,a=1,i=r;i&lt;o;++i)a*=n[i];var s=r&lt;1?1:r;return {sliceRank:r,numUpdates:t.size/s,sliceSize:a,strides:computeStrides(n.slice(0,r)).concat([1]),outputSize:sizeFromShape(n)}}function segOpComputeOptimalWindowSize(e,t){var n,r=!1;for(e&lt;=PARALLELIZE_THRESHOLD?(n=e,r=!0):n=nearestDivisor(e,Math.floor(Math.sqrt(e)));!r;)n&gt;t||n===e?r=!0:n=nearestDivisor(e,n+1);return n}function computeOutShape$1(e,t,n){for(var r=[],o=e.length,a=0;a&lt;o;a++)a!==t?r.push(e[a]):r.push(n);return r}function collectGatherOpShapeInfo(e,t,n){for(var r=e.shape[n],o=[],a=1,i=1,s=0;s&lt;n;s++)o.push(e.shape[s]),a*=e.shape[s];for(s=0;s&lt;t.rank;s++)o.push(t.shape[s]);for(s=n+1;s&lt;e.rank;s++)o.push(e.shape[s]),i*=e.shape[s];return {batchSize:a,sliceSize:i,dimSize:r,outputShape:o}}function assertParamsValid(e,t,n){assert(e.rank===t.length,function(){return &quot;Error in slice&quot;+e.rank+&quot;D: Length of begin &quot;+t+&quot; must match the rank of the array (&quot;+e.rank+&quot;).&quot;}),assert(e.rank===n.length,function(){return &quot;Error in slice&quot;+e.rank+&quot;D: Length of size &quot;+n+&quot; must match the rank of the array (&quot;+e.rank+&quot;).&quot;});for(var r=function(r){assert(t[r]+n[r]&lt;=e.shape[r],function(){return &quot;Error in slice&quot;+e.rank+&quot;D: begin[&quot;+r+&quot;] + size[&quot;+r+&quot;] (&quot;+(t[r]+n[r])+&quot;) would overflow input.shape[&quot;+r+&quot;] (&quot;+e.shape[r]+&quot;)&quot;});},o=0;o&lt;e.rank;++o)r(o);}function getStridedSlicedInfo(e,t,n,r,o,a,i,s,u){if(void 0===o&amp;&amp;(o=0),void 0===a&amp;&amp;(a=0),void 0===i&amp;&amp;(i=0),void 0===s&amp;&amp;(s=0),void 0===u&amp;&amp;(u=0),0!==i)throw new Error(&quot;ellipsis mask is not yet supported&quot;);if(0!==s)throw new Error(&quot;new axis mask is not yet supported&quot;);for(var c=[],l=[],p=[],d=0;d&lt;e.length;d++)c[d]=startForAxis(o,t,r,e,d),l[d]=stopForAxis(a,n,r,e,d),u&amp;1&lt;&lt;d&amp;&amp;(l[d]=c[d]+1,p.push(d));var h=new Array(e.length).fill(0);return h=h.map(function(e,t){for(var n=0,o=r[t]||1,a=c[t];!(o&gt;0?a&gt;=l[t]:a&lt;=l[t]);a+=o)n+=1;return n}),[c,h,p]}function startForAxis(e,t,n,r,o){var a=t[o],i=n[o]||1;(e&amp;1&lt;&lt;o||null==a)&amp;&amp;(a=i&gt;0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var s=r[o];return a&lt;0&amp;&amp;(a+=s),a=clamp(0,a,s-1)}function stopForAxis(e,t,n,r,o){var a=t[o],i=n[o]||1;(e&amp;1&lt;&lt;o||null==a)&amp;&amp;(a=i&gt;0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var s=r[o];return a&lt;0&amp;&amp;(a+=s),a=i&gt;0?clamp(0,a,s):clamp(-1,a,s-1)}function isSliceContinous(e,t,n){for(var r=n.length,o=0;o&lt;n.length;o++)if(n[o]&gt;1){r=o;break}for(o=r+1;o&lt;n.length;o++)if(t[o]&gt;0||n[o]!==e[o])return !1;return !0}function computeFlatOffset(e,t){for(var n=e.length&gt;0?e[e.length-1]:1,r=0;r&lt;e.length-1;r++)n+=e[r]*t[r];return n}function op(e){var t=Object.keys(e);if(1!==t.length)throw new Error(&quot;Please provide an object with a single key (operation name) mapping to a function. Got an object with &quot;+t.length+&quot; keys.&quot;);var n=t[0],r=e[n];n.endsWith(&quot;_&quot;)&amp;&amp;(n=n.substring(0,n.length-1));var o=function(){for(var e=[],t=0;t&lt;arguments.length;t++)e[t]=arguments[t];ENV.engine.startScope(n);try{var o=r.apply(void 0,e);return o instanceof Promise&amp;&amp;console.error(&quot;Cannot return a Promise inside of tidy.&quot;),ENV.engine.endScope(o),o}catch(e){throw ENV.engine.endScope(null),e}};return Object.defineProperty(o,&quot;name&quot;,{value:n,configurable:!0}),o}function softmax_(e,t){void 0===t&amp;&amp;(t=-1);var n=convertToTensor(e,&quot;logits&quot;,&quot;softmax&quot;);if(-1===t&amp;&amp;(t=n.rank-1),t!==n.rank-1)throw Error(&quot;Softmax along a non-last dimension is not yet supported. Logits was rank &quot;+n.rank+&quot; and dim was &quot;+t);return customGrad(function(e,n){var r=e.logSumExp([t],!0),o=e.toFloat().sub(r).exp();n([o]);return {value:o,gradFunc:function(e,n){var r=n[0],o=e.mul(r);return o.sub(o.sum([t],!0).mul(r))}}})(n)}function logSoftmax_(e,t){void 0===t&amp;&amp;(t=-1);var n=convertToTensor(e,&quot;logits&quot;,&quot;logSoftmax&quot;);if(-1===t&amp;&amp;(t=n.rank-1),t!==n.rank-1)throw Error(&quot;Log Softmax along a non-last dimension is not yet supported. Logits was rank &quot;+n.rank+&quot; and axis was &quot;+t);return customGrad(function(e,n){var r=e.max(t,!0),o=e.sub(r),a=o.toFloat().sub(o.exp().sum(t,!0).log());n([a]);return {value:a,gradFunc:function(e,n){var r=n[0].exp();return e.sub(e.sum(t,!0).mul(r))}}})(n)}var softmax=op({softmax_:softmax_}),logSoftmax=op({logSoftmax_:logSoftmax_});function complex_(e,t){var n=convertToTensor(e,&quot;real&quot;,&quot;complex&quot;),r=convertToTensor(t,&quot;imag&quot;,&quot;complex&quot;);return assertShapesMatch(n.shape,r.shape,&quot;real and imag shapes, &quot;+n.shape+&quot; and &quot;+r.shape+&quot;, must match in call to tf.complex().&quot;),ENV.engine.runKernel(function(e){return e.complex(n,r)},{$real:n,$imag:r})}function real_(e){var t=convertToTensor(e,&quot;input&quot;,&quot;real&quot;);return ENV.engine.runKernel(function(e){return e.real(t)},{$input:t})}function imag_(e){var t=convertToTensor(e,&quot;input&quot;,&quot;imag&quot;);return ENV.engine.runKernel(function(e){return e.imag(t)},{$input:t})}var complex=op({complex_:complex_}),real=op({real_:real_}),imag=op({imag_:imag_});function tensor(e,t,n){if(null==n&amp;&amp;(n=inferDtype(e)),&quot;complex64&quot;===n)throw new Error(&quot;Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).&quot;);if(!isTypedArray(e)&amp;&amp;!Array.isArray(e)&amp;&amp;&quot;number&quot;!=typeof e&amp;&amp;&quot;boolean&quot;!=typeof e&amp;&amp;&quot;string&quot;!=typeof e)throw new Error(&quot;values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray&quot;);var r=inferShape(e);if(null!=t){assertNonNegativeIntegerDimensions(t);var o=sizeFromShape(t),a=sizeFromShape(r);assert(o===a,function(){return &quot;Based on the provided shape, [&quot;+t+&quot;], the tensor should have &quot;+o+&quot; values but has &quot;+a});for(var i=0;i&lt;r.length;++i){var s=r[i],u=i!==r.length-1||s!==sizeFromShape(t.slice(i));assert(r[i]===t[i]||!u,function(){return &quot;Error creating a new Tensor. Inferred shape (&quot;+r+&quot;) does not match the provided shape (&quot;+t+&quot;). &quot;});}}return isTypedArray(e)||Array.isArray(e)||(e=[e]),t=t||r,e=&quot;string&quot;!==n?toTypedArray(e,n,ENV.get(&quot;DEBUG&quot;)):flatten(e),Tensor.make(t,{values:e},n)}function scalar(e,t){if((isTypedArray(e)||Array.isArray(e))&amp;&amp;&quot;complex64&quot;!==t)throw new Error(&quot;Error creating a new Scalar: value must be a primitive (number|boolean|string)&quot;);return tensor(e,[],t)}function tensor1d(e,t){assertNonNull(e);var n=inferShape(e);if(1!==n.length)throw new Error(&quot;tensor1d() requires values to be a flat/TypedArray&quot;);return tensor(e,n,t)}function tensor2d(e,t,n){if(assertNonNull(e),null!=t&amp;&amp;2!==t.length)throw new Error(&quot;tensor2d() requires shape to have two numbers&quot;);var r=inferShape(e);if(2!==r.length&amp;&amp;1!==r.length)throw new Error(&quot;tensor2d() requires values to be number[][] or flat/TypedArray&quot;);if(1===r.length&amp;&amp;null==t)throw new Error(&quot;tensor2d() requires shape to be provided when `values` are a flat/TypedArray&quot;);return tensor(e,t=t||r,n)}function tensor3d(e,t,n){if(assertNonNull(e),null!=t&amp;&amp;3!==t.length)throw new Error(&quot;tensor3d() requires shape to have three numbers&quot;);var r=inferShape(e);if(3!==r.length&amp;&amp;1!==r.length)throw new Error(&quot;tensor3d() requires values to be number[][][] or flat/TypedArray&quot;);if(1===r.length&amp;&amp;null==t)throw new Error(&quot;tensor3d() requires shape to be provided when `values` are a flat array&quot;);return tensor(e,t=t||r,n)}function tensor4d(e,t,n){if(assertNonNull(e),null!=t&amp;&amp;4!==t.length)throw new Error(&quot;tensor4d() requires shape to have four numbers&quot;);var r=inferShape(e);if(4!==r.length&amp;&amp;1!==r.length)throw new Error(&quot;tensor4d() requires values to be number[][][][] or flat/TypedArray&quot;);if(1===r.length&amp;&amp;null==t)throw new Error(&quot;tensor4d() requires shape to be provided when `values` are a flat array&quot;);return tensor(e,t=t||r,n)}function tensor5d(e,t,n){if(assertNonNull(e),null!=t&amp;&amp;5!==t.length)throw new Error(&quot;tensor5d() requires shape to have five numbers&quot;);var r=inferShape(e);if(5!==r.length&amp;&amp;1!==r.length)throw new Error(&quot;tensor5d() requires values to be number[][][][][] or flat/TypedArray&quot;);if(1===r.length&amp;&amp;null==t)throw new Error(&quot;tensor5d() requires shape to be provided when `values` are a flat array&quot;);return tensor(e,t=t||r,n)}function tensor6d(e,t,n){if(assertNonNull(e),null!=t&amp;&amp;6!==t.length)throw new Error(&quot;tensor6d() requires shape to have six numbers&quot;);var r=inferShape(e);if(6!==r.length&amp;&amp;1!==r.length)throw new Error(&quot;tensor6d() requires values to be number[][][][][][] or flat/TypedArray&quot;);if(1===r.length&amp;&amp;null==t)throw new Error(&quot;tensor6d() requires shape to be provided when `values` are a flat array&quot;);return tensor(e,t=t||r,n)}function ones$1(e,t){if(void 0===t&amp;&amp;(t=&quot;float32&quot;),&quot;complex64&quot;===t){var n=ones$1(e,&quot;float32&quot;),r=ones$1(e,&quot;float32&quot;);return complex(n,r)}var o=makeOnesTypedArray(sizeFromShape(e),t);return Tensor.make(e,{values:o},t)}function zeros(e,t){if(void 0===t&amp;&amp;(t=&quot;float32&quot;),&quot;complex64&quot;===t){var n=zeros(e,&quot;float32&quot;),r=zeros(e,&quot;float32&quot;);return complex(n,r)}var o=makeZerosTypedArray(sizeFromShape(e),t);return Tensor.make(e,{values:o},t)}function fill(e,t,n){return ENV.engine.runKernel(function(r){return r.fill(e,t,n)},{})}function onesLike_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;onesLike&quot;);if(&quot;complex64&quot;===t.dtype){var n=onesLike(real(t)),r=zerosLike(imag(t));return complex(n,r)}return ENV.engine.runKernel(function(e){return e.onesLike(t)},{$x:t},null)}function zerosLike_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;zerosLike&quot;);return ENV.engine.runKernel(function(e){return e.zerosLike(t)},{$x:t},null)}function linspace(e,t,n){if(0===n)throw new Error(&quot;Cannot request zero samples&quot;);var r=(t-e)/(n-1),o=makeZerosTypedArray(n,&quot;float32&quot;);o[0]=e;for(var a=1;a&lt;o.length;a++)o[a]=o[a-1]+r;return tensor1d(o,&quot;float32&quot;)}function range(e,t,n,r){if(void 0===n&amp;&amp;(n=1),void 0===r&amp;&amp;(r=&quot;float32&quot;),0===n)throw new Error(&quot;Cannot have a step of zero&quot;);if(e===t||e&lt;t&amp;&amp;n&lt;0||t&lt;e&amp;&amp;n&gt;1)return zeros([0],r);var o=makeZerosTypedArray(Math.abs(Math.ceil((t-e)/n)),r);t&lt;e&amp;&amp;1===n&amp;&amp;(n=-1),o[0]=e;for(var a=1;a&lt;o.length;a++)o[a]=o[a-1]+n;return tensor1d(o,r)}var onesLike=op({onesLike_:onesLike_}),zerosLike=op({zerosLike_:zerosLike_}),DataStorage=function(){function e(e){this.dataMover=e,this.data=new WeakMap;}return e.prototype.get=function(e){return this.data.has(e)||this.dataMover.moveData(e),this.data.get(e)},e.prototype.set=function(e,t){this.data.set(e,t);},e.prototype.has=function(e){return this.data.has(e)},e.prototype.delete=function(e){return this.data.delete(e)},e}(),KernelBackend=function(){function e(){}return e.prototype.time=function(e){throw new Error(&quot;Not yet implemented.&quot;)},e.prototype.read=function(e){throw new Error(&quot;Not yet implemented.&quot;)},e.prototype.readSync=function(e){throw new Error(&quot;Not yet implemented.&quot;)},e.prototype.disposeData=function(e){throw new Error(&quot;Not yet implemented.&quot;)},e.prototype.write=function(e,t){throw new Error(&quot;Not yet implemented.&quot;)},e.prototype.fromPixels=function(e,t){throw new Error(&quot;Not yet implemented.&quot;)},e.prototype.register=function(e,t,n){throw new Error(&quot;Not yet implemented.&quot;)},e.prototype.memory=function(){throw new Error(&quot;Not yet implemented.&quot;)},e.prototype.floatPrecision=function(){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.batchMatMul=function(e,t,n,r){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.fusedBatchMatMul=function(e,t,n,r,o,a){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.slice=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.stridedSlice=function(e,t,n,r,o,a,i,s,u){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.unstack=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.reverse=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.concat=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.neg=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.add=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.addN=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.subtract=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.multiply=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.realDivide=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.floorDiv=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.sum=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.prod=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.unsortedSegmentSum=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.argMin=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.argMax=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.equal=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.notEqual=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.less=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.lessEqual=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.greater=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.greaterEqual=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.logicalNot=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.logicalAnd=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.logicalOr=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.where=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.select=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.topk=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.min=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.minimum=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.mod=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.max=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.maximum=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.all=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.any=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.squaredDifference=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.ceil=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.floor=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.round=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.sign=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.isNaN=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.isInf=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.isFinite=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.pow=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.exp=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.expm1=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.log=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.log1p=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.sqrt=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.rsqrt=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.square=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.reciprocal=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.relu=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.prelu=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.elu=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.eluDer=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.selu=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.int=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.clip=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.abs=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.complexAbs=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.sigmoid=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.softplus=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.sin=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.cos=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.tan=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.asin=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.acos=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.atan=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.atan2=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.sinh=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.cosh=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.tanh=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.asinh=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.acosh=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.atanh=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.erf=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.step=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.conv2d=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.conv2dDerInput=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.conv2dDerFilter=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.depthwiseConv2D=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.depthwiseConv2DDerInput=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.depthwiseConv2DDerFilter=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.conv3d=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.conv3dDerInput=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.conv3dDerFilter=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.maxPool=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.maxPoolBackprop=function(e,t,n,r){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.avgPool=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.avgPoolBackprop=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.reshape=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.cast=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.tile=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.pad=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.transpose=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.gather=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.gatherND=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.scatterND=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.batchToSpaceND=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.spaceToBatchND=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.resizeBilinear=function(e,t,n,r){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.resizeBilinearBackprop=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.resizeNearestNeighbor=function(e,t,n,r){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.resizeNearestNeighborBackprop=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.batchNormalization=function(e,t,n,r,o,a){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.localResponseNormalization4D=function(e,t,n,r,o){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.LRNGrad=function(e,t,n,r,o,a,i){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.multinomial=function(e,t,n,r){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.oneHot=function(e,t,n,r){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.cumsum=function(e,t,n,r){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.nonMaxSuppression=function(e,t,n,r,o){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.fft=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.ifft=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.complex=function(e,t){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.real=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.imag=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.cropAndResize=function(e,t,n,r,o,a){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.depthToSpace=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.split=function(e,t,n){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.sparseToDense=function(e,t,n,r){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.fill=function(e,t,n){throw new Error(&quot;Not yet implemented.&quot;)},e.prototype.onesLike=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.zerosLike=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.setDataMover=function(e){throw new Error(&quot;Not yet implemented&quot;)},e.prototype.dispose=function(){throw new Error(&quot;Not yet implemented&quot;)},e}();function castTensor(e,t,n){if(&quot;complex64&quot;===t){if(&quot;complex64&quot;===e.dtype)return e.clone();var r=zeros(e.shape),o=e.toFloat(),a=n.complex(o,r);return r.dispose(),o.dispose(),a}if(!hasEncodingLoss(e.dtype,t))return Tensor.make(e.shape,{dataId:e.dataId},t);if(&quot;complex64&quot;===e.dtype){var i=n.real(e);a=i.cast(t);return i.dispose(),a}if(&quot;int32&quot;===t)return n.int(e);if(&quot;bool&quot;===t){var s=scalar(0,e.dtype);a=n.notEqual(e,s);return s.dispose(),a}throw new Error(&quot;Error in Cast: unknown dtype argument (&quot;+t+&quot;)&quot;)}function reshapeTensor(e,t){return Tensor.make(t,{dataId:e.dataId},e.dtype)}function mergeRealAndImagArrays(e,t){if(e.length!==t.length)throw new Error(&quot;Cannot merge real and imag arrays of different lengths. real:&quot;+e.length+&quot;, imag: &quot;+t.length+&quot;.&quot;);for(var n=new Float32Array(2*e.length),r=0;r&lt;n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function splitRealAndImagArrays(e){for(var t=new Float32Array(e.length/2),n=new Float32Array(e.length/2),r=0;r&lt;e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return {real:t,imag:n}}function complexWithEvenIndex(e){for(var t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t),o=0;o&lt;e.length;o+=4)n[Math.floor(o/4)]=e[o],r[Math.floor(o/4)]=e[o+1];return {real:n,imag:r}}function complexWithOddIndex(e){for(var t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t),o=2;o&lt;e.length;o+=4)n[Math.floor(o/4)]=e[o],r[Math.floor(o/4)]=e[o+1];return {real:n,imag:r}}function getComplexWithIndex(e,t){return {real:e[2*t],imag:e[2*t+1]}}function assignToTypedArray(e,t,n,r){e[2*r]=t,e[2*r+1]=n;}function exponents(e,t){for(var n=new Float32Array(e/2),r=new Float32Array(e/2),o=0;o&lt;Math.ceil(e/2);o++){var a=(t?2:-2)*Math.PI*(o/e);n[o]=Math.cos(a),r[o]=Math.sin(a);}return {real:n,imag:r}}function exponent(e,t,n){var r=(n?2:-2)*Math.PI*(e/t);return {real:Math.cos(r),imag:Math.sin(r)}}function nonMaxSuppressionImpl(e,t,n,r,o){for(var a=Array.from(t).map(function(e,t){return {score:e,boxIndex:t}}).filter(function(e){return e.score&gt;o}).sort(function(e,t){return t.score-e.score}),i=[],s=0;s&lt;a.length;s++){var u=a[s],c=u.score,l=u.boxIndex;if(c&lt;o)break;for(var p=!1,d=i.length-1;d&gt;=0;--d){if(intersectionOverUnion(e,l,i[d])&gt;=r){p=!0;break}}if(!p&amp;&amp;(i.push(l),i.length&gt;=n))break}return tensor1d(i,&quot;int32&quot;)}function intersectionOverUnion(e,t,n){var r=e.subarray(4*t,4*t+4),o=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),s=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),p=Math.max(o[0],o[2]),d=Math.max(o[1],o[3]),h=(s-a)*(u-i),f=(p-c)*(d-l);if(h&lt;=0||f&lt;=0)return 0;var m=Math.max(a,c),g=Math.max(i,l),v=Math.min(s,p),y=Math.min(u,d),x=Math.max(v-m,0)*Math.max(y-g,0);return x/(h+f-x)}function split(e,t,n){var r=new Array(e.rank).fill(0),o=e.shape.slice();return t.map(function(t){o[n]=t;var a=e.slice(r,o);return r[n]+=t,a})}function topkImpl(e,t,n,r,o){for(var a=t[t.length-1],i=[e.length/a,a],s=i[0],u=i[1],c=getTypedArrayFromDType(n,s*r),l=getTypedArrayFromDType(&quot;int32&quot;,s*r),p=0;p&lt;s;p++){for(var d=p*u,h=e.subarray(d,d+u),f=[],m=0;m&lt;h.length;m++)f.push({value:h[m],index:m});f.sort(function(e,t){return t.value-e.value});var g=p*r,v=c.subarray(g,g+r),y=l.subarray(g,g+r);for(m=0;m&lt;r;m++)v[m]=f[m].value,y[m]=f[m].index;}var x=t.slice();return x[x.length-1]=r,[tensor(c,x,n),tensor(l,x,&quot;int32&quot;)]}var ArgMinMaxProgram=function(){return function(e,t,n){this.variableNames=[&quot;A&quot;];var r=e.windowSize,o=e.batchSize,a=e.inSize,i=Math.ceil(a/r);n||this.variableNames.push(&quot;bestIndicesA&quot;),this.outputShape=[o,i];var s=&quot;max&quot;===t?&quot;&gt;&quot;:&quot;&lt;&quot;,u=n?&quot;inOffset + i;&quot;:&quot;round(getBestIndicesA(batch, inOffset + i));&quot;;this.userCode=&quot;\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * &quot;+r+&quot;;\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i &lt; &quot;+r+&quot;; i++) {\n          int inIdx = &quot;+u+&quot;;\n          float candidate = getA(batch, inIdx);\n          if (candidate &quot;+s+&quot; bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    &quot;;}}();function getVecChannels(e,t){return [&quot;x&quot;,&quot;y&quot;,&quot;z&quot;,&quot;w&quot;,&quot;u&quot;,&quot;v&quot;].slice(0,t).map(function(t){return e+&quot;.&quot;+t})}function getChannels(e,t){return 1===t?[e]:getVecChannels(e,t)}function getSourceCoords(e,t){if(1===e)return &quot;rc&quot;;for(var n=&quot;&quot;,r=0;r&lt;e;r++)n+=t[r],r&lt;e-1&amp;&amp;(n+=&quot;,&quot;);return n}function getBroadcastDims(e,t){for(var n=e.length,r=[],o=0;o&lt;n;o++){var a=n-1-o,i=e[a]||1;(t[t.length-1-o]||1)&gt;1&amp;&amp;1===i&amp;&amp;r.unshift(a);}return r}function getReductionAxes(e,t){for(var n=[],r=0;r&lt;t.length;r++){var o=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==o||1===o&amp;&amp;i&gt;1)&amp;&amp;n.unshift(a);}return n}function assertAndGetBroadcastShape(e,t){for(var n=[],r=Math.max(e.length,t.length),o=0;o&lt;r;o++){var a=e[e.length-o-1];null==a&amp;&amp;(a=1);var i=t[t.length-o-1];if(null==i&amp;&amp;(i=1),1===a)n.unshift(i);else if(1===i)n.unshift(a);else{if(a!==i)throw Error(&quot;Operands could not be broadcast together with shapes &quot;+e+&quot; and &quot;+t+&quot;.&quot;);n.unshift(a);}}return n}function getGlslDifferences(){var e,t,n,r,o,a,i,s,u,c;return 2===ENV.get(&quot;WEBGL_VERSION&quot;)?(e=&quot;#version 300 es&quot;,t=&quot;in&quot;,n=&quot;out&quot;,r=&quot;in&quot;,o=&quot;texture&quot;,a=&quot;outputColor&quot;,i=&quot;out vec4 outputColor;&quot;,s=&quot;\n      const float NAN = uintBitsToFloat(uint(0x7fc00000));\n    &quot;,u=&quot;\n      const float INFINITY = uintBitsToFloat(uint(0x7f800000));\n    &quot;,c=&quot;\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    &quot;):(e=&quot;&quot;,t=&quot;attribute&quot;,n=&quot;varying&quot;,r=&quot;varying&quot;,o=&quot;texture2D&quot;,a=&quot;gl_FragColor&quot;,i=&quot;&quot;,s=&quot;\n      uniform float NAN;\n\n      bool isnan(float val) {\n        return (val &lt; 1.0 || 0.0 &lt; val || val == 0.0) ? false : true;\n      }\n      bvec4 isnan(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    &quot;,u=&quot;\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    &quot;,c=&quot;\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    &quot;),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:o,output:a,defineOutput:i,defineSpecialNaN:s,defineSpecialInf:u,defineRound:c}}function getLogicalCoordinatesFromFlatIndex(e,t,n){void 0===n&amp;&amp;(n=&quot;index&quot;);var r=computeStrides(t);return r.map(function(t,o){return &quot;int &quot;+e[o]+&quot; = &quot;+n+&quot; / &quot;+t+&quot;; &quot;+(o===r.length-1?&quot;int &quot;+e[o+1]+&quot; = &quot;+n+&quot; - &quot;+e[o]+&quot; * &quot;+t:&quot;index -= &quot;+e[o]+&quot; * &quot;+t)+&quot;;&quot;}).join(&quot;&quot;)}function buildVec(e){return 1===e.length?&quot;&quot;+e[0]:&quot;vec&quot;+e.length+&quot;(&quot;+e.join(&quot;,&quot;)+&quot;)&quot;}function dotify(e,t){if(e.length!==t.length)throw new Error(&quot;Vectors to be dotted must be of the same length -got &quot;+e.length+&quot; and &quot;+t.length);for(var n=[],r=Math.floor(e.length/4),o=e.length%4,a=0;a&lt;r;a++){var i=e.slice(4*a,4*a+4),s=t.slice(4*a,4*a+4);n.push(buildVec(i)+&quot;, &quot;+buildVec(s));}if(0!==o){i=e.slice(4*r),s=t.slice(4*r);1===i.length&amp;&amp;(i=i.map(function(e){return &quot;float(&quot;+e+&quot;)&quot;}),s=s.map(function(e){return &quot;float(&quot;+e+&quot;)&quot;})),n.push(buildVec(i)+&quot;, &quot;+buildVec(s));}return n.map(function(e,t){return &quot;dot(&quot;+e+&quot;)&quot;}).join(&quot;+&quot;)}function makeShader(e,t,n,r){var o=[];e.forEach(function(e){var t=sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?o.push(&quot;uniform float &quot;+e.name+(t&gt;1?&quot;[&quot;+t+&quot;]&quot;:&quot;&quot;)+&quot;;&quot;):(o.push(&quot;uniform sampler2D &quot;+e.name+&quot;;&quot;),o.push(&quot;uniform int offset&quot;+e.name+&quot;;&quot;));});var a,i,s=o.join(&quot;\n&quot;),u=e.map(function(e){return getInputSamplingSnippet(e,t,r)}).join(&quot;\n&quot;),c=t.texShape,l=getGlslDifferences(),p=getFloatTextureSampleSnippet(l),d=getShaderPrefix(l);return t.isPacked?(a=getPackedOutputSamplingSnippet(t.logicalShape,c),i=getFloatTextureSetRGBASnippet(l)):(a=getOutputSamplingSnippet(t.logicalShape,c),i=getFloatTextureSetRSnippet(l)),r&amp;&amp;(d+=SHADER_PACKED_PREFIX),[d,p,i,s,a,u,n].join(&quot;\n&quot;)}function getSamplerFromInInfo(e){var t=e.shapeInfo.logicalShape;switch(t.length){case 0:return getSamplerScalar(e);case 1:return getSampler1D(e);case 2:return getSampler2D(e);case 3:return getSampler3D(e);case 4:return getSampler4D(e);case 5:return getSampler5D(e);case 6:return getSampler6D(e);default:throw new Error(t.length+&quot;-D input sampling is not yet supported&quot;)}}function getPackedSamplerFromInInfo(e){switch(e.shapeInfo.logicalShape.length){case 0:return getPackedSamplerScalar(e);case 1:return getPackedSampler1D(e);case 2:return getPackedSampler2D(e);case 3:return getPackedSampler3D(e);default:return getPackedSamplerND(e)}}function getInputSamplingSnippet(e,t,n){void 0===n&amp;&amp;(n=!1);var r=&quot;&quot;;r+=n?getPackedSamplerFromInInfo(e):getSamplerFromInInfo(e);var o=e.shapeInfo.logicalShape,a=t.logicalShape;return o.length&lt;=a.length&amp;&amp;(r+=n?getPackedSamplerAtOutputCoords(e,t):getSamplerAtOutputCoords(e,t)),r}function getPackedOutputSamplingSnippet(e,t){switch(e.length){case 0:return getOutputScalarCoords();case 1:return getOutputPacked1DCoords(e,t);case 2:return getOutputPacked2DCoords(e,t);case 3:return getOutputPacked3DCoords(e,t);default:return getOutputPackedNDCoords(e,t)}}function getOutputSamplingSnippet(e,t){switch(e.length){case 0:return getOutputScalarCoords();case 1:return getOutput1DCoords(e,t);case 2:return getOutput2DCoords(e,t);case 3:return getOutput3DCoords(e,t);case 4:return getOutput4DCoords(e,t);case 5:return getOutput5DCoords(e,t);case 6:return getOutput6DCoords(e,t);default:throw new Error(e.length+&quot;-D output sampling is not yet supported&quot;)}}function getFloatTextureSampleSnippet(e){return &quot;\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return &quot;+e.texture2D+&quot;(textureSampler, uv).r;\n    }\n  &quot;}function getFloatTextureSetRSnippet(e){return &quot;\n    void setOutput(float val) {\n      &quot;+e.output+&quot; = vec4(val, 0, 0, 0);\n    }\n  &quot;}function getFloatTextureSetRGBASnippet(e){return &quot;\n    void setOutput(vec4 val) {\n      &quot;+e.output+&quot; = val;\n    }\n  &quot;}function getShaderPrefix(e){return e.version+&quot;\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    &quot;+e.varyingFs+&quot; vec2 resultUV;\n    &quot;+e.defineOutput+&quot;\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    &quot;+e.defineSpecialNaN+&quot;\n    &quot;+e.defineSpecialInf+&quot;\n    &quot;+e.defineRound+&quot;\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    &quot;+SAMPLE_1D_SNIPPET+&quot;\n    &quot;+SAMPLE_2D_SNIPPET+&quot;\n    &quot;+SAMPLE_3D_SNIPPET+&quot;\n  &quot;}var SAMPLE_1D_SNIPPET=&quot;\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n&quot;,SAMPLE_2D_SNIPPET=&quot;\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n&quot;,SAMPLE_3D_SNIPPET=&quot;\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n&quot;,SHADER_PACKED_PREFIX=&quot;\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n&quot;;function getOutputScalarCoords(){return &quot;\n    int getOutputCoords() {\n      return 0;\n    }\n  &quot;}function getOutputPacked1DCoords(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?&quot;\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * &quot;+n[1]+&quot;.0);\n      }\n    &quot;:1===n[1]?&quot;\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * &quot;+n[0]+&quot;.0);\n      }\n    &quot;:&quot;\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(&quot;+n[0]+&quot;, &quot;+n[1]+&quot;));\n      return resTexRC.x * &quot;+n[1]+&quot; + resTexRC.y;\n    }\n  &quot;}function getOutput1DCoords(e,t){return 1===t[0]?&quot;\n      int getOutputCoords() {\n        return int(resultUV.x * &quot;+t[1]+&quot;.0);\n      }\n    &quot;:1===t[1]?&quot;\n      int getOutputCoords() {\n        return int(resultUV.y * &quot;+t[0]+&quot;.0);\n      }\n    &quot;:&quot;\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(&quot;+t[0]+&quot;, &quot;+t[1]+&quot;));\n      return resTexRC.x * &quot;+t[1]+&quot; + resTexRC.y;\n    }\n  &quot;}function getOutputPacked3DCoords(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),o=r*Math.ceil(e[1]/2);return &quot;\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(&quot;+n[0]+&quot;, &quot;+n[1]+&quot;));\n      int index = resTexRC.x * &quot;+n[1]+&quot; + resTexRC.y;\n\n      int b = index / &quot;+o+&quot;;\n      index -= b * &quot;+o+&quot;;\n\n      int r = 2 * (index / &quot;+r+&quot;);\n      int c = imod(index, &quot;+r+&quot;) * 2;\n\n      return ivec3(b, r, c);\n    }\n  &quot;}function getOutput3DCoords(e,t){var n=getLogicalCoordinatesFromFlatIndex([&quot;r&quot;,&quot;c&quot;,&quot;d&quot;],e);return &quot;\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(&quot;+t[0]+&quot;, &quot;+t[1]+&quot;));\n      int index = resTexRC.x * &quot;+t[1]+&quot; + resTexRC.y;\n      &quot;+n+&quot;\n      return ivec3(r, c, d);\n    }\n  &quot;}function getOutputPackedNDCoords(e,t){for(var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),o=r*Math.ceil(e[e.length-2]/2),a=o,i=&quot;&quot;,s=&quot;b, r, c&quot;,u=2;u&lt;e.length-1;u++)i=&quot;\n      int b&quot;+u+&quot; = index / &quot;+(a*=e[e.length-u-1])+&quot;;\n      index -= b&quot;+u+&quot; * &quot;+a+&quot;;\n    &quot;+i,s=&quot;b&quot;+u+&quot;, &quot;+s;return &quot;\n    ivec&quot;+e.length+&quot; getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(&quot;+n[0]+&quot;, &quot;+n[1]+&quot;));\n      int index = resTexRC.x * &quot;+n[1]+&quot; + resTexRC.y;\n\n      &quot;+i+&quot;\n\n      int b = index / &quot;+o+&quot;;\n      index -= b * &quot;+o+&quot;;\n\n      int r = 2 * (index / &quot;+r+&quot;);\n      int c = imod(index, &quot;+r+&quot;) * 2;\n\n      return ivec&quot;+e.length+&quot;(&quot;+s+&quot;);\n    }\n  &quot;}function getOutput4DCoords(e,t){var n=getLogicalCoordinatesFromFlatIndex([&quot;r&quot;,&quot;c&quot;,&quot;d&quot;,&quot;d2&quot;],e);return &quot;\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(&quot;+t[0]+&quot;, &quot;+t[1]+&quot;));\n      int index = resTexRC.x * &quot;+t[1]+&quot; + resTexRC.y;\n      &quot;+n+&quot;\n      return ivec4(r, c, d, d2);\n    }\n  &quot;}function getOutput5DCoords(e,t){var n=getLogicalCoordinatesFromFlatIndex([&quot;r&quot;,&quot;c&quot;,&quot;d&quot;,&quot;d2&quot;,&quot;d3&quot;],e);return &quot;\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(&quot;+t[0]+&quot;,\n                             &quot;+t[1]+&quot;));\n\n      int index = resTexRC.x * &quot;+t[1]+&quot; + resTexRC.y;\n\n      &quot;+n+&quot;\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  &quot;}function getOutput6DCoords(e,t){var n=getLogicalCoordinatesFromFlatIndex([&quot;r&quot;,&quot;c&quot;,&quot;d&quot;,&quot;d2&quot;,&quot;d3&quot;,&quot;d4&quot;],e);return &quot;\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(&quot;+t[0]+&quot;, &quot;+t[1]+&quot;));\n      int index = resTexRC.x * &quot;+t[1]+&quot; + resTexRC.y;\n\n      &quot;+n+&quot;\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  &quot;}function getOutputPacked2DCoords(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(arraysEqual(e,t))return &quot;\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(&quot;+n[0]+&quot;, &quot;+n[1]+&quot;));\n      }\n    &quot;;var r=Math.ceil(e[1]/2);return &quot;\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(&quot;+n[0]+&quot;, &quot;+n[1]+&quot;));\n\n      int index = resTexRC.x * &quot;+n[1]+&quot; + resTexRC.y;\n      int r = 2 * (index / &quot;+r+&quot;);\n      int c = imod(index, &quot;+r+&quot;) * 2;\n\n      return ivec2(r, c);\n    }\n  &quot;}function getOutput2DCoords(e,t){return arraysEqual(e,t)?&quot;\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(&quot;+t[0]+&quot;, &quot;+t[1]+&quot;));\n      }\n    &quot;:1===e[1]?&quot;\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(&quot;+t[0]+&quot;, &quot;+t[1]+&quot;));\n        int index = resTexRC.x * &quot;+t[1]+&quot; + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    &quot;:1===e[0]?&quot;\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(&quot;+t[0]+&quot;, &quot;+t[1]+&quot;));\n        int index = resTexRC.x * &quot;+t[1]+&quot; + resTexRC.y;\n        return ivec2(0, index);\n      }\n    &quot;:&quot;\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(&quot;+t[0]+&quot;, &quot;+t[1]+&quot;));\n      int index = resTexRC.x * &quot;+t[1]+&quot; + resTexRC.y;\n      int r = index / &quot;+e[1]+&quot;;\n      int c = index - r * &quot;+e[1]+&quot;;\n      return ivec2(r, c);\n    }\n  &quot;}function getFlatOffsetUniformName(e){return &quot;offset&quot;+e}function getPackedSamplerScalar(e){var t=e.name;return &quot;\n    vec4 &quot;+(&quot;get&quot;+t.charAt(0).toUpperCase()+t.slice(1))+&quot;() {\n      return &quot;+getGlslDifferences().texture2D+&quot;(&quot;+t+&quot;, halfCR);\n    }\n  &quot;}function getSamplerScalar(e){var t=e.name,n=&quot;get&quot;+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return &quot;float &quot;+n+&quot;() {return &quot;+t+&quot;;}&quot;;var r=e.shapeInfo.texShape,o=r[0],a=r[1];if(1===o&amp;&amp;1===a)return &quot;\n      float &quot;+n+&quot;() {\n        return sampleTexture(&quot;+t+&quot;, halfCR);\n      }\n    &quot;;var i=e.shapeInfo.texShape;return &quot;\n    float &quot;+n+&quot;() {\n      vec2 uv = uvFromFlat(&quot;+i[0]+&quot;, &quot;+i[1]+&quot;, &quot;+getFlatOffsetUniformName(t)+&quot;);\n      return sampleTexture(&quot;+t+&quot;, uv);\n    }\n  &quot;}function getPackedSampler1D(e){var t=e.name,n=&quot;get&quot;+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=getGlslDifferences();return &quot;\n    vec4 &quot;+n+&quot;(int index) {\n      vec2 uv = packedUVfrom1D(\n        &quot;+o[0]+&quot;, &quot;+o[1]+&quot;, index);\n      return &quot;+a.texture2D+&quot;(&quot;+t+&quot;, uv);\n    }\n  &quot;}function getSampler1D(e){var t=e.name,n=&quot;get&quot;+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return &quot;\n      float &quot;+n+&quot;(int index) {\n        &quot;+getUniformSampler(e)+&quot;\n      }\n    &quot;;var r=e.shapeInfo.texShape,o=r[0],a=r[1];if(1===a&amp;&amp;1===o)return &quot;\n      float &quot;+n+&quot;(int index) {\n        return sampleTexture(&quot;+t+&quot;, halfCR);\n      }\n    &quot;;var i=getFlatOffsetUniformName(t);return 1===a?&quot;\n      float &quot;+n+&quot;(int index) {\n        vec2 uv = vec2(0.5, (float(index + &quot;+i+&quot;) + 0.5) / &quot;+o+&quot;.0);\n        return sampleTexture(&quot;+t+&quot;, uv);\n      }\n    &quot;:1===o?&quot;\n      float &quot;+n+&quot;(int index) {\n        vec2 uv = vec2((float(index + &quot;+i+&quot;) + 0.5) / &quot;+a+&quot;.0, 0.5);\n        return sampleTexture(&quot;+t+&quot;, uv);\n      }\n    &quot;:&quot;\n    float &quot;+n+&quot;(int index) {\n      vec2 uv = uvFromFlat(&quot;+o+&quot;, &quot;+a+&quot;, index + &quot;+i+&quot;);\n      return sampleTexture(&quot;+t+&quot;, uv);\n    }\n  &quot;}function getPackedSampler2D(e){var t=e.shapeInfo.logicalShape,n=e.name,r=&quot;get&quot;+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape,a=o[0],i=o[1],s=getGlslDifferences();if(null!=o&amp;&amp;arraysEqual(t,o))return &quot;\n      vec4 &quot;+r+&quot;(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(&quot;+i+&quot;.0, &quot;+a+&quot;.0);\n\n        return &quot;+s.texture2D+&quot;(&quot;+n+&quot;, uv);\n      }\n    &quot;;var u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return &quot;\n    vec4 &quot;+r+&quot;(int row, int col) {\n      vec2 uv = packedUVfrom2D(&quot;+Math.ceil(t[1]/2)+&quot;, &quot;+u[0]+&quot;, &quot;+u[1]+&quot;, row, col);\n      return &quot;+s.texture2D+&quot;(&quot;+n+&quot;, uv);\n    }\n  &quot;}function getSampler2D(e){var t=e.shapeInfo.logicalShape,n=e.name,r=&quot;get&quot;+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape;if(null!=o&amp;&amp;arraysEqual(t,o)){var a=o[0];return &quot;\n    float &quot;+r+&quot;(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(&quot;+o[1]+&quot;.0, &quot;+a+&quot;.0);\n      return sampleTexture(&quot;+n+&quot;, uv);\n    }\n  &quot;}var i=squeezeShape(t),s=i.newShape,u=i.keptDims,c=s;if(c.length&lt;t.length){return &quot;\n      &quot;+getSamplerFromInInfo(squeezeInputInfo(e,c))+&quot;\n      float &quot;+r+&quot;(int row, int col) {\n        return &quot;+r+&quot;(&quot;+getSqueezedParams([&quot;row&quot;,&quot;col&quot;],u)+&quot;);\n      }\n    &quot;}if(e.shapeInfo.isUniform)return &quot;\n      float &quot;+r+&quot;(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(&quot;+t[1]+&quot;, 1)));\n        &quot;+getUniformSampler(e)+&quot;\n      }\n    &quot;;var l=o[0],p=o[1],d=getFlatOffsetUniformName(n);return 1===p?&quot;\n    float &quot;+r+&quot;(int row, int col) {\n      float index = dot(vec3(row, col, &quot;+d+&quot;), vec3(&quot;+t[1]+&quot;, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / &quot;+l+&quot;.0);\n      return sampleTexture(&quot;+n+&quot;, uv);\n    }\n  &quot;:1===l?&quot;\n    float &quot;+r+&quot;(int row, int col) {\n      float index = dot(vec3(row, col, &quot;+d+&quot;), vec3(&quot;+t[1]+&quot;, 1, 1));\n      vec2 uv = vec2((index + 0.5) / &quot;+p+&quot;.0, 0.5);\n      return sampleTexture(&quot;+n+&quot;, uv);\n    }\n  &quot;:&quot;\n  float &quot;+r+&quot;(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * &quot;+t[1]+&quot; + col + &quot;+d+&quot;;\n    vec2 uv = uvFromFlat(&quot;+l+&quot;, &quot;+p+&quot;, index);\n    return sampleTexture(&quot;+n+&quot;, uv);\n  }\n&quot;}function getPackedSampler3D(e){var t=e.shapeInfo.logicalShape,n=e.name,r=&quot;get&quot;+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===t[0]){return &quot;\n        &quot;+getPackedSamplerFromInInfo(squeezeInputInfo(e,t.slice(1)))+&quot;\n        vec4 &quot;+r+&quot;(int b, int row, int col) {\n          return &quot;+r+&quot;(&quot;+getSqueezedParams([&quot;b&quot;,&quot;row&quot;,&quot;col&quot;],[1,2])+&quot;);\n        }\n      &quot;}var i=a[0],s=a[1],u=Math.ceil(t[2]/2);return &quot;\n    vec4 &quot;+r+&quot;(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        &quot;+i+&quot;, &quot;+s+&quot;, &quot;+u*Math.ceil(t[1]/2)+&quot;, &quot;+u+&quot;, b, row, col);\n      return &quot;+getGlslDifferences().texture2D+&quot;(&quot;+n+&quot;, uv);\n    }\n  &quot;}function getSampler3D(e){var t=e.shapeInfo.logicalShape,n=e.name,r=&quot;get&quot;+n.charAt(0).toUpperCase()+n.slice(1),o=t[1]*t[2],a=t[2],i=squeezeShape(t),s=i.newShape,u=i.keptDims,c=s;if(c.length&lt;t.length){return &quot;\n        &quot;+getSamplerFromInInfo(squeezeInputInfo(e,c))+&quot;\n        float &quot;+r+&quot;(int row, int col, int depth) {\n          return &quot;+r+&quot;(&quot;+getSqueezedParams([&quot;row&quot;,&quot;col&quot;,&quot;depth&quot;],u)+&quot;);\n        }\n      &quot;}if(e.shapeInfo.isUniform)return &quot;\n      float &quot;+r+&quot;(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(&quot;+o+&quot;, &quot;+a+&quot;, 1)));\n        &quot;+getUniformSampler(e)+&quot;\n      }\n    &quot;;var l=e.shapeInfo.texShape,p=l[0],d=l[1],h=e.shapeInfo.flatOffset;return d===o&amp;&amp;null==h?&quot;\n        float &quot;+r+&quot;(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(&quot;+a+&quot;, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(&quot;+d+&quot;.0, &quot;+p+&quot;.0);\n          return sampleTexture(&quot;+n+&quot;, uv);\n        }\n      &quot;:d===a&amp;&amp;null==h?&quot;\n    float &quot;+r+&quot;(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(&quot;+t[1]+&quot;, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(&quot;+d+&quot;.0, &quot;+p+&quot;.0);\n      return sampleTexture(&quot;+n+&quot;, uv);\n    }\n  &quot;:&quot;\n      float &quot;+r+&quot;(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * &quot;+o+&quot; + col * &quot;+a+&quot; + depth + &quot;+getFlatOffsetUniformName(n)+&quot;;\n        vec2 uv = uvFromFlat(&quot;+p+&quot;, &quot;+d+&quot;, index);\n        return sampleTexture(&quot;+n+&quot;, uv);\n      }\n  &quot;}function getPackedSamplerND(e){for(var t=e.shapeInfo.logicalShape,n=t.length,r=e.name,o=&quot;get&quot;+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],s=i[0],u=i[1],c=Math.ceil(t[n-1]/2),l=c*Math.ceil(t[n-2]/2),p=&quot;int b, int row, int col&quot;,d=&quot;b * &quot;+l+&quot; + (row / 2) * &quot;+c+&quot; + (col / 2)&quot;,h=2;h&lt;n-1;h++)p=&quot;int b&quot;+h+&quot;, &quot;+p,d=&quot;b&quot;+h+&quot; * &quot;+(l*=t[n-h-1])+&quot; + &quot;+d;return &quot;\n    vec4 &quot;+o+&quot;(&quot;+p+&quot;) {\n      int index = &quot;+d+&quot;;\n      int texR = index / &quot;+u+&quot;;\n      int texC = index - texR * &quot;+u+&quot;;\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(&quot;+u+&quot;, &quot;+s+&quot;);\n      return &quot;+getGlslDifferences().texture2D+&quot;(&quot;+r+&quot;, uv);\n    }\n  &quot;}function getSampler4D(e){var t=e.shapeInfo.logicalShape,n=e.name,r=&quot;get&quot;+n.charAt(0).toUpperCase()+n.slice(1),o=t[3],a=t[2]*o,i=t[1]*a,s=squeezeShape(t),u=s.newShape,c=s.keptDims;if(u.length&lt;t.length){return &quot;\n      &quot;+getSamplerFromInInfo(squeezeInputInfo(e,u))+&quot;\n      float &quot;+r+&quot;(int row, int col, int depth, int depth2) {\n        return &quot;+r+&quot;(&quot;+getSqueezedParams([&quot;row&quot;,&quot;col&quot;,&quot;depth&quot;,&quot;depth2&quot;],c)+&quot;);\n      }\n    &quot;}if(e.shapeInfo.isUniform)return &quot;\n      float &quot;+r+&quot;(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(&quot;+i+&quot;, &quot;+a+&quot;, &quot;+o+&quot;, 1)));\n        &quot;+getUniformSampler(e)+&quot;\n      }\n    &quot;;var l=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];return h===i&amp;&amp;null==l?&quot;\n      float &quot;+r+&quot;(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(&quot;+a+&quot;, &quot;+o+&quot;, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(&quot;+h+&quot;.0, &quot;+d+&quot;.0);\n        return sampleTexture(&quot;+n+&quot;, uv);\n      }\n    &quot;:h===o&amp;&amp;null==l?&quot;\n      float &quot;+r+&quot;(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(&quot;+t[1]*t[2]+&quot;, &quot;+t[2]+&quot;, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(&quot;+h+&quot;.0, &quot;+d+&quot;.0);\n        return sampleTexture(&quot;+n+&quot;, uv);\n      }\n    &quot;:&quot;\n    float &quot;+r+&quot;(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * &quot;+i+&quot; + col * &quot;+a+&quot; +\n          depth * &quot;+o+&quot; + depth2;\n      vec2 uv = uvFromFlat(&quot;+d+&quot;, &quot;+h+&quot;, index + &quot;+getFlatOffsetUniformName(n)+&quot;);\n      return sampleTexture(&quot;+n+&quot;, uv);\n    }\n  &quot;}function getSampler5D(e){var t=e.shapeInfo.logicalShape,n=e.name,r=&quot;get&quot;+n.charAt(0).toUpperCase()+n.slice(1),o=t[4],a=t[3]*o,i=t[2]*a,s=t[1]*i,u=squeezeShape(t),c=u.newShape,l=u.keptDims;if(c.length&lt;t.length){return &quot;\n      &quot;+getSamplerFromInInfo(squeezeInputInfo(e,c))+&quot;\n      float &quot;+r+&quot;(int row, int col, int depth, int depth2, int depth3) {\n        return &quot;+r+&quot;(&quot;+getSqueezedParams([&quot;row&quot;,&quot;col&quot;,&quot;depth&quot;,&quot;depth2&quot;,&quot;depth3&quot;],l)+&quot;);\n      }\n    &quot;}if(e.shapeInfo.isUniform)return &quot;\n      float &quot;+r+&quot;(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(&quot;+s+&quot;, &quot;+i+&quot;, &quot;+a+&quot;, &quot;+o+&quot;)) +\n          depth3;\n        &quot;+getUniformSampler(e)+&quot;\n      }\n    &quot;;var p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];return f===s&amp;&amp;null==p?&quot;\n      float &quot;+r+&quot;(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(&quot;+i+&quot;, &quot;+a+&quot;, &quot;+o+&quot;, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(&quot;+f+&quot;.0, &quot;+h+&quot;.0);\n        return sampleTexture(&quot;+n+&quot;, uv);\n      }\n    &quot;:f===o&amp;&amp;null==p?&quot;\n      float &quot;+r+&quot;(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(&quot;+t[1]*t[2]*t[3]+&quot;,\n               &quot;+t[2]*t[3]+&quot;, &quot;+t[3]+&quot;, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(&quot;+f+&quot;.0, &quot;+h+&quot;.0);\n        return sampleTexture(&quot;+n+&quot;, uv);\n      }\n    &quot;:&quot;\n    float &quot;+r+&quot;(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * &quot;+s+&quot; + col * &quot;+i+&quot; + depth * &quot;+a+&quot; +\n          depth2 * &quot;+o+&quot; + depth3 + &quot;+getFlatOffsetUniformName(n)+&quot;;\n      vec2 uv = uvFromFlat(&quot;+h+&quot;, &quot;+f+&quot;, index);\n      return sampleTexture(&quot;+n+&quot;, uv);\n    }\n  &quot;}function getSampler6D(e){var t=e.shapeInfo.logicalShape,n=e.name,r=&quot;get&quot;+n.charAt(0).toUpperCase()+n.slice(1),o=squeezeShape(t),a=o.newShape,i=o.keptDims;if(a.length&lt;t.length){return &quot;\n      &quot;+getSamplerFromInInfo(squeezeInputInfo(e,a))+&quot;\n      float &quot;+r+&quot;(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return &quot;+r+&quot;(&quot;+getSqueezedParams([&quot;row&quot;,&quot;col&quot;,&quot;depth&quot;,&quot;depth2&quot;,&quot;depth3&quot;,&quot;depth4&quot;],i)+&quot;);\n      }\n    &quot;}var s=t[5],u=t[4]*s,c=t[3]*u,l=t[2]*c,p=t[1]*l;if(e.shapeInfo.isUniform)return &quot;\n      float &quot;+r+&quot;(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(&quot;+p+&quot;, &quot;+l+&quot;, &quot;+c+&quot;, &quot;+u+&quot;)) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(&quot;+s+&quot;, 1)));\n        &quot;+getUniformSampler(e)+&quot;\n      }\n    &quot;;var d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];return m===p&amp;&amp;null==d?&quot;\n      float &quot;+r+&quot;(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(&quot;+l+&quot;, &quot;+c+&quot;, &quot;+u+&quot;, &quot;+s+&quot;)) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(&quot;+m+&quot;.0, &quot;+f+&quot;.0);\n        return sampleTexture(&quot;+n+&quot;, uv);\n      }\n    &quot;:m===s&amp;&amp;null==d?&quot;\n      float &quot;+r+&quot;(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(&quot;+t[1]*t[2]*t[3]*t[4]+&quot;,\n               &quot;+t[2]*t[3]*t[4]+&quot;,\n               &quot;+t[3]*t[4]+&quot;,\n               &quot;+t[4]+&quot;)) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(&quot;+m+&quot;.0, &quot;+f+&quot;.0);\n        return sampleTexture(&quot;+n+&quot;, uv);\n      }\n    &quot;:&quot;\n    float &quot;+r+&quot;(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * &quot;+p+&quot; + col * &quot;+l+&quot; + depth * &quot;+c+&quot; +\n          depth2 * &quot;+u+&quot; + depth3 * &quot;+s+&quot; + depth4 + &quot;+getFlatOffsetUniformName(n)+&quot;;\n      vec2 uv = uvFromFlat(&quot;+f+&quot;, &quot;+m+&quot;, index);\n      return sampleTexture(&quot;+n+&quot;, uv);\n    }\n  &quot;}function getUniformSampler(e){var t=e.name,n=sizeFromShape(e.shapeInfo.logicalShape);return n&lt;2?&quot;return &quot;+t+&quot;;&quot;:&quot;\n    for (int i = 0; i &lt; &quot;+n+&quot;; i++) {\n      if (i == index) {\n        return &quot;+t+&quot;[i];\n      }\n    }\n  &quot;}function getPackedSamplerAtOutputCoords(e,t){var n,r=e.name,o=r.charAt(0).toUpperCase()+r.slice(1),a=&quot;get&quot;+o+&quot;AtOutCoords&quot;,i=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,u=getBroadcastDims(e.shapeInfo.logicalShape,t.logicalShape),c=getCoordsDataType(s),l=s-i,p=[&quot;x&quot;,&quot;y&quot;,&quot;z&quot;,&quot;w&quot;,&quot;u&quot;,&quot;v&quot;];n=0===i?&quot;&quot;:s&lt;2&amp;&amp;u.length&gt;=1?&quot;coords = 0;&quot;:u.map(function(e){return &quot;coords.&quot;+p[e+l]+&quot; = 0;&quot;}).join(&quot;\n&quot;);var d=&quot;&quot;;d=s&lt;2&amp;&amp;i&gt;0?&quot;coords&quot;:e.shapeInfo.logicalShape.map(function(e,t){return &quot;coords.&quot;+p[t+l]}).join(&quot;, &quot;);var h=&quot;return outputValue;&quot;;if(1===i&amp;&amp;s&gt;1)h=&quot;\n      return vec4(outputValue.xy, outputValue.xy);\n    &quot;;else if(0===i&amp;&amp;s&gt;0)h=1===s?&quot;\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      &quot;:&quot;\n        return vec4(outputValue.x);\n      &quot;;else if(u.length){var f=i-2,m=i-1;u.indexOf(f)&gt;-1&amp;&amp;u.indexOf(m)&gt;-1?h=&quot;return vec4(outputValue.x);&quot;:u.indexOf(f)&gt;-1?h=&quot;return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);&quot;:u.indexOf(m)&gt;-1&amp;&amp;(h=&quot;return vec4(outputValue.xx, outputValue.zz);&quot;);}return &quot;\n    vec4 &quot;+a+&quot;() {\n      &quot;+c+&quot; coords = getOutputCoords();\n      &quot;+n+&quot;\n      vec4 outputValue = get&quot;+o+&quot;(&quot;+d+&quot;);\n      &quot;+h+&quot;\n    }\n  &quot;}function getSamplerAtOutputCoords(e,t){var n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),o=&quot;get&quot;+r+&quot;AtOutCoords&quot;,a=t.texShape,i=e.shapeInfo.texShape,s=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&amp;&amp;s===u&amp;&amp;null==e.shapeInfo.flatOffset&amp;&amp;arraysEqual(i,a))return &quot;\n      float &quot;+o+&quot;() {\n        return sampleTexture(&quot;+n+&quot;, resultUV);\n      }\n    &quot;;var c=getCoordsDataType(u),l=getBroadcastDims(e.shapeInfo.logicalShape,t.logicalShape),p=u-s,d=[&quot;x&quot;,&quot;y&quot;,&quot;z&quot;,&quot;w&quot;,&quot;u&quot;,&quot;v&quot;];return &quot;\n    float &quot;+o+&quot;() {\n      &quot;+c+&quot; coords = getOutputCoords();\n      &quot;+(0===s?&quot;&quot;:u&lt;2&amp;&amp;l.length&gt;=1?&quot;coords = 0;&quot;:l.map(function(e){return &quot;coords.&quot;+d[e+p]+&quot; = 0;&quot;}).join(&quot;\n&quot;))+&quot;\n      return get&quot;+r+&quot;(&quot;+(u&lt;2&amp;&amp;s&gt;0?&quot;coords&quot;:e.shapeInfo.logicalShape.map(function(e,t){return &quot;coords.&quot;+d[t+p]}).join(&quot;, &quot;))+&quot;);\n    }\n  &quot;}function getCoordsDataType(e){if(e&lt;=1)return &quot;int&quot;;if(2===e)return &quot;ivec2&quot;;if(3===e)return &quot;ivec3&quot;;if(4===e)return &quot;ivec4&quot;;if(5===e)return &quot;ivec5&quot;;if(6===e)return &quot;ivec6&quot;;throw Error(&quot;GPU for rank &quot;+e+&quot; is not yet supported&quot;)}function squeezeInputInfo(e,t){var n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function getSqueezedParams(e,t){return t.map(function(t){return e[t]}).join(&quot;, &quot;)}var ArgMinMaxPackedProgram=function(){return function(e,t,n,r){this.variableNames=[&quot;A&quot;],this.usesPackedTextures=!0,assert(e.length&gt;2,function(){return &quot;Packed arg&quot;+(n.charAt(0).toUpperCase()+n.slice(1))+&quot; supports only inputs with rank above 2.&quot;});var o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a&gt;1&amp;&amp;this.outputShape.push(a),r||this.variableNames.push(&quot;bestIndicesA&quot;);var i,s,u=this.outputShape,c=u.length,l=getCoordsDataType(c),p=getChannels(&quot;coords&quot;,c);if(1===a){var d=getCoordsDataType(s=c+1);i=&quot;\n        &quot;+d+&quot; sourceLocR = &quot;+d+&quot;(&quot;+p.join()+&quot;, 0);\n        ++&quot;+p[c-1]+&quot;;\n        &quot;+d+&quot; sourceLocG = &quot;+d+&quot;(&quot;+p.join()+&quot;, 0);\n        ++&quot;+p[c-2]+&quot;;\n        &quot;+d+&quot; sourceLocA = &quot;+d+&quot;(&quot;+p.join()+&quot;, 0);\n        --&quot;+p[c-1]+&quot;;\n        &quot;+d+&quot; sourceLocB = &quot;+d+&quot;(&quot;+p.join()+&quot;, 0);\n        --&quot;+p[c-2]+&quot;;&quot;;}else s=c,i=&quot;\n        &quot;+l+&quot; sourceLocR = coords;\n        ++&quot;+p[c-1]+&quot;;\n        &quot;+l+&quot; sourceLocG = coords;\n        ++&quot;+p[c-2]+&quot;;\n        &quot;+l+&quot; sourceLocA = coords;\n        --&quot;+p[c-1]+&quot;;\n        &quot;+l+&quot; sourceLocB = coords;\n        --&quot;+p[c-2]+&quot;;&quot;;var h=[&quot;x&quot;,&quot;y&quot;,&quot;z&quot;,&quot;w&quot;,&quot;u&quot;,&quot;v&quot;].slice(0,s),f=&quot;.&quot;+h[s-1],m=h.map(function(e){return &quot;int &quot;+e}),g=getChannels(&quot;sourceLocR&quot;,s-1).concat(&quot;inIdx.r&quot;),v=getChannels(&quot;sourceLocG&quot;,s-1).concat(&quot;inIdx.g&quot;),y=getChannels(&quot;sourceLocB&quot;,s-1).concat(&quot;inIdx.b&quot;),x=getChannels(&quot;sourceLocA&quot;,s-1).concat(&quot;inIdx.a&quot;),E=&quot;max&quot;===n?&quot;greaterThan&quot;:&quot;lessThan&quot;,T=r?&quot;&quot;:&quot;\n          inIdx = round(vec4(getBestIndicesAChannel(&quot;+g.join()+&quot;),\n                             getBestIndicesAChannel(&quot;+v.join()+&quot;),\n                             getBestIndicesAChannel(&quot;+y.join()+&quot;),\n                             getBestIndicesAChannel(&quot;+x.join()+&quot;)));&quot;,b=&quot;vec4(\n            getAChannel(&quot;+g.join()+&quot;),\n            hasNextCol ? getAChannel(&quot;+v.join()+&quot;) : 0.,\n            hasNextRow ? getAChannel(&quot;+y.join()+&quot;) : 0.,\n            hasNextRow &amp;&amp; hasNextCol ? getAChannel(&quot;+x.join()+&quot;) : 0.)&quot;,w=r?&quot;&quot;:&quot;\n      float getBestIndicesAChannel(&quot;+m.join()+&quot;) {\n        return getChannel(getBestIndicesA(&quot;+h.join()+&quot;),\n                                          vec2(&quot;+h.slice(-2).join()+&quot;));\n      }&quot;;this.userCode=&quot;\n      float getAChannel(&quot;+m.join()+&quot;) {\n        return getChannel(getA(&quot;+h.join()+&quot;),\n                               vec2(&quot;+h.slice(-2).join()+&quot;));\n      }\n      &quot;+w+&quot;\n      void main() {\n        &quot;+l+&quot; coords = getOutputCoords();\n        bool hasNextCol = &quot;+p[c-1]+&quot; &lt; &quot;+(u[c-1]-1)+&quot;;\n        bool hasNextRow = &quot;+p[c-2]+&quot; &lt; &quot;+(u[c-2]-1)+&quot;;\n        &quot;+i+&quot;\n        ivec4 srcIdx = ivec4(sourceLocR&quot;+f+&quot;, sourceLocG&quot;+f+&quot;,\n          sourceLocB&quot;+f+&quot;, sourceLocA&quot;+f+&quot;) * &quot;+t+&quot;;\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = &quot;+b+&quot;;\n\n        for (int i = 0; i &lt; &quot;+t+&quot;; i++) {\n          inIdx = srcIdx;\n          &quot;+T+&quot;\n          vec4 candidate = &quot;+b+&quot;;\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(&quot;+E+&quot;(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    &quot;;}}(),AvgPool2DBackpropProgram=function(){return function(e){this.variableNames=[&quot;dy&quot;],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,s=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=s-1-e.padInfo.top,l=u-1-e.padInfo.left,p=1/(t*n);this.userCode=&quot;\n      const ivec2 pads = ivec2(&quot;+c+&quot;, &quot;+l+&quot;);\n      const float avgMultiplier = float(&quot;+p+&quot;);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR &lt; &quot;+s+&quot;;\n            wR += &quot;+a+&quot;) {\n          float dyR = float(dyRCorner + wR) / &quot;+r+&quot;.0;\n\n          if (dyR &lt; 0.0 || dyR &gt;= &quot;+e.outHeight+&quot;.0 || fract(dyR) &gt; 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC &lt; &quot;+u+&quot;;\n            wC+= &quot;+i+&quot;) {\n            float dyC = float(dyCCorner + wC) / &quot;+o+&quot;.0;\n\n            if (dyC &lt; 0.0 || dyC &gt;= &quot;+e.outWidth+&quot;.0 ||\n                fract(dyC) &gt; 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),BatchNormProgram=function(){return function(e,t,n,r,o,a){this.outputShape=[],this.variableNames=[&quot;x&quot;,&quot;mean&quot;,&quot;variance&quot;],assertAndGetBroadcastShape(e,t),assertAndGetBroadcastShape(e,n);var i=&quot;0.0&quot;;null!=r&amp;&amp;(assertAndGetBroadcastShape(e,r),this.variableNames.push(&quot;offset&quot;),i=&quot;getOffsetAtOutCoords()&quot;);var s=&quot;1.0&quot;;null!=o&amp;&amp;(assertAndGetBroadcastShape(e,o),this.variableNames.push(&quot;scale&quot;),s=&quot;getScaleAtOutCoords()&quot;),this.outputShape=e,this.userCode=&quot;\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = &quot;+i+&quot;;\n        float scale = &quot;+s+&quot;;\n        float inv = scale * inversesqrt(variance + float(&quot;+a+&quot;));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    &quot;;}}(),BatchNormPackedProgram=function(){return function(e,t,n,r,o,a){this.usesPackedTextures=!0,this.variableNames=[&quot;x&quot;,&quot;mean&quot;,&quot;variance&quot;],assertAndGetBroadcastShape(e,t),assertAndGetBroadcastShape(e,n);var i=&quot;vec4(0.0)&quot;;null!=r&amp;&amp;(assertAndGetBroadcastShape(e,r),this.variableNames.push(&quot;offset&quot;),i=&quot;getOffsetAtOutCoords()&quot;);var s=&quot;vec4(1.0)&quot;;null!=o&amp;&amp;(assertAndGetBroadcastShape(e,o),this.variableNames.push(&quot;scale&quot;),s=&quot;getScaleAtOutCoords()&quot;),this.outputShape=e,this.userCode=&quot;\n      void main() {\n        vec4 offset = &quot;+i+&quot;;\n        vec4 scale = &quot;+s+&quot;;\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(&quot;+a+&quot;));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    &quot;;}}(),COMPLEX_MULTIPLY={REAL:&quot;return areal * breal - aimag * bimag;&quot;,IMAG:&quot;return areal * bimag + aimag * breal;&quot;},BinaryOpComplexProgram=function(){return function(e,t,n){this.variableNames=[&quot;AReal&quot;,&quot;AImag&quot;,&quot;BReal&quot;,&quot;BImag&quot;],this.outputShape=assertAndGetBroadcastShape(t,n),this.userCode=&quot;\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        &quot;+e+&quot;\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    &quot;;}}(),CHECK_NAN_SNIPPET=&quot;\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n&quot;,ADD=&quot;return a + b;&quot;,SUB=&quot;return a - b;&quot;,MUL=&quot;return a * b;&quot;,DIV=&quot;if (a == b) return 1.0;\n  return a / b;&quot;,INT_DIV=&quot;\n  float resultSign = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  int result = ia / ib;\n  int amodb = ia - ib * result;\n\n  if (resultSign &lt; 0.0 &amp;&amp; amodb != 0) {\n    result -= 1;\n  }\n  return float(result);\n&quot;,POW=&quot;\nif(a &lt; 0.0 &amp;&amp; floor(b) &lt; b){\n  return NAN;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n&quot;,SQUARED_DIFFERENCE=&quot;return (a - b) * (a - b);&quot;,EQUAL=&quot;return float(a == b);&quot;,NOT_EQUAL=&quot;return float(a != b);&quot;,LESS=&quot;return float(a &lt; b);&quot;,LESS_EQUAL=&quot;return float(a &lt;= b);&quot;,GREATER=&quot;return float(a &gt; b);&quot;,GREATER_EQUAL=&quot;return float(a &gt;= b);&quot;,LOGICAL_AND=&quot;return float(a &gt;= 1.0 &amp;&amp; b &gt;= 1.0);&quot;,LOGICAL_OR=&quot;return float(a &gt;= 1.0 || b &gt;= 1.0);&quot;,MAX=CHECK_NAN_SNIPPET+&quot;\n  return max(a, b);\n&quot;,MIN=CHECK_NAN_SNIPPET+&quot;\n  return min(a, b);\n&quot;,MOD=&quot;if (b == 0.0) return NAN;\n  return mod(a, b);&quot;,ATAN2=CHECK_NAN_SNIPPET+&quot;\n  return atan(a, b);\n&quot;,ELU_DER=&quot;return (b &gt;= 1.0) ? a : a * (b + 1.0);&quot;,PRELU=&quot;return (a &lt; 0.) ? b * a : a;&quot;,BinaryOpProgram=function(){return function(e,t,n){this.variableNames=[&quot;A&quot;,&quot;B&quot;],this.outputShape=assertAndGetBroadcastShape(t,n),this.userCode=&quot;\n      float binaryOperation(float a, float b) {\n        &quot;+e+&quot;\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    &quot;;}}(),CHECK_NAN_SNIPPET$1=&quot;\n  result.r = isNaN.r &gt; 0. ? NAN : result.r;\n  result.g = isNaN.g &gt; 0. ? NAN : result.g;\n  result.b = isNaN.b &gt; 0. ? NAN : result.b;\n  result.a = isNaN.a &gt; 0. ? NAN : result.a;\n&quot;,INT_DIV$1=&quot;\n  vec4 resultSign = sign(a) * sign(b);\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  ivec4 result = ia / ib;\n  ivec4 amodb = ia - ib * result;\n\n  // Vectorize INT_DIV\n  // if (resultSign &lt; 0.0 &amp;&amp; amodb != 0) result -= 1;\n  // return float(result);\n  return vec4(result -\n     ivec4(lessThan(resultSign, vec4(0.0))) * ivec4(notEqual(amodb, ivec4(0))));\n&quot;,POW$1=&quot;\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  &quot;+CHECK_NAN_SNIPPET$1+&quot;\n  return result;\n&quot;,PRELU$1=&quot;\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n&quot;,ELU_DER$1=&quot;\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n&quot;,ATAN2$1=&quot;\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  &quot;+CHECK_NAN_SNIPPET$1+&quot;\n  return result;\n&quot;,EQUAL$1=&quot;\n  return vec4(equal(a, b));\n&quot;,NOT_EQUAL$1=&quot;\n  return vec4(notEqual(a, b));\n&quot;,LESS$1=&quot;\n  return vec4(lessThan(a, b));\n&quot;,LESS_EQUAL$1=&quot;\n  return vec4(lessThanEqual(a, b));\n&quot;,GREATER$1=&quot;\n  return vec4(greaterThan(a, b));\n&quot;,GREATER_EQUAL$1=&quot;\n  return vec4(greaterThanEqual(a, b));\n&quot;,LOGICAL_AND$1=&quot;\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n&quot;,LOGICAL_OR$1=&quot;\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n&quot;,MAX$1=&quot;\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  &quot;+CHECK_NAN_SNIPPET$1+&quot;\n  return result;\n&quot;,MIN$1=&quot;\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  &quot;+CHECK_NAN_SNIPPET$1+&quot;\n  return result;\n&quot;,MOD$1=&quot;\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  &quot;+CHECK_NAN_SNIPPET$1+&quot;\n  return result;\n&quot;,BinaryOpPackedProgram=function(){return function(e,t,n){this.variableNames=[&quot;A&quot;,&quot;B&quot;],this.supportsBroadcasting=!0,this.usesPackedTextures=!0,this.outputShape=assertAndGetBroadcastShape(t,n),this.userCode=&quot;\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        &quot;+e+&quot;\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    &quot;;}}(),ClipProgram=function(){function e(e){this.variableNames=[&quot;A&quot;],this.outputShape=e,this.userCode=&quot;\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, min, max));\n      }\n    &quot;;}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,o){null==n.minLoc&amp;&amp;(n.minLoc=r.getUniformLocationNoThrow(o,&quot;min&quot;),n.maxLoc=r.getUniformLocationNoThrow(o,&quot;max&quot;)),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t);}},e}(),ClipPackedProgram=function(){function e(e){this.variableNames=[&quot;A&quot;],this.usesPackedTextures=!0,this.outputShape=e,this.userCode=&quot;\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(min), vec4(max)));\n      }\n    &quot;;}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,o){null==n.minLoc&amp;&amp;(n.minLoc=r.getUniformLocationNoThrow(o,&quot;min&quot;),n.maxLoc=r.getUniformLocationNoThrow(o,&quot;max&quot;)),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t);}},e}(),ComplexAbsProgram=function(){return function(e){this.variableNames=[&quot;real&quot;,&quot;imag&quot;],this.outputShape=e,this.userCode=&quot;\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    &quot;;}}(),ConcatProgram=function(){return function(e){this.outputShape=[],this.outputShape=computeOutShape(e,1),this.variableNames=e.map(function(e,t){return &quot;T&quot;+t});var t=new Array(e.length-1);t[0]=e[0][1];for(var n=1;n&lt;t.length;n++)t[n]=t[n-1]+e[n][1];var r=[&quot;if (yC &lt; &quot;+t[0]+&quot;) setOutput(getT0(yR, yC));&quot;];for(n=1;n&lt;t.length;n++){var o=t[n-1];r.push(&quot;else if (yC &lt; &quot;+t[n]+&quot;) setOutput(getT&quot;+n+&quot;(yR, yC-&quot;+o+&quot;));&quot;);}var a=t.length,i=t[t.length-1];r.push(&quot;else setOutput(getT&quot;+a+&quot;(yR, yC-&quot;+i+&quot;));&quot;),this.userCode=&quot;\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        &quot;+r.join(&quot;\n        &quot;)+&quot;\n      }\n    &quot;;}}(),ConcatPackedProgram=function(){return function(e,t){this.usesPackedTextures=!0,this.outputShape=[],this.outputShape=computeOutShape(e,t);var n=this.outputShape,r=n.length,o=getCoordsDataType(r),a=getChannels(&quot;coords&quot;,r),i=[&quot;x&quot;,&quot;y&quot;,&quot;z&quot;,&quot;w&quot;,&quot;u&quot;,&quot;v&quot;].slice(0,r);this.variableNames=e.map(function(e,t){return &quot;T&quot;+t});var s=new Array(e.length-1);s[0]=e[0][t];for(var u=1;u&lt;s.length;u++)s[u]=s[u-1]+e[u][t];var c=i[t],l=&quot;vec2(&quot;+i.slice(-2).join()+&quot;)&quot;,p=i.join(),d=&quot;if (&quot;+c+&quot; &lt; &quot;+s[0]+&quot;)\n          return getChannel(getT0(&quot;+p+&quot;), &quot;+l+&quot;);&quot;;for(u=1;u&lt;s.length;u++){var h=s[u-1];d+=&quot;\n        else if (&quot;+c+&quot; &lt; &quot;+s[u]+&quot;) {\n          &quot;+c+&quot; -= &quot;+h+&quot;;\n          return getChannel(getT&quot;+u+&quot;(&quot;+p+&quot;), &quot;+l+&quot;);\n        }&quot;;}var f=s.length;d+=&quot;\n        else {\n          &quot;+c+&quot; -= &quot;+s[s.length-1]+&quot;;\n          return getChannel(getT&quot;+f+&quot;(&quot;+p+&quot;), &quot;+l+&quot;);\n        }&quot;,this.userCode=&quot;\n      float getValue(&quot;+i.map(function(e){return &quot;int &quot;+e})+&quot;) {\n        &quot;+d+&quot;\n      }\n\n      void main() {\n        &quot;+o+&quot; coords = getOutputCoords();\n        vec4 result = vec4(getValue(&quot;+a+&quot;), 0., 0., 0.);\n        if (++&quot;+a[r-1]+&quot; &lt; &quot;+n[r-1]+&quot;) {\n          result.g = getValue(&quot;+a+&quot;);\n        }\n        if (++&quot;+a[r-2]+&quot; &lt; &quot;+n[r-2]+&quot;) {\n          result.a = getValue(&quot;+a+&quot;);\n        }\n        if (&quot;+a[r-2]+&quot; &lt; &quot;+n[r-2]+&quot; &amp;&amp;\n            --&quot;+a[r-1]+&quot; &lt; &quot;+n[r-1]+&quot;) {\n          result.b = getValue(&quot;+a+&quot;);\n        }\n        setOutput(result);\n      }\n    &quot;;}}(),Conv2DDerFilterProgram=function(){return function(e){this.variableNames=[&quot;x&quot;,&quot;dy&quot;],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left;this.userCode=&quot;\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b &lt; &quot;+e.batchSize+&quot;; b++) {\n          for (int yR = 0; yR &lt; &quot;+e.outHeight+&quot;; yR++) {\n            int xR = wR + yR * &quot;+t+&quot; - &quot;+r+&quot;;\n\n            if (xR &lt; 0 || xR &gt;= &quot;+e.inHeight+&quot;) {\n              continue;\n            }\n\n            for (int yC = 0; yC &lt; &quot;+e.outWidth+&quot;; yC++) {\n              int xC = wC + yC * &quot;+n+&quot; - &quot;+o+&quot;;\n\n              if (xC &lt; 0 || xC &gt;= &quot;+e.inWidth+&quot;) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),Conv2DDerInputProgram=function(){return function(e){this.variableNames=[&quot;dy&quot;,&quot;W&quot;],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left;this.userCode=&quot;\n      const ivec2 pads = ivec2(&quot;+a+&quot;, &quot;+i+&quot;);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR &lt; &quot;+t+&quot;; wR++) {\n          float dyR = float(dyRCorner + wR) / &quot;+r+&quot;.0;\n\n          if (dyR &lt; 0.0 || dyR &gt;= &quot;+e.outHeight+&quot;.0 || fract(dyR) &gt; 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = &quot;+t+&quot; - 1 - wR;\n\n          for (int wC = 0; wC &lt; &quot;+n+&quot;; wC++) {\n            float dyC = float(dyCCorner + wC) / &quot;+o+&quot;.0;\n\n            if (dyC &lt; 0.0 || dyC &gt;= &quot;+e.outWidth+&quot;.0 ||\n                fract(dyC) &gt; 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = &quot;+n+&quot; - 1 - wC;\n\n            for (int d2 = 0; d2 &lt; &quot;+e.outChannels+&quot;; d2++) {\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),Conv3DDerFilterProgram=function(){return function(e){this.variableNames=[&quot;x&quot;,&quot;dy&quot;],this.outputShape=e.filterShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=&quot;\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b &lt; &quot;+e.batchSize+&quot;; b++) {\n          for (int yF = 0; yF &lt; &quot;+e.outDepth+&quot;; yF++) {\n            int xF = wF + yF * &quot;+t+&quot; - &quot;+o+&quot;;\n\n            if (xF &lt; 0 || xF &gt;= &quot;+e.inDepth+&quot;) {\n              continue;\n            }\n\n            for (int yR = 0; yR &lt; &quot;+e.outHeight+&quot;; yR++) {\n              int xR = wR + yR * &quot;+n+&quot; - &quot;+a+&quot;;\n\n              if (xR &lt; 0 || xR &gt;= &quot;+e.inHeight+&quot;) {\n                continue;\n              }\n\n              for (int yC = 0; yC &lt; &quot;+e.outWidth+&quot;; yC++) {\n                int xC = wC + yC * &quot;+r+&quot; - &quot;+i+&quot;;\n\n                if (xC &lt; 0 || xC &gt;= &quot;+e.inWidth+&quot;) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),Conv3DDerInputProgram=function(){return function(e){this.variableNames=[&quot;dy&quot;,&quot;W&quot;],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,s=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=&quot;\n      const ivec3 pads = ivec3(&quot;+s+&quot;, &quot;+u+&quot;, &quot;+c+&quot;);\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF &lt; &quot;+t+&quot;; wF++) {\n          float dyF = float(dyFCorner + wF) / &quot;+o+&quot;.0;\n\n          if (dyF &lt; 0.0 || dyF &gt;= &quot;+e.outDepth+&quot;.0 || fract(dyF) &gt; 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = &quot;+t+&quot; - 1 - wF;\n\n          for (int wR = 0; wR &lt; &quot;+n+&quot;; wR++) {\n            float dyR = float(dyRCorner + wR) / &quot;+a+&quot;.0;\n\n            if (dyR &lt; 0.0 || dyR &gt;= &quot;+e.outHeight+&quot;.0 ||\n              fract(dyR) &gt; 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = &quot;+n+&quot; - 1 - wR;\n\n            for (int wC = 0; wC &lt; &quot;+r+&quot;; wC++) {\n              float dyC = float(dyCCorner + wC) / &quot;+i+&quot;.0;\n\n              if (dyC &lt; 0.0 || dyC &gt;= &quot;+e.outWidth+&quot;.0 ||\n                  fract(dyC) &gt; 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = &quot;+r+&quot; - 1 - wC;\n\n              for (int d2 = 0; d2 &lt; &quot;+e.outChannels+&quot;; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),DepthwiseConv2DDerFilterProgram=function(){return function(e){this.variableNames=[&quot;x&quot;,&quot;dy&quot;],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=&quot;\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * &quot;+a+&quot; + dm;\n\n        float dotProd = 0.0;\n\n        // TODO: Vec4 over the batch size\n        for (int b = 0; b &lt; &quot;+e.batchSize+&quot;; b++) {\n          for (int yR = 0; yR &lt; &quot;+e.outHeight+&quot;; yR++) {\n            int xR = wR + yR * &quot;+t+&quot; - &quot;+r+&quot;;\n\n            if (xR &lt; 0 || xR &gt;= &quot;+e.inHeight+&quot;) {\n              continue;\n            }\n\n            for (int yC = 0; yC &lt; &quot;+e.outWidth+&quot;; yC++) {\n              int xC = wC + yC * &quot;+n+&quot; - &quot;+o+&quot;;\n\n              if (xC &lt; 0 || xC &gt;= &quot;+e.inWidth+&quot;) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),DepthwiseConv2DDerInputProgram=function(){return function(e){this.variableNames=[&quot;dy&quot;,&quot;W&quot;],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=&quot;\n      const ivec2 pads = ivec2(&quot;+a+&quot;, &quot;+i+&quot;);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR &lt; &quot;+t+&quot;; wR++) {\n          float dyR = float(dyRCorner + wR) / &quot;+r+&quot;.0;\n\n          if (dyR &lt; 0.0 || dyR &gt;= &quot;+e.outHeight+&quot;.0 || fract(dyR) &gt; 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = &quot;+t+&quot; - 1 - wR;\n\n          for (int wC = 0; wC &lt; &quot;+n+&quot;; wC++) {\n            float dyC = float(dyCCorner + wC) / &quot;+o+&quot;.0;\n\n            if (dyC &lt; 0.0 || dyC &gt;= &quot;+e.outWidth+&quot;.0 ||\n                fract(dyC) &gt; 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = &quot;+n+&quot; - 1 - wC;\n\n            // TODO: Vec4 over the channelMul\n            for (int dm = 0; dm &lt; &quot;+s+&quot;; dm++) {\n              int d2 = d1 * &quot;+s+&quot; + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),Conv2DProgram=function(){return function(e){this.variableNames=[&quot;x&quot;,&quot;W&quot;],this.outputShape=e.outShape;var t=e.padInfo.top,n=e.padInfo.left,r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,s=e.filterHeight,u=e.filterWidth,c=4*Math.floor(e.inChannels/4),l=e.inChannels%4;this.userCode=&quot;\n      const ivec2 strides = ivec2(&quot;+r+&quot;, &quot;+o+&quot;);\n      const ivec2 pads = ivec2(&quot;+t+&quot;, &quot;+n+&quot;);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR &lt; &quot;+s+&quot;; wR++) {\n          int xR = xRCorner + wR * &quot;+a+&quot;;\n\n          if (xR &lt; 0 || xR &gt;= &quot;+e.inHeight+&quot;) {\n            continue;\n          }\n\n          for (int wC = 0; wC &lt; &quot;+u+&quot;; wC++) {\n            int xC = xCCorner + wC * &quot;+i+&quot;;\n\n            if (xC &lt; 0 || xC &gt;= &quot;+e.inWidth+&quot;) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 &lt; &quot;+c+&quot;; d1 += 4) {\n              vec4 xValues = vec4(\n                getX(batch, xR, xC, d1),\n                getX(batch, xR, xC, d1 + 1),\n                getX(batch, xR, xC, d1 + 2),\n                getX(batch, xR, xC, d1 + 3)\n              );\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              dotProd += dot(xValues, wValues);\n            }\n\n            if (&quot;+(1===l)+&quot;) {\n              dotProd +=\n                getX(batch, xR, xC, &quot;+c+&quot;) *\n                getW(wR, wC, &quot;+c+&quot;, d2);\n            } else if (&quot;+(2===l)+&quot;) {\n              vec2 xValues = vec2(\n                getX(batch, xR, xC, &quot;+c+&quot;),\n                getX(batch, xR, xC, &quot;+c+&quot; + 1)\n              );\n              vec2 wValues = vec2(\n                getW(wR, wC, &quot;+c+&quot;, d2),\n                getW(wR, wC, &quot;+c+&quot; + 1, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            } else if (&quot;+(3===l)+&quot;) {\n              vec3 xValues = vec3(\n                getX(batch, xR, xC, &quot;+c+&quot;),\n                getX(batch, xR, xC, &quot;+c+&quot; + 1),\n                getX(batch, xR, xC, &quot;+c+&quot; + 2)\n              );\n              vec3 wValues = vec3(\n                getW(wR, wC, &quot;+c+&quot;, d2),\n                getW(wR, wC, &quot;+c+&quot; + 1, d2),\n                getW(wR, wC, &quot;+c+&quot; + 2, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),Conv3DProgram=function(){return function(e){this.variableNames=[&quot;x&quot;,&quot;W&quot;],this.outputShape=e.outShape;var t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,s=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=&quot;\n      const ivec3 strides = ivec3(&quot;+o+&quot;, &quot;+a+&quot;, &quot;+i+&quot;);\n      const ivec3 pads = ivec3(&quot;+t+&quot;, &quot;+n+&quot;, &quot;+r+&quot;);\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF &lt; &quot;+l+&quot;; wF++) {\n          int xF = xFCorner + wF * &quot;+s+&quot;;\n\n          if (xF &lt; 0 || xF &gt;= &quot;+e.inDepth+&quot;) {\n            continue;\n          }\n\n          for (int wR = 0; wR &lt; &quot;+p+&quot;; wR++) {\n            int xR = xRCorner + wR * &quot;+u+&quot;;\n\n            if (xR &lt; 0 || xR &gt;= &quot;+e.inHeight+&quot;) {\n              continue;\n            }\n\n            for (int wC = 0; wC &lt; &quot;+d+&quot;; wC++) {\n              int xC = xCCorner + wC * &quot;+c+&quot;;\n\n              if (xC &lt; 0 || xC &gt;= &quot;+e.inWidth+&quot;) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 &lt; &quot;+h+&quot;; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (&quot;+(1===f)+&quot;) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, &quot;+h+&quot;) *\n                  getW(wF, wR, wC, &quot;+h+&quot;, d2);\n              } else if (&quot;+(2===f)+&quot;) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, &quot;+h+&quot;),\n                  getX(batch, xF, xR, xC, &quot;+h+&quot; + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, &quot;+h+&quot;, d2),\n                  getW(wF, wR, wC, &quot;+h+&quot; + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (&quot;+(3===f)+&quot;) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, &quot;+h+&quot;),\n                  getX(batch, xF, xR, xC, &quot;+h+&quot; + 1),\n                  getX(batch, xF, xR, xC, &quot;+h+&quot; + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, &quot;+h+&quot;, d2),\n                  getW(wF, wR, wC, &quot;+h+&quot; + 1, d2),\n                  getW(wF, wR, wC, &quot;+h+&quot; + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),DepthwiseConv2DProgram=function(){return function(e){this.variableNames=[&quot;x&quot;,&quot;W&quot;],this.outputShape=e.outShape;var t=e.inHeight,n=e.inWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.strideHeight,i=e.strideWidth,s=e.dilationHeight,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,p=e.outChannels/e.inChannels;this.userCode=&quot;\n      const ivec2 strides = ivec2(&quot;+a+&quot;, &quot;+i+&quot;);\n      const ivec2 pads = ivec2(&quot;+r+&quot;, &quot;+o+&quot;);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / &quot;+p+&quot;;\n        int q = d2 - d1 * &quot;+p+&quot;;\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR &lt; &quot;+c+&quot;; wR++) {\n          int xR = xRCorner + wR * &quot;+s+&quot;;\n\n          if (xR &lt; 0 || xR &gt;= &quot;+t+&quot;) {\n            continue;\n          }\n\n          for (int wC = 0; wC &lt; &quot;+l+&quot;; wC++) {\n            int xC = xCCorner + wC * &quot;+u+&quot;;\n\n            if (xC &lt; 0 || xC &gt;= &quot;+n+&quot;) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),DepthwiseConvPacked2DProgram=function(){return function(e){this.variableNames=[&quot;x&quot;,&quot;W&quot;],this.usesPackedTextures=!0,this.outputShape=e.outShape;for(var t=e.inHeight,n=e.inWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.strideHeight,i=e.strideWidth,s=e.dilationHeight,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,p=l,d=&quot;int xR; int xC; int xCOffset;&quot;,h=0;h&lt;c;h++)for(var f=0;f&lt;l;f++)d+=&quot;\n          vec4 xTexelR&quot;+h+&quot;C&quot;+2*f+&quot; = vec4(0.);\n          vec4 wR&quot;+h+&quot;C&quot;+f+&quot; = vec4(0.);\n          vec4 xR&quot;+h+&quot;C&quot;+f+&quot; = vec4(0.);&quot;;for(h=0;h&lt;c;h++)for(var m=0;m&lt;p;m++){if(d+=&quot;\n          xR = xRCorner + &quot;+h*s+&quot;;\n          xC = xCCorner + &quot;+(f=2*m)*u+&quot;;\n        &quot;,1===i){if(f&lt;l&amp;&amp;(d+=o%2==1?&quot;\n                xCOffset = xC + 1;\n                if(xR &gt;= 0 &amp;&amp; xR &lt; &quot;+t+&quot; &amp;&amp; xCOffset &gt;= 0 &amp;&amp; xCOffset &lt; &quot;+n+&quot;) {\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot; = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot; = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR &gt;= 0 &amp;&amp; xR &lt; &quot;+t+&quot; &amp;&amp; xCOffset &gt;= 0 &amp;&amp; xCOffset &lt; &quot;+n+&quot;) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n                  xR&quot;+h+&quot;C&quot;+f+&quot; = vec4(previous.zw, xTexelR&quot;+h+&quot;C&quot;+f+&quot;.xy);\n                } else {\n                  xR&quot;+h+&quot;C&quot;+f+&quot; = vec4(0, 0, xTexelR&quot;+h+&quot;C&quot;+f+&quot;.xy);\n                }\n              &quot;:&quot;\n                if(xR &gt;= 0 &amp;&amp; xR &lt; &quot;+t+&quot; &amp;&amp; xC &gt;= 0 &amp;&amp; xC &lt; &quot;+n+&quot;) {\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot; = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot; = vec4(0.);\n                }\n\n                xR&quot;+h+&quot;C&quot;+f+&quot; = xTexelR&quot;+h+&quot;C&quot;+f+&quot;;\n              &quot;,f+1&lt;l)){var g=o%2==0?nearestLargerEven(u):u;u%2==0&amp;&amp;o%2==1||u%2!=0&amp;&amp;o%2!=1?(d+=&quot;\n                  xCOffset = xC + &quot;+o%2+&quot; + &quot;+g+&quot;;\n\n                  if(xR &gt;= 0 &amp;&amp; xR &lt; &quot;+t+&quot; &amp;&amp;\n                    xCOffset &gt;= 0 &amp;&amp; xCOffset &lt; &quot;+n+&quot;) {\n                    xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot; = getX(batch, xR, xCOffset, d1);\n                  }\n                &quot;,u&gt;1&amp;&amp;(d+=&quot;\n                    xCOffset -= 2;\n                    if(xR &gt;= 0 &amp;&amp; xR &lt; &quot;+t+&quot; &amp;&amp;\n                      xCOffset &gt;= 0 &amp;&amp; xCOffset &lt; &quot;+n+&quot;) {\n                      xTexelR&quot;+h+&quot;C&quot;+f+&quot; = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR&quot;+h+&quot;C&quot;+f+&quot; = vec4(0.);\n                    }\n                  &quot;),d+=&quot;\n                  xR&quot;+h+&quot;C&quot;+(f+1)+&quot; = vec4(\n                    xTexelR&quot;+h+&quot;C&quot;+f+&quot;.zw, xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot;.xy);\n                &quot;):d+=&quot;\n                  xCOffset = xC + &quot;+g+&quot;;\n\n                  if(xR &gt;= 0 &amp;&amp; xR &lt; &quot;+t+&quot; &amp;&amp;\n                    xCOffset &gt;= 0 &amp;&amp; xCOffset &lt; &quot;+n+&quot;) {\n                    xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot; = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR&quot;+h+&quot;C&quot;+(f+1)+&quot; = xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot;;\n                &quot;;}}else f&lt;l&amp;&amp;(d+=&quot;\n              if(xR &gt;= 0 &amp;&amp; xR &lt; &quot;+t+&quot;) {\n            &quot;,o%2==1?(d+=&quot;\n                xCOffset = xC + 1 - &quot;+i+&quot;;\n                if(xCOffset &gt;= 0 &amp;&amp; xCOffset &lt; &quot;+n+&quot;) {\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot; = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot; = vec4(0.);\n                }\n\n                if(xC + 1 &gt;= 0 &amp;&amp; xC + 1 &lt; &quot;+n+&quot;) {\n                  xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot; = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot; = vec4(0.);\n                }\n\n                xR&quot;+h+&quot;C&quot;+f+&quot; = vec4(\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot;.zw, xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot;.zw);\n              &quot;,f+1&lt;l&amp;&amp;(d+=&quot;\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + &quot;+i+&quot;;\n                  if(xCOffset &gt;= 0 &amp;&amp; xCOffset &lt; &quot;+n+&quot;) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR&quot;+h+&quot;C&quot;+(f+1)+&quot; = vec4(xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot;.xy, final.xy);\n                &quot;)):(d+=&quot;\n                if(xC &gt;= 0 &amp;&amp; xC &lt; &quot;+n+&quot;) {\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot; = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot; = vec4(0.);\n                }\n\n                xCOffset = xC + &quot;+i+&quot;;\n                if(xCOffset &gt;= 0 &amp;&amp; xCOffset &lt; &quot;+n+&quot;) {\n                  xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot; = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot; = vec4(0.);\n                }\n\n                xR&quot;+h+&quot;C&quot;+f+&quot; = vec4(\n                  xTexelR&quot;+h+&quot;C&quot;+f+&quot;.xy, xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot;.xy);\n              &quot;,f+1&lt;l&amp;&amp;(d+=&quot;\n                  xR&quot;+h+&quot;C&quot;+(f+1)+&quot; = vec4(\n                    xTexelR&quot;+h+&quot;C&quot;+f+&quot;.zw, xTexelR&quot;+h+&quot;C&quot;+(f+2)+&quot;.zw);\n                &quot;)),d+=&quot;}&quot;);f&lt;l&amp;&amp;(d+=&quot;\n            vec4 wTexelR&quot;+h+&quot;C&quot;+f+&quot; = getW(&quot;+h+&quot;, &quot;+f+&quot;, d1, q);\n            wR&quot;+h+&quot;C&quot;+f+&quot; = vec4(wTexelR&quot;+h+&quot;C&quot;+f+&quot;.xz, wTexelR&quot;+h+&quot;C&quot;+f+&quot;.xz);\n          &quot;,f+1&lt;l&amp;&amp;(d+=&quot;\n              vec4 wTexelR&quot;+h+&quot;C&quot;+(f+1)+&quot; = getW(&quot;+h+&quot;, &quot;+(f+1)+&quot;, d1, q);\n              wR&quot;+h+&quot;C&quot;+(f+1)+&quot; =\n                vec4(wTexelR&quot;+h+&quot;C&quot;+(f+1)+&quot;.xz, wTexelR&quot;+h+&quot;C&quot;+(f+1)+&quot;.xz);&quot;));}for(h=0;h&lt;c;h++)for(f=0;f&lt;l;f++)d+=&quot;result += xR&quot;+h+&quot;C&quot;+f+&quot; * wR&quot;+h+&quot;C&quot;+f+&quot;;&quot;;this.userCode=&quot;\n      const ivec2 strides = ivec2(&quot;+a+&quot;, &quot;+i+&quot;);\n      const ivec2 pads = ivec2(&quot;+r+&quot;, &quot;+o+&quot;);\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 result = vec4(0.);\n\n        &quot;+d+&quot;\n\n        setOutput(result);\n      }\n    &quot;;}}(),CropAndResizeProgram=function(){return function(e,t,n,r,o){this.variableNames=[&quot;Image&quot;,&quot;Boxes&quot;,&quot;BoxInd&quot;],this.outputShape=[];var a=e[0],i=e[1],s=e[2],u=e[3],c=t[0],l=n[0],p=n[1];this.outputShape=[c,l,p,u];var d=&quot;bilinear&quot;===r?1:0,h=[i-1+&quot;.0&quot;,s-1+&quot;.0&quot;],f=h[0],m=h[1],g=l&gt;1?[&quot;&quot;+(i-1)/(l-1),&quot;(y2-y1) * height_ratio&quot;,&quot;y1*&quot;+f+&quot; + float(y)*(height_scale)&quot;]:[&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.5 * (y1+y2) * &quot;+f],v=g[0],y=g[1],x=g[2],E=p&gt;1?[&quot;&quot;+(s-1)/(p-1),&quot;(x2-x1) * width_ratio&quot;,&quot;x1*&quot;+m+&quot; + float(x)*(width_scale)&quot;]:[&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.5 * (x1+x2) * &quot;+m],T=E[0],b=E[1],w=E[2];this.userCode=&quot;\n      const float height_ratio = float(&quot;+v+&quot;);\n      const float width_ratio = float(&quot;+T+&quot;);\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd &lt; 0 || bInd &gt;= &quot;+a+&quot;) {\n          return;\n        }\n\n        float height_scale = &quot;+y+&quot;;\n        float width_scale = &quot;+b+&quot;;\n\n        float in_y = &quot;+x+&quot;;\n        if( in_y &lt; 0.0 || in_y &gt; &quot;+f+&quot; ) {\n          setOutput(float(&quot;+o+&quot;));\n          return;\n        }\n        float in_x = &quot;+w+&quot;;\n        if( in_x &lt; 0.0 || in_x &gt; &quot;+m+&quot; ) {\n          setOutput(float(&quot;+o+&quot;));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(&quot;+d+&quot; == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    &quot;;}}(),CumSumProgram=function(){return function(e,t,n){this.variableNames=[&quot;x&quot;],this.outputShape=e;var r=e.length,o=e[e.length-1],a=n?&quot;&lt;&quot;:&quot;&gt;&quot;;this.userCode=&quot;\n      int getIndex(int i) {\n        &quot;+(n?&quot;return &quot;+o+&quot; -i - 1;&quot;:&quot;return i;&quot;)+&quot;\n      }\n\n      void main() {\n        &quot;+getCoordsDataType(r)+&quot; coords = getOutputCoords();\n        int end = &quot;+getFinalCoord(r,&quot;coords&quot;)+&quot;;\n        float val = 0.0;\n        for (int i = &quot;+o+&quot; - 1; i &gt;= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx &quot;+a+&quot; end) {\n            continue;\n          }\n          if (idx == end &amp;&amp; &quot;+t+&quot;) {\n            continue;\n          }\n          &quot;+getFinalCoord(r,&quot;coords&quot;)+&quot; = idx;\n          val += getX(&quot;+getCoords(r,&quot;coords&quot;)+&quot;);\n        }\n        setOutput(val);\n      }\n    &quot;;}}();function getCoords(e,t){if(1===e)return &quot;&quot;+t;if(2===e)return t+&quot;.x, &quot;+t+&quot;.y&quot;;if(3===e)return t+&quot;.x, &quot;+t+&quot;.y, &quot;+t+&quot;.z&quot;;if(4===e)return t+&quot;.x, &quot;+t+&quot;.y, &quot;+t+&quot;.z, &quot;+t+&quot;.w&quot;;throw Error(&quot;Cumulative sum for rank &quot;+e+&quot; is not yet supported&quot;)}function getFinalCoord(e,t){if(1===e)return &quot;&quot;+t;if(2===e)return t+&quot;.y&quot;;if(3===e)return t+&quot;.z&quot;;if(4===e)return t+&quot;.w&quot;;throw Error(&quot;Cumulative sum for rank &quot;+e+&quot; is not yet supported&quot;)}var DepthToSpaceProgram=function(){function e(e,t,n){this.variableNames=[&quot;x&quot;],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=&quot;\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = &quot;+this.getHeightCoordString()+&quot;;\n      int w = &quot;+this.getWidthCoordString()+&quot;;\n      int d = &quot;+this.getDepthCoordString()+&quot;;\n\n      int in_h = h / &quot;+t+&quot;;\n      int offset_h = imod(h, &quot;+t+&quot;);\n      int in_w = w / &quot;+t+&quot;;\n      int offset_w = imod(w, &quot;+t+&quot;);\n      int offset_d = (offset_h * &quot;+t+&quot; + offset_w) *\n        &quot;+this.getOutputDepthSize()+&quot;;\n      int in_d = d + offset_d;\n\n      float result = &quot;+this.getInputSamplingString()+&quot;;\n      setOutput(result);\n    }\n  &quot;;}return e.prototype.getHeightCoordString=function(){return &quot;NHWC&quot;===this.dataFormat?&quot;coords[1]&quot;:&quot;coords[2]&quot;},e.prototype.getWidthCoordString=function(){return &quot;NHWC&quot;===this.dataFormat?&quot;coords[2]&quot;:&quot;coords[3]&quot;},e.prototype.getDepthCoordString=function(){return &quot;NHWC&quot;===this.dataFormat?&quot;coords[3]&quot;:&quot;coords[1]&quot;},e.prototype.getOutputDepthSize=function(){return &quot;NHWC&quot;===this.dataFormat?this.outputShape[3]:this.outputShape[1]},e.prototype.getInputSamplingString=function(){return &quot;NHWC&quot;===this.dataFormat?&quot;getX(b, in_h, in_w, in_d)&quot;:&quot;getX(b, in_d, in_h, in_w)&quot;},e}(),EncodeFloatProgram=function(){return function(e){this.variableNames=[&quot;A&quot;];var t=getGlslDifferences();this.outputShape=e,this.userCode=&quot;\n      const float FLOAT_MAX = 1.70141184e38;\n      const float FLOAT_MIN = 1.17549435e-38;\n\n      lowp vec4 encode_float(highp float v) {\n        if (isnan(v)) {\n          return vec4(255, 255, 255, 255);\n        }\n\n        highp float av = abs(v);\n\n        if(av &lt; FLOAT_MIN) {\n          return vec4(0.0, 0.0, 0.0, 0.0);\n        } else if(v &gt; FLOAT_MAX) {\n          return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n        } else if(v &lt; -FLOAT_MAX) {\n          return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n        }\n\n        highp vec4 c = vec4(0,0,0,0);\n\n        highp float e = floor(log2(av));\n        highp float m = exp2(fract(log2(av))) - 1.0;\n\n        c[2] = floor(128.0 * m);\n        m -= c[2] / 128.0;\n        c[1] = floor(32768.0 * m);\n        m -= c[1] / 32768.0;\n        c[0] = floor(8388608.0 * m);\n\n        highp float ebias = e + 127.0;\n        c[3] = floor(ebias / 2.0);\n        ebias -= c[3] * 2.0;\n        c[2] += floor(ebias) * 128.0;\n\n        c[3] += 128.0 * step(0.0, -v);\n\n        return c / 255.0;\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        &quot;+t.output+&quot; = encode_float(x);\n      }\n    &quot;;}}(),COMPLEX_FFT={REAL:&quot;return real * expR - imag * expI;&quot;,IMAG:&quot;return real * expI + imag * expR;&quot;},FFTProgram=function(){return function(e,t,n){this.variableNames=[&quot;real&quot;,&quot;imag&quot;];var r=t[1];this.outputShape=t;var o=n?&quot;2.0 * &quot;+Math.PI:&quot;-2.0 * &quot;+Math.PI,a=n?r+&quot;.0&quot;:&quot;1.0&quot;;this.userCode=&quot;\n      const float exponentMultiplier = &quot;+o+&quot;;\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        &quot;+e+&quot;\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(&quot;+r+&quot;);\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i &lt; &quot;+r+&quot;; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / &quot;+a+&quot;;\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    &quot;;}}(),FillProgram=function(){function e(e,t){this.outputShape=[],this.variableNames=[&quot;x&quot;],this.outputShape=e,this.userCode=&quot;\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    &quot;;}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.valueLoc&amp;&amp;(t.valueLoc=n.getUniformLocationNoThrow(r,&quot;value&quot;)),n.gl.uniform1f(t.valueLoc,e);}},e}(),FromPixelsProgram=function(){return function(e){this.variableNames=[&quot;A&quot;];var t=getGlslDifferences(),n=e[0],r=e[1];this.outputShape=e,this.userCode=&quot;\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(&quot;+r+&quot;.0, &quot;+n+&quot;.0);\n\n        vec4 values = &quot;+t.texture2D+&quot;(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    &quot;;}}(),GatherProgram=function(){return function(e,t,n){this.variableNames=[&quot;A&quot;,&quot;indices&quot;];var r=e.slice();r[n]=t,this.outputShape=r,this.rank=r.length;var o=getCoordsDataType(this.rank),a=getSourceCoords$1(e,n);this.userCode=&quot;\n      void main() {\n        &quot;+o+&quot; resRC = getOutputCoords();\n        setOutput(getA(&quot;+a+&quot;));\n      }\n    &quot;;}}();function getSourceCoords$1(e,t){var n=e.length;if(n&gt;4)throw Error(&quot;Gather for rank &quot;+n+&quot; is not yet supported&quot;);if(1===n)return &quot;int(getIndices(resRC))&quot;;for(var r=[&quot;resRC.x&quot;,&quot;resRC.y&quot;,&quot;resRC.z&quot;,&quot;resRC.w&quot;],o=[],a=0;a&lt;e.length;a++)a===t?o.push(&quot;int(getIndices(&quot;+r[a]+&quot;))&quot;):o.push(&quot;&quot;+r[a]);return o.join()}var TextureUsage,PhysicalTextureType,GatherNDProgram=function(){return function(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=[&quot;x&quot;,&quot;indices&quot;],this.outputShape=n;var r=getCoordsDataType(t.length),o=getCoordsDataType(n.length),a=this.sliceDim&gt;1?&quot;strides[j]&quot;:&quot;strides&quot;;this.userCode=&quot;\n        &quot;+r+&quot; strides = &quot;+r+&quot;(&quot;+this.strides+&quot;);\n         void main() {\n          &quot;+o+&quot; coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j &lt; &quot;+this.sliceDim+&quot;; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * &quot;+a+&quot;;\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      &quot;;}}();function getUnpackedMatrixTextureShapeWidthHeight(e,t){return [t,e]}function getUnpackedArraySizeFromMatrixSize(e,t){return e*t}function getMatrixSizeFromUnpackedArraySize(e,t){if(e%t!=0)throw new Error(&quot;unpackedSize (&quot;+e+&quot;) must be a multiple of &quot;+t);return e/t}function encodeMatrixToUnpackedArray(e,t,n){var r=getUnpackedArraySizeFromMatrixSize(e.length,n);if(t.length&lt;r)throw new Error(&quot;unpackedArray length (&quot;+t.length+&quot;) must be &gt;= &quot;+r);for(var o=0,a=0;a&lt;e.length;++a)t[o]=e[a],o+=n;}function decodeMatrixFromUnpackedArray(e,t,n){var r=getMatrixSizeFromUnpackedArraySize(e.length,n);if(t.length&lt;r)throw new Error(&quot;matrix length (&quot;+t.length+&quot;) must be &gt;= &quot;+r);for(var o=0,a=0;a&lt;e.length;a+=n)t[o++]=e[a];}function getPackedMatrixTextureShapeWidthHeight(e,t){return [Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function getPackedRGBAArraySizeFromMatrixShape(e,t){var n=getPackedMatrixTextureShapeWidthHeight(e,t);return n[0]*n[1]*4}function encodeMatrixToPackedRGBA(e,t,n,r,o){for(var a=r%2==1,i=n%2==1,s=Math.floor(r/2),u=Math.floor(n/2),c=Math.ceil(r/2),l=c*Math.ceil(n/2),p=nearestLargerEven(n)*nearestLargerEven(r),d=0;d&lt;t;d++){for(var h=d*n*r,f=d*p,m=a?4:0,g=r,v=f,y=0;y&lt;u;++y){for(var x=2*y*r,E=0;E&lt;s;++E){var T=h+x+2*E;o[v]=e[T],o[v+1]=e[T+1],o[v+2]=e[T+g],o[v+3]=e[T+g+1],v+=4;}v+=m;}if(a){T=h+r-1,v=f+4*(c-1);var b=2*r;for(m=4*c,y=0;y&lt;u;++y)o[v]=e[T],o[v+2]=e[T+r],T+=b,v+=m;}if(i){for(T=h+(n-1)*r,v=f+4*(l-c),E=0;E&lt;s;++E)o[v++]=e[T++],o[v++]=e[T++],v+=2;a&amp;&amp;i&amp;&amp;(o[f+p-4]=e[T]);}}return o}function decodeMatrixFromPackedRGBA(e,t,n,r,o){var a=n*r;if(o.length&lt;a)throw new Error(&quot;matrix length (&quot;+o.length+&quot;) must be &gt;= &quot;+a);for(var i=r%2==1,s=n%2==1,u=Math.floor(r/2),c=Math.floor(n/2),l=Math.ceil(r/2),p=l*Math.ceil(n/2),d=nearestLargerEven(n)*nearestLargerEven(r),h=0;h&lt;t;h++){for(var f=h*n*r,m=h*d,g=i?4:0,v=r+(i?1:0),y=m,x=f,E=f+r,T=0;T&lt;c;++T){for(var b=0;b&lt;u;++b)o[x++]=e[y++],o[x++]=e[y++],o[E++]=e[y++],o[E++]=e[y++];y+=g,x+=v,E+=v;}if(i){y=m+4*(l-1);var w=f+r-1;for(g=4*l,v=2*r,T=0;T&lt;c;++T)o[w]=e[y],o[w+r]=e[y+2],y+=g,w+=v;}if(s){for(y=m+4*(p-l),w=f+(n-1)*r,b=0;b&lt;u;++b)o[w++]=e[y++],o[w++]=e[y++],y+=2;i&amp;&amp;(o[f+n*r-1]=e[y]);}}return o}function callAndCheck(e,t,n){var r=n();return t&amp;&amp;checkWebGLError(e),r}function checkWebGLError(e){var t=e.getError();if(t!==e.NO_ERROR)throw new Error(&quot;WebGL Error: &quot;+getWebGLErrorMessage(e,t))}!function(e){e[e.RENDER=0]=&quot;RENDER&quot;,e[e.UPLOAD=1]=&quot;UPLOAD&quot;,e[e.PIXELS=2]=&quot;PIXELS&quot;,e[e.DOWNLOAD=3]=&quot;DOWNLOAD&quot;;}(TextureUsage||(TextureUsage={})),function(e){e[e.UNPACKED_FLOAT16=0]=&quot;UNPACKED_FLOAT16&quot;,e[e.UNPACKED_FLOAT32=1]=&quot;UNPACKED_FLOAT32&quot;,e[e.PACKED_4X1_UNSIGNED_BYTE=2]=&quot;PACKED_4X1_UNSIGNED_BYTE&quot;,e[e.PACKED_2X2_FLOAT32=3]=&quot;PACKED_2X2_FLOAT32&quot;,e[e.PACKED_2X2_FLOAT16=4]=&quot;PACKED_2X2_FLOAT16&quot;;}(PhysicalTextureType||(PhysicalTextureType={}));var MIN_FLOAT16=5.96e-8,MAX_FLOAT16=65504;function canBeRepresented(e){return !!(ENV.get(&quot;WEBGL_RENDER_FLOAT32_ENABLED&quot;)||0===e||MIN_FLOAT16&lt;Math.abs(e)&amp;&amp;Math.abs(e)&lt;MAX_FLOAT16)}function getWebGLErrorMessage(e,t){switch(t){case e.NO_ERROR:return &quot;NO_ERROR&quot;;case e.INVALID_ENUM:return &quot;INVALID_ENUM&quot;;case e.INVALID_VALUE:return &quot;INVALID_VALUE&quot;;case e.INVALID_OPERATION:return &quot;INVALID_OPERATION&quot;;case e.INVALID_FRAMEBUFFER_OPERATION:return &quot;INVALID_FRAMEBUFFER_OPERATION&quot;;case e.OUT_OF_MEMORY:return &quot;OUT_OF_MEMORY&quot;;case e.CONTEXT_LOST_WEBGL:return &quot;CONTEXT_LOST_WEBGL&quot;;default:return &quot;Unknown error code &quot;+t}}function getExtensionOrThrow(e,t,n){return throwIfNull(e,t,function(){return e.getExtension(n)},&#39;Extension &quot;&#39;+n+&#39;&quot; not supported on this browser.&#39;)}function createVertexShader(e,t,n){var r=throwIfNull(e,t,function(){return e.createShader(e.VERTEX_SHADER)},&quot;Unable to create vertex WebGLShader.&quot;);if(callAndCheck(e,t,function(){return e.shaderSource(r,n)}),callAndCheck(e,t,function(){return e.compileShader(r)}),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(r)),new Error(&quot;Failed to compile vertex shader.&quot;);return r}function createFragmentShader(e,t,n){var r=throwIfNull(e,t,function(){return e.createShader(e.FRAGMENT_SHADER)},&quot;Unable to create fragment WebGLShader.&quot;);if(callAndCheck(e,t,function(){return e.shaderSource(r,n)}),callAndCheck(e,t,function(){return e.compileShader(r)}),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw logShaderSourceAndInfoLog(n,e.getShaderInfoLog(r)),new Error(&quot;Failed to compile fragment shader.&quot;);return r}var lineNumberRegex=/ERROR: [0-9]+:([0-9]+):/g;function logShaderSourceAndInfoLog(e,t){var n=lineNumberRegex.exec(t);if(null==n)return console.log(&quot;Couldn&#39;t parse line number in error: &quot;+t),void console.log(e);for(var r=+n[1],o=e.split(&quot;\n&quot;),a=o.length.toString().length+2,i=o.map(function(e,t){return rightPad((t+1).toString(),a)+e}),s=0,u=0;u&lt;i.length;u++)s=Math.max(i[u].length,s);var c=i.slice(0,r-1),l=i.slice(r-1,r),p=i.slice(r);console.log(c.join(&quot;\n&quot;)),console.log(t.split(&quot;\n&quot;)[0]),console.log(&quot;%c &quot;+rightPad(l[0],s),&quot;border:1px solid red; background-color:#e3d2d2; color:#a61717&quot;),console.log(p.join(&quot;\n&quot;));}function createProgram(e,t){return throwIfNull(e,t,function(){return e.createProgram()},&quot;Unable to create WebGLProgram.&quot;)}function linkProgram(e,t,n){if(callAndCheck(e,t,function(){return e.linkProgram(n)}),!1===e.getProgramParameter(n,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error(&quot;Failed to link vertex and fragment shaders.&quot;)}function validateProgram(e,t,n){if(callAndCheck(e,t,function(){return e.validateProgram(n)}),!1===e.getProgramParameter(n,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error(&quot;Shader program validation failed.&quot;)}function createStaticVertexBuffer(e,t,n){var r=throwIfNull(e,t,function(){return e.createBuffer()},&quot;Unable to create WebGLBuffer&quot;);return callAndCheck(e,t,function(){return e.bindBuffer(e.ARRAY_BUFFER,r)}),callAndCheck(e,t,function(){return e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW)}),r}function createStaticIndexBuffer(e,t,n){var r=throwIfNull(e,t,function(){return e.createBuffer()},&quot;Unable to create WebGLBuffer&quot;);return callAndCheck(e,t,function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)}),callAndCheck(e,t,function(){return e.bufferData(e.ELEMENT_ARRAY_BUFFER,n,e.STATIC_DRAW)}),r}function getNumChannels(){return 2===ENV.get(&quot;WEBGL_VERSION&quot;)?1:4}function createTexture(e,t){return throwIfNull(e,t,function(){return e.createTexture()},&quot;Unable to create WebGLTexture.&quot;)}function validateTextureSize(e,t){var n=ENV.get(&quot;WEBGL_MAX_TEXTURE_SIZE&quot;);if(e&lt;=0||t&lt;=0){var r=&quot;[&quot;+e+&quot;x&quot;+t+&quot;]&quot;;throw new Error(&quot;Requested texture size &quot;+r+&quot; is invalid.&quot;)}if(e&gt;n||t&gt;n){r=&quot;[&quot;+e+&quot;x&quot;+t+&quot;]&quot;;throw new Error(&quot;Requested texture size &quot;+r+&quot; greater than WebGL maximum on this browser / GPU &quot;+(&quot;[&quot;+n+&quot;x&quot;+n+&quot;]&quot;)+&quot;.&quot;)}}function createFramebuffer(e,t){return throwIfNull(e,t,function(){return e.createFramebuffer()},&quot;Unable to create WebGLFramebuffer.&quot;)}function bindVertexBufferToProgramAttribute(e,t,n,r,o,a,i,s){var u=e.getAttribLocation(n,r);return -1!==u&amp;&amp;(callAndCheck(e,t,function(){return e.bindBuffer(e.ARRAY_BUFFER,o)}),callAndCheck(e,t,function(){return e.vertexAttribPointer(u,a,e.FLOAT,!1,i,s)}),callAndCheck(e,t,function(){return e.enableVertexAttribArray(u)}),!0)}function bindTextureUnit(e,t,n,r){validateTextureUnit(e,r),callAndCheck(e,t,function(){return e.activeTexture(e.TEXTURE0+r)}),callAndCheck(e,t,function(){return e.bindTexture(e.TEXTURE_2D,n)});}function unbindTextureUnit(e,t,n){validateTextureUnit(e,n),callAndCheck(e,t,function(){return e.activeTexture(e.TEXTURE0+n)}),callAndCheck(e,t,function(){return e.bindTexture(e.TEXTURE_2D,null)});}function getProgramUniformLocationOrThrow(e,t,n,r){return throwIfNull(e,t,function(){return e.getUniformLocation(n,r)},&#39;uniform &quot;&#39;+r+&#39;&quot; not present in program.&#39;)}function getProgramUniformLocation(e,t,n){return e.getUniformLocation(t,n)}function bindTextureToProgramUniformSampler(e,t,n,r,o,a){callAndCheck(e,t,function(){return bindTextureUnit(e,t,r,a)}),callAndCheck(e,t,function(){return e.uniform1i(o,a)});}function bindCanvasToFramebuffer(e,t){callAndCheck(e,t,function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)}),callAndCheck(e,t,function(){return e.viewport(0,0,e.canvas.width,e.canvas.height)}),callAndCheck(e,t,function(){return e.scissor(0,0,e.canvas.width,e.canvas.height)});}function bindColorTextureToFramebuffer(e,t,n,r){callAndCheck(e,t,function(){return e.bindFramebuffer(e.FRAMEBUFFER,r)}),callAndCheck(e,t,function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0)});}function unbindColorTextureFromFramebuffer(e,t,n){callAndCheck(e,t,function(){return e.bindFramebuffer(e.FRAMEBUFFER,n)}),callAndCheck(e,t,function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)});}function validateFramebuffer(e){var t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error(&quot;Error binding framebuffer: &quot;+getFramebufferErrorMessage(e,t))}function getFramebufferErrorMessage(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return &quot;FRAMEBUFFER_INCOMPLETE_ATTACHMENT&quot;;case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return &quot;FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT&quot;;case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return &quot;FRAMEBUFFER_INCOMPLETE_DIMENSIONS&quot;;case e.FRAMEBUFFER_UNSUPPORTED:return &quot;FRAMEBUFFER_UNSUPPORTED&quot;;default:return &quot;unknown error &quot;+t}}function throwIfNull(e,t,n,r){var o=callAndCheck(e,t,function(){return n()});if(null==o)throw new Error(r);return o}function validateTextureUnit(e,t){var n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r&lt;e.TEXTURE0||r&gt;n)throw new Error(&quot;textureUnit must be in &quot;+(&quot;[gl.TEXTURE0, gl.TEXTURE&quot;+n+&quot;]&quot;)+&quot;.&quot;)}function getBatchDim(e,t){return void 0===t&amp;&amp;(t=2),sizeFromShape(e.slice(0,e.length-t))}function getRowsCols(e){if(0===e.length)throw Error(&quot;Cannot get rows and columns of an empty shape array.&quot;);return [e.length&gt;1?e[e.length-2]:1,e[e.length-1]]}function getTextureShapeFromLogicalShape(e,t){var n;void 0===t&amp;&amp;(t=!1);var r=ENV.get(&quot;WEBGL_MAX_TEXTURE_SIZE&quot;);if(t&amp;&amp;(r*=2,1===(e=e.map(function(t,n){return n&gt;=e.length-2?nearestLargerEven(e[n]):e[n]})).length&amp;&amp;(e=[2,e[0]])),2!==e.length){var o=squeezeShape(e);e=o.newShape;}var a=sizeFromShape(e);if(e.length&lt;=1&amp;&amp;a&lt;=r)return [1,a];if(2===e.length&amp;&amp;e[0]&lt;=r&amp;&amp;e[1]&lt;=r)return e;if(3===e.length&amp;&amp;e[0]*e[1]&lt;=r&amp;&amp;e[2]&lt;=r)return [e[0]*e[1],e[2]];if(3===e.length&amp;&amp;e[0]&lt;=r&amp;&amp;e[1]*e[2]&lt;=r)return [e[0],e[1]*e[2]];if(4===e.length&amp;&amp;e[0]*e[1]*e[2]&lt;=r&amp;&amp;e[3]&lt;=r)return [e[0]*e[1]*e[2],e[3]];if(4===e.length&amp;&amp;e[0]&lt;=r&amp;&amp;e[1]*e[2]*e[3]&lt;=r)return [e[0],e[1]*e[2]*e[3]];if(t){var i=getBatchDim(e),s=2,u=2;return e.length&amp;&amp;(s=(n=getRowsCols(e))[0],u=n[1]),sizeToSquarishShape(a=i*(s/2)*(u/2)).map(function(e){return 2*e})}return sizeToSquarishShape(a)}function isEven(e){return e%2==0}function isReshapeFree(e,t){if(arraysEqual(e=e.slice(-2),t=t.slice(-2)))return !0;if(!e.length||!t.length)return !0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return !0;if(e.length!==t.length){var n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return !0;if(isEven(n)&amp;&amp;isEven(r)&amp;&amp;(1===e[0]||1===t[0]))return !0}return e[1]===t[1]&amp;&amp;isEven(e[0])&amp;&amp;isEven(t[0])}var webgl_util=Object.freeze({callAndCheck:callAndCheck,canBeRepresented:canBeRepresented,getWebGLErrorMessage:getWebGLErrorMessage,getExtensionOrThrow:getExtensionOrThrow,createVertexShader:createVertexShader,createFragmentShader:createFragmentShader,createProgram:createProgram,linkProgram:linkProgram,validateProgram:validateProgram,createStaticVertexBuffer:createStaticVertexBuffer,createStaticIndexBuffer:createStaticIndexBuffer,getNumChannels:getNumChannels,createTexture:createTexture,validateTextureSize:validateTextureSize,createFramebuffer:createFramebuffer,bindVertexBufferToProgramAttribute:bindVertexBufferToProgramAttribute,bindTextureUnit:bindTextureUnit,unbindTextureUnit:unbindTextureUnit,getProgramUniformLocationOrThrow:getProgramUniformLocationOrThrow,getProgramUniformLocation:getProgramUniformLocation,bindTextureToProgramUniformSampler:bindTextureToProgramUniformSampler,bindCanvasToFramebuffer:bindCanvasToFramebuffer,bindColorTextureToFramebuffer:bindColorTextureToFramebuffer,unbindColorTextureFromFramebuffer:unbindColorTextureFromFramebuffer,validateFramebuffer:validateFramebuffer,getFramebufferErrorMessage:getFramebufferErrorMessage,getBatchDim:getBatchDim,getRowsCols:getRowsCols,getTextureShapeFromLogicalShape:getTextureShapeFromLogicalShape,isReshapeFree:isReshapeFree});function createVertexShader$1(e,t){var n=getGlslDifferences();return createVertexShader(e,t,n.version+&quot;\n    precision highp float;\n    &quot;+n.attribute+&quot; vec3 clipSpacePos;\n    &quot;+n.attribute+&quot; vec2 uv;\n    &quot;+n.varyingVs+&quot; vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }&quot;)}function createVertexBuffer(e,t){return createStaticVertexBuffer(e,t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function createIndexBuffer(e,t){return createStaticIndexBuffer(e,t,new Uint16Array([0,1,2,2,1,3]))}function getTextureConfig(e,t){var n,r,o,a,i,s,u,c,l=e;return 2===ENV.get(&quot;WEBGL_VERSION&quot;)?(n=l.R32F,r=l.R16F,o=l.RGBA16F,a=l.RGBA32F,i=l.RED,s=4,u=1,c=l.HALF_FLOAT):(n=e.RGBA,r=e.RGBA,o=e.RGBA,a=l.RGBA,i=e.RGBA,s=4,u=4,c=null!=t?t.HALF_FLOAT_OES:null),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:e.RGBA,downloadUnpackNumChannels:s,defaultNumChannels:u,textureTypeHalfFloat:c}}function createAndConfigureTexture(e,t,n,r,o,a,i){validateTextureSize(n,r);var s=createTexture(e,t),u=e.TEXTURE_2D;return callAndCheck(e,t,function(){return e.bindTexture(u,s)}),callAndCheck(e,t,function(){return e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)}),callAndCheck(e,t,function(){return e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)}),callAndCheck(e,t,function(){return e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST)}),callAndCheck(e,t,function(){return e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST)}),callAndCheck(e,t,function(){return e.texImage2D(u,0,o,n,r,0,a,i,null)}),callAndCheck(e,t,function(){return e.bindTexture(e.TEXTURE_2D,null)}),s}function createFloat32MatrixTexture(e,t,n,r,o){var a=getUnpackedMatrixTextureShapeWidthHeight(n,r);return createAndConfigureTexture(e,t,a[0],a[1],o.internalFormatFloat,o.textureFormatFloat,e.FLOAT)}function createFloat16MatrixTexture(e,t,n,r,o){var a=getUnpackedMatrixTextureShapeWidthHeight(n,r);return createAndConfigureTexture(e,t,a[0],a[1],o.internalFormatHalfFloat,o.textureFormatFloat,o.textureTypeHalfFloat)}function createUnsignedBytesMatrixTexture(e,t,n,r,o){var a=getUnpackedMatrixTextureShapeWidthHeight(n,r);return createAndConfigureTexture(e,t,a[0],a[1],e.RGBA,e.RGBA,e.UNSIGNED_BYTE)}function createPackedMatrixTexture(e,t,n,r,o){var a=getPackedMatrixTextureShapeWidthHeight(n,r);return createAndConfigureTexture(e,t,a[0],a[1],o.internalFormatPackedFloat,e.RGBA,e.FLOAT)}function createFloat16PackedMatrixTexture(e,t,n,r,o){var a=getPackedMatrixTextureShapeWidthHeight(n,r);return createAndConfigureTexture(e,t,a[0],a[1],o.internalFormatPackedHalfFloat,e.RGBA,o.textureTypeHalfFloat)}function bindVertexProgramAttributeStreams(e,t,n,r){return callAndCheck(e,t,function(){return e.bindBuffer(e.ARRAY_BUFFER,r)}),bindVertexBufferToProgramAttribute(e,t,n,&quot;clipSpacePos&quot;,r,3,20,0)&amp;&amp;bindVertexBufferToProgramAttribute(e,t,n,&quot;uv&quot;,r,2,20,12)}function uploadPixelDataToTexture(e,t,n,r){callAndCheck(e,t,function(){return e.bindTexture(e.TEXTURE_2D,n)}),callAndCheck(e,t,function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)}),callAndCheck(e,t,function(){return e.bindTexture(e.TEXTURE_2D,null)});}function uploadDataToTexture(e,t,n,r,o,a,i){validateTextureSize(r,o),callAndCheck(e,t,function(){return e.bindTexture(e.TEXTURE_2D,n)}),callAndCheck(e,t,function(){return e.texSubImage2D(e.TEXTURE_2D,0,0,0,r,o,i,e.FLOAT,a)}),callAndCheck(e,t,function(){return e.bindTexture(e.TEXTURE_2D,null)});}function uploadMatrixToTexture(e,t,n,r,o,a,i,s){var u,c=getUnpackedMatrixTextureShapeWidthHeight(r,o),l=c[0],p=c[1],d=r*o;1===s.defaultNumChannels&amp;&amp;d===a.length?u=a:encodeMatrixToUnpackedArray(a,u=new Float32Array(d*i),i),uploadDataToTexture(e,t,n,l,p,u,s.textureFormatFloat);}function uploadMatrixToPackedTexture(e,t,n,r,o,a,i,s,u,c){var l=getPackedMatrixTextureShapeWidthHeight(i,s),p=l[0],d=l[1],h=new Float32Array(getPackedRGBAArraySizeFromMatrixShape(i,s));encodeMatrixToPackedRGBA(u,r,o,a,h),uploadDataToTexture(e,t,n,p,d,h,e.RGBA);}function maybeCreateBufferFromOutputTexture(e,t,n,r,o,a){var i=n;if(2===ENV.get(&quot;WEBGL_VERSION&quot;)){var s=e,u=s.createBuffer();callAndCheck(e,t,function(){return e.bindBuffer(s.PIXEL_PACK_BUFFER,u)});var c=4*getUnpackedArraySizeFromMatrixSize(r*o,a.downloadUnpackNumChannels);callAndCheck(e,t,function(){return e.bufferData(s.PIXEL_PACK_BUFFER,c,s.STREAM_READ)}),callAndCheck(e,t,function(){return s.readPixels(0,0,o,r,e.RGBA,e.FLOAT,0)}),callAndCheck(e,t,function(){return e.bindBuffer(s.PIXEL_PACK_BUFFER,null)}),i=u;}return i}function downloadFloat32MatrixFromBuffer(e,t,n,r,o){var a=e,i=new Float32Array(getUnpackedArraySizeFromMatrixSize(n*r,o.downloadUnpackNumChannels));a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,i),a.bindBuffer(a.PIXEL_PACK_BUFFER,null);var s=new Float32Array(n*r);return decodeMatrixFromUnpackedArray(i,s,o.downloadUnpackNumChannels),s}function downloadFloat32MatrixFromOutputTexture(e,t,n,r,o){var a=getUnpackedMatrixTextureShapeWidthHeight(n,r),i=a[0],s=a[1],u=new Float32Array(getUnpackedArraySizeFromMatrixSize(n*r,o.downloadUnpackNumChannels));callAndCheck(e,t,function(){return e.readPixels(0,0,i,s,o.downloadTextureFormat,e.FLOAT,u)});var c=new Float32Array(n*r);return decodeMatrixFromUnpackedArray(u,c,o.downloadUnpackNumChannels),c}function downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n,r,o){var a=getUnpackedMatrixTextureShapeWidthHeight(n,r),i=a[0],s=a[1],u=new Uint8Array(getUnpackedArraySizeFromMatrixSize(n*r,4));return callAndCheck(e,t,function(){return e.readPixels(0,0,i,s,o.downloadTextureFormat,e.UNSIGNED_BYTE,u)}),new Float32Array(u.buffer)}function downloadPackedMatrixFromBuffer(e,t,n,r,o,a,i,s){var u=e,c=new Float32Array(getPackedRGBAArraySizeFromMatrixShape(a,i));u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null);var l=new Float32Array(sizeFromShape([n,r,o]));return decodeMatrixFromPackedRGBA(c,n,r,o,l),l}function downloadMatrixFromPackedOutputTexture(e,t,n,r,o,a,i,s){var u=getPackedMatrixTextureShapeWidthHeight(a,i),c=u[0],l=u[1],p=new Float32Array(getPackedRGBAArraySizeFromMatrixShape(a,i));callAndCheck(e,t,function(){return e.readPixels(0,0,c,l,e.RGBA,e.FLOAT,p)});var d=new Float32Array(sizeFromShape([n,r,o]));return decodeMatrixFromPackedRGBA(p,n,r,o,d)}var gpgpu_util=Object.freeze({createVertexShader:createVertexShader$1,createVertexBuffer:createVertexBuffer,createIndexBuffer:createIndexBuffer,getTextureConfig:getTextureConfig,createFloat32MatrixTexture:createFloat32MatrixTexture,createFloat16MatrixTexture:createFloat16MatrixTexture,createUnsignedBytesMatrixTexture:createUnsignedBytesMatrixTexture,createPackedMatrixTexture:createPackedMatrixTexture,createFloat16PackedMatrixTexture:createFloat16PackedMatrixTexture,bindVertexProgramAttributeStreams:bindVertexProgramAttributeStreams,uploadPixelDataToTexture:uploadPixelDataToTexture,uploadMatrixToTexture:uploadMatrixToTexture,uploadMatrixToPackedTexture:uploadMatrixToPackedTexture,maybeCreateBufferFromOutputTexture:maybeCreateBufferFromOutputTexture,downloadFloat32MatrixFromBuffer:downloadFloat32MatrixFromBuffer,downloadFloat32MatrixFromOutputTexture:downloadFloat32MatrixFromOutputTexture,downloadByteEncodedFloatMatrixFromOutputTexture:downloadByteEncodedFloatMatrixFromOutputTexture,downloadPackedMatrixFromBuffer:downloadPackedMatrixFromBuffer,downloadMatrixFromPackedOutputTexture:downloadMatrixFromPackedOutputTexture}),GPGPUContext=function(){function e(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=ENV.get(&quot;WEBGL_VERSION&quot;);null!=e?(this.gl=e,setWebGLContext(t,e)):this.gl=getWebGLContext(t),1===ENV.get(&quot;WEBGL_VERSION&quot;)?(this.textureFloatExtension=getExtensionOrThrow(this.gl,this.debug,&quot;OES_texture_float&quot;),this.colorBufferFloatExtension=this.gl.getExtension(&quot;WEBGL_color_buffer_float&quot;),ENV.get(&quot;WEBGL_RENDER_FLOAT32_ENABLED&quot;)||(this.textureHalfFloatExtension=getExtensionOrThrow(this.gl,this.debug,&quot;OES_texture_half_float&quot;),this.colorBufferHalfFloatExtension=this.gl.getExtension(&quot;EXT_color_buffer_half_float&quot;))):this.colorBufferFloatExtension=getExtensionOrThrow(this.gl,this.debug,&quot;EXT_color_buffer_float&quot;),this.vertexBuffer=createVertexBuffer(this.gl,this.debug),this.indexBuffer=createIndexBuffer(this.gl,this.debug),this.framebuffer=createFramebuffer(this.gl,this.debug),this.textureConfig=getTextureConfig(this.gl,this.textureHalfFloatExtension);}return Object.defineProperty(e.prototype,&quot;debug&quot;,{get:function(){return ENV.get(&quot;DEBUG&quot;)},enumerable:!0,configurable:!0}),e.prototype.dispose=function(){var e=this;if(!this.disposed){null!=this.program&amp;&amp;console.warn(&quot;Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing.&quot;),null!=this.outputTexture&amp;&amp;console.warn(&quot;Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.&quot;);var t=this.gl;callAndCheck(t,this.debug,function(){return t.finish()}),callAndCheck(t,this.debug,function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)}),callAndCheck(t,this.debug,function(){return t.deleteFramebuffer(e.framebuffer)}),callAndCheck(t,this.debug,function(){return t.bindBuffer(t.ARRAY_BUFFER,null)}),callAndCheck(t,this.debug,function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}),callAndCheck(t,this.debug,function(){return t.deleteBuffer(e.indexBuffer)}),this.disposed=!0;}},e.prototype.createFloat32MatrixTexture=function(e,t){return this.throwIfDisposed(),createFloat32MatrixTexture(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createFloat16MatrixTexture=function(e,t){return this.throwIfDisposed(),createFloat16MatrixTexture(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createUnsignedBytesMatrixTexture=function(e,t){return this.throwIfDisposed(),createUnsignedBytesMatrixTexture(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.uploadPixelDataToTexture=function(e,t){this.throwIfDisposed(),uploadPixelDataToTexture(this.gl,this.debug,e,t);},e.prototype.createFloat16PackedMatrixTexture=function(e,t){return this.throwIfDisposed(),createFloat16PackedMatrixTexture(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createPackedMatrixTexture=function(e,t){return this.throwIfDisposed(),createPackedMatrixTexture(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.deleteMatrixTexture=function(e){var t=this;this.throwIfDisposed(),this.outputTexture===e&amp;&amp;(unbindColorTextureFromFramebuffer(this.gl,this.debug,this.framebuffer),this.outputTexture=null),callAndCheck(this.gl,this.debug,function(){return t.gl.deleteTexture(e)});},e.prototype.uploadMatrixToTexture=function(e,t,n,r){this.throwIfDisposed();var o=getNumChannels();return uploadMatrixToTexture(this.gl,this.debug,e,t,n,r,o,this.textureConfig)},e.prototype.uploadMatrixToPackedTexture=function(e,t,n,r,o,a,i){return this.throwIfDisposed(),uploadMatrixToPackedTexture(this.gl,this.debug,e,t,n,r,o,a,i,this.textureConfig)},e.prototype.downloadFloat32MatrixFromOutputTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,function(){return downloadFloat32MatrixFromOutputTexture(r.gl,r.debug,t,n,r.textureConfig)})},e.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,function(){return downloadByteEncodedFloatMatrixFromOutputTexture(r.gl,r.debug,t,n,r.textureConfig)})},e.prototype.downloadPackedMatrixFromBuffer=function(e,t,n,r,o,a){return downloadPackedMatrixFromBuffer(this.gl,e,t,n,r,o,a,this.textureConfig)},e.prototype.downloadFloat32MatrixFromBuffer=function(e,t,n){return downloadFloat32MatrixFromBuffer(this.gl,e,t,n,this.textureConfig)},e.prototype.maybeCreateBufferFromTexture=function(e,t,n){this.bindTextureToFrameBuffer(e);var r=maybeCreateBufferFromOutputTexture(this.gl,this.debug,e,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r},e.prototype.createAndWaitForFence=function(){var e=this.createFence(this.gl);return this.pollFence(e)},e.prototype.createFence=function(e){var t,n,r=this;if(ENV.get(&quot;WEBGL_FENCE_API_ENABLED&quot;)){var o=e,a=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=function(){var e=o.clientWaitSync(a,0,0);return e===o.ALREADY_SIGNALED||e===o.CONDITION_SATISFIED},t=a;}else ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;)&gt;0?(t=this.beginQuery(),this.endQuery(),n=function(){return r.isQueryAvailable(t,ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;))}):n=function(){return !0};return {query:t,isFencePassed:n}},e.prototype.downloadMatrixFromPackedTexture=function(e,t,n,r,o,a){var i=this;return this.downloadMatrixDriver(e,function(){return downloadMatrixFromPackedOutputTexture(i.gl,i.debug,t,n,r,o,a,i.textureConfig)})},e.prototype.createProgram=function(e){this.throwIfDisposed();var t=this.gl,n=createFragmentShader(t,this.debug,e),r=createVertexShader$1(t,this.debug),o=createProgram(t,this.debug);return callAndCheck(t,this.debug,function(){return t.attachShader(o,r)}),callAndCheck(t,this.debug,function(){return t.attachShader(o,n)}),linkProgram(t,this.debug,o),this.debug&amp;&amp;validateProgram(t,this.debug,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=bindVertexProgramAttributeStreams(t,this.debug,this.program,this.vertexBuffer)),o},e.prototype.deleteProgram=function(e){var t=this;this.throwIfDisposed(),e===this.program&amp;&amp;(this.program=null),null!=e&amp;&amp;callAndCheck(this.gl,this.debug,function(){return t.gl.deleteProgram(e)});},e.prototype.setProgram=function(e){var t=this;this.throwIfDisposed(),this.program=e,null!=this.program&amp;&amp;this.debug&amp;&amp;validateProgram(this.gl,this.debug,this.program),callAndCheck(this.gl,this.debug,function(){return t.gl.useProgram(e)});},e.prototype.getUniformLocation=function(e,t,n){return void 0===n&amp;&amp;(n=!0),this.throwIfDisposed(),n?getProgramUniformLocationOrThrow(this.gl,this.debug,e,t):getProgramUniformLocation(this.gl,e,t)},e.prototype.getAttributeLocation=function(e,t){var n=this;return this.throwIfDisposed(),callAndCheck(this.gl,this.debug,function(){return n.gl.getAttribLocation(e,t)})},e.prototype.getUniformLocationNoThrow=function(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)},e.prototype.setInputMatrixTexture=function(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),bindTextureToProgramUniformSampler(this.gl,this.debug,this.program,e,t,n);},e.prototype.setOutputMatrixTexture=function(e,t,n){this.setOutputMatrixTextureDriver(e,n,t);},e.prototype.setOutputPackedMatrixTexture=function(e,t,n){this.throwIfDisposed();var r=getPackedMatrixTextureShapeWidthHeight(t,n),o=r[0],a=r[1];this.setOutputMatrixTextureDriver(e,o,a);},e.prototype.setOutputMatrixWriteRegion=function(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t);},e.prototype.setOutputPackedMatrixWriteRegion=function(e,t,n,r){throw new Error(&quot;setOutputPackedMatrixWriteRegion not implemented.&quot;)},e.prototype.debugValidate=function(){null!=this.program&amp;&amp;validateProgram(this.gl,this.debug,this.program),validateFramebuffer(this.gl);},e.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var e=this.gl;this.debug&amp;&amp;this.debugValidate(),callAndCheck(e,this.debug,function(){return e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)});},e.prototype.blockUntilAllProgramsCompleted=function(){var e=this;this.throwIfDisposed(),callAndCheck(this.gl,this.debug,function(){return e.gl.finish()});},e.prototype.getQueryTimerExtension=function(){return null==this.disjointQueryTimerExtension&amp;&amp;(this.disjointQueryTimerExtension=getExtensionOrThrow(this.gl,this.debug,2===ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;)?&quot;EXT_disjoint_timer_query_webgl2&quot;:&quot;EXT_disjoint_timer_query&quot;)),this.disjointQueryTimerExtension},e.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},e.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},e.prototype.beginQuery=function(){if(2===ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;)){var e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}var r=this.getQueryTimerExtensionWebGL1(),o=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,o),o},e.prototype.endQuery=function(){if(2!==ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;)){var e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT);}else{var t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);}},e.prototype.waitForQueryAndGetTime=function(e){return __awaiter$1(this,void 0,void 0,function(){var t=this;return __generator$1(this,function(n){switch(n.label){case 0:return [4,repeatedTry(function(){return t.disposed||t.isQueryAvailable(e,ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;))})];case 1:return n.sent(),[2,this.getQueryTime(e,ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;))]}})})},e.prototype.getQueryTime=function(e,t){if(0===t)return null;if(2===t){var n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}var r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6},e.prototype.isQueryAvailable=function(e,t){if(0===t)return !0;if(2===t){var n=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return null==this.disjoint&amp;&amp;(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&amp;&amp;!this.disjoint}o=(r=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&amp;&amp;(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&amp;&amp;!this.disjoint},e.prototype.pollFence=function(e){var t=this;return new Promise(function(n){t.addItemToPoll(function(){return e.isFencePassed()},function(){return n()});})},e.prototype.pollItems=function(){for(var e=linearSearchLastTrue(this.itemsToPoll.map(function(e){return e.isDoneFn})),t=0;t&lt;=e;++t){(0, this.itemsToPoll[t].resolveFn)();}this.itemsToPoll=this.itemsToPoll.slice(e+1);},e.prototype.addItemToPoll=function(e,t){var n=this;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length&gt;1||repeatedTry(function(){return n.pollItems(),0===n.itemsToPoll.length});},e.prototype.bindTextureToFrameBuffer=function(e){this.throwIfDisposed(),bindColorTextureToFramebuffer(this.gl,this.debug,e,this.framebuffer),this.debug&amp;&amp;validateFramebuffer(this.gl);},e.prototype.unbindTextureToFrameBuffer=function(){null!=this.outputTexture?(bindColorTextureToFramebuffer(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&amp;&amp;validateFramebuffer(this.gl)):unbindColorTextureFromFramebuffer(this.gl,this.debug,this.framebuffer);},e.prototype.downloadMatrixDriver=function(e,t){this.bindTextureToFrameBuffer(e);var n=t();return this.unbindTextureToFrameBuffer(),n},e.prototype.setOutputMatrixTextureDriver=function(e,t,n){this.throwIfDisposed();var r=this.gl;bindColorTextureToFramebuffer(r,this.debug,e,this.framebuffer),this.debug&amp;&amp;validateFramebuffer(r),this.outputTexture=e,callAndCheck(r,this.debug,function(){return r.viewport(0,0,t,n)}),callAndCheck(r,this.debug,function(){return r.scissor(0,0,t,n)});},e.prototype.setOutputMatrixWriteRegionDriver=function(e,t,n,r){var o=this;this.throwIfDisposed(),callAndCheck(this.gl,this.debug,function(){return o.gl.scissor(e,t,n,r)});},e.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error(&quot;Attempted to use disposed GPGPUContext.&quot;)},e.prototype.throwIfNoProgram=function(){if(null==this.program)throw new Error(&quot;No GPU program is currently set.&quot;)},e}();function linearSearchLastTrue(e){for(var t=0;t&lt;e.length;++t){if(!e[t]())break}return t-1}function compileProgram(e,t,n,r){var o=t.userCode,a=n.map(function(e,n){var r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&amp;&amp;e.texData.isPacked,flatOffset:null};return null!=e.texData&amp;&amp;null!=e.texData.slice&amp;&amp;e.texData.slice.flatOffset&gt;0&amp;&amp;(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=a.map(function(e){return e.shapeInfo}),s={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=makeShader(a,s,o,t.usesPackedTextures),c=e.createProgram(u),l=null,p=null;1===ENV.get(&quot;WEBGL_VERSION&quot;)&amp;&amp;(l=e.getUniformLocation(c,&quot;INFINITY&quot;,!1),p=e.getUniformLocation(c,&quot;NAN&quot;,!1));for(var d={},h=0;h&lt;t.variableNames.length;h++){var f=t.variableNames[h];d[f]=e.getUniformLocation(c,f,!1),d[&quot;offset&quot;+f]=e.getUniformLocation(c,&quot;offset&quot;+f,!1);}return {program:t,source:u,webGLProgram:c,uniformLocations:d,inShapeInfos:i,outShapeInfo:s,infLoc:l,nanLoc:p}}function validateBinaryAndProgram(e,t){if(e.length!==t.length)throw Error(&quot;Binary was compiled with &quot;+e.length+&quot; inputs, but was executed with &quot;+t.length+&quot; inputs&quot;);e.forEach(function(e,n){var r=e.logicalShape,o=t[n],a=o.shape;if(!arraysEqual(r,a))throw Error(&quot;Binary was compiled with different shapes than the current args. Shapes &quot;+r+&quot; and &quot;+a+&quot; must match&quot;);if(!e.isUniform||!o.isUniform){var i=e.texShape,s=o.isUniform?null:o.texData.texShape;if(!arraysEqual(i,s))throw Error(&quot;Binary was compiled with different texture shapes than the current args. Shape &quot;+i+&quot; and &quot;+s+&quot; must match&quot;)}});}function runProgram(e,t,n,r,o){validateBinaryAndProgram(t.inShapeInfos,n),validateBinaryAndProgram([t.outShapeInfo],[r]);var a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===ENV.get(&quot;WEBGL_VERSION&quot;)&amp;&amp;(null!==t.infLoc&amp;&amp;e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&amp;&amp;e.gl.uniform1f(t.nanLoc,NaN)),n.forEach(function(n,r){var o=t.program.variableNames[r],a=t.uniformLocations[o],i=t.uniformLocations[&quot;offset&quot;+o];if(null!=a)if(n.isUniform)if(sizeFromShape(n.shape)&lt;2)e.gl.uniform1f(a,n.uniformValues[0]);else{var s=n.uniformValues;s instanceof Float32Array||(s=new Float32Array(s)),e.gl.uniform1fv(a,s);}else null!=n.texData.slice&amp;&amp;null!=i&amp;&amp;e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r);}),null!=o&amp;&amp;o(e,t.webGLProgram),e.executeProgram();}function makeShaderKey(e,t,n){var r=&quot;&quot;;t.concat(n).forEach(function(e){var t=null!=e.texData&amp;&amp;null!=e.texData.slice&amp;&amp;e.texData.slice.flatOffset&gt;0,n=e.isUniform?&quot;uniform&quot;:e.texData.texShape;r+=e.shape+&quot;_&quot;+n+&quot;_&quot;+t;});var o=e.userCode,a=e.constructor.name;return a+=&quot;_&quot;+r+&quot;_&quot;+o}var Im2ColPackedProgram=function(){return function(e,t,n){this.variableNames=[&quot;A&quot;],this.usesPackedTextures=!0,this.outputShape=e;var r=n.filterWidth,o=n.inChannels,a=n.strideWidth,i=n.strideHeight,s=n.padInfo,u=n.outWidth,c=n.dilationWidth,l=n.dilationHeight,p=s.left,d=s.top,h=o*r,f=getGlslDifferences();this.userCode=&quot;\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        for(int row=0; row&lt;=1; row++) {\n          for(int col=0; col&lt;=1; col++) {\n            int blockIndex = rc.y + col;\n            int pos = rc.x + row;\n\n            if(blockIndex &gt;= &quot;+e[1]+&quot; || pos &gt;= &quot;+e[0]+&quot;) continue;\n\n            int offsetY = int(blockIndex / (&quot;+u+&quot;)) * &quot;+i+&quot; - &quot;+d+&quot;;\n            int d0 = offsetY + &quot;+l+&quot; * (pos / &quot;+h+&quot;);\n\n            if(d0 &gt;= &quot;+t[0]+&quot; || d0 &lt; 0) continue;\n\n            int offsetX = int(mod(float(blockIndex), &quot;+u+&quot;.) * &quot;+a+&quot;. - &quot;+p+&quot;.);\n            int d1 = offsetX + &quot;+c+&quot; * (int(mod(float(pos), &quot;+h+&quot;.) / &quot;+o+&quot;.));\n\n            if(d1 &gt;= &quot;+t[1]+&quot; || d1 &lt; 0) continue;\n\n            vec2 innerDims = vec2(d1, int(mod(float(pos), &quot;+o+&quot;.)));\n            result[row * 2 + col] = getChannel(getA(d0, int(innerDims.x),\n                                              int(innerDims.y)), innerDims);\n          }\n        }\n\n        &quot;+f.output+&quot; = result;\n      }\n    &quot;;}}(),LRNProgram=function(){return function(e,t,n,r,o){this.variableNames=[&quot;x&quot;],this.outputShape=[];var a,i=t,s=e[3]-1;this.outputShape=e;var u=&quot;float(&quot;+n+&quot;) + float(&quot;+r+&quot;) * sum&quot;;a=.5===o?&quot;inversesqrt(&quot;+u+&quot;)&quot;:1===o?&quot;1.0/(&quot;+u+&quot;)&quot;:&quot;exp(log(&quot;+u+&quot;) * float(-&quot;+o+&quot;));&quot;,this.userCode=&quot;\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -&quot;+i+&quot;; j &lt;= &quot;+i+&quot;; j++) {\n          int idx = d + j;\n          if (idx &gt;= 0 &amp;&amp; idx &lt;=  &quot;+s+&quot;) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * &quot;+a+&quot;;\n        setOutput(val);\n      }\n    &quot;;}}(),LRNGradProgram=function(){return function(e,t,n,r,o){this.variableNames=[&quot;inputImage&quot;,&quot;outputImage&quot;,&quot;dy&quot;],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=o,this.userCode=&quot;\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d &lt; &quot;+this.depth+&quot;; ++d) {\n          int depthBegin = int(max(0.0, float(d - &quot;+t+&quot;)));\n          int depthEnd = int(min(float(&quot;+this.depth+&quot;),\n              float(d + &quot;+t+&quot; + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = &quot;+this.depth+&quot;;\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k &lt; MAX_DEPTH_END; ++k) {\n            if (k &lt; depthBegin){\n              continue;\n            }\n            else if (k &gt;= depthBegin &amp;&amp; k &lt; depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(&quot;+r+&quot;) * norm + float(&quot;+n+&quot;);\n\n          for(int k = MIN_DEPTH_BEGIN; k &lt; MAX_DEPTH_END; ++k){\n            if (k &lt; depthBegin){\n              continue;\n            }\n            else if (k &gt;= depthBegin &amp;&amp; k &lt; depthEnd){\n              float dyi = -2.0 * float(&quot;+r+&quot;)\n                * float(&quot;+o+&quot;)\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * &quot;+o+&quot;);\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    &quot;;}}(),MaxPool2DBackpropProgram=function(){return function(e){this.variableNames=[&quot;dy&quot;,&quot;maxPos&quot;],this.outputShape=e.inShape;var t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,s=a-1-e.padInfo.left,u=o*a-1;this.userCode=&quot;\n      const ivec2 pads = ivec2(&quot;+i+&quot;, &quot;+s+&quot;);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR &lt; &quot;+o+&quot;;\n          wR += &quot;+r+&quot;) {\n          float dyR = float(dyRCorner + wR) / &quot;+t+&quot;.0;\n\n          if (dyR &lt; 0.0 || dyR &gt;= &quot;+e.outHeight+&quot;.0 || fract(dyR) &gt; 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC &lt; &quot;+a+&quot;; wC++) {\n            float dyC = float(dyCCorner + wC) / &quot;+n+&quot;.0;\n\n            if (dyC &lt; 0.0 || dyC &gt;= &quot;+e.outWidth+&quot;.0 ||\n                fract(dyC) &gt; 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = &quot;+u+&quot; - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * &quot;+a+&quot; + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    &quot;;}}(),MatMulPackedProgram=function(){return function(e,t,n,r,o,a){void 0===n&amp;&amp;(n=!1),void 0===r&amp;&amp;(r=!1),void 0===o&amp;&amp;(o=!1),void 0===a&amp;&amp;(a=null),this.variableNames=[&quot;matrixA&quot;,&quot;matrixB&quot;],this.usesPackedTextures=!0,this.outputShape=t;var i=n?e[1]:e[2],s=Math.ceil(i/2),u=n?&quot;i * 2, rc.y&quot;:&quot;rc.y, i * 2&quot;,c=r?&quot;rc.z, i * 2&quot;:&quot;i * 2, rc.z&quot;,l=n?[&quot;a.xxyy&quot;,&quot;a.zzww&quot;]:[&quot;a.xxzz&quot;,&quot;a.yyww&quot;],p=r?[&quot;b.xzxz&quot;,&quot;b.ywyw&quot;]:[&quot;b.xyxy&quot;,&quot;b.zwzw&quot;],d=&quot;&quot;,h=&quot;&quot;;a&amp;&amp;(d=&quot;vec4 activation(vec4 x) {\n        &quot;+a+&quot;\n      }&quot;,h=&quot;result = activation(result);&quot;);var f=o?&quot;result += getBiasAtOutCoords();&quot;:&quot;&quot;;o&amp;&amp;this.variableNames.push(&quot;bias&quot;),this.userCode=&quot;\n      &quot;+d+&quot;\n\n      const float sharedDimension = &quot;+s+&quot;.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i &lt; &quot;+s+&quot;; i++) {\n          vec4 a = getMatrixA(rc.x, &quot;+u+&quot;);\n          vec4 b = getMatrixB(rc.x, &quot;+c+&quot;);\n\n          result += (&quot;+l[0]+&quot; * &quot;+p[0]+&quot;) + (&quot;+l[1]+&quot; * &quot;+p[1]+&quot;);\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        &quot;+f+&quot;\n\n        &quot;+h+&quot;\n\n        setOutput(result);\n      }\n    &quot;;}}(),MultinomialProgram=function(){function e(e,t,n){this.variableNames=[&quot;probs&quot;],this.outputShape=[e,n],this.userCode=&quot;\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i &lt; &quot;+(t-1)+&quot;; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r &lt; cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(&quot;+(t-1)+&quot;));\n      }\n    &quot;;}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.seedLoc&amp;&amp;(t.seedLoc=n.getUniformLocation(r,&quot;seed&quot;)),n.gl.uniform1f(t.seedLoc,e);}},e}(),OneHotProgram=function(){return function(e,t,n,r){this.variableNames=[&quot;indices&quot;],this.outputShape=[e,t],this.userCode=&quot;\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(&quot;+r+&quot;), float(&quot;+n+&quot;),\n                      float(index == coords.y)));\n      }\n    &quot;;}}(),PackProgram=function(){return function(e){this.variableNames=[&quot;A&quot;],this.isPackShader=!0,this.outputShape=e;var t=e.length;if(0===t)this.userCode=&quot;\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      &quot;;else{var n=getChannels(&quot;rc&quot;,t),r=getCoordsDataType(t),o=getOutOfBoundsCondition(t,e,n),a=getSetup(t,e[e.length-1],e[e.length-2],n),i=getOutput(e,n);this.userCode=&quot;\n        void main() {\n          &quot;+r+&quot; rc = getOutputCoords();\n\n          if(&quot;+o+&quot;) {\n            setOutput(vec4(0));\n          } else {\n            &quot;+a+&quot;\n\n            setOutput(vec4(&quot;+i+&quot;));\n          }\n        }\n      &quot;;}}}();function getSourceCoordsArr(e,t){for(var n=[],r=0;r&lt;=1;r++)for(var o=0;o&lt;=1;o++){for(var a=(0===r?&quot;r&quot;:&quot;rp1&quot;)+&quot;, &quot;+(0===o?&quot;c&quot;:&quot;cp1&quot;),i=2;i&lt;e;i++)a=t[t.length-1-i]+&quot;,&quot;+a;n.push(a);}return n}function getOutOfBoundsCondition(e,t,n){if(1===e)return &quot;rc &gt; &quot;+t[0];for(var r=&quot;&quot;,o=e-2;o&lt;e;o++)r+=n[o]+&quot; &gt;= &quot;+t[o],o&lt;e-1&amp;&amp;(r+=&quot;||&quot;);return r}function getSetup(e,t,n,r){if(1===e)return &quot;&quot;;var o=r.slice(-2);return &quot;\n    int r = &quot;+o[0]+&quot;;\n    int c = &quot;+o[1]+&quot;;\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 &gt;= &quot;+t+&quot;;\n    bool rEdge = rp1 &gt;= &quot;+n+&quot;;\n  &quot;}function getOutput(e,t){var n=e.length,r=getSourceCoordsArr(n,t);return 1===n?&quot;getA(rc),\n            rc + 1 &gt;= &quot;+e[0]+&quot; ? 0. : getA(rc + 1),\n            0, 0&quot;:&quot;getA(&quot;+r[0]+&quot;),\n          cEdge ? 0. : getA(&quot;+r[1]+&quot;),\n          rEdge ? 0. : getA(&quot;+r[2]+&quot;),\n          rEdge || cEdge ? 0. : getA(&quot;+r[3]+&quot;)&quot;}var PadProgram=function(){return function(e,t,n){this.variableNames=[&quot;x&quot;],this.outputShape=t.map(function(t,n){return t[0]+e[n]+t[1]});var r=e.length,o=getCoordsDataType(r),a=t.map(function(e){return e[0]}).join(&quot;,&quot;),i=t.map(function(t,n){return t[0]+e[n]}).join(&quot;,&quot;),s=[&quot;coords[0]&quot;,&quot;coords[1]&quot;,&quot;coords[2]&quot;,&quot;coords[3]&quot;].slice(0,r);this.userCode=1!==r?&quot;\n      &quot;+o+&quot; start = &quot;+o+&quot;(&quot;+a+&quot;);\n      &quot;+o+&quot; end = &quot;+o+&quot;(&quot;+i+&quot;);\n\n      void main() {\n        &quot;+o+&quot; outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(&quot;+n+&quot;));\n        } else {\n          &quot;+o+&quot; coords = outC - start;\n          setOutput(getX(&quot;+s+&quot;));\n        }\n      }\n    &quot;:&quot;\n        int start = &quot;+a+&quot;;\n        int end = &quot;+i+&quot;;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC &lt; start || outC &gt;= end) {\n            setOutput(float(&quot;+n+&quot;));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      &quot;;}}(),PadPackedProgram=function(){return function(e,t,n){this.variableNames=[&quot;x&quot;],this.usesPackedTextures=!0,this.outputShape=t.map(function(t,n){return t[0]+e[n]+t[1]});for(var r=e.length,o=getCoordsDataType(r),a=t.map(function(e){return e[0]}).join(&quot;,&quot;),i=t.map(function(t,n){return t[0]+e[n]}).join(&quot;,&quot;),s=getChannels(&quot;rc&quot;,r),u=getChannels(&quot;source&quot;,r),c=s[r-1]+&quot; &lt; &quot;+this.outputShape[r-1],l=1===r?&quot;source&quot;:&quot;vec2(&quot;+u.slice(-2).join()+&quot;)&quot;,p=[o+&quot; rc = outputLoc;&quot;,s[r-1]+&quot; += 1;\n       if(&quot;+c+&quot;) {\n      &quot;,1===r?&quot;&quot;:&quot;}\n       rc = outputLoc;\n       &quot;+s[r-2]+&quot; += 1;\n       if(&quot;+s[r-2]+&quot; &lt; &quot;+this.outputShape[r-2]+&quot;) {&quot;,1===r?&quot;&quot;:&quot;  &quot;+s[r-1]+&quot; += 1;\n         if(&quot;+c+&quot;) {&quot;],d=1===r?&quot;rc &lt; start || rc &gt;= end&quot;:&quot;any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))&quot;,h=&quot;&quot;,f=0,m=1===r?2:4;f&lt;m;f++)h+=&quot;\n        &quot;+p[f]+&quot;\n        if (&quot;+d+&quot;) {\n          result[&quot;+f+&quot;] = float(&quot;+n+&quot;);\n        } else {\n          &quot;+o+&quot; source = rc - start;\n          result[&quot;+f+&quot;] = getChannel(getX(&quot;+u.join()+&quot;), &quot;+l+&quot;);\n        }\n      &quot;;h+=1===r?&quot;} &quot;:&quot;}}&quot;,this.userCode=&quot;\n      const &quot;+o+&quot; start = &quot;+o+&quot;(&quot;+a+&quot;);\n      const &quot;+o+&quot; end = &quot;+o+&quot;(&quot;+i+&quot;);\n\n      void main() {\n        &quot;+o+&quot; outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        &quot;+h+&quot;\n        setOutput(result);\n      }\n    &quot;;}}(),Pool2DProgram=function(){return function(e,t,n){if(this.variableNames=[&quot;x&quot;],&quot;avg&quot;===t&amp;&amp;n)throw new Error(&quot;Cannot compute positions for average pool.&quot;);var r=e.filterWidth,o=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;var d=&quot;avg&quot;===t,h=&quot;0.0&quot;;if(d||(h=&quot;-1.0 / 1e-20&quot;),n)this.userCode=&quot;\n        const ivec2 strides = ivec2(&quot;+o+&quot;, &quot;+a+&quot;);\n        const ivec2 pads = ivec2(&quot;+l+&quot;, &quot;+p+&quot;);\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR &lt; &quot;+u+&quot;;\n              wR += &quot;+i+&quot;) {\n            int xR = xRCorner + wR;\n\n            if (xR &lt; 0 || xR &gt;= &quot;+e.inHeight+&quot;) {\n              continue;\n            }\n\n            for (int wC = 0; wC &lt; &quot;+c+&quot;;\n                wC += &quot;+s+&quot;) {\n              int xC = xCCorner + wC;\n\n              if (xC &lt; 0 || xC &gt;= &quot;+e.inWidth+&quot;) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value &gt;= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = wR * &quot;+c+&quot; + wC;\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      &quot;;else{var f=t+&quot;(&quot;+t+&quot;(&quot;+t+&quot;(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])&quot;;&quot;avg&quot;===t&amp;&amp;(f=&quot;avgValue / count&quot;);var m=4*Math.floor(r/4),g=r%4,v=&quot;\n      if (&quot;+d+&quot;) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    &quot;;this.userCode=&quot;\n      const ivec2 strides = ivec2(&quot;+o+&quot;, &quot;+a+&quot;);\n      const ivec2 pads = ivec2(&quot;+l+&quot;, &quot;+p+&quot;);\n      const float initializationValue = &quot;+h+&quot;;\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC &lt; 0 || xC &gt;= &quot;+e.inWidth+&quot;) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(&quot;+h+&quot;);\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR &lt; &quot;+u+&quot;;\n            wR += &quot;+i+&quot;) {\n          int xR = xRCorner + wR;\n\n          if (xR &lt; 0 || xR &gt;= &quot;+e.inHeight+&quot;) {\n            continue;\n          }\n\n          for (int wC = 0; wC &lt; &quot;+m+&quot;; wC += 4) {\n            int xC = xCCorner + wC * &quot;+s+&quot;;\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + &quot;+s+&quot;, d),\n              getValue(batch, xR, xC + 2 * &quot;+s+&quot;, d),\n              getValue(batch, xR, xC + 3 * &quot;+s+&quot;, d)\n            );\n\n            &quot;+v+&quot;\n          }\n\n          int xC = xCCorner + &quot;+m+&quot;;\n          if (&quot;+(1===g)+&quot;) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            &quot;+v+&quot;\n          } else if (&quot;+(2===g)+&quot;) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + &quot;+s+&quot;, d),\n              initializationValue,\n              initializationValue\n            );\n\n            &quot;+v+&quot;\n          } else if (&quot;+(3===g)+&quot;) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + &quot;+s+&quot;, d),\n              getValue(batch, xR, xC + 2 * &quot;+s+&quot;, d),\n              initializationValue\n            );\n\n            &quot;+v+&quot;\n          }\n        }\n        setOutput(&quot;+f+&quot;);\n      }\n    &quot;;}}}(),ReduceProgram=function(){return function(e,t){this.variableNames=[&quot;x&quot;];var n=e.windowSize,r=e.batchSize,o=e.inSize,a=Math.ceil(o/n);this.outputShape=[r,a];var i=&quot;0.0&quot;,s=&quot;&quot;;&quot;prod&quot;===t?i=&quot;1.0&quot;:&quot;min&quot;===t?(i=&quot;1.0 / 1e-20&quot;,s=&quot;min&quot;):&quot;max&quot;===t&amp;&amp;(i=&quot;-1.0 / 1e-20&quot;,s=&quot;max&quot;);var u=t+&quot;(&quot;+t+&quot;(&quot;+t+&quot;(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])&quot;;&quot;sum&quot;===t?u=&quot;sumValue&quot;:&quot;prod&quot;===t?u=&quot;prodValue&quot;:&quot;all&quot;===t?u=&quot;allValue&quot;:&quot;any&quot;===t&amp;&amp;(u=&quot;anyValue&quot;);var c=4*Math.floor(n/4),l=n%4,p=&quot;\n      if (&quot;+(&quot;sum&quot;===t)+&quot;) {\n        sumValue += dot(values, ones);\n      } else if (&quot;+(&quot;prod&quot;===t)+&quot;) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = &quot;+s+&quot;(values, minMaxValue);\n      }\n    &quot;,d=&quot;vec4&quot;;&quot;all&quot;===t?(i=&quot;1.0&quot;,p=&quot;\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue &gt;= 1.0 &amp;&amp; floatedReducedAllValue &gt;= 1.0);\n      &quot;,d=&quot;bvec4&quot;):&quot;any&quot;===t&amp;&amp;(i=&quot;0.0&quot;,p=&quot;\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue &gt;= 1.0 || floatedReducedAnyValue &gt;= 1.0);\n      &quot;,d=&quot;bvec4&quot;);var h=&quot;&quot;;o%n&gt;0&amp;&amp;(h=&quot;\n        if (inIdx &lt; 0 || inIdx &gt;= &quot;+o+&quot;) {\n          return initializationValue;\n        }\n      &quot;),this.userCode=&quot;\n      const float initializationValue = &quot;+i+&quot;;\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        &quot;+h+&quot;\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * &quot;+n+&quot;;\n\n        vec4 minMaxValue = vec4(&quot;+i+&quot;);\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i &lt; &quot;+c+&quot;; i += 4) {\n          int inIdx = inOffset + i;\n          &quot;+d+&quot; values = &quot;+d+&quot;(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          &quot;+p+&quot;\n        }\n\n        int inIdx = inOffset + &quot;+c+&quot;;\n        if (&quot;+(1===l)+&quot;) {\n          &quot;+d+&quot; values = &quot;+d+&quot;(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          &quot;+p+&quot;\n        } else if (&quot;+(2===l)+&quot;) {\n          &quot;+d+&quot; values = &quot;+d+&quot;(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          &quot;+p+&quot;\n        } else if (&quot;+(3===l)+&quot;) {\n          &quot;+d+&quot; values = &quot;+d+&quot;(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          &quot;+p+&quot;\n        }\n        setOutput(&quot;+u+&quot;);\n      }\n    &quot;;}}(),ReshapePackedProgram=function(){return function(e,t){this.variableNames=[&quot;A&quot;],this.usesPackedTextures=!0,this.outputShape=e;for(var n=&quot;&quot;,r=0;r&lt;4;r++){var o=&quot;thisRC = rc;&quot;;r%2==1&amp;&amp;(o+=&quot;thisRC.z += 1;&quot;),r&gt;1&amp;&amp;(o+=&quot;thisRC.y += 1;&quot;),n+=&quot;\n        &quot;+o+&quot;\n        &quot;+(r&gt;0?&quot;if(thisRC.y &lt; rows &amp;&amp; thisRC.z &lt; cols){&quot;:&quot;&quot;)+&quot;\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[&quot;+r+&quot;] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        &quot;+(r&gt;0?&quot;}&quot;:&quot;&quot;)+&quot;\n      &quot;;}this.userCode=&quot;\n      &quot;+getReshapedInputCoords(t)+&quot;\n      &quot;+getFlatIndex(e)+&quot;\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = &quot;+e[1]+&quot;;\n        int cols = &quot;+e[2]+&quot;;\n\n        &quot;+n+&quot;\n\n        setOutput(result);\n      }\n    &quot;;}}();function getFlatIndex(e){return &quot;\n    int getFlatIndex(ivec3 coords) {\n      return round(&quot;+dotify([&quot;coords.x&quot;,&quot;coords.y&quot;,&quot;coords.z&quot;],computeStrides(e).map(function(e){return e.toString()}).concat([&quot;1.&quot;]))+&quot;);\n    }\n  &quot;}function getReshapedInputCoords(e){return &quot;\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      &quot;+getLogicalCoordinatesFromFlatIndex([&quot;r&quot;,&quot;c&quot;,&quot;d&quot;],e)+&quot;\n      return ivec3(r, c, d);\n    }\n  &quot;}var ResizeBilinearBackpropProgram=function(){return function(e,t,n){this.variableNames=[&quot;dy&quot;],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,o=r[1],a=r[2],i=e.shape,s=i[1],u=i[2],c=[n&amp;&amp;s&gt;1?o-1:o,n&amp;&amp;u&gt;1?a-1:a],l=[n&amp;&amp;s&gt;1?s-1:s,n&amp;&amp;u&gt;1?u-1:u],p=c[0]/l[0],d=c[1]/l[1],h=1/p,f=1/d,m=2*Math.ceil(h)+2,g=2*Math.ceil(f)+2;this.userCode=&quot;\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(&quot;+p+&quot;);\n        const float widthScale = float(&quot;+d+&quot;);\n\n        const float invHeightScale = float(&quot;+h+&quot;);\n        const float invWidthScale = float(&quot;+f+&quot;);\n\n        const int winHeight = int(&quot;+m+&quot;);\n        const int winWidth = int(&quot;+g+&quot;);\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset &lt; winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR &lt; 0 || dyR &gt;= &quot;+s+&quot;) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset &lt; winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC &lt; 0 || dyC &gt;= &quot;+u+&quot;) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), &quot;+(o-1)+&quot;.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), &quot;+(a-1)+&quot;.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex &amp;&amp; c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex &amp;&amp; c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex &amp;&amp; c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex &amp;&amp; c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    &quot;;}}(),ResizeBilinearProgram=function(){return function(e,t,n,r){this.variableNames=[&quot;A&quot;],this.outputShape=[];var o=e[0],a=e[1],i=e[2],s=e[3];this.outputShape=[o,t,n,s];var u=[r&amp;&amp;t&gt;1?a-1:a,r&amp;&amp;n&gt;1?i-1:i],c=[r&amp;&amp;t&gt;1?t-1:t,r&amp;&amp;n&gt;1?n-1:n];this.userCode=&quot;\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          &quot;+u[0]/c[0]+&quot;,\n          &quot;+u[1]/c[1]+&quot;);\n      const vec2 inputShapeRC = vec2(&quot;+a+&quot;.0, &quot;+i+&quot;.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    &quot;;}}(),ResizeBilinearPackedProgram=function(){return function(e,t,n,r){this.variableNames=[&quot;A&quot;],this.usesPackedTextures=!0,this.outputShape=[];var o=e[0],a=e[1],i=e[2],s=e[3];this.outputShape=[o,t,n,s];var u=[r&amp;&amp;t&gt;1?a-1:a,r&amp;&amp;n&gt;1?i-1:i],c=[r&amp;&amp;t&gt;1?t-1:t,r&amp;&amp;n&gt;1?n-1:n];this.userCode=&quot;\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          &quot;+u[0]/c[0]+&quot;,\n          &quot;+u[1]/c[1]+&quot;,\n          &quot;+u[1]/c[1]+&quot;);\n      const vec3 inputShapeRC = vec3(&quot;+a+&quot;.0, &quot;+i+&quot;.0,\n                                     &quot;+i+&quot;.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n        \n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d &lt; &quot;+(s-1)+&quot;; \n        bool hasNextRow = coords.z &lt; &quot;+(n-1)+&quot;;\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow &amp;&amp; hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow &amp;&amp; hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow &amp;&amp; hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow &amp;&amp; hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    &quot;;}}(),ResizeNearestNeigborBackpropProgram=function(){return function(e,t,n){this.variableNames=[&quot;dy&quot;],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,o=r[1],a=r[2],i=e.shape,s=i[1],u=i[2],c=[n&amp;&amp;s&gt;1?o-1:o,n&amp;&amp;u&gt;1?a-1:a],l=[n&amp;&amp;s&gt;1?s-1:s,n&amp;&amp;u&gt;1?u-1:u],p=c[0]/l[0],d=c[1]/l[1],h=1/p,f=1/d,m=2*Math.ceil(h)+2,g=2*Math.ceil(f)+2;this.userCode=&quot;\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(&quot;+p+&quot;);\n        const float widthScale = float(&quot;+d+&quot;);\n\n        const float invHeightScale = float(&quot;+h+&quot;);\n        const float invWidthScale = float(&quot;+f+&quot;);\n\n        const int winHeight = int(&quot;+m+&quot;);\n        const int winWidth = int(&quot;+g+&quot;);\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset &lt; winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR &lt; 0 || dyR &gt;= &quot;+s+&quot;) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset &lt; winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC &lt; 0 || dyC &gt;= &quot;+u+&quot;) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(&quot;+c[0]+&quot;) *\n                (float(dyR) / float(&quot;+l[0]+&quot;));\n\n            float sourceFracCol =\n                float(&quot;+c[1]+&quot;) *\n                  (float(dyC) / float(&quot;+l[1]+&quot;));\n\n            int sourceNearestRow = int(min(\n                float(int(&quot;+o+&quot;) - 1),\n                &quot;+n+&quot; ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(&quot;+a+&quot;) - 1),\n                &quot;+n+&quot; ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow &amp;&amp; c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    &quot;;}}(),ResizeNearestNeighborProgram=function(){return function(e,t,n,r){this.variableNames=[&quot;A&quot;],this.outputShape=[];var o=e[0],a=e[1],i=e[2],s=e[3];this.outputShape=[o,t,n,s];var u=[r&amp;&amp;t&gt;1?a-1:a,r&amp;&amp;n&gt;1?i-1:i],c=[r&amp;&amp;t&gt;1?t-1:t,r&amp;&amp;n&gt;1?n-1:n],l=r?&quot;0.5&quot;:&quot;0.0&quot;;this.userCode=&quot;\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          &quot;+u[0]/c[0]+&quot;,\n          &quot;+u[1]/c[1]+&quot;);\n      const vec2 inputShapeRC = vec2(&quot;+a+&quot;.0, &quot;+i+&quot;.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + &quot;+l+&quot;)));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    &quot;;}}(),ReverseProgram=function(){return function(e,t){this.variableNames=[&quot;x&quot;];var n=e.length;if(n&gt;4)throw new Error(&quot;WebGL backend: Reverse of rank-&quot;+n+&quot; tensor is not yet supported&quot;);if(this.outputShape=e,1!==n){var r=e.map(function(n,r){return function(n){return -1!==t.indexOf(n)&amp;&amp;1!==e[n]?e[n]+&quot; - coords[&quot;+n+&quot;] - 1&quot;:&quot;coords[&quot;+n+&quot;]&quot;}(r)}).join(&quot;,&quot;),o=getCoordsDataType(n);this.userCode=&quot;\n      void main() {\n        &quot;+o+&quot; coords = getOutputCoords();\n        setOutput(getX(&quot;+r+&quot;));\n      }\n    &quot;;}else this.userCode=&quot;\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(&quot;+e[0]+&quot; - coord - 1));\n        }\n      &quot;;}}(),ReversePackedProgram=function(){return function(e,t){this.variableNames=[&quot;x&quot;],this.usesPackedTextures=!0;var n=e.length;if(n&gt;4)throw new Error(&quot;WebGL backend: Reverse of rank-&quot;+n+&quot; tensor is not yet supported&quot;);this.outputShape=e;var r=getChannels(&quot;rc&quot;,n),o=r[n-1]+&quot; + 1 &lt; &quot;+this.outputShape[n-1],a=r[n-2]+&quot; + 1 &lt; &quot;+this.outputShape[n-2],i=getCoordsDataType(n);function s(n){var r=e.map(function(r,o){return function(n,r){return -1!==t.indexOf(n)&amp;&amp;1!==e[n]?e[n]+&quot; - &quot;+r[n]+&quot; - 1&quot;:&quot;&quot;+r[n]}(o,n)});return &quot;getChannel(getX(&quot;+r.join(&quot;,&quot;)+&quot;), vec2(&quot;+r.slice(-2).join(&quot;,&quot;)+&quot;))&quot;}this.userCode=1===n?&quot;\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(&quot;+e[0]+&quot; - rc - 1), rc);\n          if(&quot;+o+&quot;){\n              result.g = getChannel(getX(&quot;+e[0]+&quot; - (rc  + 1) - 1), rc + 1);\n          }\n          setOutput(result);\n        }\n      &quot;:&quot;\n        void main() {\n          &quot;+i+&quot; rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = &quot;+function(e){return s(e)}(r.slice())+&quot;;\n          if(&quot;+o+&quot;){\n            result.g = &quot;+function(e){return e[n-1]=&quot;(&quot;+e[n-1]+&quot; + 1)&quot;,s(e)}(r.slice())+&quot;;\n          }\n          if(&quot;+a+&quot;) {\n            result.b = &quot;+function(e){return e[n-2]=&quot;(&quot;+e[n-2]+&quot; + 1)&quot;,s(e)}(r.slice())+&quot;;\n            if(&quot;+o+&quot;) {\n              result.a = &quot;+function(e){return e[n-1]=&quot;(&quot;+e[n-1]+&quot; + 1)&quot;,e[n-2]=&quot;(&quot;+e[n-2]+&quot; + 1)&quot;,s(e)}(r.slice())+&quot;;\n            }\n          }\n          setOutput(result);\n        }\n    &quot;;}}(),ScatterProgram=function(){return function(e,t,n,r,o,a,i){void 0===i&amp;&amp;(i=!0),this.variableNames=[&quot;updates&quot;,&quot;indices&quot;,&quot;defaultValue&quot;],this.outputShape=a;var s=getCoordsDataType(o.length),u=getCoordsDataType(a.length),c=&quot;&quot;;1===n?c=&quot;i&quot;:2===n&amp;&amp;(c=&quot;i, j&quot;);var l=&quot;getIndices(&quot;+c+&quot;)&quot;,p=&quot;&quot;;1===r?p=&quot;i&quot;:2===r&amp;&amp;(p=&quot;i, coords[1]&quot;);var d=&quot;getUpdates(&quot;+p+&quot;)&quot;,h=t&gt;1?&quot;strides[j]&quot;:&quot;strides&quot;;this.userCode=&quot;\n        &quot;+s+&quot; strides = &quot;+s+&quot;(&quot;+o+&quot;);\n\n        void main() {\n          &quot;+u+&quot; coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i &lt; &quot;+e+&quot;; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j &lt; &quot;+t+&quot;; j++) {\n              int index = round(&quot;+l+&quot;);\n              flattenedIndex += index * &quot;+h+&quot;;\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += &quot;+d+&quot;;\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      &quot;;}}(),SegmentOpProgram=function(){return function(e,t){this.variableNames=[&quot;x&quot;,&quot;segmentIds&quot;];var n=e.windowSize,r=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/n);this.outputShape=[r,i];var s=4*Math.floor(n/4),u=n%4,c=&quot;\n        sumValue += dot(values, segFilter);\n    &quot;,l=&quot;&quot;;o%n&gt;0&amp;&amp;(l=&quot;\n        if (inIdx &lt; 0 || inIdx &gt;= &quot;+o+&quot;) {\n          return initializationValue;\n        }\n      &quot;);var p=&quot;&quot;;o%n&gt;0&amp;&amp;(p=&quot;\n        if (inIdx &lt; 0 || inIdx &gt;= &quot;+o+&quot;) {\n          return -1.0;\n        }\n      &quot;),this.userCode=&quot;\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        &quot;+l+&quot;\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        &quot;+p+&quot;\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          &quot;+a+&quot;)) * float(&quot;+n+&quot;));\n        int currentSeg = int(mod(float(outIdx), float(&quot;+a+&quot;)));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i &lt; &quot;+s+&quot;; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          &quot;+c+&quot;\n        }\n\n        int inIdx = inOffset + &quot;+s+&quot;;\n        if (&quot;+(1===u)+&quot;) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          &quot;+c+&quot;\n        } else if (&quot;+(2===u)+&quot;) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          &quot;+c+&quot;\n        } else if (&quot;+(3===u)+&quot;) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          &quot;+c+&quot;\n        }\n        setOutput(sumValue);\n      }\n    &quot;;}}(),SelectProgram=function(){return function(e,t,n){var r,o;if(this.variableNames=[&quot;c&quot;,&quot;a&quot;,&quot;b&quot;],this.outputShape=t,n&gt;4)throw Error(&quot;Where for rank &quot;+n+&quot; is not yet supported&quot;);if(1===n)o=&quot;resRC&quot;,r=&quot;resRC&quot;;else{for(var a=[&quot;resRC.x&quot;,&quot;resRC.y&quot;,&quot;resRC.z&quot;,&quot;resRC.w&quot;],i=[],s=[],u=0;u&lt;t.length;u++)s.push(&quot;&quot;+a[u]),u&lt;e&amp;&amp;i.push(&quot;&quot;+a[u]);r=i.join(),o=s.join();}var c=getCoordsDataType(n);this.userCode=&quot;\n      void main() {\n        &quot;+c+&quot; resRC = getOutputCoords();\n        float cVal = getC(&quot;+r+&quot;);\n        if (cVal &gt;= 1.0) {\n          setOutput(getA(&quot;+o+&quot;));\n        } else {\n          setOutput(getB(&quot;+o+&quot;));\n        }\n      }\n    &quot;;}}(),SliceProgram=function(){function e(e){this.variableNames=[&quot;source&quot;],this.outputShape=e,this.rank=e.length;var t,n=getCoordsDataType(this.rank),r=&quot;uniform int start[&quot;+this.rank+&quot;];&quot;,o=getCoords$1(this.rank);t=&quot;\n        &quot;+n+&quot; sourceLoc;\n        &quot;+n+&quot; coords = getOutputCoords();\n        &quot;+e.map(function(e,t){return &quot;sourceLoc.&quot;+coords[t]+&quot; = start[&quot;+t+&quot;] + coords.&quot;+coords[t]+&quot;;&quot;}).join(&quot;\n&quot;)+&quot;\n      &quot;,this.userCode=&quot;\n      &quot;+r+&quot;\n      void main() {\n        &quot;+t+&quot;\n        setOutput(getSource(&quot;+o+&quot;));\n      }\n    &quot;;}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error(&quot;The rank (&quot;+this.rank+&quot;) of the program must match the length of start (&quot;+e.length+&quot;)&quot;);return function(n,r){null==t.startLoc&amp;&amp;(t.startLoc=n.getUniformLocationNoThrow(r,&quot;start&quot;),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e);}},e}(),coords=[&quot;x&quot;,&quot;y&quot;,&quot;z&quot;,&quot;w&quot;,&quot;u&quot;,&quot;v&quot;];function getCoords$1(e){if(1===e)return &quot;sourceLoc&quot;;if(e&lt;=6)return coords.slice(0,e).map(function(e){return &quot;sourceLoc.&quot;+e}).join(&quot;,&quot;);throw Error(&quot;Slicing for rank &quot;+e+&quot; is not yet supported&quot;)}var SlicePackedProgram=function(){function e(e){this.variableNames=[&quot;source&quot;],this.usesPackedTextures=!0,this.outputShape=e,this.rank=e.length;var t=getCoordsDataType(this.rank),n=getChannels(&quot;coords&quot;,this.rank),r=getChannels(&quot;sourceLoc&quot;,this.rank),o=1===this.rank?&quot;sourceLoc&quot;:&quot;vec2(&quot;+r.slice(-2).join()+&quot;)&quot;,a=&quot;getChannel(getSource(&quot;+r.join()+&quot;), &quot;+o+&quot;)&quot;,i=&quot;\n      result.x = &quot;+a+&quot;;\n      if (++&quot;+n[this.rank-1]+&quot; &lt; &quot;+e[this.rank-1]+&quot;) {\n        ++&quot;+r[this.rank-1]+&quot;;\n        result.y = &quot;+a+&quot;;\n        --&quot;+r[this.rank-1]+&quot;;\n      }\n    &quot;,s=1===this.rank?&quot;&quot;:&quot;\n      --&quot;+n[this.rank-1]+&quot;;\n      if (++&quot;+n[this.rank-2]+&quot; &lt; &quot;+e[this.rank-2]+&quot;) {\n        ++&quot;+r[this.rank-2]+&quot;;\n        result.z = &quot;+a+&quot;;\n        if (++&quot;+n[this.rank-1]+&quot; &lt; &quot;+e[this.rank-1]+&quot;) {\n          ++&quot;+r[this.rank-1]+&quot;;\n          result.w = &quot;+a+&quot;;\n        }\n      }\n    &quot;,u=this.rank&lt;=4?&quot;sourceLoc = coords +\n            &quot;+t+&quot;(&quot;+e.map(function(e,t){return &quot;start[&quot;+t+&quot;]&quot;}).join()+&quot;);&quot;:e.map(function(e,t){return r[t]+&quot; = &quot;+n[t]+&quot; + start[&quot;+t+&quot;];&quot;}).join(&quot;\n&quot;);this.userCode=&quot;\n      uniform int start[&quot;+this.rank+&quot;];\n      void main() {\n        &quot;+t+&quot; coords = getOutputCoords();\n        &quot;+t+&quot; sourceLoc;\n        &quot;+u+&quot; \n        vec4 result = vec4(0.);\n        &quot;+i+&quot;\n        &quot;+s+&quot;\n        setOutput(result);\n      }\n    &quot;;}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error(&quot;The rank (&quot;+this.rank+&quot;) of the program must match the length of start (&quot;+e.length+&quot;)&quot;);return function(n,r){null==t.startLoc&amp;&amp;(t.startLoc=n.getUniformLocationNoThrow(r,&quot;start&quot;),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e);}},e}(),StridedSliceProgram=function(){return function(e,t,n,r){this.variableNames=[&quot;x&quot;];var o=n.filter(function(e,t){return -1===r.indexOf(t)});this.outputShape=o;var a=n.length,i=getCoordsDataType(n.length),s=getCoordsDataType(o.length),u=&quot;&quot;;if(1===a)u=&quot;coords * strides + begin&quot;;else{var c=0;u=n.map(function(e,t){return -1===r.indexOf(t)?(c++,1===o.length?&quot;coords * strides[&quot;+t+&quot;] + begin[&quot;+t+&quot;]&quot;:&quot;coords[&quot;+(c-1)+&quot;] * strides[&quot;+t+&quot;] + begin[&quot;+t+&quot;]&quot;):&quot;begin[&quot;+t+&quot;]&quot;}).join(&quot;,&quot;);}this.userCode=&quot;\n      &quot;+i+&quot; begin = &quot;+i+&quot;(&quot;+e+&quot;);\n      &quot;+i+&quot; strides = &quot;+i+&quot;(&quot;+t+&quot;);\n\n      void main() {\n        &quot;+s+&quot; coords = getOutputCoords();\n        setOutput(getX(&quot;+u+&quot;));\n      }\n    &quot;;}}(),TextureManager=function(){function e(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={};}return e.prototype.acquireTexture=function(e,t,n){var r,o=getPhysicalFromLogicalTextureType(t,n),a=getKeyFromTextureShape(e,o,n);if(a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]),this.freeTextures[a].length&gt;0){this.numFreeTextures--,this.numUsedTextures++,this.log();var i=this.freeTextures[a].shift();return this.usedTextures[a].push(i),i}return this.numUsedTextures++,this.log(),o===PhysicalTextureType.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===PhysicalTextureType.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===PhysicalTextureType.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===PhysicalTextureType.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE&amp;&amp;(r=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(r),r},e.prototype.releaseTexture=function(e,t,n,r){if(null!=this.freeTextures){var o=getKeyFromTextureShape(t,getPhysicalFromLogicalTextureType(n,r),r);o in this.freeTextures||(this.freeTextures[o]=[]),this.freeTextures[o].push(e),this.numFreeTextures++,this.numUsedTextures--;var a=this.usedTextures[o],i=a.indexOf(e);if(i&lt;0)throw new Error(&quot;Cannot release a texture that was never provided by this texture manager&quot;);a.splice(i,1),this.log();}},e.prototype.log=function(){if(this.logEnabled){var e=this.numFreeTextures+this.numUsedTextures;console.log(&quot;Free/Used&quot;,this.numFreeTextures+&quot; / &quot;+this.numUsedTextures,&quot;(&quot;+e+&quot;)&quot;);}},e.prototype.getNumUsedTextures=function(){return this.numUsedTextures},e.prototype.getNumFreeTextures=function(){return this.numFreeTextures},e.prototype.dispose=function(){var e=this;if(null!=this.freeTextures){for(var t in this.freeTextures)this.freeTextures[t].forEach(function(t){e.gpgpu.deleteMatrixTexture(t);});for(var t in this.usedTextures)this.usedTextures[t].forEach(function(t){e.gpgpu.deleteMatrixTexture(t);});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0;}},e}();function getPhysicalFromLogicalTextureType(e,t){if(e===TextureUsage.UPLOAD)return t?PhysicalTextureType.PACKED_2X2_FLOAT32:PhysicalTextureType.UNPACKED_FLOAT32;if(e===TextureUsage.RENDER||null==e)return t?ENV.get(&quot;WEBGL_RENDER_FLOAT32_ENABLED&quot;)?PhysicalTextureType.PACKED_2X2_FLOAT32:PhysicalTextureType.PACKED_2X2_FLOAT16:ENV.get(&quot;WEBGL_RENDER_FLOAT32_ENABLED&quot;)?PhysicalTextureType.UNPACKED_FLOAT32:PhysicalTextureType.UNPACKED_FLOAT16;if(e===TextureUsage.DOWNLOAD||e===TextureUsage.PIXELS)return PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;throw new Error(&quot;Unknown logical texture type &quot;+e)}function getKeyFromTextureShape(e,t,n){return e[0]+&quot;_&quot;+e[1]+&quot;_&quot;+t+&quot;_&quot;+n}var TileProgram=function(){return function(e,t){this.variableNames=[&quot;A&quot;];for(var n=new Array(e.length),r=0;r&lt;n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;var o=getCoordsDataType(this.rank),a=getSourceCoords$2(e);this.userCode=&quot;\n      void main() {\n        &quot;+o+&quot; resRC = getOutputCoords();\n        setOutput(getA(&quot;+a+&quot;));\n      }\n    &quot;;}}();function getSourceCoords$2(e){var t=e.length;if(t&gt;5)throw Error(&quot;Tile for rank &quot;+t+&quot; is not yet supported&quot;);if(1===t)return &quot;imod(resRC, &quot;+e[0]+&quot;)&quot;;for(var n=[&quot;resRC.x&quot;,&quot;resRC.y&quot;,&quot;resRC.z&quot;,&quot;resRC.w&quot;,&quot;resRC.u&quot;],r=[],o=0;o&lt;e.length;o++)r.push(&quot;imod(&quot;+n[o]+&quot;, &quot;+e[o]+&quot;)&quot;);return r.join()}var TransposeProgram=function(){return function(e,t){this.variableNames=[&quot;A&quot;];for(var n=new Array(e.length),r=0;r&lt;n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;var o=getCoordsDataType(this.rank),a=getSwitchedCoords(t);this.userCode=&quot;\n    void main() {\n      &quot;+o+&quot; resRC = getOutputCoords();\n      setOutput(getA(&quot;+a+&quot;));\n    }\n    &quot;;}}();function getSwitchedCoords(e){var t=e.length;if(t&gt;6)throw Error(&quot;Transpose for rank &quot;+t+&quot; is not yet supported&quot;);for(var n=[&quot;resRC.x&quot;,&quot;resRC.y&quot;,&quot;resRC.z&quot;,&quot;resRC.w&quot;,&quot;resRC.u&quot;,&quot;resRC.v&quot;],r=new Array(t),o=0;o&lt;e.length;o++)r[e[o]]=n[o];return r.join()}var TransposePackedProgram=function(){return function(e,t){this.variableNames=[&quot;A&quot;],this.usesPackedTextures=!0;for(var n=new Array(e.length),r=0;r&lt;n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank&gt;6)throw Error(&quot;Packed transpose for rank &quot;+this.rank+&quot; is not yet supported.&quot;);var o=getCoordsDataType(this.rank),a=getVecChannels(&quot;rc&quot;,this.rank),i=new Array(this.rank);for(r=0;r&lt;t.length;r++)i[t[r]]=a[r];var s=&quot;vec2(&quot;+i.slice(-2).join()+&quot;)&quot;,u=&quot;++&quot;+a[this.rank-1]+&quot; &lt; &quot;+n[this.rank-1],c=&quot;getChannel(getA(&quot;+i.join()+&quot;), &quot;+s+&quot;)&quot;;this.userCode=&quot;\n    void main() {\n      &quot;+o+&quot; rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = &quot;+c+&quot;;\n      if(&quot;+u+&quot;) {\n        result[1] = &quot;+c+&quot;;\n      }\n      --&quot;+a[this.rank-1]+&quot;;\n      if(++&quot;+a[this.rank-2]+&quot; &lt; &quot;+n[this.rank-2]+&quot;) {\n        result[2] = &quot;+c+&quot;;\n        if(&quot;+u+&quot;) {\n          result[3] = &quot;+c+&quot;;\n        }\n      }  \n      setOutput(result);\n    }\n    &quot;;}}(),ERF_P=.3275911,ERF_A1=.254829592,ERF_A2=-.284496736,ERF_A3=1.421413741,ERF_A4=-1.453152027,ERF_A5=1.061405429,SELU_SCALEALPHA=1.7580993408473768,SELU_SCALE=1.0507009873554805,UnaryOpProgram=function(){return function(e,t){this.variableNames=[&quot;A&quot;],this.outputShape=e,this.userCode=&quot;\n      float unaryOperation(float x) {\n        &quot;+t+&quot;\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    &quot;;}}(),CHECK_NAN_SNIPPET$2=&quot;if (isnan(x)) return x;&quot;,LINEAR=&quot;return x;&quot;,ABS=&quot;return abs(x);&quot;,RELU=CHECK_NAN_SNIPPET$2+&quot;\n  return (x &lt; 0.0) ? 0.0 : x;\n&quot;,ELU=&quot;return (x &gt;= 0.0) ? x : (exp(x) - 1.0);&quot;,SELU=&quot;\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = &quot;+SELU_SCALEALPHA+&quot;;\n  float scale = &quot;+SELU_SCALE+&quot;;\n  return (x &gt;= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n&quot;;function STEP(e){return void 0===e&amp;&amp;(e=0),CHECK_NAN_SNIPPET$2+&quot;\n    return x &gt; 0.0 ? 1.0 : float(&quot;+e+&quot;);\n  &quot;}var NEG=&quot;return -x;&quot;,CEIL=&quot;return ceil(x);&quot;,FLOOR=&quot;return floor(x);&quot;,SIGN=&quot;\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n&quot;,IS_NAN=&quot;return float(isnan(x));&quot;,IS_INF=&quot;return float(isinf(x));&quot;,IS_FINITE=&quot;return float(!isnan(x) &amp;&amp; !isinf(x));&quot;,ROUND=&quot;\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker&#39;s rounding.\n  float base = floor(x);\n  if ((x - base) &lt; 0.5) {\n    return floor(x);\n  } else if ((x - base) &gt; 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n&quot;,EXP=&quot;return exp(x);&quot;,EXPM1=&quot;return exp(x) - 1.0;&quot;,LOG=&quot;if (x &lt; 0.0) return NAN;\n  return log(x);&quot;,LOG1P=&quot;return log(1.0 + x);&quot;,SQRT=&quot;return sqrt(x);&quot;,RSQRT=&quot;return inversesqrt(x);&quot;,SIGMOID=&quot;return 1.0 / (1.0 + exp(-1.0 * x));&quot;,SOFTPLUS=&quot;\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x &gt; -threshold;\n  bool too_small = x &lt; threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n&quot;,SIN=CHECK_NAN_SNIPPET$2+&quot;\n  return sin(x);\n&quot;,COS=CHECK_NAN_SNIPPET$2+&quot;\n  return cos(x);\n&quot;,TAN=&quot;return tan(x);&quot;,ASIN=&quot;return asin(x);&quot;,ACOS=&quot;return acos(x);&quot;,ATAN=CHECK_NAN_SNIPPET$2+&quot;\n  return atan(x);\n&quot;,SINH=&quot;\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n&quot;,COSH=&quot;\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n&quot;,TANH=&quot;\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n&quot;,ASINH=&quot;return log(x + sqrt(x * x + 1.0));&quot;,ACOSH=CHECK_NAN_SNIPPET$2+&quot;\n  if (x &lt; 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));&quot;,ATANH=CHECK_NAN_SNIPPET$2+&quot;\n  if ((x &lt; -1.0) || (x &gt; 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;&quot;,ERF=&#39;\n  // Error function is calculated approximately with elementary function.\n  // See &quot;Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables&quot;, Abramowitz and Stegun.\n  float p = &#39;+ERF_P+&quot;;\n  float a1 = &quot;+ERF_A1+&quot;;\n  float a2 = &quot;+ERF_A2+&quot;;\n  float a3 = &quot;+ERF_A3+&quot;;\n  float a4 = &quot;+ERF_A4+&quot;;\n  float a5 = &quot;+ERF_A5+&quot;;\n\n  float t = 1.0 / (1.0 + p * x);\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\n&quot;,SQUARE=&quot;return x * x;&quot;,RECIPROCAL=&quot;return 1.0 / x;&quot;,LOGICAL_NOT=&quot;return float(!(x &gt;= 1.0));&quot;,TO_INT=&quot;return float(int(x));&quot;,CLONE=&quot;return x;&quot;,LINEAR$1=&quot;return x;&quot;,LOG$1=&quot;\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n&quot;,RELU$1=&quot;\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n&quot;,UnaryOpPackedProgram=function(){return function(e,t){this.variableNames=[&quot;A&quot;],this.usesPackedTextures=!0,this.outputShape=e,this.userCode=&quot;\n      vec4 unaryOperation(vec4 x) {\n        &quot;+t+&quot;\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    &quot;;}}(),UnpackProgram=function(){return function(e){this.variableNames=[&quot;A&quot;],this.usesPackedTextures=!0,this.outputShape=e;var t=e.length,n=getChannels(&quot;rc&quot;,t),r=getCoordsDataType(t),o=getSourceCoords(t,n),a=n.slice(-2),i=t&lt;=1?&quot;rc&quot;:&quot;vec2(&quot;+a.join(&quot;,&quot;)+&quot;)&quot;;this.userCode=&quot;\n      void main() {\n        &quot;+r+&quot; rc = getOutputCoords();\n        vec4 packedInput = getA(&quot;+o+&quot;);\n\n        setOutput(getChannel(packedInput, &quot;+i+&quot;));\n      }\n    &quot;;}}();function concat1d_(e){return concat(e,0)}function concat2d_(e,t){return concat(e,t)}function concat3d_(e,t){return concat(e,t)}function concat4d_(e,t){return concat(e,t)}function concat_(e,t){void 0===t&amp;&amp;(t=0),assert(e.length&gt;=1,function(){return &quot;Pass at least one tensor to concat&quot;});var n=convertToTensorArray(e,&quot;tensors&quot;,&quot;concat&quot;);t=parseAxisParam(t,n[0].shape)[0];var r=computeOutShape(n.map(function(e){return e.shape}),t);if(0===sizeFromShape(r))return tensor([],r);if(1===(n=n.filter(function(e){return e.size&gt;0})).length)return n[0];var o=n.map(function(e){return e.shape});assertParamsConsistent(o,t);var a=n;return ENV.engine.runKernel(function(e){return e.concat(n,t)},a,function(e){var n=o.map(function(e){return e[t]});return split$1(e,n,t).map(function(e){return function(){return e}})})}function split_(e,t,n){void 0===n&amp;&amp;(n=0);var r,o=convertToTensor(e,&quot;x&quot;,&quot;split&quot;);n=parseAxisParam(n,o.shape)[0],&quot;number&quot;==typeof t?(assert(o.shape[n]%t==0,function(){return &quot;Number of splits must evenly divide the axis.&quot;}),r=new Array(t).fill(o.shape[n]/t)):(assert(o.shape[n]===t.reduce(function(e,t){return e+t}),function(){return &quot;The sum of sizes must match the size of the axis dimension.&quot;}),r=t);return ENV.engine.runKernel(function(e){return e.split(o,r,n)},{$x:o},function(e){return {$x:function(){return concat(e,n)}}})}var concat=op({concat_:concat_}),concat1d=op({concat1d_:concat1d_}),concat2d=op({concat2d_:concat2d_}),concat3d=op({concat3d_:concat3d_}),concat4d=op({concat4d_:concat4d_}),split$1=op({split_:split_});function createCommonjsModule(e,t){return e(t={exports:{}},t.exports),t.exports}var alea=createCommonjsModule(function(e){!function(e,t,n){function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new function(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n&lt;e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r&gt;&gt;&gt;0,t=(r*=t)&gt;&gt;&gt;0,t+=4294967296*(r-=t);}return 2.3283064365386963e-10*(t&gt;&gt;&gt;0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(&quot; &quot;),n.s1=r(&quot; &quot;),n.s2=r(&quot; &quot;),n.s0-=r(e),n.s0&lt;0&amp;&amp;(n.s0+=1),n.s1-=r(e),n.s1&lt;0&amp;&amp;(n.s1+=1),n.s2-=r(e),n.s2&lt;0&amp;&amp;(n.s2+=1),r=null;}(e),o=t&amp;&amp;t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+1.1102230246251565e-16*(2097152*a()|0)},a.quick=a,o&amp;&amp;(&quot;object&quot;==typeof o&amp;&amp;r(o,n),a.state=function(){return r(n,{})}),a}t&amp;&amp;t.exports?t.exports=o:n&amp;&amp;n.amd?n(function(){return o}):this.alea=o;}(0,e,!1);}),xor128=createCommonjsModule(function(e){!function(e,t,n){function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new function(e){var t=this,n=&quot;&quot;;t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x&lt;&lt;11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w&gt;&gt;&gt;19^e^e&gt;&gt;&gt;8},e===(0|e)?t.x=e:n+=e;for(var r=0;r&lt;n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next();}(e),o=t&amp;&amp;t.state,a=function(){return (n.next()&gt;&gt;&gt;0)/4294967296};return a.double=function(){do{var e=((n.next()&gt;&gt;&gt;11)+(n.next()&gt;&gt;&gt;0)/4294967296)/(1&lt;&lt;21);}while(0===e);return e},a.int32=n.next,a.quick=a,o&amp;&amp;(&quot;object&quot;==typeof o&amp;&amp;r(o,n),a.state=function(){return r(n,{})}),a}t&amp;&amp;t.exports?t.exports=o:n&amp;&amp;n.amd?n(function(){return o}):this.xor128=o;}(0,e,!1);}),xorwow=createCommonjsModule(function(e){!function(e,t,n){function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new function(e){var t=this,n=&quot;&quot;;t.next=function(){var e=t.x^t.x&gt;&gt;&gt;2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v&lt;&lt;4^e^e&lt;&lt;1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r&lt;n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&amp;&amp;(t.d=t.x&lt;&lt;10^t.x&gt;&gt;&gt;4),t.next();}(e),o=t&amp;&amp;t.state,a=function(){return (n.next()&gt;&gt;&gt;0)/4294967296};return a.double=function(){do{var e=((n.next()&gt;&gt;&gt;11)+(n.next()&gt;&gt;&gt;0)/4294967296)/(1&lt;&lt;21);}while(0===e);return e},a.int32=n.next,a.quick=a,o&amp;&amp;(&quot;object&quot;==typeof o&amp;&amp;r(o,n),a.state=function(){return r(n,{})}),a}t&amp;&amp;t.exports?t.exports=o:n&amp;&amp;n.amd?n(function(){return o}):this.xorwow=o;}(0,e,!1);}),xorshift7=createCommonjsModule(function(e){!function(e,t,n){function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&amp;&amp;(e=+new Date);var n=new function(e){var t=this;t.next=function(){var e,n,r=t.x,o=t.i;return e=r[o],n=(e^=e&gt;&gt;&gt;7)^e&lt;&lt;24,n^=(e=r[o+1&amp;7])^e&gt;&gt;&gt;10,n^=(e=r[o+3&amp;7])^e&gt;&gt;&gt;3,n^=(e=r[o+4&amp;7])^e&lt;&lt;7,e=r[o+7&amp;7],n^=(e^=e&lt;&lt;13)^e&lt;&lt;9,r[o]=n,t.i=o+1&amp;7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=&quot;&quot;+t,n=0;n&lt;t.length;++n)r[7&amp;n]=r[7&amp;n]&lt;&lt;15^t.charCodeAt(n)+r[n+1&amp;7]&lt;&lt;13;for(;r.length&lt;8;)r.push(0);for(n=0;n&lt;8&amp;&amp;0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n&gt;0;--n)e.next();}(t,e);}(e),o=t&amp;&amp;t.state,a=function(){return (n.next()&gt;&gt;&gt;0)/4294967296};return a.double=function(){do{var e=((n.next()&gt;&gt;&gt;11)+(n.next()&gt;&gt;&gt;0)/4294967296)/(1&lt;&lt;21);}while(0===e);return e},a.int32=n.next,a.quick=a,o&amp;&amp;(o.x&amp;&amp;r(o,n),a.state=function(){return r(n,{})}),a}t&amp;&amp;t.exports?t.exports=o:n&amp;&amp;n.amd?n(function(){return o}):this.xorshift7=o;}(0,e,!1);}),xor4096=createCommonjsModule(function(e){!function(e,t,n){function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&amp;&amp;(e=+new Date);var n=new function(e){var t=this;t.next=function(){var e,n,r=t.w,o=t.X,a=t.i;return t.w=r=r+1640531527|0,n=o[a+34&amp;127],e=o[a=a+1&amp;127],n^=n&lt;&lt;13,e^=e&lt;&lt;17,n^=n&gt;&gt;&gt;15,e^=e&gt;&gt;&gt;12,n=o[a]=n^e,t.i=a,n+(r^r&gt;&gt;&gt;16)|0},function(e,t){var n,r,o,a,i,s=[],u=128;for(t===(0|t)?(r=t,t=null):(t+=&quot;\0&quot;,r=0,u=Math.max(u,t.length)),o=0,a=-32;a&lt;u;++a)t&amp;&amp;(r^=t.charCodeAt((a+32)%t.length)),0===a&amp;&amp;(i=r),r^=r&lt;&lt;10,r^=r&gt;&gt;&gt;15,r^=r&lt;&lt;4,r^=r&gt;&gt;&gt;13,a&gt;=0&amp;&amp;(i=i+1640531527|0,o=0==(n=s[127&amp;a]^=r+i)?o+1:0);for(o&gt;=128&amp;&amp;(s[127&amp;(t&amp;&amp;t.length||0)]=-1),o=127,a=512;a&gt;0;--a)r=s[o+34&amp;127],n=s[o=o+1&amp;127],r^=r&lt;&lt;13,n^=n&lt;&lt;17,r^=r&gt;&gt;&gt;15,n^=n&gt;&gt;&gt;12,s[o]=r^n;e.w=i,e.X=s,e.i=o;}(t,e);}(e),o=t&amp;&amp;t.state,a=function(){return (n.next()&gt;&gt;&gt;0)/4294967296};return a.double=function(){do{var e=((n.next()&gt;&gt;&gt;11)+(n.next()&gt;&gt;&gt;0)/4294967296)/(1&lt;&lt;21);}while(0===e);return e},a.int32=n.next,a.quick=a,o&amp;&amp;(o.X&amp;&amp;r(o,n),a.state=function(){return r(n,{})}),a}t&amp;&amp;t.exports?t.exports=o:n&amp;&amp;n.amd?n(function(){return o}):this.xor4096=o;}(0,e,!1);}),tychei=createCommonjsModule(function(e){!function(e,t,n){function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new function(e){var t=this,n=&quot;&quot;;t.next=function(){var e=t.b,n=t.c,r=t.d,o=t.a;return e=e&lt;&lt;25^e&gt;&gt;&gt;7^n,n=n-r|0,r=r&lt;&lt;24^r&gt;&gt;&gt;8^o,o=o-e|0,t.b=e=e&lt;&lt;20^e&gt;&gt;&gt;12^n,t.c=n=n-r|0,t.d=r&lt;&lt;16^n&gt;&gt;&gt;16^o,t.a=o-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r&lt;n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next();}(e),o=t&amp;&amp;t.state,a=function(){return (n.next()&gt;&gt;&gt;0)/4294967296};return a.double=function(){do{var e=((n.next()&gt;&gt;&gt;11)+(n.next()&gt;&gt;&gt;0)/4294967296)/(1&lt;&lt;21);}while(0===e);return e},a.int32=n.next,a.quick=a,o&amp;&amp;(&quot;object&quot;==typeof o&amp;&amp;r(o,n),a.state=function(){return r(n,{})}),a}t&amp;&amp;t.exports?t.exports=o:n&amp;&amp;n.amd?n(function(){return o}):this.tychei=o;}(0,e,!1);}),seedrandom=createCommonjsModule(function(e){!function(t,n){var r,o=this,a=256,i=6,s=&quot;random&quot;,u=n.pow(a,i),c=n.pow(2,52),l=2*c,p=a-1;function d(e,d,g){var v=[],y=f(function e(t,n){var r,o=[],a=typeof t;if(n&amp;&amp;&quot;object&quot;==a)for(r in t)try{o.push(e(t[r],n-1));}catch(e){}return o.length?o:&quot;string&quot;==a?t:t+&quot;\0&quot;}((d=1==d?{entropy:!0}:d||{}).entropy?[e,m(t)]:null==e?function(){try{var e;return r&amp;&amp;(e=r.randomBytes)?e=e(a):(e=new Uint8Array(a),(o.crypto||o.msCrypto).getRandomValues(e)),m(e)}catch(e){var n=o.navigator,i=n&amp;&amp;n.plugins;return [+new Date,o,i,o.screen,m(t)]}}():e,3),v),x=new function(e){var t,n=e.length,r=this,o=0,i=r.i=r.j=0,s=r.S=[];n||(e=[n++]);for(;o&lt;a;)s[o]=o++;for(o=0;o&lt;a;o++)s[o]=s[i=p&amp;i+e[o%n]+(t=s[o])],s[i]=t;(r.g=function(e){for(var t,n=0,o=r.i,i=r.j,s=r.S;e--;)t=s[o=p&amp;o+1],n=n*a+s[p&amp;(s[o]=s[i=p&amp;i+t])+(s[i]=t)];return r.i=o,r.j=i,n})(a);}(v),E=function(){for(var e=x.g(i),t=u,n=0;e&lt;c;)e=(e+n)*a,t*=a,n=x.g(1);for(;e&gt;=l;)e/=2,t/=2,n&gt;&gt;&gt;=1;return (e+n)/t};return E.int32=function(){return 0|x.g(4)},E.quick=function(){return x.g(4)/4294967296},E.double=E,f(m(x.S),t),(d.pass||g||function(e,t,r,o){return o&amp;&amp;(o.S&amp;&amp;h(o,x),e.state=function(){return h(x,{})}),r?(n[s]=e,t):e})(E,y,&quot;global&quot;in d?d.global:this==n,d.state)}function h(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){for(var n,r=e+&quot;&quot;,o=0;o&lt;r.length;)t[p&amp;o]=p&amp;(n^=19*t[p&amp;o])+r.charCodeAt(o++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(n[&quot;seed&quot;+s]=d,f(n.random(),t),e.exports){e.exports=d;try{r=require(&quot;crypto&quot;);}catch(e){}}}([],Math);});seedrandom.alea=alea,seedrandom.xor128=xor128,seedrandom.xorwow=xorwow,seedrandom.xorshift7=xorshift7,seedrandom.xor4096=xor4096,seedrandom.tychei=tychei;var seedrandom$1=seedrandom,seedrandom_1=seedrandom$1.alea,MPRandGauss=function(){function e(e,t,n,r,o){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&amp;&amp;(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var a=o||Math.random();this.random=seedrandom_1(a.toString());}return e.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var e=this.nextVal;return this.nextVal=NaN,e}for(var t,n,r=!1;!r;){var o=void 0,a=void 0,i=void 0;do{i=(o=2*this.random()-1)*o+(a=2*this.random()-1)*a;}while(i&gt;=1||0===i);var s=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*o*s,n=this.mean+this.stdDev*a*s,this.truncated&amp;&amp;!this.isValidTruncated(t)||(r=!0);}return this.truncated&amp;&amp;!this.isValidTruncated(n)||(this.nextVal=this.convertValue(n)),this.convertValue(t)},e.prototype.convertValue=function(e){return null==this.dtype||&quot;float32&quot;===this.dtype?e:Math.round(e)},e.prototype.isValidTruncated=function(e){return e&lt;=this.upper&amp;&amp;e&gt;=this.lower},e}();function clone_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;clone&quot;,null);return ENV.engine.runKernel(function(e){return Tensor.make(t.shape,{dataId:t.dataId},t.dtype)},{$x:t},function(e){return {$x:function(){return e.toFloat()}}})}function eye_(e,t,n,r){void 0===r&amp;&amp;(r=&quot;float32&quot;),null==t&amp;&amp;(t=e);for(var o=buffer([e,t],r),a=e&lt;=t?e:t,i=0;i&lt;a;++i)o.set(1,i,i);var s=o.toTensor().as2D(e,t);if(null==n)return s;if(1===n.length)return tile(expandDims(s,0),[n[0],1,1]);if(2===n.length)return tile(expandDims(expandDims(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return tile(expandDims(expandDims(expandDims(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(&quot;eye() currently supports only 1D and 2D batchShapes, but received &quot;+n.length+&quot;D.&quot;)}function randomNormal_(e,t,n,r,o){if(void 0===t&amp;&amp;(t=0),void 0===n&amp;&amp;(n=1),null!=r&amp;&amp;&quot;bool&quot;===r)throw new Error(&quot;Unsupported data type &quot;+r);for(var a=new MPRandGauss(t,n,r,!1,o),i=buffer(e,r),s=0;s&lt;i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}function truncatedNormal_(e,t,n,r,o){if(void 0===t&amp;&amp;(t=0),void 0===n&amp;&amp;(n=1),null!=r&amp;&amp;&quot;bool&quot;===r)throw new Error(&quot;Unsupported data type &quot;+r);for(var a=new MPRandGauss(t,n,r,!0,o),i=buffer(e,r),s=0;s&lt;i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}function randomUniform_(e,t,n,r){void 0===t&amp;&amp;(t=0),void 0===n&amp;&amp;(n=1),void 0===r&amp;&amp;(r=&quot;float32&quot;);for(var o=buffer(e,r),a=0;a&lt;o.values.length;a++)o.values[a]=randUniform(t,n);return o.toTensor()}function rand_(e,t,n){var r=sizeFromShape(e),o=null;if(null==n||&quot;float32&quot;===n)o=new Float32Array(r);else if(&quot;int32&quot;===n)o=new Int32Array(r);else{if(&quot;bool&quot;!==n)throw new Error(&quot;Unknown data type &quot;+n);o=new Uint8Array(r);}for(var a=0;a&lt;r;a++)o[a]=t();return Tensor.make(e,{values:o},n)}function multinomial_(e,t,n,r){void 0===r&amp;&amp;(r=!1);var o=convertToTensor(e,&quot;logits&quot;,&quot;multinomial&quot;),a=o.size,i=o.rank;if(a&lt;2)throw new Error(&quot;Error in multinomial: you need at least 2 outcomes, but got &quot;+a+&quot;.&quot;);if(i&gt;2)throw new Error(&quot;Rank of probabilities must be 1 or 2, but is &quot;+i);n=n||Math.random();var s=1===i?o.as2D(1,-1):o,u=ENV.engine.runKernel(function(e){return e.multinomial(s,r,t,n)},{logits2D:s});return 1===i?u.as1D():u}function oneHot_(e,t,n,r){if(void 0===n&amp;&amp;(n=1),void 0===r&amp;&amp;(r=0),t&lt;2)throw new Error(&quot;Error in oneHot: depth must be &gt;=2, but it is &quot;+t);var o=convertToTensor(e,&quot;indices&quot;,&quot;oneHot&quot;,&quot;int32&quot;),a=o.shape.concat([t]);o=o.flatten();return ENV.engine.runKernel(function(e){return e.oneHot(o,t,n,r)},{$indices:o},function(e){return {$indices:function(){return zeros(o.shape,&quot;float32&quot;)}}}).reshape(a)}function reshape_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;reshape&quot;,null);t=inferFromImplicitShape(t,n.size),assert(n.size===sizeFromShape(t),function(){return &quot;new shape and old shape must have the same number of elements.&quot;});return ENV.engine.runKernel(function(e){return e.reshape(n,t)},{$x:n},function(e){return {$x:function(){return e.reshape(n.shape)}}})}function squeeze_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;squeeze&quot;);return reshape(n,squeezeShape(n.shape,t).newShape)}function cast_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;cast&quot;);return ENV.engine.runKernel(function(e){return e.cast(n,t)},{$x:n},function(e){return {$x:function(){return e.clone()}}})}function tile_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;tile&quot;);assert(n.rank===t.length,function(){return &quot;Error in transpose: rank of input &quot;+n.rank+&quot; must match length of reps &quot;+t+&quot;.&quot;});return ENV.engine.runKernel(function(e,r){var o=e.tile(n,t);return r([n]),o},{$x:n},function(e,n){var r=n[0];return {$x:function(){var n=zerosLike(r);if(1===r.rank)for(var o=0;o&lt;t[0];++o)n=n.add(e.slice([o*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(o=0;o&lt;t[0];++o)for(var a=0;a&lt;t[1];++a)n=n.add(e.slice([o*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(o=0;o&lt;t[0];++o)for(a=0;a&lt;t[1];++a)for(var i=0;i&lt;t[2];++i)n=n.add(e.slice([o*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(&quot;Gradient for tile operation is not implemented for rank-&quot;+r.rank+&quot; tensors yet.&quot;);for(o=0;o&lt;t[0];++o)for(a=0;a&lt;t[1];++a)for(i=0;i&lt;t[2];++i)for(var s=0;s&lt;t[3];++s)n=n.add(e.slice([o*r.shape[0],a*r.shape[1],i*r.shape[2],s*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));}return n}}})}function pad1d_(e,t,n){return void 0===n&amp;&amp;(n=0),assert(2===t.length,function(){return &quot;Invalid number of paddings. Must be length of 2.&quot;}),pad(e,[t],n)}function pad2d_(e,t,n){return void 0===n&amp;&amp;(n=0),assert(2===t.length&amp;&amp;2===t[0].length&amp;&amp;2===t[1].length,function(){return &quot;Invalid number of paddings. Must be length of 2 each.&quot;}),pad(e,t,n)}function pad3d_(e,t,n){return void 0===n&amp;&amp;(n=0),assert(3===t.length&amp;&amp;2===t[0].length&amp;&amp;2===t[1].length&amp;&amp;2===t[2].length,function(){return &quot;Invalid number of paddings. Must be length of 2 each.&quot;}),pad(e,t,n)}function pad4d_(e,t,n){return void 0===n&amp;&amp;(n=0),assert(4===t.length&amp;&amp;2===t[0].length&amp;&amp;2===t[1].length&amp;&amp;2===t[2].length&amp;&amp;2===t[3].length,function(){return &quot;Invalid number of paddings. Must be length of 2 each.&quot;}),pad(e,t,n)}function pad_(e,t,n){void 0===n&amp;&amp;(n=0);var r=convertToTensor(e,&quot;x&quot;,&quot;pad&quot;);if(0===r.rank)throw new Error(&quot;pad(scalar) is not defined. Pass non-scalar to pad&quot;);var o=t.map(function(e){return e[0]});return ENV.engine.runKernel(function(e){return e.pad(r,t,n)},{$x:r},function(e){return {$x:function(){return e.slice(o,r.shape)}}})}function stack_(e,t){void 0===t&amp;&amp;(t=0);var n=convertToTensorArray(e,&quot;tensors&quot;,&quot;stack&quot;);if(assert(n.length&gt;=1,function(){return &quot;Pass at least one tensor to tf.stack&quot;}),1===n.length)return n[0].expandDims(t);var r=n[0].rank,o=n[0].shape,a=n[0].dtype;assert(t&lt;=r,function(){return &quot;Axis must be &lt;= rank of the tensor&quot;}),n.forEach(function(e){assertShapesMatch(o,e.shape,&quot;All tensors passed to stack must have matching shapes&quot;);}),n.forEach(function(e){assert(a===e.dtype,function(){return &quot;All tensors passed to stack must have matching dtypes&quot;});});var i=n.map(function(e){return e.expandDims(t)});return concat(i,t)}function batchToSpaceND_(e,t,n){var r=convertToTensor(e,&quot;x&quot;,&quot;batchToSpaceND&quot;),o=t.reduce(function(e,t){return e*t});assert(r.rank&gt;=1+t.length,function(){return &quot;input rank is &quot;+r.rank+&quot; but should be &gt; than blockShape.length &quot;+t.length}),assert(n.length===t.length,function(){return &quot;crops.length is &quot;+n.length+&quot; but should be equal to blockShape.length  &quot;+t.length}),assert(r.shape[0]%o==0,function(){return &quot;input tensor batch is &quot;+r.shape[0]+&quot; but is not divisible by the product of the elements of blockShape &quot;+t.join(&quot; * &quot;)+&quot; === &quot;+o});return ENV.engine.runKernel(function(e){return e.batchToSpaceND(r,t,n)},{$x:r},function(e){return {$x:function(){return e.spaceToBatchND(t,n)}}})}function spaceToBatchND_(e,t,n){var r=convertToTensor(e,&quot;x&quot;,&quot;spaceToBatchND&quot;);assert(r.rank&gt;=1+t.length,function(){return &quot;input rank &quot;+r.rank+&quot; should be &gt; than [blockShape] &quot;+t.length}),assert(n.length===t.length,function(){return &quot;paddings.shape[0] &quot;+n.length+&quot; must be equal to [blockShape] &quot;+t.length}),assert(r.shape.reduce(function(e,r,o){return o&gt;0&amp;&amp;o&lt;=t.length?e&amp;&amp;(r+n[o-1][0]+n[o-1][1])%t[o-1]==0:e},!0),function(){return &quot;input spatial dimensions &quot;+r.shape.slice(1)+&quot; with paddings &quot;+n.toString()+&quot; must be divisible by blockShapes &quot;+t.toString()});return ENV.engine.runKernel(function(e){return e.spaceToBatchND(r,t,n)},{$x:r},function(e){return {$x:function(){return e.batchToSpaceND(t,n)}}})}function unstack_(e,t){void 0===t&amp;&amp;(t=0),t=t||0;var n=convertToTensor(e,&quot;x&quot;,&quot;unstack&quot;);assert(t&gt;=-n.shape.length&amp;&amp;t&lt;n.shape.length,function(){return &quot;Axis = &quot;+t+&quot; is not in [-&quot;+n.shape.length+&quot;, &quot;+n.shape.length+&quot;)&quot;}),t&lt;0&amp;&amp;(t+=n.shape.length);return ENV.engine.runKernel(function(e){return e.unstack(n,t)},{$x:n},function(e){return {$x:function(){return stack(e,t)}}})}function cumsum_(e,t,n,r){void 0===t&amp;&amp;(t=0),void 0===n&amp;&amp;(n=!1),void 0===r&amp;&amp;(r=!1);var o=convertToTensor(e,&quot;x&quot;,&quot;cumsum&quot;),a=getAxesPermutation([t|=0],o.rank),i=o;null!=a&amp;&amp;(i=o.transpose(a));var s=getInnerMostAxes(1,o.rank)[0],u=ENV.engine.runKernel(function(e){return e.cumsum(i,s,n,r)},{permutedX:i},function(e){return {permutedX:function(){return e.cumsum(t,n,!r)}}});return null!=a&amp;&amp;(u=u.transpose(a)),u}function expandDims_(e,t){void 0===t&amp;&amp;(t=0);var n=convertToTensor(e,&quot;x&quot;,&quot;expandDims&quot;);assert(t&lt;=n.rank,function(){return &quot;Axis must be &lt;= rank of the tensor&quot;});var r=n.shape.slice();return t&lt;0&amp;&amp;(assert(-(n.rank+1)&lt;=t,function(){return &quot;Axis must be in the interval [&quot;+-(n.rank+1)+&quot;, &quot;+n.rank+&quot;]&quot;}),t=n.rank+t+1),r.splice(t,0,1),reshape(n,r)}function depthToSpace_(e,t,n){void 0===n&amp;&amp;(n=&quot;NHWC&quot;);var r=convertToTensor(e,&quot;x&quot;,&quot;depthToSpace&quot;),o=&quot;NHWC&quot;===n?r.shape[1]:r.shape[2],a=&quot;NHWC&quot;===n?r.shape[2]:r.shape[3],i=&quot;NHWC&quot;===n?r.shape[3]:r.shape[1];return assert(o*t&gt;=0,function(){return &quot;Negative dimension size caused by overflow when multiplying\n      &quot;+o+&quot; and &quot;+t+&quot;  for depthToSpace with input shape\n      &quot;+r.shape}),assert(a*t&gt;=0,function(){return &quot;Negative dimension size caused by overflow when multiplying\n      &quot;+a+&quot; and &quot;+t+&quot; for depthToSpace with input shape\n          &quot;+r.shape}),assert(i%(t*t)==0,function(){return &quot;Dimension size must be evenly divisible by &quot;+t*t+&quot; but is &quot;+i+&quot; for depthToSpace with input shape &quot;+r.shape}),ENV.engine.runKernel(function(e){return e.depthToSpace(r,t,n)},{$x:r})}function setdiff1dAsync_(e,t){return __awaiter$1(this,void 0,void 0,function(){var n,r,o,a,i,s,u,c,l,p;return __generator$1(this,function(d){switch(d.label){case 0:return n=convertToTensor(e,&quot;x&quot;,&quot;setdiff1d&quot;),r=convertToTensor(t,&quot;y&quot;,&quot;setdiff1d&quot;),assert(n.dtype===r.dtype,function(){return &quot;x and y should have the same dtype, but got x (&quot;+n.dtype+&quot;) and y (&quot;+r.dtype+&quot;).&quot;}),assert(1===n.rank,function(){return &quot;x should be 1D tensor, but got x (&quot;+n.shape+&quot;).&quot;}),assert(1===r.rank,function(){return &quot;y should be 1D tensor, but got y (&quot;+r.shape+&quot;).&quot;}),[4,n.data()];case 1:return o=d.sent(),[4,r.data()];case 2:for(a=d.sent(),i=new Set(a),s=0,l=0;l&lt;o.length;l++)i.has(o[l])||s++;for(u=new TensorBuffer([s],n.dtype),c=new TensorBuffer([s],&quot;int32&quot;),l=0,p=0;l&lt;o.length;l++)i.has(o[l])||(u.values[p]=o[l],c.values[p]=l,p++);return [2,[u.toTensor(),c.toTensor()]]}})})}function buffer(e,t,n){return void 0===t&amp;&amp;(t=&quot;float32&quot;),t=t||&quot;float32&quot;,assertNonNegativeIntegerDimensions(e),new TensorBuffer(e,t,n)}function print(e,t){void 0===t&amp;&amp;(t=!1),console.log(e.toString(t));}var batchToSpaceND=op({batchToSpaceND_:batchToSpaceND_}),cast=op({cast_:cast_}),clone=op({clone_:clone_}),cumsum=op({cumsum_:cumsum_}),depthToSpace=op({depthToSpace_:depthToSpace_}),expandDims=op({expandDims_:expandDims_}),eye=op({eye_:eye_}),multinomial=op({multinomial_:multinomial_}),oneHot=op({oneHot_:oneHot_}),pad=op({pad_:pad_}),pad1d=op({pad1d_:pad1d_}),pad2d=op({pad2d_:pad2d_}),pad3d=op({pad3d_:pad3d_}),pad4d=op({pad4d_:pad4d_}),rand=op({rand_:rand_}),randomNormal=op({randomNormal_:randomNormal_}),randomUniform=op({randomUniform_:randomUniform_}),reshape=op({reshape_:reshape_}),spaceToBatchND=op({spaceToBatchND_:spaceToBatchND_}),squeeze=op({squeeze_:squeeze_}),stack=op({stack_:stack_}),tile=op({tile_:tile_}),truncatedNormal=op({truncatedNormal_:truncatedNormal_}),unstack=op({unstack_:unstack_}),setdiff1dAsync=setdiff1dAsync_;function whereImpl(e,t){for(var n=[],r=0;r&lt;t.length;r++)t[r]&amp;&amp;n.push(r);var o=buffer(e,&quot;int32&quot;),a=buffer([n.length,e.length],&quot;int32&quot;);for(r=0;r&lt;n.length;r++){var i=o.indexToLoc(n[r]),s=r*e.length;a.values.set(i,s);}return a.toTensor()}var binaryCaches={};function getBinaryCache(e){return e in binaryCaches?binaryCaches[e]:(binaryCaches[e]={},binaryCaches[e])}function mapActivationToShaderProgram(e,t){if(void 0===t&amp;&amp;(t=!1),&quot;linear&quot;===e)return t?LINEAR$1:LINEAR;if(&quot;relu&quot;===e)return t?RELU$1:RELU;throw new Error(&quot;Activation &quot;+e+&quot; has not been implemented for the WebGL backend.&quot;)}var CPU_HANDOFF_SIZE_THRESHOLD=128,MATMUL_SHARED_DIM_THRESHOLD=1e3,MathBackendWebGL=function(){function e(e){if(this.gpgpu=e,this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.lruDataGPU=[],this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.disposed=!1,ENV.get(&quot;WEBGL_VERSION&quot;)&lt;1)throw new Error(&quot;WebGL is not supported on this device&quot;);if(null==e){var t=getWebGLContext(ENV.get(&quot;WEBGL_VERSION&quot;));this.binaryCache=getBinaryCache(ENV.get(&quot;WEBGL_VERSION&quot;)),this.gpgpu=new GPGPUContext(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0;}else this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new TextureManager(this.gpgpu);}return e.prototype.register=function(e,t,n){if(this.texData.has(e))throw new Error(&quot;Data buffer is already registered&quot;);this.texData.set(e,{shape:t,dtype:n});},e.prototype.setDataMover=function(e){this.texData=new DataStorage(e);},e.prototype.fromPixels=function(e,t){if(null==e)throw new Error(&quot;pixels passed to tf.browser.fromPixels() can not be null&quot;);var n=[e.height,e.width],r=[e.height,e.width,t];if(ENV.get(&quot;IS_BROWSER&quot;)){if(!(e instanceof HTMLVideoElement||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement||e instanceof ImageData))throw new Error(&quot;pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement or ImageData, but was &quot;+e.constructor.name);if(e instanceof HTMLVideoElement){if(null==this.fromPixels2DContext){if(&quot;complete&quot;!==document.readyState)throw new Error(&quot;The DOM is not ready yet. Please call tf.browser.fromPixels() once the DOM is ready. One way to do that is to add an event listener for `DOMContentLoaded` on the document object&quot;);this.fromPixels2DContext=document.createElement(&quot;canvas&quot;).getContext(&quot;2d&quot;);}this.fromPixels2DContext.canvas.width=e.width,this.fromPixels2DContext.canvas.height=e.height,this.fromPixels2DContext.drawImage(e,0,0,e.width,e.height),e=this.fromPixels2DContext.canvas;}}var o=this.makeTensorHandle(n,&quot;int32&quot;);this.texData.get(o.dataId).usage=TextureUsage.PIXELS,this.gpgpu.uploadPixelDataToTexture(this.getTexture(o.dataId),e);var a=new FromPixelsProgram(r),i=this.compileAndRun(a,[o]);return this.disposeData(o.dataId),i},e.prototype.makeTensorHandle=function(e,t){var n={};return this.register(n,e,t),{dataId:n,shape:e,dtype:t}},e.prototype.write=function(e,t){if(null==t)throw new Error(&quot;MathBackendWebGL.write(): values can not be null&quot;);if(ENV.get(&quot;DEBUG&quot;))for(var n=0;n&lt;t.length;n++){var r=t[n];if(!canBeRepresented(r))throw Error(&quot;The value &quot;+r+&quot; cannot be represented on this device.&quot;)}var o=this.texData.get(e),a=o.texture,i=o.texShape,s=o.usage,u=o.dtype,c=o.isPacked;if(&quot;complex64&quot;===u)throw new Error(&quot;Cannot write to a complex64 dtype. Please use tf.complex(real, imag).&quot;);null!=a&amp;&amp;(this.releaseTexture(e,a,i,s,u,c),o.texture=null,o.texShape=null),o.usage=TextureUsage.UPLOAD,o.values=t;},e.prototype.readSync=function(e){var t=this.texData.get(e),n=t.values,r=t.dtype,o=t.complexTensors,a=t.slice,i=t.shape;if(null!=a){var s=new UnaryOpProgram(i,CLONE),u=this.compileAndRun(s,[{dataId:e,shape:i,dtype:r}]),c=this.readSync(u.dataId);return u.dispose(),c}if(null!=n)return this.convertAndCacheOnCPU(e);if(&quot;string&quot;===r)return n;var l,p,d=null!=this.activeTimers;(d&amp;&amp;(l=performance.now()),&quot;complex64&quot;===r)?p=mergeRealAndImagArrays(o.real.dataSync(),o.imag.dataSync()):p=this.getValuesFromTexture(e);return d&amp;&amp;(this.downloadWaitMs+=performance.now()-l),this.convertAndCacheOnCPU(e,p)},e.prototype.read=function(e){return __awaiter$1(this,void 0,void 0,function(){var t,n,r,o,a,i,s,u,c,l,p,d,h,f,m,g,v,y,x,E,T,b,w,S;return __generator$1(this,function(C){switch(C.label){case 0:if(this.pendingRead.has(e))return r=this.pendingRead.get(e),[2,new Promise(function(e){return r.push(e)})];if(o=this.texData.get(e),a=o.texture,i=o.values,s=o.texShape,u=o.isPacked,c=o.shape,l=o.slice,p=o.dtype,null!=l)return d=new UnaryOpProgram(c,CLONE),h=this.compileAndRun(d,[{dataId:e,shape:c,dtype:p}]),f=this.read(h.dataId),h.dispose(),[2,f];if(null!=i)return [2,this.convertAndCacheOnCPU(e)];if(this.pendingRead.set(e,[]),!ENV.get(&quot;WEBGL_DOWNLOAD_FLOAT_ENABLED&quot;)&amp;&amp;2===ENV.get(&quot;WEBGL_VERSION&quot;))throw new Error(&quot;tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.&quot;);return m=s[1],g=s[0],u&amp;&amp;(t=getPackedMatrixTextureShapeWidthHeight(s[0],s[1]),m=t[0],g=t[1]),v=this.gpgpu.maybeCreateBufferFromTexture(a,g,m),[4,this.gpgpu.createAndWaitForFence()];case 1:return C.sent(),v instanceof WebGLTexture?y=this.getValuesFromTexture(e):(x=sizeFromShape(c),u?(E=getBatchDim(c),T=1,b=1,c.length&amp;&amp;(n=getRowsCols(c),T=n[0],b=n[1]),y=this.gpgpu.downloadPackedMatrixFromBuffer(v,E,T,b,s[0],s[1]).subarray(0,x)):y=this.gpgpu.downloadFloat32MatrixFromBuffer(v,s[0],s[1]).subarray(0,x)),w=this.convertAndCacheOnCPU(e,y),S=this.pendingRead.get(e),this.pendingRead.delete(e),S.forEach(function(e){return e(w)}),this.pendingDisposal.has(e)&amp;&amp;(this.pendingDisposal.delete(e),this.disposeData(e)),[2,w]}})})},e.prototype.getValuesFromTexture=function(e){var t,n=this,r=this.texData.get(e),o=r.shape,a=r.dtype,i=r.texture,s=r.texShape,u=sizeFromShape(o);if(ENV.get(&quot;WEBGL_DOWNLOAD_FLOAT_ENABLED&quot;)){if(this.texData.get(e).isPacked){var c=getBatchDim(o),l=1,p=1;return o.length&amp;&amp;(l=(t=getRowsCols(o))[0],p=t[1]),this.gpgpu.downloadMatrixFromPackedTexture(i,c,l,p,s[0],s[1]).subarray(0,u)}return this.gpgpu.downloadFloat32MatrixFromOutputTexture(i,s[0],s[1]).subarray(0,u)}var d=this.makeTensorHandle(o,&quot;float32&quot;);d.size=sizeFromShape(o),this.texData.get(d.dataId).usage=TextureUsage.DOWNLOAD;var h=tidy(function(){var t=new EncodeFloatProgram(o);return n.compileAndRun(t,[{shape:o,dtype:a,dataId:e}],d,null,!1)}),f=this.texData.get(h.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture,f.texShape[0],f.texShape[1]).subarray(0,u);return this.disposeData(d.dataId),m},e.prototype.time=function(e){return __awaiter$1(this,void 0,void 0,function(){var t,n,r,o,a,i,s;return __generator$1(this,function(u){switch(u.label){case 0:return t=this.activeTimers,n=[],r=!1,null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e(),o=flatten(this.activeTimers.map(function(e){return e.query})).filter(function(e){return null!=e}),a=flatten(this.activeTimers.map(function(e){return e.name})).filter(function(e){return null!=e}),this.activeTimers=t,r&amp;&amp;(this.programTimersStack=null),[4,Promise.all(o)];case 1:return i=u.sent(),s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:sum(i),getExtraProfileInfo:function(){return i.map(function(e,t){return {name:a[t],ms:e}}).map(function(e){return e.name+&quot;: &quot;+e.ms}).join(&quot;, &quot;)},wallMs:null},this.uploadWaitMs=0,this.downloadWaitMs=0,[2,s]}})})},e.prototype.memory=function(){return {unreliable:!1,numBytesInGPU:this.numBytesInGPU}},e.prototype.startTimer=function(){return ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;)&gt;0?this.gpgpu.beginQuery():{startMs:performance.now(),endMs:null}},e.prototype.endTimer=function(e){return ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;)&gt;0?(this.gpgpu.endQuery(),e):(e.endMs=performance.now(),e)},e.prototype.getQueryTime=function(e){return __awaiter$1(this,void 0,void 0,function(){var t;return __generator$1(this,function(n){return ENV.get(&quot;WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION&quot;)&gt;0?[2,this.gpgpu.waitForQueryAndGetTime(e)]:[2,(t=e).endMs-t.startMs]})})},e.prototype.disposeData=function(e){if(!this.pendingDisposal.has(e))if(this.pendingRead.has(e))this.pendingDisposal.add(e);else if(this.texData.has(e)){var t=this.texData.get(e),n=t.texture,r=t.dtype,o=t.texShape,a=t.usage,i=t.complexTensors,s=t.isPacked,u=t.slice;if(null!=n){var c=u&amp;&amp;u.origDataId||e,l=this.dataRefCount.get(c);l&gt;1?this.dataRefCount.set(c,l-1):(this.dataRefCount.delete(c),this.releaseTexture(e,n,o,a,r,s),this.texData.delete(e));}null!=i&amp;&amp;(i.real.dispose(),i.imag.dispose());}},e.prototype.getTexture=function(e){return this.uploadToGPU(e),this.texData.get(e).texture},e.prototype.getCPUBackend=function(){return ENV.get(&quot;WEBGL_CPU_FORWARD&quot;)?(null==this.cpuBackend&amp;&amp;(this.cpuBackend=ENV.findBackend(&quot;cpu&quot;)),this.cpuBackend):null},e.prototype.shouldExecuteOnCPU=function(e,t){var n=this;return void 0===t&amp;&amp;(t=CPU_HANDOFF_SIZE_THRESHOLD),null!=this.getCPUBackend()&amp;&amp;e.every(function(e){return null==n.texData.get(e.dataId).texture&amp;&amp;e.size&lt;t})},e.prototype.getGPGPUContext=function(){return this.gpgpu},e.prototype.getCanvas=function(){return this.canvas},e.prototype.complex=function(e,t){var n=this.makeOutputArray(e.shape,&quot;complex64&quot;);return this.texData.get(n.dataId).complexTensors={real:ENV.engine.keep(e.clone()),imag:ENV.engine.keep(t.clone())},n},e.prototype.real=function(e){return this.texData.get(e.dataId).complexTensors.real.clone()},e.prototype.imag=function(e){return this.texData.get(e.dataId).complexTensors.imag.clone()},e.prototype.slice=function(e,t,n){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.slice(e,t,n);var r=this.texData.get(e.dataId).isPacked,o=isSliceContinous(e.shape,t,n);if(r||!o){var a=ENV.get(&quot;WEBGL_PACK_ARRAY_OPERATIONS&quot;)?new SlicePackedProgram(n):new SliceProgram(n),i=a.getCustomSetupFunc(t);return this.compileAndRun(a,[e],null,i)}return this.uploadToGPU(e.dataId),this.shallowSlice(e,t,n)},e.prototype.shallowSlice=function(e,t,n){var r=this.texData.get(e.dataId),o=Tensor.make(n,{},e.dtype,this),a=this.texData.get(o.dataId);Object.assign(a,r),a.shape=n,a.dtype=e.dtype;var i=computeFlatOffset(t,e.strides);r.slice&amp;&amp;(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&amp;&amp;r.slice.origDataId||e.dataId};var s=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,s+1),o},e.prototype.stridedSlice=function(e,t,n,r,o,a,i,s,u){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.stridedSlice(e,t,n,r,o,a,i,s,u);var c=getStridedSlicedInfo(e.shape,t,n,r,o,a,i,s,u),l=c[0],p=c[1],d=c[2],h=p.filter(function(e,t){return -1===d.indexOf(t)});if(h.some(function(e){return 0===e}))return tensor([],h);var f=new StridedSliceProgram(l,r,p,d);return this.compileAndRun(f,[e])},e.prototype.reverse=function(e,t){var n=ENV.get(&quot;WEBGL_PACK_ARRAY_OPERATIONS&quot;)?new ReversePackedProgram(e.shape,t):new ReverseProgram(e.shape,t);return this.compileAndRun(n,[e])},e.prototype.concat=function(e,t){if(this.shouldExecuteOnCPU(e))return this.cpuBackend.concat(e,t);if(1===e.length)return e[0];if(e.length&gt;ENV.get(&quot;WEBGL_MAX_TEXTURES_IN_SHADER&quot;)){var n=Math.floor(e.length/2),r=this.concat(e.slice(0,n),t),o=this.concat(e.slice(n),t);return this.concat([r,o],t)}if(ENV.get(&quot;WEBGL_PACK_ARRAY_OPERATIONS&quot;)&amp;&amp;e[0].rank&gt;1){var a=new ConcatPackedProgram(e.map(function(e){return e.shape}),t);return this.compileAndRun(a,e)}var i=computeOutShape(e.map(function(e){return e.shape}),t),s=e.map(function(e){return e.as2D(-1,sizeFromShape(e.shape.slice(t)))}),u=new ConcatProgram(s.map(function(e){return e.shape}));return this.compileAndRun(u,s).reshape(i)},e.prototype.neg=function(e){var t=new UnaryOpProgram(e.shape,NEG);return this.compileAndRun(t,[e])},e.prototype.batchMatMul=function(e,t,n,r){var o=n?e.shape[2]:e.shape[1],a=r?t.shape[1]:t.shape[2],i=n?e.shape[1]:e.shape[2],s=e.shape[0];if((1===o||1===a)&amp;&amp;i&gt;MATMUL_SHARED_DIM_THRESHOLD){n&amp;&amp;(e=e.transpose([0,2,1])),r&amp;&amp;(t=t.transpose([0,2,1]));var u=1===a?e:e.as3D(s,i,1),c=1===a?2:1,l=1===a?t.as3D(s,1,i):t;return this.multiply(u,l).sum(c,!0)}var p=upcastType(e.dtype,t.dtype),d=new MatMulPackedProgram(e.shape,[s,o,a],n,r),h=this.makePackedTensor(d.outputShape,p);return this.compileAndRun(d,[e,t],h)},e.prototype.fusedBatchMatMul=function(e,t,n,r,o,a){var i=n?e.shape[2]:e.shape[1],s=r?t.shape[1]:t.shape[2],u=e.shape[0],c=upcastType(e.dtype,t.dtype),l=new MatMulPackedProgram(e.shape,[u,i,s],n,r,!!o,a?mapActivationToShaderProgram(a,!0):null),p=this.makePackedTensor(l.outputShape,c),d=[e,t];return o&amp;&amp;d.push(o),this.compileAndRun(l,d,p)},e.prototype.multiply=function(e,t){if(&quot;complex64&quot;===e.dtype){var n=this.texData.get(e.dataId),r=this.texData.get(t.dataId),o=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.REAL,e.shape,t.shape),a=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.IMAG,e.shape,t.shape),i=[this.makeComplexComponentTensorHandle(e,n.complexTensors.real),this.makeComplexComponentTensorHandle(e,n.complexTensors.imag),this.makeComplexComponentTensorHandle(t,r.complexTensors.real),this.makeComplexComponentTensorHandle(t,r.complexTensors.imag)],s=this.compileAndRun(o,i),u=this.compileAndRun(a,i),c=this.complex(s,u);return s.dispose(),u.dispose(),c}if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.multiply(e,t);if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,MUL,e.dtype);var l=new BinaryOpProgram(MUL,e.shape,t.shape),p=this.makeOutputArray(l.outputShape,e.dtype);return this.compileAndRun(l,[e,t],p)},e.prototype.batchNormalization=function(e,t,n,r,o,a){var i=[e,t,n],s=null;null!=a&amp;&amp;(s=a.shape,i.push(a));var u=null;if(null!=o&amp;&amp;(u=o.shape,i.push(o)),ENV.get(&quot;WEBGL_PACK_BATCHNORMALIZATION&quot;)){var c=new BatchNormPackedProgram(e.shape,t.shape,n.shape,s,u,r);return this.compileAndRun(c,i)}var l=new BatchNormProgram(e.shape,t.shape,n.shape,s,u,r);return this.compileAndRun(l,i)},e.prototype.localResponseNormalization4D=function(e,t,n,r,o){var a=new LRNProgram(e.shape,t,n,r,o);return this.compileAndRun(a,[e])},e.prototype.LRNGrad=function(e,t,n,r,o,a,i){var s=new LRNGradProgram(t.shape,r,o,a,i);return this.compileAndRun(s,[t,n,e])},e.prototype.tile=function(e,t){var n=new TileProgram(e.shape,t);return this.compileAndRun(n,[e])},e.prototype.pad=function(e,t,n){var r=ENV.get(&quot;WEBGL_PACK_ARRAY_OPERATIONS&quot;)?new PadPackedProgram(e.shape,t,n):new PadProgram(e.shape,t,n);return this.compileAndRun(r,[e])},e.prototype.transpose=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.transpose(e,t);var n=ENV.get(&quot;WEBGL_PACK_ARRAY_OPERATIONS&quot;)?new TransposePackedProgram(e.shape,t):new TransposeProgram(e.shape,t);return this.compileAndRun(n,[e])},e.prototype.gather=function(e,t,n){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.gather(e,t,n);var r=new GatherProgram(e.shape,t.size,n);return this.compileAndRun(r,[e,t])},e.prototype.batchToSpaceND=function(e,t,n){assert(e.rank&lt;=4,function(){return &quot;batchToSpaceND for rank &gt; 4 with a WebGL backend not implemented yet&quot;});var r=t.reduce(function(e,t){return e*t}),o=getReshaped(e.shape,t,r),a=getPermuted(o.length,t.length),i=getReshapedPermuted(e.shape,t,r),s=getSliceBeginCoords(n,t.length),u=getSliceSize(i,n,t.length);return e.reshape(o).transpose(a).reshape(i).slice(s,u)},e.prototype.spaceToBatchND=function(e,t,n){assert(e.rank&lt;=4,function(){return &quot;spaceToBatchND for rank &gt; 4 with a WebGL backend not implemented yet&quot;});var r=t.reduce(function(e,t){return e*t}),o=[[0,0]];o.push.apply(o,n);for(var a=1+t.length;a&lt;e.shape.length;++a)o.push([0,0]);var i=e.pad(o),s=getReshaped(i.shape,t,r,!1),u=getPermuted(s.length,t.length,!1),c=getReshapedPermuted(i.shape,t,r,!1);return i.reshape(s).transpose(u).reshape(c)},e.prototype.reduce=function(e,t,n){var r=e.shape[0],o=e.shape[1],a=computeOptimalWindowSize(o),i=new ReduceProgram({windowSize:a,inSize:o,batchSize:r},t),s=i.outputShape,u=s[0],c=s[1],l=this.makeOutputArray([u,c],n);return this.compileAndRun(i,[e],l),1===l.shape[1]?l:this.reduce(l,t,n)},e.prototype.argReduce=function(e,t,n){void 0===n&amp;&amp;(n=null);var r=e.shape[0],o=e.shape[1];null!=n&amp;&amp;(r=n.shape[0],o=n.shape[1]);var a=computeOptimalWindowSize(o),i=new ArgMinMaxProgram({windowSize:a,inSize:o,batchSize:r},t,null==n),s=i.outputShape,u=s[0],c=s[1],l=this.makeOutputArray([u,c],&quot;int32&quot;),p=[e];return null!=n&amp;&amp;p.push(n),this.compileAndRun(i,p,l),1===l.shape[1]?l:this.argReduce(e,t,l)},e.prototype.argReducePacked=function(e,t,n){void 0===n&amp;&amp;(n=null);var r=null!=n?n.shape:e.shape,o=computeOptimalWindowSize(r[r.length-1]),a=new ArgMinMaxPackedProgram(r,o,t,null==n),i=this.makePackedTensor(a.outputShape,&quot;int32&quot;),s=null==n?[e]:[e,n];return this.compileAndRun(a,s,i),i.rank===e.rank?this.argReducePacked(e,t,i):i},e.prototype.sum=function(e,t){assertAxesAreInnerMostDims(&quot;sum&quot;,t,e.rank);var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=sizeFromShape(n[1]),a=e.as2D(-1,o),i=sumOutType(e.dtype);return this.reduce(a,&quot;sum&quot;,i).reshape(r)},e.prototype.prod=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.prod(e,t);var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=sizeFromShape(n[1]),a=e.as2D(-1,o),i=sumOutType(e.dtype);return this.reduce(a,&quot;prod&quot;,i).reshape(r)},e.prototype.unsortedSegmentSum=function(e,t,n){var r=0,o=getAxesPermutation([r],e.rank),a=e;null!=o&amp;&amp;(a=e.transpose(o),r=getInnerMostAxes(1,e.rank)[0]);var i=computeOutShape$1(a.shape,r,n),s=sizeFromShape([a.shape[r]]),u=a.as2D(-1,s),c=sumOutType(e.dtype),l=this.segOpCompute(u,&quot;unsortedSegmentSum&quot;,t,c,n).reshape(i);return null!=o&amp;&amp;(l=l.transpose(getUndoAxesPermutation(o))),l},e.prototype.segOpCompute=function(e,t,n,r,o){var a=e.shape[0],i=e.shape[1],s=segOpComputeOptimalWindowSize(i,o),u=new SegmentOpProgram({windowSize:s,inSize:i,batchSize:a,numSegments:o},t),c=u.outputShape,l=c[0],p=c[1],d=this.makeOutputArray([l,p],r);return this.compileAndRun(u,[e,n],d),d.shape[1]===o?d:(n=range(0,o).tile([i/s]),this.segOpCompute(d,t,n,r,o))},e.prototype.argMinMaxReduce=function(e,t,n){var r=[t];if(assertAxesAreInnerMostDims(&quot;arg&quot;+n.charAt(0).toUpperCase()+n.slice(1),r,e.rank),!ENV.get(&quot;WEBGL_PACK_REDUCE&quot;)||e.rank&lt;=2){var o=computeOutAndReduceShapes(e.shape,r),a=o[0],i=sizeFromShape(o[1]),s=e.as2D(-1,i);return this.argReduce(s,n).reshape(a)}return this.argReducePacked(e,n)},e.prototype.argMin=function(e,t){return this.argMinMaxReduce(e,t,&quot;min&quot;)},e.prototype.argMax=function(e,t){return this.argMinMaxReduce(e,t,&quot;max&quot;)},e.prototype.cumsum=function(e,t,n,r){if(t!==e.rank-1)throw new Error(&quot;WebGL cumsum shader expects an inner-most axis=&quot;+(e.rank-1)+&quot; but got axis=&quot;+t);var o=new CumSumProgram(e.shape,n,r);return this.compileAndRun(o,[e])},e.prototype.equal=function(e,t){if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,EQUAL$1,&quot;bool&quot;);var n=new BinaryOpProgram(EQUAL,e.shape,t.shape),r=this.makeOutputArray(n.outputShape,&quot;bool&quot;);return this.compileAndRun(n,[e,t],r)},e.prototype.notEqual=function(e,t){if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,NOT_EQUAL$1,&quot;bool&quot;);var n=new BinaryOpProgram(NOT_EQUAL,e.shape,t.shape),r=this.makeOutputArray(n.outputShape,&quot;bool&quot;);return this.compileAndRun(n,[e,t],r)},e.prototype.less=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.less(e,t);if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,LESS$1,&quot;bool&quot;);var n=new BinaryOpProgram(LESS,e.shape,t.shape),r=this.makeOutputArray(n.outputShape,&quot;bool&quot;);return this.compileAndRun(n,[e,t],r)},e.prototype.lessEqual=function(e,t){if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,LESS_EQUAL$1,&quot;bool&quot;);var n=new BinaryOpProgram(LESS_EQUAL,e.shape,t.shape),r=this.makeOutputArray(n.outputShape,&quot;bool&quot;);return this.compileAndRun(n,[e,t],r)},e.prototype.greater=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.greater(e,t);if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,GREATER$1,&quot;bool&quot;);var n=new BinaryOpProgram(GREATER,e.shape,t.shape),r=this.makeOutputArray(n.outputShape,&quot;bool&quot;);return this.compileAndRun(n,[e,t],r)},e.prototype.greaterEqual=function(e,t){if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,GREATER_EQUAL$1,&quot;bool&quot;);var n=new BinaryOpProgram(GREATER_EQUAL,e.shape,t.shape),r=this.makeOutputArray(n.outputShape,&quot;bool&quot;);return this.compileAndRun(n,[e,t],r)},e.prototype.logicalNot=function(e){var t=new UnaryOpProgram(e.shape,LOGICAL_NOT);return this.compileAndRun(t,[e])},e.prototype.logicalAnd=function(e,t){if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,LOGICAL_AND$1,&quot;bool&quot;);var n=new BinaryOpProgram(LOGICAL_AND,e.shape,t.shape),r=this.makeOutputArray(n.outputShape,&quot;bool&quot;);return this.compileAndRun(n,[e,t],r)},e.prototype.logicalOr=function(e,t){if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,LOGICAL_OR$1,&quot;bool&quot;);var n=new BinaryOpProgram(LOGICAL_OR,e.shape,t.shape),r=this.makeOutputArray(n.outputShape,&quot;bool&quot;);return this.compileAndRun(n,[e,t],r)},e.prototype.select=function(e,t,n){var r=new SelectProgram(e.rank,t.shape,t.rank),o=this.makeOutputArray(r.outputShape,upcastType(t.dtype,n.dtype));return this.compileAndRun(r,[e,t,n],o)},e.prototype.where=function(e){warn(&quot;tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead&quot;);var t=e.dataSync();return whereImpl(e.shape,t)},e.prototype.topk=function(e,t,n){return topkImpl(e.dataSync(),e.shape,e.dtype,t,n)},e.prototype.min=function(e,t){assertAxesAreInnerMostDims(&quot;min&quot;,t,e.rank);var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=sizeFromShape(n[1]),a=e.as2D(-1,o);return this.reduce(a,&quot;min&quot;,a.dtype).reshape(r)},e.prototype.minimum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.minimum(e,t);var n=ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;)?new BinaryOpPackedProgram(MIN$1,e.shape,t.shape):new BinaryOpProgram(MIN,e.shape,t.shape);return this.compileAndRun(n,[e,t])},e.prototype.mod=function(e,t){var n=ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;)?new BinaryOpPackedProgram(MOD$1,e.shape,t.shape):new BinaryOpProgram(MOD,e.shape,t.shape);return this.compileAndRun(n,[e,t])},e.prototype.max=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.max(e,t);assertAxesAreInnerMostDims(&quot;max&quot;,t,e.rank);var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=sizeFromShape(n[1]),a=e.as2D(-1,o);return this.reduce(a,&quot;max&quot;,a.dtype).reshape(r)},e.prototype.maximum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.maximum(e,t);var n=ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;)?new BinaryOpPackedProgram(MAX$1,e.shape,t.shape):new BinaryOpProgram(MAX,e.shape,t.shape);return this.compileAndRun(n,[e,t])},e.prototype.all=function(e,t){assertAxesAreInnerMostDims(&quot;all&quot;,t,e.rank);var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=sizeFromShape(n[1]),a=e.as2D(-1,o);return this.reduce(a,&quot;all&quot;,a.dtype).reshape(r)},e.prototype.any=function(e,t){assertAxesAreInnerMostDims(&quot;any&quot;,t,e.rank);var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=sizeFromShape(n[1]),a=e.as2D(-1,o);return this.reduce(a,&quot;any&quot;,a.dtype).reshape(r)},e.prototype.squaredDifference=function(e,t){var n=ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;)?new BinaryOpPackedProgram(SQUARED_DIFFERENCE,e.shape,t.shape):new BinaryOpProgram(SQUARED_DIFFERENCE,e.shape,t.shape);return this.compileAndRun(n,[e,t])},e.prototype.realDivide=function(e,t){var n=new BinaryOpProgram(DIV,e.shape,t.shape),r=this.makeOutputArray(n.outputShape,&quot;float32&quot;);return this.compileAndRun(n,[e,t],r)},e.prototype.floorDiv=function(e,t){var n=INT_DIV;if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,INT_DIV$1,&quot;int32&quot;);var r=new BinaryOpProgram(n,e.shape,t.shape),o=this.makeOutputArray(r.outputShape,&quot;int32&quot;);return this.compileAndRun(r,[e,t],o)},e.prototype.add=function(e,t){if(&quot;complex64&quot;===e.dtype&amp;&amp;&quot;complex64&quot;===t.dtype)return this.complexSeparableBinaryOp(e,t,ADD);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.add(e,t);var n=upcastType(e.dtype,t.dtype);if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,ADD,n);var r=new BinaryOpProgram(ADD,e.shape,t.shape),o=this.makeOutputArray(r.outputShape,n);return this.compileAndRun(r,[e,t],o)},e.prototype.packedBinaryOp=function(e,t,n,r){var o=new BinaryOpPackedProgram(n,e.shape,t.shape),a=this.makePackedTensor(o.outputShape,r);return this.compileAndRun(o,[e,t],a)},e.prototype.complexSeparableBinaryOp=function(e,t,n){var r=this,o=this.texData.get(e.dataId),a=this.texData.get(t.dataId),i=[[o.complexTensors.real,a.complexTensors.real],[o.complexTensors.imag,a.complexTensors.imag]].map(function(o){var a=o[0],i=o[1],s=r.makeComplexComponentTensorHandle(e,a),u=r.makeComplexComponentTensorHandle(t,i),c=new BinaryOpProgram(n,e.shape,t.shape),l=r.makeOutputArray(c.outputShape,upcastType(a.dtype,i.dtype));return r.compileAndRun(c,[s,u],l)}),s=i[0],u=i[1],c=this.complex(s,u);return s.dispose(),u.dispose(),c},e.prototype.makeComplexComponentTensorHandle=function(e,t){return {dataId:t.dataId,dtype:t.dtype,shape:e.shape}},e.prototype.addN=function(e){for(var t=e[0],n=1;n&lt;e.length;n++)t=this.add(t,e[n]);return t},e.prototype.subtract=function(e,t){if(&quot;complex64&quot;===e.dtype&amp;&amp;&quot;complex64&quot;===t.dtype)return this.complexSeparableBinaryOp(e,t,SUB);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.subtract(e,t);var n=upcastType(e.dtype,t.dtype);if(ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;))return this.packedBinaryOp(e,t,SUB,e.dtype);var r=new BinaryOpProgram(SUB,e.shape,t.shape),o=this.makeOutputArray(r.outputShape,n);return this.compileAndRun(r,[e,t],o)},e.prototype.pow=function(e,t){var n=ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;),r=n?new BinaryOpPackedProgram(POW$1,e.shape,t.shape):new BinaryOpProgram(POW,e.shape,t.shape),o=upcastType(e.dtype,t.dtype),a=n?this.makePackedTensor(r.outputShape,o):this.makeOutputArray(r.outputShape,o);return this.compileAndRun(r,[e,t],a)},e.prototype.ceil=function(e){var t=new UnaryOpProgram(e.shape,CEIL);return this.compileAndRun(t,[e])},e.prototype.floor=function(e){var t=new UnaryOpProgram(e.shape,FLOOR);return this.compileAndRun(t,[e])},e.prototype.sign=function(e){var t=new UnaryOpProgram(e.shape,SIGN);return this.compileAndRun(t,[e])},e.prototype.isNaN=function(e){var t=new UnaryOpProgram(e.shape,IS_NAN),n=this.makeOutputArray(t.outputShape,&quot;bool&quot;);return this.compileAndRun(t,[e],n)},e.prototype.isInf=function(e){var t=new UnaryOpProgram(e.shape,IS_INF),n=this.makeOutputArray(t.outputShape,&quot;bool&quot;);return this.compileAndRun(t,[e],n)},e.prototype.isFinite=function(e){var t=new UnaryOpProgram(e.shape,IS_FINITE),n=this.makeOutputArray(t.outputShape,&quot;bool&quot;);return this.compileAndRun(t,[e],n)},e.prototype.round=function(e){var t=new UnaryOpProgram(e.shape,ROUND);return this.compileAndRun(t,[e])},e.prototype.exp=function(e){var t;return t=ENV.get(&quot;WEBGL_PACK&quot;)?new UnaryOpPackedProgram(e.shape,EXP):new UnaryOpProgram(e.shape,EXP),this.compileAndRun(t,[e])},e.prototype.expm1=function(e){var t=new UnaryOpProgram(e.shape,EXPM1);return this.compileAndRun(t,[e])},e.prototype.log=function(e){var t;return t=ENV.get(&quot;WEBGL_PACK&quot;)?new UnaryOpPackedProgram(e.shape,LOG$1):new UnaryOpProgram(e.shape,LOG),this.compileAndRun(t,[e])},e.prototype.log1p=function(e){var t=new UnaryOpProgram(e.shape,LOG1P);return this.compileAndRun(t,[e])},e.prototype.sqrt=function(e){var t=new UnaryOpProgram(e.shape,SQRT);return this.compileAndRun(t,[e])},e.prototype.rsqrt=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.rsqrt(e);var t=new UnaryOpProgram(e.shape,RSQRT);return this.compileAndRun(t,[e])},e.prototype.square=function(e){var t=new UnaryOpProgram(e.shape,SQUARE);return this.compileAndRun(t,[e])},e.prototype.reciprocal=function(e){var t=new UnaryOpProgram(e.shape,RECIPROCAL);return this.compileAndRun(t,[e])},e.prototype.relu=function(e){var t;return t=ENV.get(&quot;WEBGL_PACK&quot;)?new UnaryOpPackedProgram(e.shape,RELU$1):new UnaryOpProgram(e.shape,RELU),this.compileAndRun(t,[e])},e.prototype.prelu=function(e,t){var n=ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;)?new BinaryOpPackedProgram(PRELU$1,e.shape,t.shape):new BinaryOpProgram(PRELU,e.shape,t.shape);return this.compileAndRun(n,[e,t])},e.prototype.elu=function(e){var t=new UnaryOpProgram(e.shape,ELU);return this.compileAndRun(t,[e])},e.prototype.eluDer=function(e,t){var n=ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;)?new BinaryOpPackedProgram(ELU_DER$1,e.shape,t.shape):new BinaryOpProgram(ELU_DER,e.shape,t.shape);return this.compileAndRun(n,[e,t])},e.prototype.selu=function(e){var t=new UnaryOpProgram(e.shape,SELU);return this.compileAndRun(t,[e])},e.prototype.int=function(e){var t=new UnaryOpProgram(e.shape,TO_INT),n=this.makeOutputArray(t.outputShape,&quot;int32&quot;);return this.compileAndRun(t,[e],n)},e.prototype.clip=function(e,t,n){var r,o=(r=ENV.get(&quot;WEBGL_PACK_CLIP&quot;)?new ClipPackedProgram(e.shape):new ClipProgram(e.shape)).getCustomSetupFunc(t,n);return this.compileAndRun(r,[e],null,o)},e.prototype.abs=function(e){var t=new UnaryOpProgram(e.shape,ABS);return this.compileAndRun(t,[e])},e.prototype.complexAbs=function(e){var t=this.texData.get(e.dataId),n=new ComplexAbsProgram(e.shape),r=[this.makeComplexComponentTensorHandle(e,t.complexTensors.real),this.makeComplexComponentTensorHandle(e,t.complexTensors.imag)];return this.compileAndRun(n,r)},e.prototype.sigmoid=function(e){var t=new UnaryOpProgram(e.shape,SIGMOID);return this.compileAndRun(t,[e])},e.prototype.softplus=function(e){var t=new UnaryOpProgram(e.shape,SOFTPLUS);return this.compileAndRun(t,[e])},e.prototype.sin=function(e){var t=new UnaryOpProgram(e.shape,SIN);return this.compileAndRun(t,[e])},e.prototype.cos=function(e){var t=new UnaryOpProgram(e.shape,COS);return this.compileAndRun(t,[e])},e.prototype.tan=function(e){var t=new UnaryOpProgram(e.shape,TAN);return this.compileAndRun(t,[e])},e.prototype.asin=function(e){var t=new UnaryOpProgram(e.shape,ASIN);return this.compileAndRun(t,[e])},e.prototype.acos=function(e){var t=new UnaryOpProgram(e.shape,ACOS);return this.compileAndRun(t,[e])},e.prototype.atan=function(e){var t=new UnaryOpProgram(e.shape,ATAN);return this.compileAndRun(t,[e])},e.prototype.atan2=function(e,t){var n=ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;)?new BinaryOpPackedProgram(ATAN2$1,e.shape,t.shape):new BinaryOpProgram(ATAN2,e.shape,t.shape);return this.compileAndRun(n,[e,t])},e.prototype.sinh=function(e){var t=new UnaryOpProgram(e.shape,SINH);return this.compileAndRun(t,[e])},e.prototype.cosh=function(e){var t=new UnaryOpProgram(e.shape,COSH);return this.compileAndRun(t,[e])},e.prototype.tanh=function(e){var t=new UnaryOpProgram(e.shape,TANH);return this.compileAndRun(t,[e])},e.prototype.asinh=function(e){var t=new UnaryOpProgram(e.shape,ASINH);return this.compileAndRun(t,[e])},e.prototype.acosh=function(e){var t=new UnaryOpProgram(e.shape,ACOSH);return this.compileAndRun(t,[e])},e.prototype.atanh=function(e){var t=new UnaryOpProgram(e.shape,ATANH);return this.compileAndRun(t,[e])},e.prototype.erf=function(e){var t=new UnaryOpProgram(e.shape,ERF);return this.compileAndRun(t,[e])},e.prototype.step=function(e,t){var n=new UnaryOpProgram(e.shape,STEP(t));return this.compileAndRun(n,[e])},e.prototype.conv2dByMatMul=function(e,t,n){var r=e.shape,o=this.texData.get(e.dataId),a=n.inChannels,i=r[0]*r[1]*r[2],s=n.outChannels,u=(1===i||1===s)&amp;&amp;a&gt;MATMUL_SHARED_DIM_THRESHOLD,c=r[2]%2!=0&amp;&amp;!!o.isPacked;if(u||!ENV.get(&quot;WEBGL_LAZILY_UNPACK&quot;)||!ENV.get(&quot;WEBGL_PACK_BINARY_OPERATIONS&quot;)||!c){var l=this.reshape(e,[1,r[0]*r[1]*r[2],n.inChannels]),p=this.reshape(t,[1,n.inChannels,n.outChannels]);return this.reshape(this.batchMatMul(l,p,!1,!1),n.outShape)}var d=Tensor.make([1,r[0]*r[1]*(r[2]+1),n.inChannels],{dataId:e.dataId},e.dtype,this),h=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,assert(isReshapeFree(o.shape,d.shape),function(){return &quot;packed reshape &quot;+o.shape+&quot; to &quot;+d.shape+&quot; isn&#39;t free&quot;});var f=this.reshape(t,[1,n.inChannels,n.outChannels]),m=this.batchMatMul(d,f,!1,!1),g=this.texData.get(m.dataId);return assert(g.isPacked,function(){return &quot;batchMatMul result is expected to be packed&quot;}),o.shape=h,g.shape=n.outShape,Tensor.make(n.outShape,{dataId:m.dataId},m.dtype,this)},e.prototype.conv2dWithIm2Row=function(e,t,n){var r=n.filterWidth,o=n.filterHeight,a=n.inChannels,i=n.outWidth,s=n.outHeight,u=r*o*a,c=s*i,l=[u,c],p=e.squeeze([0]),d=t.reshape([1,u,-1]),h=new Im2ColPackedProgram(l,p.shape,n),f=this.compileAndRun(h,[p]).reshape([1,l[0],l[1]]),m=new MatMulPackedProgram(f.shape,[1,c,n.outChannels],!0,!1);return this.compileAndRun(m,[f,d]).reshape([1,s,i,n.outChannels])},e.prototype.conv2d=function(e,t,n){if(1===n.filterHeight&amp;&amp;1===n.filterWidth&amp;&amp;1===n.dilationHeight&amp;&amp;1===n.dilationWidth&amp;&amp;1===n.strideHeight&amp;&amp;1===n.strideWidth&amp;&amp;(&quot;SAME&quot;===n.padInfo.type||&quot;VALID&quot;===n.padInfo.type))return this.conv2dByMatMul(e,t,n);if(ENV.get(&quot;WEBGL_CONV_IM2COL&quot;)&amp;&amp;1===e.shape[0])return this.conv2dWithIm2Row(e,t,n);var r=new Conv2DProgram(n);return this.compileAndRun(r,[e,t])},e.prototype.conv2dDerInput=function(e,t,n){var r=new Conv2DDerInputProgram(n);return this.compileAndRun(r,[e,t])},e.prototype.conv2dDerFilter=function(e,t,n){var r=new Conv2DDerFilterProgram(n);return this.compileAndRun(r,[e,t])},e.prototype.depthwiseConv2D=function(e,t,n){var r;return ENV.get(&quot;WEBGL_PACK_DEPTHWISECONV&quot;)&amp;&amp;n.strideWidth&lt;=2&amp;&amp;n.outChannels/n.inChannels==1?(r=new DepthwiseConvPacked2DProgram(n),this.compileAndRun(r,[e,t],this.makePackedTensor(n.outShape,e.dtype))):(r=new DepthwiseConv2DProgram(n),this.compileAndRun(r,[e,t]))},e.prototype.depthwiseConv2DDerInput=function(e,t,n){var r=new DepthwiseConv2DDerInputProgram(n);return this.compileAndRun(r,[e,t])},e.prototype.depthwiseConv2DDerFilter=function(e,t,n){var r=new DepthwiseConv2DDerFilterProgram(n);return this.compileAndRun(r,[e,t])},e.prototype.conv3d=function(e,t,n){var r=new Conv3DProgram(n);return this.compileAndRun(r,[e,t])},e.prototype.conv3dDerInput=function(e,t,n){var r=new Conv3DDerInputProgram(n);return this.compileAndRun(r,[e,t])},e.prototype.conv3dDerFilter=function(e,t,n){var r=new Conv3DDerFilterProgram(n);return this.compileAndRun(r,[e,t])},e.prototype.maxPool=function(e,t){var n=new Pool2DProgram(t,&quot;max&quot;,!1),r=this.makeOutputArray(n.outputShape,e.dtype);return this.compileAndRun(n,[e],r)},e.prototype.avgPool=function(e,t){var n=new Pool2DProgram(t,&quot;avg&quot;,!1),r=this.makeOutputArray(n.outputShape,&quot;float32&quot;);return this.compileAndRun(n,[e],r)},e.prototype.maxPoolBackprop=function(e,t,n,r){var o=new Pool2DProgram(r,&quot;max&quot;,!0),a=this.compileAndRun(o,[t]),i=new MaxPool2DBackpropProgram(r),s=this.makeOutputArray(i.outputShape,t.dtype),u=this.compileAndRun(i,[e,a],s);return a.dispose(),u},e.prototype.avgPoolBackprop=function(e,t,n){var r=new AvgPool2DBackpropProgram(n),o=this.makeOutputArray(r.outputShape,t.dtype);return this.compileAndRun(r,[e],o)},e.prototype.cast=function(e,t){return castTensor(e,t,this)},e.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),o=0,a=0;a&lt;e.rank;a++)a!==t&amp;&amp;(r[o++]=e.shape[a]);var i=new Array(e.rank).fill(0),s=e.shape.slice();s[t]=1;var u=new Array(n);for(a=0;a&lt;u.length;a++)i[t]=a,u[a]=this.slice(e,i,s).reshape(r);return u},e.prototype.reshape=function(e,t){var n=this.texData.get(e.dataId);return !n.isPacked||isReshapeFree(e.shape,t)||null!==n.texture&amp;&amp;isReshapeFree(n.shape,t)?reshapeTensor(e,t):this.packedReshape(e,t)},e.prototype.resizeBilinear=function(e,t,n,r){var o=ENV.get(&quot;WEBGL_PACK_IMAGE_OPERATIONS&quot;)?new ResizeBilinearPackedProgram(e.shape,t,n,r):new ResizeBilinearProgram(e.shape,t,n,r);return this.compileAndRun(o,[e])},e.prototype.resizeBilinearBackprop=function(e,t,n){var r=new ResizeBilinearBackpropProgram(e,t,n);return this.compileAndRun(r,[e])},e.prototype.resizeNearestNeighbor=function(e,t,n,r){var o=new ResizeNearestNeighborProgram(e.shape,t,n,r);return this.compileAndRun(o,[e])},e.prototype.resizeNearestNeighborBackprop=function(e,t,n){var r=new ResizeNearestNeigborBackpropProgram(e,t,n);return this.compileAndRun(r,[e])},e.prototype.multinomial=function(e,t,n,r){var o=t?e:softmax(e),a=o.shape[0],i=o.shape[1],s=new MultinomialProgram(a,i,n),u=this.makeOutputArray(s.outputShape,&quot;int32&quot;),c=s.getCustomSetupFunc(r);return this.compileAndRun(s,[o],u,c)},e.prototype.oneHot=function(e,t,n,r){var o=new OneHotProgram(e.size,t,n,r);return this.compileAndRun(o,[e])},e.prototype.nonMaxSuppression=function(e,t,n,r,o){return warn(&quot;tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead&quot;),nonMaxSuppressionImpl(e.dataSync(),t.dataSync(),n,r,o)},e.prototype.cropAndResize=function(e,t,n,r,o,a){var i=new CropAndResizeProgram(e.shape,t.shape,r,o,a);return this.compileAndRun(i,[e,t,n])},e.prototype.depthToSpace=function(e,t,n){assert(t&gt;1,function(){return &quot;blockSize should be &gt; 1 for depthToSpace, but was: &quot;+t});var r=e.shape[0],o=&quot;NHWC&quot;===n?e.shape[1]:e.shape[2],a=&quot;NHWC&quot;===n?e.shape[2]:e.shape[3],i=&quot;NHWC&quot;===n?e.shape[3]:e.shape[1],s=o*t,u=a*t,c=i/(t*t),l=new DepthToSpaceProgram(&quot;NHWC&quot;===n?[r,s,u,c]:[r,c,s,u],t,n);return this.compileAndRun(l,[e])},e.prototype.split=function(e,t,n){return split(e,t,n)},e.prototype.scatterND=function(e,t,n){var r=calculateShapes(t,e,n),o=r.sliceRank,a=r.numUpdates,i=r.sliceSize,s=r.strides,u=r.outputSize,c=[u/i,i],l=e.reshape([a,o]),p=t.reshape([a,i]);if(0===u)return reshapeTensor(tensor([]),n);var d=scalar(0),h=new ScatterProgram(a,o,l.rank,p.rank,s,c);return this.compileAndRun(h,[p,l,d]).reshape(n)},e.prototype.sparseToDense=function(e,t,n,r){var o=calculateShapes(t,e,n),a=o.sliceRank,i=o.numUpdates,s=o.strides,u=o.outputSize,c=new ScatterProgram(i,a,e.rank,t.rank,s,[u,1],!1);return this.compileAndRun(c,[t,e,r]).reshape(n)},e.prototype.fft=function(e){return this.fftImpl(e,!1)},e.prototype.ifft=function(e){return this.fftImpl(e,!0)},e.prototype.fftImpl=function(e,t){var n=this.texData.get(e.dataId),r=new FFTProgram(COMPLEX_FFT.REAL,e.shape,t),o=new FFTProgram(COMPLEX_FFT.IMAG,e.shape,t),a=[this.makeComplexComponentTensorHandle(e,n.complexTensors.real),this.makeComplexComponentTensorHandle(e,n.complexTensors.imag)],i=this.compileAndRun(r,a),s=this.compileAndRun(o,a),u=this.complex(i,s).as2D(e.shape[0],e.shape[1]);return i.dispose(),s.dispose(),u},e.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],o=prepareAndValidate(e,t),a=o[0],i=o[1],s=o[2],u=o[3],c=t.reshape([i,r]),l=e.reshape([e.size/s,s]),p=new GatherNDProgram(r,u,[i,s]);return this.compileAndRun(p,[l,c]).reshape(a)},e.prototype.fill=function(e,t,n){if(&quot;string&quot;===(n=n||inferDtype(t))){var r=getArrayFromDType(n,sizeFromShape(e));return r.fill(t),Tensor.make(e,{values:r},n)}var o=new FillProgram(e,t),a=o.getCustomSetupFunc(t),i=this.makeOutputArray(e,n);return this.compileAndRun(o,[],i,a)},e.prototype.onesLike=function(e){if(&quot;string&quot;===e.dtype)throw new Error(&quot;onesLike is not supported under string dtype&quot;);return this.fill(e.shape,1,e.dtype)},e.prototype.zerosLike=function(e){return this.fill(e.shape,&quot;string&quot;===e.dtype?&quot;&quot;:0,e.dtype)},e.prototype.makeOutputArray=function(e,t){return Tensor.make(e,{},t,this)},e.prototype.makePackedTensor=function(e,t){var n=Tensor.make(e,{},t,this);return this.texData.get(n.dataId).isPacked=!0,n},e.prototype.unpackTensor=function(e){var t=new UnpackProgram(e.shape);return this.compileAndRun(t,[e],Tensor.make(t.outputShape,{},e.dtype,this))},e.prototype.packTensor=function(e){var t=new PackProgram(e.shape);return this.compileAndRun(t,[e],this.makePackedTensor(e.shape,e.dtype))},e.prototype.packedReshape=function(e,t){var n=e.reshape([getBatchDim(e.shape)].concat(getRowsCols(e.shape))),r=[getBatchDim(t)].concat(getRowsCols(t)),o=new ReshapePackedProgram(r,n.shape);return this.compileAndRun(o,[n]).reshape(t)},e.prototype.compileAndRun=function(e,t,n,r,o){var a=this;if(void 0===o&amp;&amp;(o=!0),null==n&amp;&amp;(n=e.usesPackedTextures?this.makePackedTensor(e.outputShape,t[0].dtype):this.makeOutputArray(e.outputShape,t[0].dtype)),0===n.size)return this.texData.get(n.dataId).values=getTypedArrayFromDType(n.dtype,0),n;var i=t.map(function(t){if(&quot;complex64&quot;===t.dtype)throw new Error(&quot;GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.&quot;);var n=a.texData.get(t.dataId);if(null==n.texture){if(!e.usesPackedTextures&amp;&amp;sizeFromShape(t.shape)&lt;=ENV.get(&quot;WEBGL_SIZE_UPLOAD_UNIFORM&quot;))return {shape:t.shape,texData:null,isUniform:!0,uniformValues:a.readSync(t.dataId)};e.usesPackedTextures&amp;&amp;(n.isPacked=!0,n.shape=t.shape);}else if(!!n.isPacked!=!!e.usesPackedTextures)t=n.isPacked?a.unpackTensor(t):a.packTensor(t),n=a.texData.get(t.dataId);else if(n.isPacked&amp;&amp;!isReshapeFree(n.shape,t.shape)){var r=t,o=t.shape;t.shape=n.shape,t=a.packedReshape(t,o),n=a.texData.get(t.dataId),r.shape=o;}return a.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(n.dataId);var s,u={shape:n.shape,texData:this.texData.get(n.dataId),isUniform:!1},c=makeShaderKey(e,i,u),l=this.getAndSaveBinary(c,function(){return compileProgram(a.gpgpu,e,i,u)}),p=null!=this.activeTimers;p&amp;&amp;(s=this.startTimer()),runProgram(this.gpgpu,l,i,u,r);var d=1024*ENV.get(&quot;WEBGL_NUM_MB_BEFORE_PAGING&quot;);if(o&amp;&amp;this.numBytesInGPU&gt;d)for(var h=this.numBytesInGPU-d;h&gt;0&amp;&amp;this.lruDataGPU.length&gt;0;){var f=this.lruDataGPU.shift(),m=this.texData.get(f),g=m.texShape,v=m.dtype;h-=this.computeBytes(g,v),this.read(f);}return p&amp;&amp;(s=this.endTimer(s),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(s)})),ENV.get(&quot;WEBGL_LAZILY_UNPACK&quot;)||!this.texData.get(n.dataId).isPacked||e.isPackShader?n:this.unpackTensor(n)},e.prototype.getAndSaveBinary=function(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]},e.prototype.getTextureManager=function(){return this.textureManager},e.prototype.dispose=function(){this.disposed||(this.textureManager.dispose(),this.canvas.remove(),null!=this.fromPixels2DContext&amp;&amp;this.fromPixels2DContext.canvas.remove(),this.gpgpuCreatedLocally&amp;&amp;(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0);},e.prototype.floatPrecision=function(){var e=this;return tidy(function(){var t=ENV.get(&quot;DEBUG&quot;);ENV.set(&quot;DEBUG&quot;,!1);var n=e.abs(scalar(1e-8)).dataSync()[0];return ENV.set(&quot;DEBUG&quot;,t),n&gt;0?32:16})},e.prototype.uploadToGPU=function(e){var t,n=this.texData.get(e),r=n.shape,o=n.dtype,a=n.values,i=n.texture,s=n.usage,u=n.isPacked;if(null==i){var c,l=null!=this.activeTimers;l&amp;&amp;(c=performance.now());var p=getTextureShapeFromLogicalShape(r,u);n.texShape=p;var d=this.acquireTexture(e,p,s,o,u);if(n.texture=d,null!=a){if(u){var h=getBatchDim(r),f=1,m=1;r.length&amp;&amp;(f=(t=getRowsCols(r))[0],m=t[1]),this.gpgpu.uploadMatrixToPackedTexture(d,h,f,m,p[0],p[1],typedArrayToFloat32(a));}else this.gpgpu.uploadMatrixToTexture(d,p[0],p[1],typedArrayToFloat32(a));n.values=null,l&amp;&amp;(this.uploadWaitMs+=performance.now()-c);}}else{ENV.get(&quot;WEBGL_NUM_MB_BEFORE_PAGING&quot;)&lt;Number.POSITIVE_INFINITY&amp;&amp;this.lruDataGPU.indexOf(e)&gt;=0&amp;&amp;(this.lruDataGPU.splice(this.lruDataGPU.indexOf(e),1),this.lruDataGPU.push(e));}},e.prototype.convertAndCacheOnCPU=function(e,t){var n=this.texData.get(e),r=n.texture,o=n.texShape,a=n.dtype,i=n.usage,s=n.isPacked;return null!=r&amp;&amp;(this.releaseTexture(e,r,o,i,a,s),n.texture=null,n.texShape=null,n.isPacked=!1),n.usage=TextureUsage.UPLOAD,null!=t&amp;&amp;(n.values=float32ToTypedArray(t,a)),n.values},e.prototype.releaseTexture=function(e,t,n,r,o,a){if(ENV.get(&quot;WEBGL_NUM_MB_BEFORE_PAGING&quot;)&lt;Number.POSITIVE_INFINITY){var i=this.lruDataGPU.indexOf(e);i&gt;=0&amp;&amp;this.lruDataGPU.splice(i,1);}this.numBytesInGPU-=this.computeBytes(n,o),this.textureManager.releaseTexture(t,n,r,a);},e.prototype.acquireTexture=function(e,t,n,r,o){return ENV.get(&quot;WEBGL_NUM_MB_BEFORE_PAGING&quot;)&lt;Number.POSITIVE_INFINITY&amp;&amp;this.lruDataGPU.push(e),this.numBytesInGPU+=this.computeBytes(t,r),this.textureManager.acquireTexture(t,n,o)},e.prototype.computeBytes=function(e,t){return e[0]*e[1]*bytesPerElement(t)},e}();function float32ToTypedArray(e,t){if(&quot;float32&quot;===t||&quot;complex64&quot;===t)return e;if(&quot;int32&quot;===t||&quot;bool&quot;===t){for(var n=&quot;int32&quot;===t?new Int32Array(e.length):new Uint8Array(e.length),r=0;r&lt;n.length;++r)n[r]=Math.round(e[r]);return n}throw new Error(&quot;Unknown dtype &quot;+t)}function typedArrayToFloat32(e){return e instanceof Float32Array?e:new Float32Array(e)}function neg_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;neg&quot;);return ENV.engine.runKernel(function(e){return e.neg(t)},{$x:t},function(e){return {$x:function(){return e.neg()}}})}function ceil_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;ceil&quot;);return ENV.engine.runKernel(function(e){return e.ceil(t)},{$x:t},function(e){return {$x:function(){return zerosLike(e)}}})}function floor_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;floor&quot;);return ENV.engine.runKernel(function(e){return e.floor(t)},{$x:t},function(e){return {$x:function(){return zerosLike(e)}}})}function sign_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;sign&quot;);return ENV.engine.runKernel(function(e){return e.sign(t)},{$x:t},function(e){return {$x:function(){return zerosLike(e)}}})}function isNaN_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;isNaN&quot;);return ENV.engine.runKernel(function(e){return e.isNaN(t)},{$x:t},function(e){return {$x:function(){return zerosLike(e)}}})}function isInf_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;isInf&quot;);return ENV.engine.runKernel(function(e){return e.isInf(t)},{$x:t},function(e){return {$x:function(){return zerosLike(e)}}})}function isFinite_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;isFinite&quot;);return ENV.engine.runKernel(function(e){return e.isFinite(t)},{$x:t},function(e){return {$x:function(){return zerosLike(e)}}})}function round_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;round&quot;);return ENV.engine.runKernel(function(e){return e.round(t)},{$x:t},function(e){return {$x:function(){return zerosLike(e)}}})}function exp_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;exp&quot;);return ENV.engine.runKernel(function(e,n){var r=e.exp(t);return n([r]),r},{$x:t},function(e,t){return {$x:function(){return e.mulStrict(t[0])}}})}function expm1_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;expm1&quot;);return ENV.engine.runKernel(function(e,n){var r=e.expm1(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.mul(n.exp())}}})}function log_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;log&quot;);return ENV.engine.runKernel(function(e,n){var r=e.log(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.div(n.toFloat())}}})}function log1p_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;log1p&quot;);return ENV.engine.runKernel(function(e,n){var r=e.log1p(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.div(n.add(1))}}})}function sqrt_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;sqrt&quot;);return ENV.engine.runKernel(function(e,n){var r=e.sqrt(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.div(n.toFloat().sqrt().mul(2))}}})}function rsqrt_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;rsqrt&quot;);return ENV.engine.runKernel(function(e,n){var r=e.rsqrt(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.div(n.pow(1.5).mul(2)).neg()}}})}function square_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;square&quot;);return ENV.engine.runKernel(function(e,n){return n([t]),e.square(t)},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.mul(n.toFloat().mul(2))}}})}function reciprocal_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;reciprocal&quot;);return ENV.engine.runKernel(function(e,n){var r=e.reciprocal(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.div(n.square().neg())}}})}function abs_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;abs&quot;);if(&quot;complex64&quot;===t.dtype)return ENV.engine.runKernel(function(e){return e.complexAbs(t)},{$x:t});return ENV.engine.runKernel(function(e,n){var r=e.abs(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.mul(n.toFloat().step(-1))}}})}function clipByValue_(e,t,n){var r=convertToTensor(e,&quot;x&quot;,&quot;clipByValue&quot;);assert(t&lt;=n,function(){return &quot;Error in clip: min (&quot;+t+&quot;) must be less than or equal to max (&quot;+n+&quot;).&quot;});return ENV.engine.runKernel(function(e,o){var a=e.clip(r,t,n);return o([r]),a},{$x:r},function(e,r){var o=r[0];return {$x:function(){return e.where(o.greaterEqual(t).logicalAnd(o.lessEqual(n)),zerosLike(e))}}})}function sigmoid_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;sigmoid&quot;);return ENV.engine.runKernel(function(e,n){var r=e.sigmoid(t);return n([r]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.mul(n.mul(scalar(1).sub(n)))}}})}function logSigmoid_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;logSigmoid&quot;);return ENV.engine.runKernel(function(e,n){var r=e.softplus(t.neg()).neg();return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.mul(n.neg().sigmoid())}}})}function softplus_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;softplus&quot;);return ENV.engine.runKernel(function(e,n){var r=e.softplus(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.mul(n.sigmoid())}}})}function sin_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;sin&quot;);return ENV.engine.runKernel(function(e,n){var r=e.sin(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return n.toFloat().cos().mul(e)}}})}function cos_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;cos&quot;);return ENV.engine.runKernel(function(e,n){var r=e.cos(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return n.toFloat().sin().neg().mul(e)}}})}function tan_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;tan&quot;);return ENV.engine.runKernel(function(e,n){var r=e.tan(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.div(n.cos().square())}}})}function asin_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;asin&quot;);return ENV.engine.runKernel(function(e,n){var r=e.asin(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.divStrict(scalar(1).sub(n.toFloat().square()).sqrt())}}})}function acos_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;acos&quot;);return ENV.engine.runKernel(function(e,n){var r=e.acos(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.divStrict(scalar(1).sub(n.toFloat().square()).sqrt()).neg()}}})}function atan_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;atan&quot;);return ENV.engine.runKernel(function(e,n){var r=e.atan(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.div(n.toFloat().square().add(1))}}})}function sinh_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;sinh&quot;);return ENV.engine.runKernel(function(e,n){var r=e.sinh(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return n.toFloat().cosh().mulStrict(e)}}})}function cosh_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;cosh&quot;);return ENV.engine.runKernel(function(e,n){var r=e.cosh(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return n.toFloat().sinh().mulStrict(e)}}})}function tanh_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;tanh&quot;);return ENV.engine.runKernel(function(e,n){var r=e.tanh(t);return n([r]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return scalar(1).sub(n.square()).mulStrict(e)}}})}function asinh_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;asinh&quot;);return ENV.engine.runKernel(function(e,n){var r=e.asinh(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.divStrict(scalar(1).add(n.toFloat().square()).sqrt())}}})}function acosh_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;acosh&quot;);return ENV.engine.runKernel(function(e,n){var r=e.acosh(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.divStrict(n.toFloat().square().sub(1).sqrt())}}})}function atanh_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;atanh&quot;);return ENV.engine.runKernel(function(e,n){var r=e.atanh(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.div(scalar(1).sub(n.toFloat().square()))}}})}function erf_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;erf&quot;);assert(&quot;int32&quot;===t.dtype||&quot;float32&quot;===t.dtype,function(){return &quot;Input dtype must be `int32` or `float32`.&quot;}),&quot;int32&quot;===t.dtype&amp;&amp;(t=t.toFloat());return ENV.engine.runKernel(function(e,n){var r=e.erf(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}})}function step_(e,t){void 0===t&amp;&amp;(t=0);var n=convertToTensor(e,&quot;x&quot;,&quot;step&quot;);return ENV.engine.runKernel(function(e){return e.step(n,t)},{$x:n},function(e){return {$x:function(){return zerosLike(e)}}})}ENV.get(&quot;IS_BROWSER&quot;)&amp;&amp;ENV.registerBackend(&quot;webgl&quot;,function(){return new MathBackendWebGL},2);var abs=op({abs_:abs_}),acos=op({acos_:acos_}),acosh=op({acosh_:acosh_}),asin=op({asin_:asin_}),asinh=op({asinh_:asinh_}),atan=op({atan_:atan_}),atanh=op({atanh_:atanh_}),ceil=op({ceil_:ceil_}),clipByValue=op({clipByValue_:clipByValue_}),cos=op({cos_:cos_}),cosh=op({cosh_:cosh_}),erf=op({erf_:erf_}),exp=op({exp_:exp_}),expm1=op({expm1_:expm1_}),floor=op({floor_:floor_}),log$1=op({log_:log_}),log1p=op({log1p_:log1p_}),logSigmoid=op({logSigmoid_:logSigmoid_}),neg=op({neg_:neg_}),reciprocal=op({reciprocal_:reciprocal_}),round=op({round_:round_}),rsqrt=op({rsqrt_:rsqrt_}),sigmoid=op({sigmoid_:sigmoid_}),sign=op({sign_:sign_}),isNaN$1=op({isNaN_:isNaN_}),isInf=op({isInf_:isInf_}),isFinite$1=op({isFinite_:isFinite_}),sin=op({sin_:sin_}),sinh=op({sinh_:sinh_}),softplus=op({softplus_:softplus_}),sqrt=op({sqrt_:sqrt_}),square=op({square_:square_}),step=op({step_:step_}),tan=op({tan_:tan_}),tanh$1=op({tanh_:tanh_});function batchNorm2d_(e,t,n,r,o,a){var i,s,u=convertToTensor(e,&quot;x&quot;,&quot;batchNorm&quot;),c=convertToTensor(t,&quot;mean&quot;,&quot;batchNorm&quot;),l=convertToTensor(n,&quot;variance&quot;,&quot;batchNorm&quot;);return null!=o&amp;&amp;(i=convertToTensor(o,&quot;scale&quot;,&quot;batchNorm&quot;)),null!=r&amp;&amp;(s=convertToTensor(r,&quot;offset&quot;,&quot;batchNorm&quot;)),assert(2===u.rank,function(){return &quot;Error in batchNorm3D: x must be rank 3 but got rank &quot;+u.rank+&quot;.&quot;}),assert(2===c.rank||1===c.rank,function(){return &quot;Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank &quot;+c.rank+&quot;.&quot;}),assert(2===l.rank||1===l.rank,function(){return &quot;Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank &quot;+l.rank+&quot;.&quot;}),null!=i&amp;&amp;assert(2===i.rank||1===i.rank,function(){return &quot;Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank &quot;+i.rank+&quot;.&quot;}),null!=s&amp;&amp;assert(2===s.rank||1===s.rank,function(){return &quot;Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank &quot;+s.rank+&quot;.&quot;}),batchNorm_(u,c,l,s,i,a)}function batchNorm3d_(e,t,n,r,o,a){var i,s,u=convertToTensor(e,&quot;x&quot;,&quot;batchNorm&quot;),c=convertToTensor(t,&quot;mean&quot;,&quot;batchNorm&quot;),l=convertToTensor(n,&quot;variance&quot;,&quot;batchNorm&quot;);return null!=o&amp;&amp;(i=convertToTensor(o,&quot;scale&quot;,&quot;batchNorm&quot;)),null!=r&amp;&amp;(s=convertToTensor(r,&quot;offset&quot;,&quot;batchNorm&quot;)),assert(3===u.rank,function(){return &quot;Error in batchNorm3D: x must be rank 3 but got rank &quot;+u.rank+&quot;.&quot;}),assert(3===c.rank||1===c.rank,function(){return &quot;Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank &quot;+c.rank+&quot;.&quot;}),assert(3===l.rank||1===l.rank,function(){return &quot;Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank &quot;+l.rank+&quot;.&quot;}),null!=i&amp;&amp;assert(3===i.rank||1===i.rank,function(){return &quot;Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank &quot;+i.rank+&quot;.&quot;}),null!=s&amp;&amp;assert(3===s.rank||1===s.rank,function(){return &quot;Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank &quot;+s.rank+&quot;.&quot;}),batchNorm_(u,c,l,s,i,a)}function batchNorm4d_(e,t,n,r,o,a){var i,s,u=convertToTensor(e,&quot;x&quot;,&quot;batchNorm&quot;),c=convertToTensor(t,&quot;mean&quot;,&quot;batchNorm&quot;),l=convertToTensor(n,&quot;variance&quot;,&quot;batchNorm&quot;);return null!=o&amp;&amp;(i=convertToTensor(o,&quot;scale&quot;,&quot;batchNorm&quot;)),null!=r&amp;&amp;(s=convertToTensor(r,&quot;offset&quot;,&quot;batchNorm&quot;)),assert(4===u.rank,function(){return &quot;Error in batchNorm4D: x must be rank 4 but got rank &quot;+u.rank+&quot;.&quot;}),assert(4===c.rank||1===c.rank,function(){return &quot;Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank &quot;+c.rank+&quot;.&quot;}),assert(4===l.rank||1===l.rank,function(){return &quot;Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank &quot;+l.rank+&quot;.&quot;}),null!=i&amp;&amp;assert(4===i.rank||1===i.rank,function(){return &quot;Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank &quot;+i.rank+&quot;.&quot;}),null!=s&amp;&amp;assert(4===s.rank||1===s.rank,function(){return &quot;Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank &quot;+s.rank+&quot;.&quot;}),batchNorm_(u,c,l,s,i,a)}function batchNormalization_(e,t,n,r,o,a){return void 0===r&amp;&amp;(r=.001),warnDeprecation(),batchNorm_(e,t,n,a,o,r)}function batchNorm_(e,t,n,r,o,a){null==a&amp;&amp;(a=.001);var i,s,u,c=convertToTensor(e,&quot;x&quot;,&quot;batchNorm&quot;),l=convertToTensor(t,&quot;mean&quot;,&quot;batchNorm&quot;),p=convertToTensor(n,&quot;variance&quot;,&quot;batchNorm&quot;);null!=o&amp;&amp;(i=convertToTensor(o,&quot;scale&quot;,&quot;batchNorm&quot;)),null!=r&amp;&amp;(s=convertToTensor(r,&quot;offset&quot;,&quot;batchNorm&quot;)),assert(l.rank===p.rank,function(){return &quot;Batch normalization gradient requires mean and variance to have equal ranks.&quot;}),assert(null==s||l.rank===s.rank,function(){return &quot;Batch normalization gradient requires mean and offset to have equal ranks.&quot;}),assert(null==i||l.rank===i.rank,function(){return &quot;Batch normalization gradient requires mean and scale to have equal ranks.&quot;}),u=0===c.rank||1===c.rank?c.as4D(1,1,1,c.size):2===c.rank?c.as4D(1,1,c.shape[0],c.shape[1]):3===c.rank?c.as4D(1,c.shape[0],c.shape[1],c.shape[2]):c;return ENV.engine.runKernel(function(e,t){var n=e.batchNormalization(u,batchnormReshape4D(l),batchnormReshape4D(p),a,batchnormReshape4D(i),batchnormReshape4D(s));return t([c,l,p,i]),n},{$x:c,$mean:l,$variance:p,$scale:i,$offset:s},function(e,t){var n=t[0],r=t[1],o=t[2],i=t[3],s=null==i?scalar(1):i,c=getReductionAxes(r.shape,u.shape),l=[];if(1===r.rank){for(var p=0;p&lt;u.shape.length-1;++p)l.push(u.shape[p]);l.push(1);}var d=n.sub(r),h=e.mul(s),f=rsqrt(o.add(scalar(a))),m=f.mul(f).mul(f).mul(scalar(-.5));return {$x:function(){return 1===r.rank?e.mul(tile(f.as4D(1,1,1,r.shape[0]),l)).mul(s).reshape(n.shape):e.mul(f).mul(s).reshape(n.shape)},$mean:function(){var e=f.mul(scalar(-1)).mul(h);return 1===r.rank&amp;&amp;(e=e.sum(c)),e.reshape(r.shape)},$variance:function(){var e=m.mul(d).mul(h);return 1===r.rank&amp;&amp;(e=e.sum(c)),e.reshape(r.shape)},$scale:function(){var t=d.mul(f),n=e.mul(t);return 1===r.rank&amp;&amp;(n=n.sum(c)),n.reshape(r.shape)},$offset:function(){var t=e;return 1===r.rank&amp;&amp;(t=t.sum(c)),t.reshape(r.shape)}}}).reshape(c.shape)}function batchnormReshape4D(e){return null==e?null:0===e.rank?e.as1D():1===e.rank?e:2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}function batchNormalization2d_(e,t,n,r,o,a){return void 0===r&amp;&amp;(r=.001),warnDeprecation(),batchNorm2d_(e,t,n,a,o,r)}function batchNormalization3d_(e,t,n,r,o,a){return void 0===r&amp;&amp;(r=.001),warnDeprecation(),batchNorm3d_(e,t,n,a,o,r)}function batchNormalization4d_(e,t,n,r,o,a){return void 0===r&amp;&amp;(r=.001),warnDeprecation(),batchNorm4d_(e,t,n,a,o,r)}function warnDeprecation(){deprecationWarn(&quot;tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon&quot;);}var batchNormalization2d=op({batchNormalization2d_:batchNormalization2d_}),batchNormalization3d=op({batchNormalization3d_:batchNormalization3d_}),batchNormalization4d=op({batchNormalization4d_:batchNormalization4d_}),batchNormalization=op({batchNormalization_:batchNormalization_}),batchNorm=op({batchNorm_:batchNorm_}),batchNorm2d=op({batchNorm2d_:batchNorm2d_}),batchNorm3d=op({batchNorm3d_:batchNorm3d_}),batchNorm4d=op({batchNorm4d_:batchNorm4d_});function computePool2DInfo(e,t,n,r,o,a,i){void 0===i&amp;&amp;(i=&quot;channelsLast&quot;);var s,u=parseTupleParam(t),c=u[0],l=u[1];if(&quot;channelsLast&quot;===i)s=[c,l,e[3],e[3]];else{if(&quot;channelsFirst&quot;!==i)throw new Error(&quot;Unknown dataFormat &quot;+i);s=[c,l,e[1],e[1]];}return computeConv2DInfo(e,s,n,r,o,a,!1,i)}function computeConv2DInfo(e,t,n,r,o,a,i,s){void 0===i&amp;&amp;(i=!1),void 0===s&amp;&amp;(s=&quot;channelsLast&quot;);var u=[-1,-1,-1,-1],c=u[0],l=u[1],p=u[2],d=u[3];if(&quot;channelsLast&quot;===s)c=e[0],l=e[1],p=e[2],d=e[3];else{if(&quot;channelsFirst&quot;!==s)throw new Error(&quot;Unknown dataFormat &quot;+s);c=e[0],d=e[1],l=e[2],p=e[3];}var h,f=t[0],m=t[1],g=t[3],v=parseTupleParam(n),y=v[0],x=v[1],E=parseTupleParam(r),T=E[0],b=E[1],w=getEffectiveFilterSize(f,T),S=getEffectiveFilterSize(m,b),C=getPadAndOutInfo(o,l,p,y,x,w,S,a),A=C.padInfo,N=C.outHeight,_=C.outWidth,R=i?g*d:g;return &quot;channelsFirst&quot;===s?h=[c,R,N,_]:&quot;channelsLast&quot;===s&amp;&amp;(h=[c,N,_,R]),{batchSize:c,dataFormat:s,inHeight:l,inWidth:p,inChannels:d,outHeight:N,outWidth:_,outChannels:R,padInfo:A,strideHeight:y,strideWidth:x,filterHeight:f,filterWidth:m,effectiveFilterHeight:w,effectiveFilterWidth:S,dilationHeight:T,dilationWidth:b,inShape:e,outShape:h,filterShape:t}}function computeConv3DInfo(e,t,n,r,o,a,i){void 0===a&amp;&amp;(a=!1),void 0===i&amp;&amp;(i=&quot;channelsLast&quot;);var s=[-1,-1,-1,-1,-1],u=s[0],c=s[1],l=s[2],p=s[3],d=s[4];if(&quot;channelsLast&quot;===i)u=e[0],c=e[1],l=e[2],p=e[3],d=e[4];else{if(&quot;channelsFirst&quot;!==i)throw new Error(&quot;Unknown dataFormat &quot;+i);u=e[0],d=e[1],c=e[2],l=e[3],p=e[4];}var h,f=t[0],m=t[1],g=t[2],v=t[4],y=parse3TupleParam(n),x=y[0],E=y[1],T=y[2],b=parse3TupleParam(r),w=b[0],S=b[1],C=b[2],A=get3DPadAndOutInfo(o,c,l,p,x,E,T,getEffectiveFilterSize(f,w),getEffectiveFilterSize(m,S),getEffectiveFilterSize(g,C)),N=A.padInfo,_=A.outDepth,R=A.outHeight,I=A.outWidth,k=a?v*d:v;return &quot;channelsFirst&quot;===i?h=[u,k,_,R,I]:&quot;channelsLast&quot;===i&amp;&amp;(h=[u,_,R,I,k]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:l,inWidth:p,inChannels:d,outDepth:_,outHeight:R,outWidth:I,outChannels:k,padInfo:N,strideDepth:x,strideHeight:E,strideWidth:T,filterDepth:f,filterHeight:m,filterWidth:g,dilationDepth:w,dilationHeight:S,dilationWidth:C,inShape:e,outShape:h,filterShape:t}}function computeOutputShape3D(e,t,n,r,o,a){null==o&amp;&amp;(o=computeDefaultPad(e,t,r));var i=e[0],s=e[1],u=conditionalRound((i-t+2*o)/r+1,a);assert(isInt(u),function(){return &quot;The output # of rows (&quot;+u+&quot;) must be an integer. Change the stride and/or zero pad parameters&quot;});var c=conditionalRound((s-t+2*o)/r+1,a);return assert(isInt(c),function(){return &quot;The output # of columns (&quot;+c+&quot;) must be an integer. Change the stride and/or zero pad parameters&quot;}),[u,c,n]}function computeDefaultPad(e,t,n,r){void 0===r&amp;&amp;(r=1);var o=getEffectiveFilterSize(t,r);return Math.floor((e[0]*(n-1)-n+o)/2)}function parseTupleParam(e){return &quot;number&quot;==typeof e?[e,e]:e}function parse3TupleParam(e){return &quot;number&quot;==typeof e?[e,e,e]:e}function getEffectiveFilterSize(e,t){return t&lt;=1?e:e+(e-1)*(t-1)}function getPadAndOutInfo(e,t,n,r,o,a,i,s){var u,c,l;if(&quot;number&quot;==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?&quot;VALID&quot;:&quot;NUMBER&quot;};var p=computeOutputShape3D([t,n,1],a,1,r,e,s);c=p[0],l=p[1];}else if(&quot;same&quot;===e){c=Math.ceil(t/r),l=Math.ceil(n/o);var d=Math.max(0,(c-1)*r+a-t),h=Math.max(0,(l-1)*o+i-n),f=Math.floor(d/2),m=d-f,g=Math.floor(h/2);u={top:f,bottom:m,left:g,right:h-g,type:&quot;SAME&quot;};}else{if(&quot;valid&quot;!==e)throw Error(&quot;Unknown padding parameter: &quot;+e);u={top:0,bottom:0,left:0,right:0,type:&quot;VALID&quot;},c=Math.ceil((t-a+1)/r),l=Math.ceil((n-i+1)/o);}return {padInfo:u,outHeight:c,outWidth:l}}function get3DPadAndOutInfo(e,t,n,r,o,a,i,s,u,c){var l,p,d,h;if(&quot;same&quot;===e){var f=((p=Math.ceil(t/o))-1)*o+s-t,m=((d=Math.ceil(n/a))-1)*a+u-n,g=((h=Math.ceil(r/i))-1)*i+c-r,v=Math.floor(f/2),y=f-v,x=Math.floor(m/2),E=m-x,T=Math.floor(g/2);l={top:x,bottom:E,left:T,right:g-T,front:v,back:y,type:&quot;SAME&quot;};}else{if(&quot;valid&quot;!==e)throw Error(&quot;Unknown padding parameter: &quot;+e);l={top:0,bottom:0,left:0,right:0,front:0,back:0,type:&quot;VALID&quot;},p=Math.ceil((t-s+1)/o),d=Math.ceil((n-u+1)/a),h=Math.ceil((r-c+1)/i);}return {padInfo:l,outDepth:p,outHeight:d,outWidth:h}}function conditionalRound(e,t){if(!t)return e;switch(t){case&quot;round&quot;:return Math.round(e);case&quot;ceil&quot;:return Math.ceil(e);case&quot;floor&quot;:return Math.floor(e);default:throw new Error(&quot;Unknown roundingMode &quot;+t)}}function tupleValuesAreOne(e){var t=parseTupleParam(e),n=t[0],r=t[1];return 1===n&amp;&amp;1===r}function eitherStridesOrDilationsAreOne(e,t){return tupleValuesAreOne(e)||tupleValuesAreOne(t)}function conv1d_(e,t,n,r,o,a,i){void 0===o&amp;&amp;(o=&quot;NWC&quot;),void 0===a&amp;&amp;(a=1);var s=convertToTensor(e,&quot;x&quot;,&quot;conv1d&quot;),u=convertToTensor(t,&quot;filter&quot;,&quot;conv1d&quot;),c=s,l=!1;2===s.rank&amp;&amp;(l=!0,c=s.as3D(1,s.shape[0],s.shape[1])),assert(3===c.rank,function(){return &quot;Error in conv1d: input must be rank 3, but got rank &quot;+c.rank+&quot;.&quot;}),assert(3===u.rank,function(){return &quot;Error in conv1d: filter must be rank 3, but got rank &quot;+u.rank+&quot;.&quot;}),null!=i&amp;&amp;assert(isInt(r),function(){return &quot;Error in conv1d: pad must be an integer when using, dimRoundingMode &quot;+i+&quot; but got pad &quot;+r+&quot;.&quot;}),assert(c.shape[2]===u.shape[1],function(){return &quot;Error in conv1d: depth of input (&quot;+c.shape[2]+&quot;) must match input depth for filter &quot;+u.shape[1]+&quot;.&quot;}),assert(eitherStridesOrDilationsAreOne(n,a),function(){return &quot;Error in conv1D: Either stride or dilation must be 1. Got stride &quot;+n+&quot; and dilation &#39;&quot;+a+&quot;&#39;&quot;}),assert(&quot;NWC&quot;===o,function(){return &quot;Error in conv1d: got dataFormat of &quot;+o+&quot; but only NWC is currently supported.&quot;});var p=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),d=c.as4D(c.shape[0],1,c.shape[1],c.shape[2]),h=conv2d(d,p,[1,n],r,&quot;NHWC&quot;,[1,a],i);return l?h.as2D(h.shape[2],h.shape[3]):h.as3D(h.shape[0],h.shape[2],h.shape[3])}function conv2d_(e,t,n,r,o,a,i){void 0===o&amp;&amp;(o=&quot;NHWC&quot;),void 0===a&amp;&amp;(a=[1,1]);var s=convertToTensor(e,&quot;x&quot;,&quot;conv2d&quot;),u=convertToTensor(t,&quot;filter&quot;,&quot;conv2d&quot;),c=s,l=!1;3===s.rank&amp;&amp;(l=!0,c=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),assert(4===c.rank,function(){return &quot;Error in conv2d: input must be rank 4, but got rank &quot;+c.rank+&quot;.&quot;}),assert(4===u.rank,function(){return &quot;Error in conv2d: filter must be rank 4, but got rank &quot;+u.rank+&quot;.&quot;}),null!=i&amp;&amp;assert(isInt(r),function(){return &quot;Error in conv2d: pad must be an integer when using, dimRoundingMode &quot;+i+&quot; but got pad &quot;+r+&quot;.&quot;}),assert(c.shape[3]===u.shape[2],function(){return &quot;Error in conv2d: depth of input (&quot;+c.shape[3]+&quot;) must match input depth for filter &quot;+u.shape[2]+&quot;.&quot;}),assert(eitherStridesOrDilationsAreOne(n,a),function(){return &quot;Error in conv2D: Either strides or dilations must be 1. Got strides &quot;+n+&quot; and dilations &#39;&quot;+a+&quot;&#39;&quot;}),assert(&quot;NHWC&quot;===o,function(){return &quot;Error in conv2d: got dataFormat of &quot;+o+&quot; but only NHWC is currently supported.&quot;});var p=computeConv2DInfo(c.shape,u.shape,n,a,r,i),d=ENV.engine.runKernel(function(e,t){var n=e.conv2d(c,u,p);return t([u,c]),n},{x:c,$filter:u},function(e,t){var o=t,i=o[0],s=o[1];return assert(tupleValuesAreOne(a),function(){return &quot;Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations &#39;&quot;+a+&quot;&#39;&quot;}),{x:function(){return conv2dDerInput_(s.shape,e,i,n,r)},$filter:function(){return conv2dDerFilter_(s,e,i.shape,n,r)}}});return l?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}function conv2dDerInput_(e,t,n,r,o,a){assert(e.length===t.rank,function(){return &quot;Length of inShape (&quot;+e.length+&quot;) and rank of dy (&quot;+t.rank+&quot;) must match&quot;});var i=e,s=t,u=!1;3===t.rank&amp;&amp;(u=!0,s=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]),i=[1,e[0],e[1],e[2]]);var c=i[3],l=s.shape[3];assert(4===i.length,function(){return &quot;Error in conv2dDerInput: inShape must be length 4, but got length &quot;+i.length+&quot;.&quot;}),assert(4===s.rank,function(){return &quot;Error in conv2dDerInput: dy must be rank 4, but got rank &quot;+s.rank}),assert(4===n.rank,function(){return &quot;Error in conv2dDerInput: filter must be rank 4, but got rank &quot;+n.rank}),assert(c===n.shape[2],function(){return &quot;Error in conv2dDerInput: depth of input (&quot;+c+&quot;) must match input depth for filter &quot;+n.shape[2]+&quot;.&quot;}),assert(l===n.shape[3],function(){return &quot;Error in conv2dDerInput: depth of output (&quot;+l+&quot;) must match output depth for filter &quot;+n.shape[3]+&quot;.&quot;}),null!=a&amp;&amp;assert(isInt(o),function(){return &quot;Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode &quot;+a+&quot; but got pad &quot;+o+&quot;.&quot;});var p=computeConv2DInfo(i,n.shape,r,1,o,a),d=ENV.engine.runKernel(function(e,t){var r=e.conv2dDerInput(s,n,p);return t([n,s]),r},{dy4D:s,filter:n},function(e,t){var n=t[0],i=t[1];return {dy4D:function(){return conv2d(e,n,r,o,&quot;NHWC&quot;,1,a)},filter:function(){return conv2dDerFilter(e,i,n.shape,r,o,a)}}});return u?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}function conv2dDerFilter_(e,t,n,r,o,a){var i=e;3===e.rank&amp;&amp;(i=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var s=t;3===s.rank&amp;&amp;(s=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),assert(4===i.rank,function(){return &quot;Error in conv2dDerFilter: input must be rank 4, but got shape &quot;+i.shape+&quot;.&quot;}),assert(4===s.rank,function(){return &quot;Error in conv2dDerFilter: dy must be rank 4, but got shape &quot;+s.shape+&quot;.&quot;}),assert(4===n.length,function(){return &quot;Error in conv2dDerFilter: filterShape must be length 4, but got &quot;+n+&quot;.&quot;}),assert(i.shape[3]===n[2],function(){return &quot;Error in conv2dDerFilter: depth of input &quot;+i.shape[3]+&quot;) must match input depth in filter (&quot;+n[2]+&quot;.&quot;}),assert(s.shape[3]===n[3],function(){return &quot;Error in conv2dDerFilter: depth of dy (&quot;+s.shape[3]+&quot;) must match output depth for filter (&quot;+n[3]+&quot;).&quot;}),null!=a&amp;&amp;assert(isInt(o),function(){return &quot;Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode &quot;+a+&quot; but got pad &quot;+o+&quot;.&quot;});var u=computeConv2DInfo(i.shape,n,r,1,o,a);return ENV.engine.runKernel(function(e){return e.conv2dDerFilter(i,s,u)},{x4D:i,dy4D:s})}function conv2dTranspose_(e,t,n,r,o,a){return conv2dDerInput_(n,convertToTensor(e,&quot;x&quot;,&quot;conv2dTranspose&quot;),convertToTensor(t,&quot;filter&quot;,&quot;conv2dTranspose&quot;),r,o,a)}function depthwiseConv2d_(e,t,n,r,o,a,i){void 0===o&amp;&amp;(o=&quot;NHWC&quot;),void 0===a&amp;&amp;(a=[1,1]);var s=convertToTensor(e,&quot;x&quot;,&quot;depthwiseConv2d&quot;),u=convertToTensor(t,&quot;filter&quot;,&quot;depthwiseConv2d&quot;),c=s,l=!1;3===s.rank&amp;&amp;(l=!0,c=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),assert(4===c.rank,function(){return &quot;Error in depthwiseConv2d: input must be rank 4, but got rank &quot;+c.rank+&quot;.&quot;}),assert(4===u.rank,function(){return &quot;Error in depthwiseConv2d: filter must be rank 4, but got rank &quot;+u.rank+&quot;.&quot;}),assert(c.shape[3]===u.shape[2],function(){return &quot;Error in depthwiseConv2d: number of input channels (&quot;+c.shape[3]+&quot;) must match the inChannels dimension in filter &quot;+u.shape[2]+&quot;.&quot;}),null==a&amp;&amp;(a=[1,1]),assert(eitherStridesOrDilationsAreOne(n,a),function(){return &quot;Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides &quot;+n+&quot; and dilations &#39;&quot;+a+&quot;&#39;&quot;}),null!=i&amp;&amp;assert(isInt(r),function(){return &quot;Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode &quot;+i+&quot; but got pad &quot;+r+&quot;.&quot;});var p=computeConv2DInfo(c.shape,u.shape,n,a,r,i,!0),d=ENV.engine.runKernel(function(e,t){var n=e.depthwiseConv2D(c,u,p);return t([c,u]),n},{x:c,$filter:u},function(e,t){assert(tupleValuesAreOne(a),function(){return &quot;Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations &#39;&quot;+a+&quot;&#39;&quot;});var n=t[0],r=t[1];return {x:function(){return depthwiseConv2dDerInput(n.shape,e,r,p)},$filter:function(){return depthwiseConv2dDerFilter(n,e,r.shape,p)}}});return l?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}function separableConv2d_(e,t,n,r,o,a,i){void 0===a&amp;&amp;(a=[1,1]),void 0===i&amp;&amp;(i=&quot;NHWC&quot;);var s=convertToTensor(e,&quot;x&quot;,&quot;separableConv2d&quot;),u=convertToTensor(t,&quot;depthwiseFilter&quot;,&quot;separableConv2d&quot;),c=convertToTensor(n,&quot;pointwiseFilter&quot;,&quot;separableConv2d&quot;),l=s,p=!1;if(3===s.rank&amp;&amp;(p=!0,l=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),&quot;NCHW&quot;===i)throw new Error(&quot;separableConv2d currently does not support dataFormat NCHW; only NHWC is supported&quot;);assert(4===l.rank,function(){return &quot;Error in separableConv2d: input must be rank 4, but got rank &quot;+l.rank+&quot;.&quot;}),assert(4===u.rank,function(){return &quot;Error in separableConv2d: depthwise filter must be rank 4, but got rank &quot;+u.rank+&quot;.&quot;}),assert(4===c.rank,function(){return &quot;Error in separableConv2d: pointwise filter must be rank 4, but got rank &quot;+u.rank+&quot;.&quot;}),assert(1===c.shape[0],function(){return &quot;Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got &quot;+c.shape[0]+&quot;.&quot;}),assert(1===c.shape[1],function(){return &quot;Error in separableConv2d: the second dimension of pointwise filter must be 1, but got &quot;+c.shape[1]+&quot;.&quot;});var d=u.shape[2],h=u.shape[3];assert(c.shape[2]===d*h,function(){return &quot;Error in separableConv2d: the third dimension of pointwise filter must be &quot;+d*h+&quot;, but got &quot;+c.shape[2]+&quot;.&quot;});var f=depthwiseConv2d(l,u,r,o,i,a),m=conv2d(f,c,1,&quot;valid&quot;,i);return p?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}function parseTupleParam$1(e){return &quot;number&quot;==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function tupleValuesAreOne$1(e){var t=parseTupleParam$1(e),n=t[0],r=t[1],o=t[2];return 1===n&amp;&amp;1===r&amp;&amp;1===o}function eitherStridesOrDilationsAreOne$1(e,t){return tupleValuesAreOne$1(e)||tupleValuesAreOne$1(t)}function depthwiseConv2dDerInput(e,t,n,r){var o=t,a=!1;3===t.rank&amp;&amp;(a=!0,o=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var i=ENV.engine.runKernel(function(e){return e.depthwiseConv2DDerInput(o,n,r)},{dy4D:o});return a?i.as3D(i.shape[1],i.shape[2],i.shape[3]):i}function depthwiseConv2dDerFilter(e,t,n,r){var o=e;3===e.rank&amp;&amp;(o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var a=t;return 3===a.rank&amp;&amp;(a=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),ENV.engine.runKernel(function(e){return e.depthwiseConv2DDerFilter(o,a,r)},{x4D:o,dy4D:a})}function conv3d_(e,t,n,r,o,a){void 0===o&amp;&amp;(o=&quot;NHWC&quot;),void 0===a&amp;&amp;(a=[1,1,1]);var i=convertToTensor(e,&quot;x&quot;,&quot;conv3d&quot;),s=convertToTensor(t,&quot;filter&quot;,&quot;conv3d&quot;),u=i,c=!1;4===i.rank&amp;&amp;(c=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),assert(5===u.rank,function(){return &quot;Error in conv3d: input must be rank 5, but got rank &quot;+u.rank+&quot;.&quot;}),assert(5===s.rank,function(){return &quot;Error in conv3d: filter must be rank 5, but got rank &quot;+s.rank+&quot;.&quot;}),assert(u.shape[4]===s.shape[3],function(){return &quot;Error in conv3d: depth of input (&quot;+u.shape[4]+&quot;) must match input depth for filter &quot;+s.shape[3]+&quot;.&quot;}),assert(eitherStridesOrDilationsAreOne$1(n,a),function(){return &quot;Error in conv3D: Either strides or dilations must be 1. Got strides &quot;+n+&quot; and dilations &#39;&quot;+a+&quot;&#39;&quot;}),assert(&quot;NHWC&quot;===o,function(){return &quot;Error in conv3d: got dataFormat of &quot;+o+&quot; but only NHWC is currently supported.&quot;});var l=computeConv3DInfo(u.shape,s.shape,n,a,r),p=ENV.engine.runKernel(function(e,t){var n=e.conv3d(u,s,l);return t([u,s]),n},{x:u,$filter:s},function(e,t){assert(tupleValuesAreOne$1(a),function(){return &quot;Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations &#39;&quot;+a+&quot;&#39;&quot;});var o=t[0],i=t[1];return {x:function(){return conv3dDerInput_(o.shape,e,i,n,r)},$filter:function(){return conv3dDerFilter_(o,e,i.shape,n,r)}}});return c?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}function conv3dDerInput_(e,t,n,r,o){assert(e.length===t.rank,function(){return &quot;Length of inShape (&quot;+e.length+&quot;) and rank of dy (&quot;+t.rank+&quot;) must match&quot;});var a=e,i=t,s=!1;4===t.rank&amp;&amp;(s=!0,i=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]),a=[1,e[0],e[1],e[2],e[3]]);var u=a[4],c=i.shape[4];assert(5===a.length,function(){return &quot;Error in conv3dDerInput: inShape must be length 5, but got length &quot;+a.length+&quot;.&quot;}),assert(5===i.rank,function(){return &quot;Error in conv3dDerInput: dy must be rank 5, but got rank &quot;+i.rank}),assert(5===n.rank,function(){return &quot;Error in conv3dDerInput: filter must be rank 5, but got rank &quot;+n.rank}),assert(u===n.shape[3],function(){return &quot;Error in conv3dDerInput: depth of input (&quot;+u+&quot;) must match input depth for filter &quot;+n.shape[3]+&quot;.&quot;}),assert(c===n.shape[4],function(){return &quot;Error in conv3dDerInput: depth of output (&quot;+c+&quot;) must match output depth for filter &quot;+n.shape[4]+&quot;.&quot;});var l=computeConv3DInfo(a,n.shape,r,1,o),p=ENV.engine.runKernel(function(e){return e.conv3dDerInput(i,n,l)},{dy5D:i});return s?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}function conv3dDerFilter_(e,t,n,r,o){var a=e;4===e.rank&amp;&amp;(a=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]));var i=t;4===i.rank&amp;&amp;(i=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3])),assert(5===a.rank,function(){return &quot;Error in conv3dDerFilter: input must be rank 5, but got shape &quot;+a.shape+&quot;.&quot;}),assert(5===i.rank,function(){return &quot;Error in conv3dDerFilter: dy must be rank 5, but got shape &quot;+i.shape+&quot;.&quot;}),assert(5===n.length,function(){return &quot;Error in conv3dDerFilter: filterShape must be length 5, but got &quot;+n+&quot;.&quot;}),assert(a.shape[4]===n[3],function(){return &quot;Error in conv3dDerFilter: depth of input &quot;+a.shape[4]+&quot;) must match input depth in filter (&quot;+n[3]+&quot;.&quot;}),assert(i.shape[4]===n[4],function(){return &quot;Error in conv3dDerFilter: depth of dy (&quot;+i.shape[4]+&quot;) must match output depth for filter (&quot;+n[4]+&quot;).&quot;});var s=computeConv3DInfo(a.shape,n,r,1,o);return ENV.engine.runKernel(function(e){return e.conv3dDerFilter(a,i,s)},{x5D:a,dy5D:i})}var conv1d=op({conv1d_:conv1d_}),conv2d=op({conv2d_:conv2d_}),conv3d=op({conv3d_:conv3d_}),conv2dDerFilter=op({conv2dDerFilter_:conv2dDerFilter_}),depthwiseConv2d=op({depthwiseConv2d_:depthwiseConv2d_}),separableConv2d=op({separableConv2d_:separableConv2d_}),conv2dTranspose=op({conv2dTranspose_:conv2dTranspose_});function matMul_(e,t,n,r){var o;void 0===n&amp;&amp;(n=!1),void 0===r&amp;&amp;(r=!1);var a=convertToTensor(e,&quot;a&quot;,&quot;matMul&quot;),i=convertToTensor(t,&quot;b&quot;,&quot;matMul&quot;);o=makeTypesMatch(a,i),a=o[0],i=o[1];var s=n?a.shape[a.rank-2]:a.shape[a.rank-1],u=r?i.shape[i.rank-1]:i.shape[i.rank-2],c=n?a.shape[a.rank-1]:a.shape[a.rank-2],l=r?i.shape[i.rank-2]:i.shape[i.rank-1],p=a.shape.slice(0,-2),d=i.shape.slice(0,-2),h=sizeFromShape(p),f=sizeFromShape(d);assert(a.rank&gt;=2&amp;&amp;i.rank&gt;=2&amp;&amp;a.rank===i.rank,function(){return &quot;Error in matMul: inputs must have the same rank of at least 2, got ranks &quot;+a.rank+&quot; and &quot;+i.rank+&quot;.&quot;}),assert(arraysEqual(p,d),function(){return &quot;Error in matMul: outer dimensions (&quot;+p+&quot;) and (&quot;+d+&quot;) of Tensors with shapes &quot;+a.shape+&quot; and &quot;+i.shape+&quot; must match.&quot;}),assert(s===u,function(){return &quot;Error in matMul: inner shapes (&quot;+s+&quot;) and (&quot;+u+&quot;) of Tensors with shapes &quot;+a.shape+&quot; and &quot;+i.shape+&quot; and transposeA=&quot;+n+&quot; and transposeB=&quot;+r+&quot; must match.&quot;});var m=a.shape.slice(0,-2).concat([c,l]),g=n?a.as3D(h,s,c):a.as3D(h,c,s),v=r?i.as3D(f,l,u):i.as3D(f,u,l);return ENV.engine.runKernel(function(e,t){var o=e.batchMatMul(g,v,n,r);return t([g,v]),o},{$a:g,$b:v},function(e,t){var o=t,a=o[0],i=o[1];return n||r?!n&amp;&amp;r?{$a:function(){return e.matMul(i,!1,!1)},$b:function(){return e.matMul(a,!0,!1)}}:n&amp;&amp;!r?{$a:function(){return i.matMul(e,!1,!0)},$b:function(){return a.matMul(e,!1,!1)}}:{$a:function(){return i.matMul(e,!0,!0)},$b:function(){return e.matMul(a,!0,!0)}}:{$a:function(){return e.matMul(i,!1,!0)},$b:function(){return a.matMul(e,!0,!1)}}}).reshape(m)}function outerProduct_(e,t){var n=convertToTensor(e,&quot;v1&quot;,&quot;outerProduct&quot;),r=convertToTensor(t,&quot;v2&quot;,&quot;outerProduct&quot;);return assert(1===n.rank&amp;&amp;1===r.rank,function(){return &quot;Error in outerProduct: inputs must be rank 1, but got ranks &quot;+n.rank+&quot; and &quot;+r.rank+&quot;.&quot;}),n.as2D(-1,1).matMul(r.as2D(1,-1))}function dot_(e,t){var n=convertToTensor(e,&quot;t1&quot;,&quot;dot&quot;),r=convertToTensor(t,&quot;t2&quot;,&quot;dot&quot;);assert(!(1!==n.rank&amp;&amp;2!==n.rank||1!==r.rank&amp;&amp;2!==r.rank),function(){return &quot;Error in dot: inputs must all be rank 1 or 2, but got ranks &quot;+n.rank+&quot; and &quot;+r.rank+&quot;.&quot;});var o=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];return assert(o===a,function(){return &quot;Error in dot: inner dimensions of inputs must match, but got &quot;+o+&quot; and &quot;+a+&quot;.&quot;}),1===n.rank&amp;&amp;1===r.rank?n.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():1===n.rank&amp;&amp;2===r.rank?n.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():2===n.rank&amp;&amp;1===r.rank?n.matMul(r.as2D(-1,1)).as1D():n.matMul(r.as2D(r.shape[0],r.shape[1]))}var matMul=op({matMul_:matMul_}),dot=op({dot_:dot_}),outerProduct=op({outerProduct_:outerProduct_});function reverse1d_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;reverse&quot;);return assert(1===t.rank,function(){return &quot;Error in reverse1D: x must be rank 1 but got rank &quot;+t.rank+&quot;.&quot;}),reverse(t,0)}function reverse2d_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;reverse&quot;);return assert(2===n.rank,function(){return &quot;Error in reverse2D: x must be rank 2 but got rank &quot;+n.rank+&quot;.&quot;}),reverse(n,t)}function reverse3d_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;reverse&quot;);return assert(3===n.rank,function(){return &quot;Error in reverse3D: x must be rank 3 but got rank &quot;+n.rank+&quot;.&quot;}),reverse(n,t)}function reverse4d_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;reverse&quot;);return assert(4===n.rank,function(){return &quot;Error in reverse4D: x must be rank 4 but got rank &quot;+n.rank+&quot;.&quot;}),reverse(n,t)}function reverse_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;reverse&quot;);if(0===n.rank)return n.clone();var r=parseAxisParam(t,n.shape);return ENV.engine.runKernel(function(e){return e.reverse(n,r)},{$x:n},function(e){return {$x:function(){return e.reverse(r)}}}).reshapeAs(n)}var reverse=op({reverse_:reverse_}),reverse1d=op({reverse1d_:reverse1d_}),reverse2d=op({reverse2d_:reverse2d_}),reverse3d=op({reverse3d_:reverse3d_}),reverse4d=op({reverse4d_:reverse4d_});function maxPoolImpl_(e,t,n,r,o,a){var i=convertToTensor(e,&quot;x&quot;,&quot;maxPool&quot;),s=i,u=!1;3===i.rank&amp;&amp;(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),null==r&amp;&amp;(r=[1,1]),assert(4===s.rank,function(){return &quot;Error in maxPool: input must be rank 4 but got rank &quot;+s.rank+&quot;.&quot;}),assert(eitherStridesOrDilationsAreOne(n,r),function(){return &quot;Error in maxPool: Either strides or dilations must be 1. Got strides &quot;+n+&quot; and dilations &#39;&quot;+r+&quot;&#39;&quot;}),null!=a&amp;&amp;assert(isInt(o),function(){return &quot;Error in maxPool: pad must be an integer when using, dimRoundingMode &quot;+a+&quot; but got pad &quot;+o+&quot;.&quot;});var c=computePool2DInfo(s.shape,t,n,r,o,a),l=ENV.engine.runKernel(function(e,t){var n=e.maxPool(s,c);return t([s,n]),n},{x:s},function(e,a){var i=a[0],s=a[1];return {x:function(){return maxPoolBackprop(e,i,s,t,n,r,o)}}});return u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}function maxPool_(e,t,n,r,o){return maxPoolImpl_(e,t,n,1,r,o)}function avgPoolImpl_(e,t,n,r,o,a){var i=convertToTensor(e,&quot;x&quot;,&quot;avgPool&quot;,&quot;float32&quot;);null==r&amp;&amp;(r=[1,1]),assert(eitherStridesOrDilationsAreOne(n,r),function(){return &quot;Error in avgPool: Either strides or dilations must be 1. Got strides &quot;+n+&quot; and dilations &#39;&quot;+r+&quot;&#39;&quot;});var s=i,u=!1;3===i.rank&amp;&amp;(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),assert(4===s.rank,function(){return &quot;Error in avgPool: x must be rank 4 but got rank &quot;+s.rank+&quot;.&quot;}),null!=a&amp;&amp;assert(isInt(o),function(){return &quot;Error in avgPool: pad must be an integer when using, dimRoundingMode &quot;+a+&quot; but got pad &quot;+o+&quot;.&quot;});var c=computePool2DInfo(s.shape,t,n,r,o,a),l=ENV.engine.runKernel(function(e){return e.avgPool(s,c)},{x:s},function(e){return {x:function(){return avgPoolBackprop(e,s,t,n,r,o)}}});return l=l.cast(i.dtype),u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}function avgPool_(e,t,n,r,o){return avgPoolImpl_(e,t,n,1,r,o)}function pool_(e,t,n,r,o,a){null==o&amp;&amp;(o=[1,1]),null==a&amp;&amp;(a=1),0===r&amp;&amp;(r=&quot;valid&quot;);var i=convertToTensor(e,&quot;x&quot;,&quot;maxPool&quot;),s=i,u=!1;3===i.rank&amp;&amp;(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),assert(eitherStridesOrDilationsAreOne(a,o),function(){return &quot;Error in pool: Either strides or dilations must be 1. Got strides &quot;+a+&quot; and dilations &#39;&quot;+o+&quot;&#39;&quot;});var c,l=computePool2DInfo(s.shape,t,a,o,r),p=[l.dilationHeight,l.dilationWidth];c=&quot;same&quot;===r?withSpaceToBatchBasePaddings([l.filterHeight,l.filterWidth],p):[[0,0],[0,0]];var d=1===p[0]&amp;&amp;1===p[1],h=requiredSpaceToBatchPaddings([l.inHeight,l.inWidth],p,c),f=h[0],m=h[1],g=d?r:&quot;valid&quot;,v=d?s:spaceToBatchND(s,p,f),y=(&quot;avg&quot;===n?function(){return avgPoolImpl_(v,t,a,1,g)}:function(){return maxPoolImpl_(v,t,a,1,g)})(),x=d?y:batchToSpaceND(y,p,m);return u?x.as3D(x.shape[1],x.shape[2],x.shape[3]):x}function maxPoolBackprop(e,t,n,r,o,a,i,s){var u=convertToTensor(e,&quot;dy&quot;,&quot;maxPoolBackprop&quot;),c=convertToTensor(t,&quot;input&quot;,&quot;maxPoolBackprop&quot;),l=convertToTensor(n,&quot;output&quot;,&quot;maxPoolBackprop&quot;);assert(c.rank===u.rank,function(){return &quot;Rank of input (&quot;+c.rank+&quot;) does not match rank of dy (&quot;+u.rank+&quot;)&quot;}),null==a&amp;&amp;(a=[1,1]),assert(eitherStridesOrDilationsAreOne(o,a),function(){return &quot;Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides &quot;+o+&quot; and dilations &#39;&quot;+a+&quot;&#39;&quot;}),assert(4===u.rank,function(){return &quot;Error in maxPoolBackprop: dy must be rank 4 but got rank &quot;+u.rank+&quot;.&quot;}),assert(4===c.rank,function(){return &quot;Error in maxPoolBackprop: input must be rank 4 but got rank &quot;+c.rank+&quot;.&quot;}),null!=s&amp;&amp;assert(isInt(i),function(){return &quot;Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode &quot;+s+&quot; but got pad &quot;+i+&quot;.&quot;});var p=computePool2DInfo(c.shape,r,o,a,i,s);return ENV.engine.runKernel(function(e){return e.maxPoolBackprop(u,c,l,p)},{$dy:u,$input:c})}function avgPoolBackprop(e,t,n,r,o,a){var i=convertToTensor(e,&quot;dy&quot;,&quot;avgPoolBackprop&quot;),s=convertToTensor(t,&quot;input&quot;,&quot;avgPoolBackprop&quot;);assert(s.rank===i.rank,function(){return &quot;Rank of input (&quot;+s.rank+&quot;) does not match rank of dy (&quot;+i.rank+&quot;)&quot;}),null==o&amp;&amp;(o=[1,1]),assert(eitherStridesOrDilationsAreOne(r,o),function(){return &quot;Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides &quot;+r+&quot; and dilations &#39;&quot;+o+&quot;&#39;&quot;});var u=s,c=i,l=!1;3===s.rank&amp;&amp;(l=!0,u=s.as4D(1,s.shape[0],s.shape[1],s.shape[2]),c=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),assert(4===c.rank,function(){return &quot;Error in avgPoolBackprop: dy must be rank 4 but got rank &quot;+c.rank+&quot;.&quot;}),assert(4===u.rank,function(){return &quot;Error in avgPoolBackprop: input must be rank 4 but got rank &quot;+u.rank+&quot;.&quot;});var p=computePool2DInfo(u.shape,n,r,o,a),d=ENV.engine.runKernel(function(e){return e.avgPoolBackprop(c,u,p)},{dy4D:c,input4D:u});return l?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}function requiredSpaceToBatchPaddings(e,t,n){var r=n.map(function(e){return e[0]}),o=n.map(function(e){return e[1]}),a=e.concat(r,o),i=t.map(function(e,t){return (e-a[t]%e)%e}),s=o.map(function(e,t){return e+i[t]});return [t.map(function(e,t){return [r[t],s[t]]}),t.map(function(e,t){return [0,i[t]]})]}function withSpaceToBatchBasePaddings(e,t){var n=e.map(function(e,n){return e+(e-1)*(t[n]-1)}).map(function(e){return e-1}),r=n.map(function(e){return Math.floor(e/2)}),o=n.map(function(e,t){return e-r[t]});return n.map(function(e,t){return [r[t],o[t]]})}var maxPool=op({maxPool_:maxPool_}),avgPool=op({avgPool_:avgPool_}),pool=op({pool_:pool_});function slice1d_(e,t,n){var r=convertToTensor(e,&quot;x&quot;,&quot;slice1d&quot;);return assert(1===r.rank,function(){return &quot;slice1d expects a rank-1 tensor, but got a rank-&quot;+r.rank+&quot; tensor&quot;}),slice(r,[t],[n])}function slice2d_(e,t,n){var r=convertToTensor(e,&quot;x&quot;,&quot;slice2d&quot;);return assert(2===r.rank,function(){return &quot;slice2d expects a rank-2 tensor, but got a rank-&quot;+r.rank+&quot; tensor&quot;}),slice(r,t,n)}function slice3d_(e,t,n){var r=convertToTensor(e,&quot;x&quot;,&quot;slice3d&quot;);return assert(3===r.rank,function(){return &quot;slice3d expects a rank-3 tensor, but got a rank-&quot;+r.rank+&quot; tensor&quot;}),slice(r,t,n)}function slice4d_(e,t,n){var r=convertToTensor(e,&quot;x&quot;,&quot;slice4d&quot;);return assert(4===r.rank,function(){return &quot;slice4d expects a rank-4 tensor, but got a rank-&quot;+r.rank+&quot; tensor&quot;}),slice(r,t,n)}function slice_(e,t,n){var r,o,a=convertToTensor(e,&quot;x&quot;,&quot;slice&quot;);if(0===a.rank)throw new Error(&quot;Slicing scalar is not possible&quot;);r=&quot;number&quot;==typeof t?[t].concat(new Array(a.rank-1).fill(0)):t.length&lt;a.rank?t.concat(new Array(a.rank-t.length).fill(0)):t.slice(),o=(o=null==n?new Array(a.rank).fill(-1):&quot;number&quot;==typeof n?[n].concat(new Array(a.rank-1).fill(-1)):n.length&lt;a.rank?n.concat(new Array(a.rank-n.length).fill(-1)):n).map(function(e,t){return e&gt;=0?e:(assert(-1===e,function(){return &quot;Bad value in size&quot;}),a.shape[t]-r[t])}),assertParamsValid(a,r,o);var i=a.shape;return ENV.engine.runKernel(function(e){return e.slice(a,r,o)},{$x:a},function(e){for(var t=[],n=0;n&lt;e.rank;n++)t.push([r[n],i[n]-r[n]-o[n]]);return {$x:function(){return e.pad(t)}}})}var slice=op({slice_:slice_}),slice1d=op({slice1d_:slice1d_}),slice2d=op({slice2d_:slice2d_}),slice3d=op({slice3d_:slice3d_}),slice4d=op({slice4d_:slice4d_});function logSumExp_(e,t,n){void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;x&quot;,&quot;logSumExp&quot;),o=parseAxisParam(t,r.shape),a=r.max(o,!0),i=r.sub(a).exp().sum(o).log(),s=a.reshape(i.shape).add(i);if(n){var u=expandShapeToKeepDim(s.shape,o);return s.reshape(u)}return s}function sum_(e,t,n){void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;x&quot;,&quot;sum&quot;);&quot;bool&quot;===r.dtype&amp;&amp;(r=r.toInt());var o=parseAxisParam(t,r.shape);return customGrad(function(e){var t=getAxesPermutation(o,e.rank),r=o,a=e;null!=t&amp;&amp;(a=e.transpose(t),r=getInnerMostAxes(r.length,e.rank));var i=ENV.engine.runKernel(function(e){return e.sum(a,r)},{permutedX:a});if(n){var s=expandShapeToKeepDim(i.shape,o);i=i.reshape(s);}return {value:i,gradFunc:function(t){var n=e.shape.slice();return o.forEach(function(e){n[e]=1;}),t.reshape(n).mul(ones$1(e.shape,&quot;float32&quot;))}}})(r)}function prod_(e,t,n){void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;x&quot;,&quot;prod&quot;);&quot;bool&quot;===r.dtype&amp;&amp;(r=r.toInt());var o=parseAxisParam(t,r.shape),a=getAxesPermutation(o,r.rank),i=o,s=r;null!=a&amp;&amp;(s=r.transpose(a),i=getInnerMostAxes(i.length,r.rank));var u=ENV.engine.runKernel(function(e){return e.prod(s,i)},{permutedX:s});if(n){var c=expandShapeToKeepDim(u.shape,o);u=u.reshape(c);}return u}function mean_(e,t,n){void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;x&quot;,&quot;mean&quot;),o=parseAxisParam(t,r.shape),a=sizeFromShape(computeOutAndReduceShapes(r.shape,o)[1]);return customGrad(function(e){var r=scalar(a);return {value:(r.dtype===e.dtype?e:e.cast(r.dtype)).div(r).sum(t,n),gradFunc:function(t){var n=e.shape.slice();return o.forEach(function(e){n[e]=1;}),t.reshape(n).mul(ones$1(e.shape,&quot;float32&quot;)).div(a)}}})(r)}function gradForMinAndMax(e,t,n,r,o){return t.rank&lt;n.rank&amp;&amp;(t=t.reshape(expandShapeToKeepDim(t.shape,r))),e.rank&lt;n.rank&amp;&amp;(e=e.reshape(expandShapeToKeepDim(e.shape,r))),{$x:function(){var r=e.mul(n.equal(t).cast(e.dtype));return null==o?r:r.transpose(o)}}}function min_(e,t,n){void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;x&quot;,&quot;min&quot;),o=r,a=parseAxisParam(t,r.shape),i=a,s=getAxesPermutation(i,r.rank);null!=s&amp;&amp;(r=r.transpose(s),i=getInnerMostAxes(i.length,r.rank));var u=ENV.engine.runKernel(function(e,t){var n=e.min(r,i);return t([o,n]),n},{$x:r},function(e,t){return gradForMinAndMax(e,t[1],t[0],a,s)});if(n){var c=expandShapeToKeepDim(u.shape,a);u=u.reshape(c);}return u}function max_(e,t,n){void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;x&quot;,&quot;max&quot;),o=r,a=parseAxisParam(t,r.shape),i=a,s=getAxesPermutation(i,r.rank);null!=s&amp;&amp;(r=r.transpose(s),i=getInnerMostAxes(i.length,r.rank));var u=ENV.engine.runKernel(function(e,t){var n=e.max(r,i);return t([o,n]),n},{$x:r},function(e,t){return gradForMinAndMax(e,t[1],t[0],a,s)});if(n){var c=expandShapeToKeepDim(u.shape,a);u=u.reshape(c);}return u}function argMin_(e,t){void 0===t&amp;&amp;(t=0);var n=convertToTensor(e,&quot;x&quot;,&quot;argMin&quot;);null==t&amp;&amp;(t=0);var r=parseAxisParam(t,n.shape),o=getAxesPermutation(r,n.rank);null!=o&amp;&amp;(n=n.transpose(o),r=getInnerMostAxes(r.length,n.rank));return ENV.engine.runKernel(function(e,t){var o=e.argMin(n,r[0]);return t([n]),o},{$x:n},function(e,t){var n=t[0];return {$x:function(){return zerosLike(n)}}})}function argMax_(e,t){void 0===t&amp;&amp;(t=0);var n=convertToTensor(e,&quot;x&quot;,&quot;argMax&quot;);null==t&amp;&amp;(t=0);var r=parseAxisParam(t,n.shape),o=getAxesPermutation(r,n.rank);null!=o&amp;&amp;(n=n.transpose(o),r=getInnerMostAxes(r.length,n.rank));return ENV.engine.runKernel(function(e,t){var o=e.argMax(n,r[0]);return t([n]),o},{$x:n},function(e,t){var n=t[0];return {$x:function(){return zerosLike(n)}}})}function all_(e,t,n){void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;x&quot;,&quot;all&quot;,&quot;bool&quot;),o=parseAxisParam(t,r.shape),a=o,i=getAxesPermutation(a,r.rank);null!=i&amp;&amp;(r=r.transpose(i),a=getInnerMostAxes(a.length,r.rank));var s=ENV.engine.runKernel(function(e){return e.all(r,a)},{$x:r});if(n){var u=expandShapeToKeepDim(s.shape,o);return s.reshape(u)}return s}function any_(e,t,n){void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;x&quot;,&quot;any&quot;,&quot;bool&quot;),o=parseAxisParam(t,r.shape),a=o,i=getAxesPermutation(a,r.rank);null!=i&amp;&amp;(r=r.transpose(i),a=getInnerMostAxes(a.length,r.rank));var s=ENV.engine.runKernel(function(e){return e.any(r,a)},{$x:r});if(n){var u=expandShapeToKeepDim(s.shape,o);return s.reshape(u)}return s}function moments_(e,t,n){void 0===t&amp;&amp;(t=null),void 0===n&amp;&amp;(n=!1);var r=parseAxisParam(t,(e=convertToTensor(e,&quot;x&quot;,&quot;moments&quot;)).shape),o=e.mean(r,n),a=o.shape;return n||(a=expandShapeToKeepDim(o.shape,r)),{mean:o,variance:e.toFloat().sub(o.reshape(a)).square().mean(r,n)}}var all=op({all_:all_}),any=op({any_:any_}),argMax=op({argMax_:argMax_}),argMin=op({argMin_:argMin_}),logSumExp=op({logSumExp_:logSumExp_}),max=op({max_:max_}),mean=op({mean_:mean_}),min=op({min_:min_}),moments=op({moments_:moments_}),sum$1=op({sum_:sum_}),prod=op({prod_:prod_});function notEqual_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;notEqual&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;notEqual&quot;);return n=makeTypesMatch(r,o),r=n[0],o=n[1],assertAndGetBroadcastShape(r.shape,o.shape),ENV.engine.runKernel(function(e){return e.notEqual(r,o)},{$a:r,$b:o})}function notEqualStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;notEqualStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;notEqualStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in notEqualStrict: &quot;),n.notEqual(r)}function less_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;less&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;less&quot;);return n=makeTypesMatch(r,o),r=n[0],o=n[1],assertAndGetBroadcastShape(r.shape,o.shape),ENV.engine.runKernel(function(e){return e.less(r,o)},{$a:r,$b:o})}function lessStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;lessStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;lessStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in lessStrict: &quot;),n.less(r)}function equal_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;equal&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;equal&quot;);return n=makeTypesMatch(r,o),r=n[0],o=n[1],assertAndGetBroadcastShape(r.shape,o.shape),ENV.engine.runKernel(function(e){return e.equal(r,o)},{$a:r,$b:o})}function equalStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;equalStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;equalStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in equalStrict: &quot;),n.equal(r)}function lessEqual_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;lessEqual&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;lessEqual&quot;);return n=makeTypesMatch(r,o),r=n[0],o=n[1],assertAndGetBroadcastShape(r.shape,o.shape),ENV.engine.runKernel(function(e){return e.lessEqual(r,o)},{$a:r,$b:o})}function lessEqualStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;lessEqualStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;lessEqualStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in lessEqualStrict: &quot;),n.lessEqual(r)}function greater_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;greater&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;greater&quot;);return n=makeTypesMatch(r,o),r=n[0],o=n[1],assertAndGetBroadcastShape(r.shape,o.shape),ENV.engine.runKernel(function(e){return e.greater(r,o)},{$a:r,$b:o})}function greaterStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;greaterStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;greaterStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in greaterStrict: &quot;),n.greater(r)}function greaterEqual_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;greaterEqual&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;greaterEqual&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1],assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e,t){var n=e.greaterEqual(r,o);return t([r,o]),n},{$a:r,$b:o},function(e,t){var n=t[0],r=t[1];return {$a:function(){return zerosLike(n)},$b:function(){return zerosLike(r)}}})}function greaterEqualStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;greaterEqualStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;greaterEqualStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in greaterEqualStrict: &quot;),n.greaterEqual(r)}var equal=op({equal_:equal_}),equalStrict=op({equalStrict_:equalStrict_}),greater=op({greater_:greater_}),greaterEqual=op({greaterEqual_:greaterEqual_}),greaterEqualStrict=op({greaterEqualStrict_:greaterEqualStrict_}),greaterStrict=op({greaterStrict_:greaterStrict_}),less=op({less_:less_}),lessEqual=op({lessEqual_:lessEqual_}),lessEqualStrict=op({lessEqualStrict_:lessEqualStrict_}),lessStrict=op({lessStrict_:lessStrict_}),notEqual=op({notEqual_:notEqual_}),notEqualStrict=op({notEqualStrict_:notEqualStrict_});function add_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;add&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;add&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1];var a=assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e){return e.add(r,o)},{$a:r,$b:o},function(e){return {$a:function(){var t=e,n=getReductionAxes(r.shape,a);return n.length&gt;0&amp;&amp;(t=t.sum(n)),t.reshape(r.shape)},$b:function(){var t=e,n=getReductionAxes(o.shape,a);return n.length&gt;0&amp;&amp;(t=t.sum(n)),t.reshape(o.shape)}}})}function addN_(e){assert(Array.isArray(e),function(){return &quot;The argument passed to tf.addN() must be a list of tensors&quot;}),assert(e.length&gt;=1,function(){return &quot;Must pass at least one tensor to tf.addN(), but got &quot;+e.length});var t=e.map(function(e,t){return convertToTensor(e,&quot;tensors&quot;+t,&quot;addN&quot;)}),n=t[0];t.forEach(function(e){if(e.dtype!==n.dtype)throw new Error(&quot;All tensors passed to tf.addN() must have the same dtype&quot;)}),t.forEach(function(e){if(!arraysEqual(e.shape,n.shape))throw new Error(&quot;All tensors passed to tf.addN() must have the same shape&quot;)});var r=t;return ENV.engine.runKernel(function(e){return e.addN(t)},r,function(e){var n={};return t.forEach(function(t,r){n[r]=function(){return e.clone()};}),n})}function addStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;addStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;addStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in addStrict: &quot;),n.add(r)}function sub_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;sub&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;sub&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1];var a=assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e){return e.subtract(r,o)},{$a:r,$b:o},function(e){return {$a:function(){var t=e,n=getReductionAxes(r.shape,a);return n.length&gt;0&amp;&amp;(t=t.sum(n)),t.reshape(r.shape)},$b:function(){var t=e,n=getReductionAxes(o.shape,a);return n.length&gt;0&amp;&amp;(t=t.sum(n)),t.neg().reshape(o.shape)}}})}function subStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;subStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;subStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in subStrict: &quot;),n.sub(r)}function pow_(e,t){var n=convertToTensor(e,&quot;base&quot;,&quot;pow&quot;),r=convertToTensor(t,&quot;exp&quot;,&quot;pow&quot;),o=assertAndGetBroadcastShape(n.shape,r.shape);e=n.cast(upcastType(n.dtype,r.dtype)),t=r.cast(upcastType(n.dtype,r.dtype));return ENV.engine.runKernel(function(e,t){var o=e.pow(n,r);return t([n,r,o]),o},{$base:n,$exp:r},function(e,t){var n=t[0],r=t[1],a=t[2];return {$base:function(){var t=r.toFloat(),a=e.mul(t.mul(n.pow(t.sub(scalar(1))))),i=getReductionAxes(n.shape,o);return i.length&gt;0&amp;&amp;(a=a.sum(i)),a.reshape(n.shape)},$exp:function(){var t=n.greater(0),i=n.log().where(t,zerosLike(n)),s=e.mul(a.mul(i)),u=getReductionAxes(r.shape,o);return u.length&gt;0&amp;&amp;(s=s.sum(u)),s.reshape(r.shape)}}})}function powStrict_(e,t){return assertShapesMatch(e.shape,t.shape,&quot;Error in powStrict: &quot;),e.pow(t)}function mul_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;mul&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;mul&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1];var a=assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e,t){var n=e.multiply(r,o);return t([r,o]),n},{$a:r,$b:o},function(e,t){var n=t[0],r=t[1];return {$a:function(){var t=e.mul(r.toFloat()),o=getReductionAxes(n.shape,a);return o.length&gt;0?t.sum(o).reshape(n.shape):t},$b:function(){var t=e.mul(n.toFloat()),o=getReductionAxes(r.shape,a);return o.length&gt;0?t.sum(o).reshape(r.shape):t}}})}function mulStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;mul&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;mul&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in multiplyStrict: &quot;),n.mul(r)}function div_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;div&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;div&quot;);if(n=makeTypesMatch(r,o),r=n[0],o=n[1],&quot;int32&quot;===r.dtype&amp;&amp;&quot;int32&quot;===o.dtype)return floorDiv(r,o);var a=assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e,t){var n=e.realDivide(r,o);return t([r,o]),n},{$a:r,$b:o},function(e,t){var n=t[0],r=t[1];return {$a:function(){var t=e.div(r.toFloat()),o=getReductionAxes(n.shape,a);return o.length&gt;0?t.sum(o).reshape(n.shape):t},$b:function(){var t=e.mul(n.toFloat()),o=getReductionAxes(r.shape,a);o.length&gt;0&amp;&amp;(t=t.sum(o).reshape(r.shape));var i=r.square();return t.div(i.toFloat()).neg()}}})}function floorDiv_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;floorDiv&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;floorDiv&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1];var a=assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e,t){var n=e.floorDiv(r,o);return t([r,o]),n},{$a:r,$b:o},function(e,t){var n=t[0],r=t[1];return {$a:function(){var t=e.div(r.toFloat()),o=getReductionAxes(n.shape,a);return o.length&gt;0?t.sum(o).reshape(n.shape):t},$b:function(){var t=e.mul(n.toFloat()),o=getReductionAxes(r.shape,a);o.length&gt;0&amp;&amp;(t=t.sum(o).reshape(r.shape));var i=r.square();return t.div(i.toFloat()).neg()}}})}function divStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;div&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;div&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in divideStrict: &quot;),n.div(r)}function mod_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;mod&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;mod&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1];var a=assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e,t){var n=e.mod(r,o);return t([r,o]),n},{$a:r,$b:o},function(e,t){var n=t[0],r=t[1];return {$a:function(){var t=getReductionAxes(n.shape,a);return t.length&gt;0?e.sum(t).reshape(n.shape):e},$b:function(){var t=e.mul(n.div(r).floor().neg()),o=getReductionAxes(r.shape,a);return o.length&gt;0?t.sum(o).reshape(r.shape):t}}})}function modStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;modStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;modStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in modStrict: &quot;),n.mod(r)}function minimum_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;minimum&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;minimum&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1],&quot;bool&quot;===r.dtype&amp;&amp;(r=r.toInt(),o=o.toInt()),assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e,t){var n=e.minimum(r,o);return t([r,o]),n},{$a:r,$b:o},function(e,t){var n=t[0],r=t[1];return {$a:function(){return e.mul(n.lessEqual(r).toFloat())},$b:function(){return e.mul(n.greater(r).toFloat())}}})}function minimumStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;minimumStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;minimumStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in minimumStrict: &quot;),n.minimum(r)}function maximum_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;maximum&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;maximum&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1],&quot;bool&quot;===r.dtype&amp;&amp;(r=r.toInt(),o=o.toInt()),assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e,t){var n=e.maximum(r,o);return t([r,o]),n},{$a:r,$b:o},function(e,t){var n=t[0],r=t[1];return {$a:function(){return e.mul(n.greaterEqual(r).toFloat())},$b:function(){return e.mul(n.less(r).toFloat())}}})}function maximumStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;maximumStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;maximumStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in maximumStrict: &quot;),n.maximum(r)}function squaredDifference_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;squaredDifference&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;squaredDifference&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1],assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e,t){var n=e.squaredDifference(r,o);return t([r,o]),n},{$a:r,$b:o},function(e,t){var n=t[0],r=t[1],o=scalar(2);return {$a:function(){return e.mul(n.sub(r).mul(o))},$b:function(){return e.mul(r.sub(n).mul(o))}}})}function squaredDifferenceStrict_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;squaredDifferenceStrict&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;squaredDifferenceStrict&quot;);return assertShapesMatch(n.shape,r.shape,&quot;Error in squaredDifferenceStrict: &quot;),n.squaredDifference(r)}function atan2_(e,t){var n,r=convertToTensor(e,&quot;a&quot;,&quot;atan2&quot;),o=convertToTensor(t,&quot;b&quot;,&quot;atan2&quot;);n=makeTypesMatch(r,o),r=n[0],o=n[1];var a=assertAndGetBroadcastShape(r.shape,o.shape);return ENV.engine.runKernel(function(e,t){var n=e.atan2(r,o);return t([r,o]),n},{$a:r,$b:o},function(e,t){var n=t[0],r=t[1];return {$a:function(){var t=add(n.square(),r.square()),o=e.mul(r.div(t)),i=getReductionAxes(n.shape,a);return i.length&gt;0&amp;&amp;(o=o.sum(i)),o.reshape(n.shape)},$b:function(){var t=add(n.square(),r.square()),o=neg(e.mul(n.div(t))),i=getReductionAxes(r.shape,a);return i.length&gt;0&amp;&amp;(o=o.sum(i)),o.reshape(r.shape)}}})}var add=op({add_:add_}),addN=op({addN_:addN_}),addStrict=op({addStrict_:addStrict_}),atan2=op({atan2_:atan2_}),div=op({div_:div_}),divStrict=op({divStrict_:divStrict_}),floorDiv=op({floorDiv_:floorDiv_}),maximum=op({maximum_:maximum_}),maximumStrict=op({maximumStrict_:maximumStrict_}),minimum=op({minimum_:minimum_}),minimumStrict=op({minimumStrict_:minimumStrict_}),mod=op({mod_:mod_}),modStrict=op({modStrict_:modStrict_}),mul=op({mul_:mul_}),mulStrict=op({mulStrict_:mulStrict_}),pow=op({pow_:pow_}),powStrict=op({powStrict_:powStrict_}),squaredDifference=op({squaredDifference_:squaredDifference_}),squaredDifferenceStrict=op({squaredDifferenceStrict_:squaredDifferenceStrict_}),sub=op({sub_:sub_}),subStrict=op({subStrict_:subStrict_});function logicalNot_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;logicalNot&quot;,&quot;bool&quot;);return ENV.engine.runKernel(function(e){return e.logicalNot(t)},{$x:t})}function logicalAnd_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;logicalAnd&quot;,&quot;bool&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;logicalAnd&quot;,&quot;bool&quot;);return assertAndGetBroadcastShape(n.shape,r.shape),ENV.engine.runKernel(function(e){return e.logicalAnd(n,r)},{$a:n,$b:r})}function logicalOr_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;logicalOr&quot;,&quot;bool&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;logicalOr&quot;,&quot;bool&quot;);return assertAndGetBroadcastShape(n.shape,r.shape),ENV.engine.runKernel(function(e){return e.logicalOr(n,r)},{$a:n,$b:r})}function logicalXor_(e,t){var n=convertToTensor(e,&quot;a&quot;,&quot;logicalXor&quot;,&quot;bool&quot;),r=convertToTensor(t,&quot;b&quot;,&quot;logicalXor&quot;,&quot;bool&quot;);return assertAndGetBroadcastShape(n.shape,r.shape),logicalOr(e,t).logicalAnd(logicalAnd(e,t).logicalNot())}function where_(e,t,n){var r=convertToTensor(t,&quot;a&quot;,&quot;where&quot;),o=convertToTensor(n,&quot;b&quot;,&quot;where&quot;),a=convertToTensor(e,&quot;condition&quot;,&quot;where&quot;,&quot;bool&quot;);assertShapesMatch(r.shape,o.shape,&quot;Error in where: &quot;),1===a.rank?assert(a.shape[0]===r.shape[0],function(){return &quot;The first dimension of `a` must match the size of `condition`.&quot;}):assertShapesMatch(a.shape,o.shape,&quot;Error in where: &quot;);return ENV.engine.runKernel(function(e,t){var n=e.select(a,r,o);return t([a]),n},{$condition:a,$a:r,$b:o},function(e,t){var n=t[0];return {$condition:function(){return zerosLike(n).toFloat()},$a:function(){return e.mul(n.cast(e.dtype))},$b:function(){return e.mul(n.logicalNot().cast(e.dtype))}}})}function whereAsync_(e){return __awaiter$1(this,void 0,void 0,function(){var t,n,r;return __generator$1(this,function(o){switch(o.label){case 0:return [4,(t=convertToTensor(e,&quot;condition&quot;,&quot;whereAsync&quot;,&quot;bool&quot;)).data()];case 1:return n=o.sent(),r=whereImpl(t.shape,n),e!==t&amp;&amp;t.dispose(),[2,r]}})})}var logicalAnd=op({logicalAnd_:logicalAnd_}),logicalNot=op({logicalNot_:logicalNot_}),logicalOr=op({logicalOr_:logicalOr_}),logicalXor=op({logicalXor_:logicalXor_}),where=op({where_:where_}),whereAsync=whereAsync_;function relu_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;relu&quot;);if(&quot;bool&quot;===t.dtype)return t.toInt();return ENV.engine.runKernel(function(e,n){var r=e.relu(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return e.mulStrict(n.step().toFloat())}}})}function elu_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;elu&quot;);return ENV.engine.runKernel(function(e,n){var r=e.elu(t);return n([r]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){return ENV.engine.runKernel(function(t){return t.eluDer(e,n)},{dy:e,y:n})}}})}function selu_(e){var t=convertToTensor(e,&quot;x&quot;,&quot;selu&quot;);return ENV.engine.runKernel(function(e,n){var r=e.selu(t);return n([t]),r},{$x:t},function(e,t){var n=t[0];return {$x:function(){var t=n.greater(scalar(0)),r=scalar(SELU_SCALEALPHA),o=scalar(SELU_SCALE),a=e.mul(o),i=e.mul(r).mul(n.toFloat().exp());return where(t,a,i)}}})}function leakyRelu_(e,t){void 0===t&amp;&amp;(t=.2);var n=convertToTensor(e,&quot;x&quot;,&quot;leakyRelu&quot;);return maximum(scalar(t).mul(n),n)}function prelu_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;prelu&quot;),r=convertToTensor(t,&quot;alpha&quot;,&quot;prelu&quot;);return ENV.engine.runKernel(function(e,t){var o=e.prelu(n,r);return t([n,r]),o},{$x:n,$alpha:r},function(e,t){var n=t[0],r=t[1],o=n.greater(0);return {$x:function(){return where(o,e,e.mul(r))},$alpha:function(){var t=where(o,zerosLike(e),e.mul(n)),a=getReductionAxes(r.shape,e.shape);return a.length&gt;0&amp;&amp;(t=t.sum(a)),t.reshape(r.shape)}}})}var elu=op({elu_:elu_}),leakyRelu=op({leakyRelu_:leakyRelu_}),prelu=op({prelu_:prelu_}),relu=op({relu_:relu_}),selu=op({selu_:selu_});function transpose_(e,t){var n=convertToTensor(e,&quot;x&quot;,&quot;transpose&quot;);if(null==t&amp;&amp;(t=n.shape.map(function(e,t){return t}).reverse()),assert(n.rank===t.length,function(){return &quot;Error in transpose: rank of input &quot;+n.rank+&quot; must match length of perm &quot;+t+&quot;.&quot;}),t.forEach(function(e){assert(e&gt;=0&amp;&amp;e&lt;n.rank,function(){return &quot;All entries in &#39;perm&#39; must be between 0 and &quot;+(n.rank-1)+&quot; but got &quot;+t});}),n.rank&lt;=1)return n.clone();return ENV.engine.runKernel(function(e){return e.transpose(n,t)},{$x:n},function(e){var n=getUndoAxesPermutation(t);return {$x:function(){return e.transpose(n)}}})}var transpose=op({transpose_:transpose_});function localResponseNormalization_(e,t,n,r,o){void 0===t&amp;&amp;(t=5),void 0===n&amp;&amp;(n=1),void 0===r&amp;&amp;(r=1),void 0===o&amp;&amp;(o=.5);var a=convertToTensor(e,&quot;x&quot;,&quot;localResponseNormalization&quot;);assert(4===a.rank||3===a.rank,function(){return &quot;Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank &quot;+a.rank+&quot;.&quot;}),assert(isInt(t),function(){return &quot;Error in localResponseNormalization: depthRadius must be an integer but got depthRadius &quot;+t+&quot;.&quot;});var i=a,s=!1;3===a.rank&amp;&amp;(s=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2]));var u=ENV.engine.runKernel(function(e,a){var s=e.localResponseNormalization4D(i,t,n,r,o);return a([i,s]),s},{x4D:i},function(e,a){var i=a[0],s=a[1];return {x4D:function(){return ENV.engine.runKernel(function(a){return a.LRNGrad(e,i,s,t,n,r,o)},{})}}});return s?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}var localResponseNormalization=op({localResponseNormalization_:localResponseNormalization_});function norm_(e,t,n,r){void 0===t&amp;&amp;(t=&quot;euclidean&quot;),void 0===n&amp;&amp;(n=null),void 0===r&amp;&amp;(r=!1);var o=normImpl(e=convertToTensor(e,&quot;x&quot;,&quot;norm&quot;),t,n),a=o.shape;if(r){var i=parseAxisParam(n,e.shape);a=expandShapeToKeepDim(o.shape,i);}return o.reshape(a)}function normImpl(e,t,n){if(void 0===n&amp;&amp;(n=null),0===e.rank)return e.abs();if(1!==e.rank&amp;&amp;null===n)return normImpl(e.reshape([-1]),t,n);if(1===e.rank||&quot;number&quot;==typeof n||Array.isArray(n)&amp;&amp;1===n.length){if(1===t)return e.abs().sum(n);if(t===1/0)return e.abs().max(n);if(t===-1/0)return e.abs().min(n);if(&quot;euclidean&quot;===t||2===t)return e.abs().pow(scalar(2,&quot;int32&quot;)).sum(n).sqrt();throw new Error(&quot;Error in norm: invalid ord value: &quot;+t)}if(Array.isArray(n)&amp;&amp;2===n.length){if(1===t)return e.abs().sum(n[0]).max(n[1]-1);if(t===1/0)return e.abs().sum(n[1]).max(n[0]);if(t===-1/0)return e.abs().sum(n[1]).min(n[0]);if(&quot;fro&quot;===t||&quot;euclidean&quot;===t)return e.square().sum(n).sqrt();throw new Error(&quot;Error in norm: invalid ord value: &quot;+t)}throw new Error(&quot;Error in norm: invalid axis: &quot;+n)}var norm=op({norm_:norm_});function unsortedSegmentSum_(e,t,n){var r=convertToTensor(e,&quot;x&quot;,&quot;unsortedSegmentSum&quot;),o=convertToTensor(t,&quot;segmentIds&quot;,&quot;unsortedSegmentSum&quot;,&quot;int32&quot;);assert(isInt(n),function(){return &quot;numSegments must be of dtype int&quot;});return ENV.engine.runKernel(function(e,t){var a=e.unsortedSegmentSum(r,o,n);return t([o]),a},{$x:r},function(e,t){var n=t[0];return {$x:function(){return gatherDropNegatives(e,n)}}})}function gather_(e,t,n){void 0===n&amp;&amp;(n=0);var r=convertToTensor(e,&quot;x&quot;,&quot;gather&quot;),o=convertToTensor(t,&quot;indices&quot;,&quot;gather&quot;,&quot;int32&quot;);n=parseAxisParam(n,r.shape)[0];var a=collectGatherOpShapeInfo(r,o,n);return ENV.engine.runKernel(function(e,t){var a=e.gather(r,o.flatten(),n);return t([o]),a},{$x:r},function(e,t){var o=t[0];return {$x:function(){var t=r.shape,a=o.size,i=t.slice(0,n),s=i.length,u=t.slice(n,t.length).slice(1),c=u.length,l=arrayRange(0,s),p=arrayRange(s+1,s+1+c),d=arrayConcat([i,[a],u]),h=e.reshape(d),f=o.reshape([a]),m=arrayConcat([[s],l,p]),g=h.transpose(m),v=unsortedSegmentSum(g,f,r.shape[n]),y=getUndoAxesPermutation(m);return v=v.transpose(y)}}}).reshape(a.outputShape)}function arrayRange(e,t){for(var n=[],r=e;r&lt;t;++r)n.push(r);return n}function arrayConcat(e){for(var t=[],n=0;n&lt;e.length;++n)for(var r=0;r&lt;e[n].length;++r)t.push(e[n][r]);return t}function gatherDropNegatives(e,t){for(var n=maximum(t,zerosLike(t)),r=gather(e,n),o=greaterEqual(t,scalar(0,&quot;int32&quot;)),a=r.rank-o.rank,i=0;i&lt;a;++i)o=expandDims(o,i+1);o=logicalAnd(o,ones$1(r.shape,&quot;bool&quot;));var s=zerosLike(r);return where(o,r,s)}var gather=op({gather_:gather_}),unsortedSegmentSum=op({unsortedSegmentSum_:unsortedSegmentSum_});function multiRNNCell_(e,t,n,r){for(var o=convertToTensor(t,&quot;data&quot;,&quot;multiRNNCell&quot;),a=convertToTensorArray(n,&quot;c&quot;,&quot;multiRNNCell&quot;),i=convertToTensorArray(r,&quot;h&quot;,&quot;multiRNNCell&quot;),s=o,u=[],c=0;c&lt;e.length;c++){var l=e[c](s,a[c],i[c]);u.push(l[0]),u.push(l[1]),s=l[1];}var p=[],d=[];for(c=0;c&lt;u.length;c+=2)p.push(u[c]),d.push(u[c+1]);return [p,d]}function basicLSTMCell_(e,t,n,r,o,a){var i=convertToTensor(e,&quot;forgetBias&quot;,&quot;basicLSTMCell&quot;),s=convertToTensor(t,&quot;lstmKernel&quot;,&quot;basicLSTMCell&quot;),u=convertToTensor(n,&quot;lstmBias&quot;,&quot;basicLSTMCell&quot;),c=convertToTensor(r,&quot;data&quot;,&quot;basicLSTMCell&quot;),l=convertToTensor(o,&quot;c&quot;,&quot;basicLSTMCell&quot;),p=convertToTensor(a,&quot;h&quot;,&quot;basicLSTMCell&quot;),d=c.concat(p,1).matMul(s).add(u),h=d.shape[0],f=d.shape[1]/4,m=[h,f],g=d.slice([0,0],m),v=d.slice([0,f],m),y=d.slice([0,2*f],m),x=d.slice([0,3*f],m),E=g.sigmoid().mulStrict(v.tanh()).addStrict(l.mulStrict(i.add(y).sigmoid()));return [E,E.tanh().mulStrict(x.sigmoid())]}var basicLSTMCell=op({basicLSTMCell_:basicLSTMCell_}),multiRNNCell=op({multiRNNCell_:multiRNNCell_});function movingAverage_(e,t,n,r,o){void 0===o&amp;&amp;(o=!0);var a=convertToTensor(e,&quot;v&quot;,&quot;movingAverage&quot;),i=convertToTensor(t,&quot;x&quot;,&quot;movingAverage&quot;),s=convertToTensor(n,&quot;decay&quot;,&quot;movingAverage&quot;);assertTypesMatch(a,i),assert(arraysEqual(a.shape,i.shape),function(){return &quot;Shape mismatch in v and x&quot;});var u=scalar(1),c=u.sub(s),l=i.sub(a).mul(c);if(o){assert(null!=r,function(){return &quot;When using zeroDebias: true, step is required.&quot;});var p=convertToTensor(r,&quot;step&quot;,&quot;movingAverage&quot;);l=l.div(u.sub(pow(s,p)));}return a.add(l)}var movingAverage=op({movingAverage_:movingAverage_});function stridedSlice_(e,t,n,r,o,a,i,s,u){if(void 0===o&amp;&amp;(o=0),void 0===a&amp;&amp;(a=0),void 0===i&amp;&amp;(i=0),void 0===s&amp;&amp;(s=0),void 0===u&amp;&amp;(u=0),0!==i)throw new Error(&quot;ellipsis mask is not yet supported&quot;);if(0!==s)throw new Error(&quot;new axis mask is not yet supported&quot;);var c=convertToTensor(e,&quot;x&quot;,&quot;stridedSlice&quot;);if(r.every(function(e){return 1===e})){var l=getStridedSlicedInfo(c.shape,t,n,r,o,a,i,s,u),p=l[0],d=l[1],h=l[2],f=d.filter(function(e,t){return -1===h.indexOf(t)});return slice(c,p,d).reshape(f)}return ENV.engine.runKernel(function(e){return e.stridedSlice(c,t,n,r,o,a,i,s,u)},{$x:c})}var stridedSlice=op({stridedSlice_:stridedSlice_});function topk_(e,t,n){void 0===t&amp;&amp;(t=1),void 0===n&amp;&amp;(n=!0);var r=convertToTensor(e,&quot;x&quot;,&quot;topk&quot;);if(0===r.rank)throw new Error(&quot;topk() expects the input to be of rank 1 or higher&quot;);var o=r.shape[r.shape.length-1];if(t&gt;o)throw new Error(&quot;&#39;k&#39; passed to topk() must be &lt;= the last dimension (&quot;+o+&quot;) but got &quot;+t);var a=ENV.engine.runKernel(function(e){return e.topk(r,t,n)},{$x:r});return {values:a[0],indices:a[1]}}var topk=op({topk_:topk_});function scatterND_(e,t,n){var r=convertToTensor(e,&quot;indices&quot;,&quot;scatterND&quot;,&quot;int32&quot;),o=convertToTensor(t,&quot;updates&quot;,&quot;scatterND&quot;);return validateInput(o,r,n),ENV.engine.runKernel(function(e){return e.scatterND(r,o,n)},{$indices:r,$updates:o})}var scatterND=op({scatterND_:scatterND_});function fft_(e){assert(&quot;complex64&quot;===e.dtype,function(){return &quot;The dtype for tf.spectral.fft() must be complex64 but got &quot;+e.dtype+&quot;.&quot;});var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return ENV.engine.runKernel(function(e){return e.fft(r)},{input:e}).reshape(e.shape)}function ifft_(e){assert(&quot;complex64&quot;===e.dtype,function(){return &quot;The dtype for tf.spectral.ifft() must be complex64 but got &quot;+e.dtype+&quot;.&quot;});var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return ENV.engine.runKernel(function(e){return e.ifft(r)},{input:e}).reshape(e.shape)}function rfft_(e){assert(&quot;float32&quot;===e.dtype,function(){return &quot;The dtype for rfft() must be real value but got &quot;+e.dtype});var t=e.shape[e.shape.length-1],n=e.size/t,r=e.zerosLike(),o=complex(e,r).as2D(n,t),a=fft(o),i=Math.floor(t/2)+1,s=real(a),u=imag(a),c=s.split([i,t-i],s.shape.length-1),l=u.split([i,t-i],u.shape.length-1),p=e.shape.slice();return p[e.shape.length-1]=i,complex(c[0],l[0]).reshape(p)}function irfft_(e){var t=e.shape[e.shape.length-1],n=e.size/t;if(t&lt;=2){var r=e.as2D(n,t),o=ifft(r);return real(o)}var a=[n,2*(t-1)],i=real(e).as2D(n,t),s=imag(e).as2D(n,t),u=i.slice([0,1],[n,t-2]).reverse(1),c=s.slice([0,1],[n,t-2]).reverse(1).mul(scalar(-1)),l=i.concat(u,1),p=s.concat(c,1);r=complex(l,p).as2D(a[0],a[1]),o=ifft(r);return real(o)}var fft=op({fft_:fft_}),ifft=op({ifft_:ifft_}),rfft=op({rfft_:rfft_}),irfft=op({irfft_:irfft_}),spectral_ops=Object.freeze({fft:fft,ifft:ifft,rfft:rfft,irfft:irfft});function validateInput$1(e,t,n,r){if(&quot;int32&quot;!==e.dtype)throw new Error(&quot;tf.sparseToDense() expects the indices to be int32 type, but the dtype was &quot;+e.dtype+&quot;.&quot;);if(e.rank&gt;2)throw new Error(&quot;sparseIndices should be a scalar, vector, or matrix, but got shape &quot;+e.shape+&quot;.&quot;);var o=e.rank&gt;0?e.shape[0]:1,a=e.rank&gt;1?e.shape[1]:1;if(n.length!==a)throw new Error(&quot;outputShape has incorrect number of elements:, &quot;+n.length+&quot;, should be: &quot;+a+&quot;.&quot;);var i=t.size;if(0!==t.rank&amp;&amp;(1!==t.rank||i!==o))throw new Error(&quot;sparseValues has incorrect shape &quot;+t.shape+&quot;, should be [] or [&quot;+o+&quot;]&quot;);if(t.dtype!==r.dtype)throw new Error(&quot;sparseValues.dtype must match defaultValues.dtype&quot;)}function sparseToDense_(e,t,n,r){void 0===r&amp;&amp;(r=0);var o=convertToTensor(e,&quot;sparseIndices&quot;,&quot;sparseToDense&quot;,&quot;int32&quot;),a=convertToTensor(t,&quot;sparseValues&quot;,&quot;sparseToDense&quot;),i=convertToTensor(r,&quot;defaultValue&quot;,&quot;sparseToDense&quot;,a.dtype);return validateInput$1(o,a,n,i),ENV.engine.runKernel(function(e){return e.sparseToDense(o,a,n,i)},{$sparseIndices:o,$sparseValues:a,$defaultValue:i})}var sparseToDense=op({sparseToDense_:sparseToDense_});function gatherND_(e,t){var n=convertToTensor(t,&quot;indices&quot;,&quot;gatherND&quot;,&quot;int32&quot;),r=convertToTensor(e,&quot;x&quot;,&quot;gatherND&quot;);return ENV.engine.runKernel(function(e){return e.gatherND(r,n)},{$x:r,$indices:n})}var Reduction,gatherND=op({gatherND_:gatherND_});function computeWeightedLoss_(e,t,n){void 0===n&amp;&amp;(n=Reduction.SUM_BY_NONZERO_WEIGHTS);var r=convertToTensor(e,&quot;losses&quot;,&quot;computeWeightedLoss&quot;),o=null;null!=t&amp;&amp;(o=convertToTensor(t,&quot;weights&quot;,&quot;computeWeightedLoss&quot;));var a=null==o?r:r.mul(o);if(n===Reduction.NONE)return a;if(n===Reduction.SUM)return a.sum();if(n===Reduction.MEAN){if(null==o)return a.mean();var i=r.size/o.size,s=a.sum().div(o.sum());return i&gt;1?s.div(scalar(i)):s}if(n===Reduction.SUM_BY_NONZERO_WEIGHTS){if(null==o)return a.sum().div(scalar(r.size));var u=o.mul(ones$1(r.shape)).notEqual(scalar(0)).sum().toFloat();return a.sum().div(u)}throw Error(&quot;Unknown reduction: &quot;+n)}function absoluteDifference_(e,t,n,r){void 0===r&amp;&amp;(r=Reduction.SUM_BY_NONZERO_WEIGHTS);var o=convertToTensor(e,&quot;labels&quot;,&quot;absoluteDifference&quot;),a=convertToTensor(t,&quot;predictions&quot;,&quot;absoluteDifference&quot;),i=null;null!=n&amp;&amp;(i=convertToTensor(n,&quot;weights&quot;,&quot;absoluteDifference&quot;)),assertShapesMatch(o.shape,a.shape,&quot;Error in absoluteDifference: &quot;);var s=o.sub(a).abs();return computeWeightedLoss(s,i,r)}function meanSquaredError_(e,t,n,r){void 0===r&amp;&amp;(r=Reduction.SUM_BY_NONZERO_WEIGHTS);var o=convertToTensor(e,&quot;labels&quot;,&quot;meanSquaredError&quot;),a=convertToTensor(t,&quot;predictions&quot;,&quot;meanSquaredError&quot;),i=null;null!=n&amp;&amp;(i=convertToTensor(n,&quot;weights&quot;,&quot;meanSquaredError&quot;)),assertShapesMatch(o.shape,a.shape,&quot;Error in meanSquaredError: &quot;);var s=o.squaredDifference(a);return computeWeightedLoss(s,i,r)}function cosineDistance_(e,t,n,r,o){void 0===o&amp;&amp;(o=Reduction.SUM_BY_NONZERO_WEIGHTS);var a=convertToTensor(e,&quot;labels&quot;,&quot;cosineDistance&quot;),i=convertToTensor(t,&quot;predictions&quot;,&quot;cosineDistance&quot;),s=null;null!=r&amp;&amp;(s=convertToTensor(r,&quot;weights&quot;,&quot;cosineDistance&quot;)),assertShapesMatch(a.shape,i.shape,&quot;Error in cosineDistance: &quot;);var u=scalar(1).sub(a.mul(i).sum(n,!0));return computeWeightedLoss(u,s,o)}function hingeLoss_(e,t,n,r){void 0===r&amp;&amp;(r=Reduction.SUM_BY_NONZERO_WEIGHTS);var o=convertToTensor(e,&quot;labels&quot;,&quot;hingeLoss&quot;),a=convertToTensor(t,&quot;predictions&quot;,&quot;hingeLoss&quot;),i=null;null!=n&amp;&amp;(i=convertToTensor(n,&quot;weights&quot;,&quot;hingeLoss&quot;)),assertShapesMatch(o.shape,a.shape,&quot;Error in hingeLoss: &quot;);var s=scalar(1);o=scalar(2).mul(o).sub(s);var u=s.sub(o.mul(a)).relu();return computeWeightedLoss(u,i,r)}function logLoss_(e,t,n,r,o){void 0===r&amp;&amp;(r=1e-7),void 0===o&amp;&amp;(o=Reduction.SUM_BY_NONZERO_WEIGHTS);var a=convertToTensor(e,&quot;labels&quot;,&quot;logLoss&quot;),i=convertToTensor(t,&quot;predictions&quot;,&quot;logLoss&quot;),s=null;null!=n&amp;&amp;(s=convertToTensor(n,&quot;weights&quot;,&quot;logLoss&quot;)),assertShapesMatch(a.shape,i.shape,&quot;Error in logLoss: &quot;);var u=scalar(1),c=scalar(r),l=a.mul(i.add(c).log()).neg().sub(u.sub(a).mul(u.sub(i).add(c).log()));return computeWeightedLoss(l,s,o)}function sigmoidCrossEntropyWithLogits_(e,t){var n=convertToTensor(e,&quot;labels&quot;,&quot;sigmoidCrossEntropyWithLogits&quot;),r=convertToTensor(t,&quot;logits&quot;,&quot;sigmoidCrossEntropyWithLogits&quot;);assertShapesMatch(n.shape,r.shape,&quot;Error in sigmoidCrossEntropyWithLogits: &quot;);var o=r.relu(),a=r.mul(n),i=r.abs().neg().exp().log1p();return o.sub(a).add(i)}function sigmoidCrossEntropy_(e,t,n,r,o){void 0===r&amp;&amp;(r=0),void 0===o&amp;&amp;(o=Reduction.SUM_BY_NONZERO_WEIGHTS);var a=convertToTensor(e,&quot;multiClassLabels&quot;,&quot;sigmoidCrossEntropy&quot;),i=convertToTensor(t,&quot;logits&quot;,&quot;sigmoidCrossEntropy&quot;),s=null;if(null!=n&amp;&amp;(s=convertToTensor(n,&quot;weights&quot;,&quot;sigmoidCrossEntropy&quot;)),assertShapesMatch(a.shape,i.shape,&quot;Error in sigmoidCrossEntropy: &quot;),r&gt;0){var u=scalar(r),c=scalar(1),l=scalar(.5);a=a.mul(c.sub(u)).add(l.mul(u));}var p=sigmoidCrossEntropyWithLogits_(a,i);return computeWeightedLoss(p,s,o)}function huberLoss_(e,t,n,r,o){void 0===r&amp;&amp;(r=1),void 0===o&amp;&amp;(o=Reduction.SUM_BY_NONZERO_WEIGHTS);var a=convertToTensor(e,&quot;labels&quot;,&quot;huberLoss&quot;),i=convertToTensor(t,&quot;predictions&quot;,&quot;huberLoss&quot;),s=null;null!=n&amp;&amp;(s=convertToTensor(n,&quot;weights&quot;,&quot;huberLoss&quot;)),assertShapesMatch(a.shape,i.shape,&quot;Error in huberLoss: &quot;);var u=scalar(r),c=i.sub(a).abs(),l=minimum(c,u),p=c.sub(l),d=scalar(.5).mul(l.square()).add(u.mul(p));return computeWeightedLoss(d,s,o)}function softmaxCrossEntropyWithLogits_(e,t,n){if(void 0===n&amp;&amp;(n=-1),-1===n&amp;&amp;(n=t.rank-1),n!==t.rank-1)throw Error(&quot;Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank &quot;+t.rank+&quot; and dim was &quot;+n);return customGrad(function(e,t,r){var o=t.logSumExp([n],!0),a=t.toFloat().sub(o);r([e,a]);return {value:a.mul(e).neg().sum([n]),gradFunc:function(e,t){var r=t[0],o=t[1],a=expandShapeToKeepDim(e.shape,[n]);return [e.reshape(a).mul(r.toFloat().sub(o.exp())),e.reshape(a).mul(o.exp().sub(r.toFloat()))]}}})(e,t)}function softmaxCrossEntropy_(e,t,n,r,o){void 0===r&amp;&amp;(r=0),void 0===o&amp;&amp;(o=Reduction.SUM_BY_NONZERO_WEIGHTS);var a=convertToTensor(e,&quot;onehotLabels&quot;,&quot;softmaxCrossEntropy&quot;),i=convertToTensor(t,&quot;logits&quot;,&quot;softmaxCrossEntropy&quot;),s=null;if(null!=n&amp;&amp;(s=convertToTensor(n,&quot;weights&quot;,&quot;softmaxCrossEntropy&quot;)),assertShapesMatch(a.shape,i.shape,&quot;Error in softmaxCrossEntropy: &quot;),r&gt;0){var u=scalar(r),c=scalar(1),l=scalar(a.shape[1]);a=a.mul(c.sub(u)).add(u.div(l));}var p=softmaxCrossEntropyWithLogits_(a,i);return computeWeightedLoss(p,s,o)}!function(e){e[e.NONE=0]=&quot;NONE&quot;,e[e.MEAN=1]=&quot;MEAN&quot;,e[e.SUM=2]=&quot;SUM&quot;,e[e.SUM_BY_NONZERO_WEIGHTS=3]=&quot;SUM_BY_NONZERO_WEIGHTS&quot;;}(Reduction||(Reduction={}));var absoluteDifference=op({absoluteDifference_:absoluteDifference_}),computeWeightedLoss=op({computeWeightedLoss_:computeWeightedLoss_}),cosineDistance=op({cosineDistance_:cosineDistance_}),hingeLoss=op({hingeLoss_:hingeLoss_}),huberLoss=op({huberLoss_:huberLoss_}),logLoss=op({logLoss_:logLoss_}),meanSquaredError=op({meanSquaredError_:meanSquaredError_}),sigmoidCrossEntropy=op({sigmoidCrossEntropy_:sigmoidCrossEntropy_}),softmaxCrossEntropy=op({softmaxCrossEntropy_:softmaxCrossEntropy_}),loss_ops=Object.freeze({get Reduction(){return Reduction},absoluteDifference:absoluteDifference,computeWeightedLoss:computeWeightedLoss,cosineDistance:cosineDistance,hingeLoss:hingeLoss,huberLoss:huberLoss,logLoss:logLoss,meanSquaredError:meanSquaredError,sigmoidCrossEntropy:sigmoidCrossEntropy,softmaxCrossEntropy:softmaxCrossEntropy});function gramSchmidt_(e){var t;if(Array.isArray(e)){t=!1,assert(null!=e&amp;&amp;e.length&gt;0,function(){return &quot;Gram-Schmidt process: input must not be null, undefined, or empty&quot;});for(var n=e[0].shape[0],r=function(t){assert(e[t].shape[0]===n,function(){return &quot;Gram-Schmidt: Non-unique lengths found in the input vectors: (&quot;+e[t].shape[0]+&quot; vs. &quot;+n+&quot;)&quot;});},o=1;o&lt;e.length;++o)r(o);}else t=!0,e=split$1(e,e.shape[0],0).map(function(e){return squeeze(e,[0])});assert(e.length&lt;=e[0].shape[0],function(){return &quot;Gram-Schmidt: Number of vectors (&quot;+e.length+&quot;) exceeds number of dimensions (&quot;+e[0].shape[0]+&quot;).&quot;});var a=[],i=e,s=function(e){a.push(ENV.engine.tidy(function(){var t=i[e];if(e&gt;0)for(var n=0;n&lt;e;++n){var r=sum$1(a[n].mulStrict(t)).mul(a[n]);t=t.sub(r);}return t.div(norm(t,&quot;euclidean&quot;))}));};for(o=0;o&lt;e.length;++o)s(o);return t?stack(a,0):a}function qr_(e,t){if(void 0===t&amp;&amp;(t=!1),e.rank&lt;2)throw new Error(&quot;qr() requires input tensor to have a rank &gt;= 2, but got rank &quot;+e.rank);if(2===e.rank)return qr2d(e,t);var n=e.shape.slice(0,e.shape.length-2).reduce(function(e,t){return e*t}),r=[],o=[];return unstack(e.reshape([n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0).forEach(function(e){var n=qr2d(e,t),a=n[0],i=n[1];r.push(a),o.push(i);}),[stack(r,0).reshape(e.shape),stack(o,0).reshape(e.shape)]}function qr2d(e,t){return void 0===t&amp;&amp;(t=!1),ENV.engine.tidy(function(){if(2!==e.shape.length)throw new Error(&quot;qr2d() requires a 2D Tensor, but got a &quot;+e.shape.length+&quot;D Tensor.&quot;);for(var n=e.shape[0],r=e.shape[1],o=eye(n),a=e.clone(),i=tensor2d([[1]],[1,1]),s=i.clone(),u=n&gt;=r?r:n,c=function(e){var t,u=a,c=s,l=o;t=ENV.engine.tidy(function(){var t=a.slice([e,e],[n-e,1]),u=t.norm(),c=a.slice([e,e],[1,1]),l=c.sign().neg(),p=c.sub(l.mul(u)),d=t.div(p);s=1===d.shape[0]?i.clone():i.concat(d.slice([1,0],[d.shape[0]-1,d.shape[1]]),0);var h=l.matMul(p).div(u).neg(),f=a.slice([e,0],[n-e,r]),m=h.mul(s);a=0===e?f.sub(m.matMul(s.transpose().matMul(f))):a.slice([0,0],[e,r]).concat(f.sub(m.matMul(s.transpose().matMul(f))),0);var g=o.slice([0,e],[n,o.shape[1]-e]);return o=0===e?g.sub(g.matMul(s).matMul(m.transpose())):o.slice([0,0],[n,e]).concat(g.sub(g.matMul(s).matMul(m.transpose())),1),[s,a,o]}),s=t[0],a=t[1],o=t[2],dispose([u,c,l]);},l=0;l&lt;u;++l)c(l);return !t&amp;&amp;n&gt;r&amp;&amp;(o=o.slice([0,0],[n,r]),a=a.slice([0,0],[r,r])),[o,a]})}var gramSchmidt=op({gramSchmidt_:gramSchmidt_}),qr=op({qr_:qr_}),linalg_ops=Object.freeze({gramSchmidt:gramSchmidt,qr:qr});function resizeBilinear_(e,t,n){void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;images&quot;,&quot;resizeBilinear&quot;);assert(3===r.rank||4===r.rank,function(){return &quot;Error in resizeBilinear: x must be rank 3 or 4, but got rank &quot;+r.rank+&quot;.&quot;}),assert(2===t.length,function(){return &quot;Error in resizeBilinear: new shape must 2D, but got shape &quot;+t+&quot;.&quot;});var o=r,a=!1;3===r.rank&amp;&amp;(a=!0,o=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var i=t[0],s=t[1],u=ENV.engine.runKernel(function(e,t){return t([o]),e.resizeBilinear(o,i,s,n)},{batchImages:o},function(e,t){return {batchImages:function(){return ENV.engine.runKernel(function(r){return r.resizeBilinearBackprop(e,t[0],n)},{})}}});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}function resizeNearestNeighbor_(e,t,n){void 0===n&amp;&amp;(n=!1);var r=convertToTensor(e,&quot;images&quot;,&quot;resizeNearestNeighbor&quot;);assert(3===r.rank||4===r.rank,function(){return &quot;Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank &quot;+r.rank+&quot;.&quot;}),assert(2===t.length,function(){return &quot;Error in resizeNearestNeighbor: new shape must 2D, but got shape &quot;+t+&quot;.&quot;}),assert(&quot;float32&quot;===r.dtype||&quot;int32&quot;===r.dtype,function(){return &quot;`images` must have `int32` or `float32` as dtype&quot;});var o=r,a=!1;3===r.rank&amp;&amp;(a=!0,o=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var i=t[0],s=t[1],u=ENV.engine.runKernel(function(e,t){return t([o]),e.resizeNearestNeighbor(o,i,s,n)},{batchImages:o},function(e,t){return {batchImages:function(){return ENV.engine.runKernel(function(r){return r.resizeNearestNeighborBackprop(e,t[0],n)},{})}}});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}function nonMaxSuppression_(e,t,n,r,o){void 0===r&amp;&amp;(r=.5),void 0===o&amp;&amp;(o=Number.NEGATIVE_INFINITY);var a=convertToTensor(e,&quot;boxes&quot;,&quot;nonMaxSuppression&quot;),i=convertToTensor(t,&quot;scores&quot;,&quot;nonMaxSuppression&quot;),s=nonMaxSuppSanityCheck(a,i,n,r,o);return n=s.maxOutputSize,r=s.iouThreshold,o=s.scoreThreshold,ENV.engine.runKernel(function(e){return e.nonMaxSuppression(a,i,n,r,o)},{$boxes:a})}function nonMaxSuppressionAsync_(e,t,n,r,o){return void 0===r&amp;&amp;(r=.5),void 0===o&amp;&amp;(o=Number.NEGATIVE_INFINITY),__awaiter$1(this,void 0,void 0,function(){var a,i,s,u,c,l;return __generator$1(this,function(p){switch(p.label){case 0:return a=convertToTensor(e,&quot;boxes&quot;,&quot;nonMaxSuppressionAsync&quot;),i=convertToTensor(t,&quot;scores&quot;,&quot;nonMaxSuppressionAsync&quot;),s=nonMaxSuppSanityCheck(a,i,n,r,o),n=s.maxOutputSize,r=s.iouThreshold,o=s.scoreThreshold,[4,a.data()];case 1:return u=p.sent(),[4,i.data()];case 2:return c=p.sent(),l=nonMaxSuppressionImpl(u,c,n,r,o),a!==e&amp;&amp;a.dispose(),i!==t&amp;&amp;i.dispose(),[2,l]}})})}function nonMaxSuppSanityCheck(e,t,n,r,o){null==r&amp;&amp;(r=.5),null==o&amp;&amp;(o=Number.NEGATIVE_INFINITY);var a=e.shape[0];return n=Math.min(n,a),assert(0&lt;=r&amp;&amp;r&lt;=1,function(){return &quot;iouThreshold must be in [0, 1], but was &#39;&quot;+r+&quot;&#39;&quot;}),assert(2===e.rank,function(){return &quot;boxes must be a 2D tensor, but was of rank &#39;&quot;+e.rank+&quot;&#39;&quot;}),assert(4===e.shape[1],function(){return &quot;boxes must have 4 columns, but 2nd dimension was &quot;+e.shape[1]}),assert(1===t.rank,function(){return &quot;scores must be a 1D tensor&quot;}),assert(t.shape[0]===a,function(){return &quot;scores has incompatible shape with boxes. Expected &quot;+a+&quot;, but was &quot;+t.shape[0]}),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o}}function cropAndResize_(e,t,n,r,o,a){var i=convertToTensor(e,&quot;image&quot;,&quot;cropAndResize&quot;,&quot;float32&quot;),s=convertToTensor(t,&quot;boxes&quot;,&quot;cropAndResize&quot;,&quot;float32&quot;),u=convertToTensor(n,&quot;boxInd&quot;,&quot;cropAndResize&quot;,&quot;int32&quot;);o=o||&quot;bilinear&quot;,a=a||0;var c=s.shape[0];assert(4===i.rank,function(){return &quot;Error in cropAndResize: image must be rank 4,but got rank &quot;+i.rank+&quot;.&quot;}),assert(2===s.rank&amp;&amp;4===s.shape[1],function(){return &quot;Error in cropAndResize: boxes must be have size [&quot;+c+&quot;,4] but had shape &quot;+s.shape+&quot;.&quot;}),assert(1===u.rank&amp;&amp;u.shape[0]===c,function(){return &quot;Error in cropAndResize: boxInd must be have size [&quot;+c+&quot;] but had shape &quot;+s.shape+&quot;.&quot;}),assert(2===r.length,function(){return &quot;Error in cropAndResize: cropSize must be of length 2, but got length &quot;+r.length+&quot;.&quot;}),assert(r[0]&gt;=1&amp;&amp;r[1]&gt;=1,function(){return &quot;cropSize must be atleast [1,1], but was &quot;+r}),assert(&quot;bilinear&quot;===o||&quot;nearest&quot;===o,function(){return &quot;method must be bilinear or nearest, but was &quot;+o});return ENV.engine.runKernel(function(e,t){return e.cropAndResize(i,s,u,r,o,a)},{$image:i,$boxes:s})}var resizeBilinear=op({resizeBilinear_:resizeBilinear_}),resizeNearestNeighbor=op({resizeNearestNeighbor_:resizeNearestNeighbor_}),nonMaxSuppression=op({nonMaxSuppression_:nonMaxSuppression_}),nonMaxSuppressionAsync=nonMaxSuppressionAsync_,cropAndResize=op({cropAndResize_:cropAndResize_}),image_ops=Object.freeze({resizeBilinear:resizeBilinear,resizeNearestNeighbor:resizeNearestNeighbor,nonMaxSuppression:nonMaxSuppression,nonMaxSuppressionAsync:nonMaxSuppressionAsync,cropAndResize:cropAndResize});function matMul_$1(e,t,n,r,o,a){var i;void 0===n&amp;&amp;(n=!1),void 0===r&amp;&amp;(r=!1),void 0===a&amp;&amp;(a=&quot;linear&quot;);var s=convertToTensor(e,&quot;a&quot;,&quot;fused matMul&quot;),u=convertToTensor(t,&quot;b&quot;,&quot;fused matMul&quot;);i=makeTypesMatch(s,u),s=i[0],u=i[1];var c=n?s.shape[s.rank-2]:s.shape[s.rank-1],l=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?s.shape[s.rank-1]:s.shape[s.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],h=s.shape.slice(0,-2),f=u.shape.slice(0,-2),m=sizeFromShape(h),g=sizeFromShape(f);assert(s.rank&gt;=2&amp;&amp;u.rank&gt;=2&amp;&amp;s.rank===u.rank,function(){return &quot;Error in fused matMul: inputs must have the same rank of at least 2, got ranks &quot;+s.rank+&quot; and &quot;+u.rank+&quot;.&quot;}),assert(arraysEqual(h,f),function(){return &quot;Error in fused matMul: outer dimensions (&quot;+h+&quot;) and (&quot;+f+&quot;) of Tensors with shapes &quot;+s.shape+&quot; and &quot;+u.shape+&quot; must match.&quot;}),assert(c===l,function(){return &quot;Error in fused matMul: inner shapes (&quot;+c+&quot;) and (&quot;+l+&quot;) of Tensors with shapes &quot;+s.shape+&quot; and &quot;+u.shape+&quot; and transposeA=&quot;+n+&quot; and transposeB=&quot;+r+&quot; must match.&quot;});var v,y=s.shape.slice(0,-2).concat([p,d]),x=n?s.as3D(m,c,p):s.as3D(m,p,c),E=r?u.as3D(g,d,l):u.as3D(g,l,d);null!=o&amp;&amp;assertAndGetBroadcastShape(y,(v=makeTypesMatch(v=convertToTensor(o,&quot;bias&quot;,&quot;fused matMul&quot;),s)[0]).shape);var T={$a:x,$b:E};return null!=o&amp;&amp;(T.$bias=v),ENV.engine.runKernel(function(e,t){var o=e.fusedBatchMatMul(x,E,n,r,v,a);return t([x,E,o]),o},T,function(e,t){var i,s=t[0],u=t[1],c=t[2];if(null==a||&quot;linear&quot;===a)i=e;else{if(&quot;relu&quot;!==a)throw new Error(&quot;Gradient for activation &quot;+a+&quot; has not been implemented yet.&quot;);i=e.mul(c.step());}var l={};return null!=o&amp;&amp;(l={$bias:function(){var e=i,t=getReductionAxes(v.shape,i.shape);return t.length&gt;0&amp;&amp;(e=e.sum(t)),e.reshape(v.shape)}}),n||r?!n&amp;&amp;r?Object.assign({$a:function(){return i.matMul(u,!1,!1)},$b:function(){return i.matMul(s,!0,!1)}},l):n&amp;&amp;!r?Object.assign({$a:function(){return u.matMul(i,!1,!0)},$b:function(){return s.matMul(i,!1,!1)}},l):Object.assign({$a:function(){return u.matMul(i,!0,!0)},$b:function(){return i.matMul(s,!0,!0)}},l):Object.assign({$a:function(){return i.matMul(u,!1,!0)},$b:function(){return s.matMul(i,!0,!1)}},l)}).reshape(y)}var matMul$1=op({matMul_:matMul_$1}),fused_ops=Object.freeze({matMul:matMul$1}),ops=Object.freeze({image:image_ops,linalg:linalg_ops,losses:loss_ops,spectral:spectral_ops,fused:fused_ops,op:op,batchNormalization2d:batchNormalization2d,batchNormalization3d:batchNormalization3d,batchNormalization4d:batchNormalization4d,batchNormalization:batchNormalization,batchNorm:batchNorm,batchNorm2d:batchNorm2d,batchNorm3d:batchNorm3d,batchNorm4d:batchNorm4d,complex:complex,real:real,imag:imag,concat:concat,concat1d:concat1d,concat2d:concat2d,concat3d:concat3d,concat4d:concat4d,split:split$1,conv1d:conv1d,conv2d:conv2d,conv3d:conv3d,conv2dDerFilter:conv2dDerFilter,depthwiseConv2d:depthwiseConv2d,separableConv2d:separableConv2d,conv2dTranspose:conv2dTranspose,matMul:matMul,dot:dot,outerProduct:outerProduct,reverse:reverse,reverse1d:reverse1d,reverse2d:reverse2d,reverse3d:reverse3d,reverse4d:reverse4d,maxPool:maxPool,avgPool:avgPool,pool:pool,slice:slice,slice1d:slice1d,slice2d:slice2d,slice3d:slice3d,slice4d:slice4d,abs:abs,acos:acos,acosh:acosh,asin:asin,asinh:asinh,atan:atan,atanh:atanh,ceil:ceil,clipByValue:clipByValue,cos:cos,cosh:cosh,erf:erf,exp:exp,expm1:expm1,floor:floor,log:log$1,log1p:log1p,logSigmoid:logSigmoid,neg:neg,reciprocal:reciprocal,round:round,rsqrt:rsqrt,sigmoid:sigmoid,sign:sign,isNaN:isNaN$1,isInf:isInf,isFinite:isFinite$1,sin:sin,sinh:sinh,softplus:softplus,sqrt:sqrt,square:square,step:step,tan:tan,tanh:tanh$1,all:all,any:any,argMax:argMax,argMin:argMin,logSumExp:logSumExp,max:max,mean:mean,min:min,moments:moments,sum:sum$1,prod:prod,equal:equal,equalStrict:equalStrict,greater:greater,greaterEqual:greaterEqual,greaterEqualStrict:greaterEqualStrict,greaterStrict:greaterStrict,less:less,lessEqual:lessEqual,lessEqualStrict:lessEqualStrict,lessStrict:lessStrict,notEqual:notEqual,notEqualStrict:notEqualStrict,add:add,addN:addN,addStrict:addStrict,atan2:atan2,div:div,divStrict:divStrict,floorDiv:floorDiv,maximum:maximum,maximumStrict:maximumStrict,minimum:minimum,minimumStrict:minimumStrict,mod:mod,modStrict:modStrict,mul:mul,mulStrict:mulStrict,pow:pow,powStrict:powStrict,squaredDifference:squaredDifference,squaredDifferenceStrict:squaredDifferenceStrict,sub:sub,subStrict:subStrict,elu:elu,leakyRelu:leakyRelu,prelu:prelu,relu:relu,selu:selu,logicalAnd:logicalAnd,logicalNot:logicalNot,logicalOr:logicalOr,logicalXor:logicalXor,where:where,whereAsync:whereAsync,buffer:buffer,print:print,batchToSpaceND:batchToSpaceND,cast:cast,clone:clone,cumsum:cumsum,depthToSpace:depthToSpace,expandDims:expandDims,eye:eye,multinomial:multinomial,oneHot:oneHot,pad:pad,pad1d:pad1d,pad2d:pad2d,pad3d:pad3d,pad4d:pad4d,rand:rand,randomNormal:randomNormal,randomUniform:randomUniform,reshape:reshape,spaceToBatchND:spaceToBatchND,squeeze:squeeze,stack:stack,tile:tile,truncatedNormal:truncatedNormal,unstack:unstack,setdiff1dAsync:setdiff1dAsync,fill:fill,linspace:linspace,ones:ones$1,range:range,scalar:scalar,tensor:tensor,tensor1d:tensor1d,tensor2d:tensor2d,tensor3d:tensor3d,tensor4d:tensor4d,tensor5d:tensor5d,tensor6d:tensor6d,zeros:zeros,onesLike:onesLike,zerosLike:zerosLike,transpose:transpose,softmax:softmax,logSoftmax:logSoftmax,localResponseNormalization:localResponseNormalization,norm:norm,gather:gather,unsortedSegmentSum:unsortedSegmentSum,basicLSTMCell:basicLSTMCell,multiRNNCell:multiRNNCell,movingAverage:movingAverage,stridedSlice:stridedSlice,topk:topk,scatterND:scatterND,fft:fft,ifft:ifft,rfft:rfft,irfft:irfft,sparseToDense:sparseToDense,gatherND:gatherND});function mapActivation(e,t,n){if(&quot;linear&quot;===t)return e.linear(n);if(&quot;relu&quot;===t)return e.relu(n);throw new Error(&quot;Activation &quot;+t+&quot; has not been implemented for the CPU backend.&quot;)}var MathBackendCPU=function(){function e(){this.blockSize=48,this.firstUse=!0,ENV.get(&quot;IS_BROWSER&quot;)&amp;&amp;(this.fromPixels2DContext=document.createElement(&quot;canvas&quot;).getContext(&quot;2d&quot;));}return e.prototype.setDataMover=function(e){this.data=new DataStorage(e);},e.prototype.register=function(e,t,n){if(this.firstUse&amp;&amp;(this.firstUse=!1,ENV.get(&quot;IS_NODE&quot;)&amp;&amp;warn(&quot;\n============================\nHi there ð. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require(&#39;@tensorflow/tfjs-node&#39;); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================\n&quot;)),this.data.has(e))throw new Error(&quot;Data buffer is already registered&quot;);this.data.set(e,{dtype:n});},e.prototype.write=function(e,t){if(null==t)throw new Error(&quot;MathBackendCPU.write(): values can not be null&quot;);this.data.get(e).values=t;},e.prototype.fromPixels=function(e,t){if(null==e)throw new Error(&quot;pixels passed to tf.browser.fromPixels() can not be null&quot;);var n,r;if(ENV.get(&quot;IS_NODE&quot;)&amp;&amp;null==e.getContext)throw new Error(&quot;When running in node, pixels must be an HTMLCanvasElement like the one returned by the `canvas` npm package&quot;);if(null!=e.getContext)n=e.getContext(&quot;2d&quot;).getImageData(0,0,e.width,e.height).data;else if(e instanceof ImageData)n=e.data;else{if(!(e instanceof HTMLImageElement||e instanceof HTMLVideoElement))throw new Error(&quot;pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement or ImageData, but was &quot;+e.constructor.name);if(null==this.fromPixels2DContext)throw new Error(&quot;Can&#39;t read pixels from HTMLImageElement outside the browser.&quot;);this.fromPixels2DContext.canvas.width=e.width,this.fromPixels2DContext.canvas.height=e.height,this.fromPixels2DContext.drawImage(e,0,0,e.width,e.height),n=this.fromPixels2DContext.getImageData(0,0,e.width,e.height).data;}if(4===t)r=new Int32Array(n);else{var o=e.width*e.height;r=new Int32Array(o*t);for(var a=0;a&lt;o;a++)for(var i=0;i&lt;t;++i)r[a*t+i]=n[4*a+i];}return tensor3d(r,[e.height,e.width,t],&quot;int32&quot;)},e.prototype.read=function(e){return __awaiter$1(this,void 0,void 0,function(){return __generator$1(this,function(t){return [2,this.readSync(e)]})})},e.prototype.readSync=function(e){var t=this.data.get(e),n=t.dtype,r=t.complexTensors;return &quot;complex64&quot;===n?mergeRealAndImagArrays(r.real.dataSync(),r.imag.dataSync()):this.data.get(e).values},e.prototype.disposeData=function(e){if(this.data.has(e)){var t=this.data.get(e).complexTensors;null!=t&amp;&amp;(t.real.dispose(),t.imag.dispose()),this.data.delete(e);}},e.prototype.time=function(e){return __awaiter$1(this,void 0,void 0,function(){var t;return __generator$1(this,function(n){return t=now(),e(),[2,{kernelMs:now()-t}]})})},e.prototype.memory=function(){return {unreliable:!0,reasons:[&quot;The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less.&quot;]}},e.prototype.complex=function(e,t){var n=Tensor.make(e.shape,{},&quot;complex64&quot;);return this.data.get(n.dataId).complexTensors={real:ENV.engine.keep(e.clone()),imag:ENV.engine.keep(t.clone())},n},e.prototype.real=function(e){return this.data.get(e.dataId).complexTensors.real.clone()},e.prototype.imag=function(e){return this.data.get(e.dataId).complexTensors.imag.clone()},e.prototype.assertNotComplex=function(e,t){Array.isArray(e)||(e=[e]),e.forEach(function(e){null!=e&amp;&amp;assert(&quot;complex64&quot;!==e.dtype,function(){return t+&quot; does not support complex64 tensors.&quot;});});},e.prototype.slice=function(e,t,n){if(this.assertNotComplex(e,&quot;slice&quot;),isSliceContinous(e.shape,t,n)){var r=computeFlatOffset(t,e.strides),o=sizeFromShape(n);return tensor(e.dataSync().subarray(r,r+o),n,e.dtype)}for(var a=buffer(n,e.dtype),i=e.bufferSync(),s=0;s&lt;a.size;++s){var u=a.indexToLoc(s).map(function(e,n){return e+t[n]});a.values[s]=i.get.apply(i,u);}return a.toTensor()},e.prototype.stridedSlice=function(e,t,n,r,o,a,i,s,u){this.assertNotComplex(e,&quot;stridedSlice&quot;);var c=getStridedSlicedInfo(e.shape,t,n,r,o,a,i,s,u),l=c[0],p=c[1],d=c[2],h=p.filter(function(e,t){return -1===d.indexOf(t)});if(h.some(function(e){return 0===e}))return tensor([],h);for(var f=buffer(p,e.dtype),m=e.bufferSync(),g=0;g&lt;f.size;g++){for(var v=f.indexToLoc(g),y=new Array(v.length),x=0;x&lt;y.length;x++)y[x]=v[x]*r[x]+l[x];f.set.apply(f,[m.get.apply(m,y)].concat(v));}return f.toTensor().reshape(h)},e.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),o=0,a=0;a&lt;e.rank;a++)a!==t&amp;&amp;(r[o++]=e.shape[a]);var i=new Array(e.rank).fill(0),s=e.shape.slice();s[t]=1;var u=new Array(n);for(a=0;a&lt;u.length;a++)i[t]=a,u[a]=this.slice(e,i,s).reshape(r);return u},e.prototype.reverse=function(e,t){this.assertNotComplex(e,&quot;reverse&quot;);for(var n=buffer(e.shape,e.dtype),r=e.bufferSync(),o=function(o){var a=n.indexToLoc(o),i=a.slice();t.forEach(function(t){return i[t]=e.shape[t]-1-i[t]}),n.set.apply(n,[r.get.apply(r,i)].concat(a));},a=0;a&lt;n.size;a++)o(a);return n.toTensor()},e.prototype.concat=function(e,t){this.assertNotComplex(e,&quot;concat&quot;);var n=e.map(function(e){var n=sizeFromShape(e.shape.slice(t));return e.as2D(-1,n)}),r=computeOutShape(n.map(function(e){return e.shape}),1),o=buffer(r,e[0].dtype).values;if(1===n[0].shape[0]){var a=0;n.forEach(function(e){o.set(e.dataSync(),a),a+=e.size;});}else{var i=0;n.forEach(function(e){for(var t=e.dataSync(),n=0,a=0;a&lt;e.shape[0];++a)for(var s=a*r[1]+i,u=0;u&lt;e.shape[1];++u)o[s+u]=t[n++];i+=e.shape[1];});}var s=computeOutShape(e.map(function(e){return e.shape}),t);return tensor(o,s,e[0].dtype)},e.prototype.neg=function(e){return this.assertNotComplex(e,&quot;neg&quot;),this.multiply(scalar(-1),e)},e.prototype.add=function(e,t){return &quot;complex64&quot;===e.dtype||&quot;complex64&quot;===t.dtype?this.broadcastedBinaryComplexOp(e.cast(&quot;complex64&quot;),t.cast(&quot;complex64&quot;),function(e,t,n,r){return {real:e+n,imag:t+r}}):this.broadcastedBinaryOp(e,t,upcastType(e.dtype,t.dtype),function(e,t){return e+t})},e.prototype.addN=function(e){this.assertNotComplex(e,&quot;addN&quot;);for(var t=e.map(function(e){return e.dataSync()}),n=buffer(e[0].shape,e[0].dtype),r=n.values,o=0;o&lt;e.length;o++)for(var a=t[o],i=0;i&lt;r.length;i++)r[i]+=a[i];return n.toTensor()},e.prototype.subtract=function(e,t){return &quot;complex64&quot;===e.dtype||&quot;complex64&quot;===t.dtype?this.broadcastedBinaryComplexOp(e.cast(&quot;complex64&quot;),t.cast(&quot;complex64&quot;),function(e,t,n,r){return {real:e-n,imag:t-r}}):this.broadcastedBinaryOp(e,t,upcastType(e.dtype,t.dtype),function(e,t){return e-t})},e.prototype.pow=function(e,t){return this.assertNotComplex([e,t],&quot;pow&quot;),this.broadcastedBinaryOp(e,t,e.dtype,function(e,t){return Math.pow(e,t)})},e.prototype.batchMatMul=function(e,t,n,r){this.assertNotComplex([e,t],&quot;matMul&quot;);for(var o=n?e.shape[1]:e.shape[2],a=n?e.shape[2]:e.shape[1],i=r?t.shape[1]:t.shape[2],s=e.shape[0],u=e.dataSync(),c=t.dataSync(),l=n?[e.strides[0],1,e.strides[1]]:[e.strides[0],e.strides[1],1],p=l[0],d=l[1],h=l[2],f=r?[1,t.strides[1],t.strides[0]]:[t.strides[1],1,t.strides[0]],m=f[0],g=f[1],v=f[2],y=a*i,x=buffer([s,a,i],e.dtype),E=x.values,T=this.blockSize,b=0;b&lt;s;b++)for(var w=0;w&lt;a;w+=T)for(var S=0;S&lt;i;S+=T)for(var C=0;C&lt;o;C+=T)for(var A=Math.min(w+T,a),N=Math.min(S+T,i),_=Math.min(C+T,o),R=w;R&lt;A;R++)for(var I=S;I&lt;N;I++){for(var k=0,D=C;D&lt;_;D++)k+=u[b*p+R*d+D*h]*c[D*m+I*g+b*v];E[b*y+(R*i+I)]+=k;}return x.toTensor()},e.prototype.fusedBatchMatMul=function(e,t,n,r,o,a){var i=this.batchMatMul(e,t,n,r);return o&amp;&amp;(i=this.add(i,o)),a&amp;&amp;(i=mapActivation(this,a,i)),i},e.prototype.multiply=function(e,t){return &quot;complex64&quot;===e.dtype||&quot;complex64&quot;===t.dtype?this.broadcastedBinaryComplexOp(e.cast(&quot;complex64&quot;),t.cast(&quot;complex64&quot;),function(e,t,n,r){return {real:e*n-t*r,imag:e*r+t*n}}):this.broadcastedBinaryOp(e,t,upcastType(e.dtype,t.dtype),function(e,t){return e*t})},e.prototype.realDivide=function(e,t){this.assertNotComplex([e,t],&quot;realDivide&quot;);return this.broadcastedBinaryOp(e,t,&quot;float32&quot;,function(e,t){return e/t})},e.prototype.floorDiv=function(e,t){this.assertNotComplex([e,t],&quot;floorDiv&quot;);return this.broadcastedBinaryOp(e,t,&quot;int32&quot;,function(e,t){return Math.floor(e/t)})},e.prototype.sum=function(e,t){this.assertNotComplex(e,&quot;sum&quot;),assertAxesAreInnerMostDims(&quot;sum&quot;,t,e.rank);for(var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=n[1],a=zeros(r,upcastType(e.dtype,&quot;int32&quot;)),i=sizeFromShape(o),s=a.dataSync(),u=e.dataSync(),c=0;c&lt;s.length;++c){for(var l=c*i,p=0,d=0;d&lt;i;++d)p+=u[l+d];s[c]=p;}return a},e.prototype.prod=function(e,t){this.assertNotComplex(e,&quot;sum&quot;);for(var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=n[1],a=zeros(r,upcastType(e.dtype,&quot;int32&quot;)),i=sizeFromShape(o),s=a.dataSync(),u=e.dataSync(),c=0;c&lt;s.length;++c){for(var l=c*i,p=1,d=0;d&lt;i;++d)p*=u[l+d];s[c]=p;}return a},e.prototype.unsortedSegmentSum=function(e,t,n){this.assertNotComplex(e,&quot;unsortedSegmentSum&quot;);for(var r=[],o=e.rank-t.rank,a=0;a&lt;o;++a)t=t.expandDims(a+1);for(a=0;a&lt;n;++a){var i=scalar(a,&quot;int32&quot;),s=equal(i,t).asType(&quot;float32&quot;).mul(e).sum(0);r.push(s);}return stack(r)},e.prototype.argMin=function(e,t){this.assertNotComplex(e,&quot;argMin&quot;);var n=[t];assertAxesAreInnerMostDims(&quot;argMin&quot;,n,e.rank);for(var r=computeOutAndReduceShapes(e.shape,n),o=r[0],a=r[1],i=zeros(o,&quot;int32&quot;),s=sizeFromShape(a),u=i.dataSync(),c=e.dataSync(),l=0;l&lt;u.length;++l){for(var p=l*s,d=c[p],h=0,f=0;f&lt;s;++f){var m=c[p+f];m&lt;d&amp;&amp;(d=m,h=f);}u[l]=h;}return i},e.prototype.argMax=function(e,t){this.assertNotComplex(e,&quot;argMax&quot;);var n=[t];assertAxesAreInnerMostDims(&quot;argMax&quot;,n,e.rank);for(var r=computeOutAndReduceShapes(e.shape,n),o=r[0],a=r[1],i=zeros(o,&quot;int32&quot;),s=sizeFromShape(a),u=i.dataSync(),c=e.dataSync(),l=0;l&lt;u.length;++l){for(var p=l*s,d=c[p],h=0,f=0;f&lt;s;++f){var m=c[p+f];m&gt;d&amp;&amp;(d=m,h=f);}u[l]=h;}return i},e.prototype.cumsum=function(e,t,n,r){if(this.assertNotComplex(e,&quot;cumsum&quot;),t!==e.rank-1)throw new Error(&quot;backend.cumsum in CPU expects an inner-most axis=&quot;+(e.rank-1)+&quot; but got axis=&quot;+t);for(var o=upcastType(e.dtype,&quot;int32&quot;),a=zeros(e.shape,o),i=a.dataSync(),s=e.dataSync(),u=e.shape[e.rank-1],c=r?function(e,t){return e+u-t-1}:function(e,t){return e+t},l=0;l&lt;s.length;l+=u)for(var p=0;p&lt;u;p++){var d=c(l,p);if(0===p)i[d]=n?0:s[d];else{var h=c(l,p-1);i[d]=n?s[h]+i[h]:s[d]+i[h];}}return a},e.prototype.equal=function(e,t){return this.assertNotComplex([e,t],&quot;equal&quot;),this.broadcastedBinaryOp(e,t,&quot;bool&quot;,function(e,t){return e===t?1:0})},e.prototype.notEqual=function(e,t){return this.assertNotComplex([e,t],&quot;notEqual&quot;),this.broadcastedBinaryOp(e,t,&quot;bool&quot;,function(e,t){return e!==t?1:0})},e.prototype.less=function(e,t){return this.assertNotComplex([e,t],&quot;less&quot;),this.broadcastedBinaryOp(e,t,&quot;bool&quot;,function(e,t){return e&lt;t?1:0})},e.prototype.lessEqual=function(e,t){return this.assertNotComplex([e,t],&quot;lessEqual&quot;),this.broadcastedBinaryOp(e,t,&quot;bool&quot;,function(e,t){return e&lt;=t?1:0})},e.prototype.greater=function(e,t){return this.assertNotComplex([e,t],&quot;greater&quot;),this.broadcastedBinaryOp(e,t,&quot;bool&quot;,function(e,t){return e&gt;t?1:0})},e.prototype.greaterEqual=function(e,t){return this.assertNotComplex([e,t],&quot;greaterEqual&quot;),this.broadcastedBinaryOp(e,t,&quot;bool&quot;,function(e,t){return e&gt;=t?1:0})},e.prototype.logicalNot=function(e){this.assertNotComplex(e,&quot;logicalNot&quot;);for(var t=e.dataSync(),n=new Uint8Array(t.length),r=0;r&lt;t.length;++r)n[r]=t[r]?0:1;return Tensor.make(e.shape,{values:n},&quot;bool&quot;)},e.prototype.logicalAnd=function(e,t){return this.assertNotComplex([e,t],&quot;logicalAnd&quot;),this.broadcastedBinaryOp(e,t,&quot;bool&quot;,function(e,t){return e&amp;&amp;t})},e.prototype.logicalOr=function(e,t){return this.assertNotComplex([e,t],&quot;logicalOr&quot;),this.broadcastedBinaryOp(e,t,&quot;bool&quot;,function(e,t){return e||t})},e.prototype.select=function(e,t,n){this.assertNotComplex([e,t,n],&quot;select&quot;);for(var r=e.dataSync(),o=t.dataSync(),a=n.dataSync(),i=zeros(t.shape,upcastType(t.dtype,n.dtype)),s=i.dataSync(),u=0,c=0===e.rank||e.rank&gt;1||1===t.rank?1:t.shape[1],l=0;l&lt;r.length;l++)for(var p=0;p&lt;c;p++)1===r[l]?s[u++]=o[l]:s[u++]=a[l];return i},e.prototype.where=function(e){this.assertNotComplex([e],&quot;where&quot;);var t=e.dataSync();return whereImpl(e.shape,t)},e.prototype.topk=function(e,t,n){return this.assertNotComplex(e,&quot;topk&quot;),topkImpl(e.dataSync(),e.shape,e.dtype,t,n)},e.prototype.min=function(e,t){this.assertNotComplex(e,&quot;min&quot;),assertAxesAreInnerMostDims(&quot;min&quot;,t,e.rank);for(var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=n[1],a=zeros(r,e.dtype),i=sizeFromShape(o),s=a.dataSync(),u=e.dataSync(),c=0;c&lt;s.length;++c){for(var l=c*i,p=u[l],d=0;d&lt;i;++d){var h=u[l+d];h&lt;p&amp;&amp;(p=h);}s[c]=p;}return a},e.prototype.minimum=function(e,t){return this.assertNotComplex([e,t],&quot;minimum&quot;),this.broadcastedBinaryOp(e,t,e.dtype,function(e,t){return Math.min(e,t)})},e.prototype.mod=function(e,t){return this.assertNotComplex([e,t],&quot;mod&quot;),this.broadcastedBinaryOp(e,t,e.dtype,function(e,t){var n=e%t;return e&lt;0&amp;&amp;t&lt;0||e&gt;=0&amp;&amp;t&gt;=0?n:(n+t)%t})},e.prototype.max=function(e,t){this.assertNotComplex(e,&quot;max&quot;),assertAxesAreInnerMostDims(&quot;max&quot;,t,e.rank);for(var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=n[1],a=zeros(r,e.dtype),i=sizeFromShape(o),s=a.dataSync(),u=e.dataSync(),c=0;c&lt;s.length;++c){for(var l=c*i,p=u[l],d=0;d&lt;i;++d){var h=u[l+d];h&gt;p&amp;&amp;(p=h);}s[c]=p;}return a},e.prototype.maximum=function(e,t){return this.assertNotComplex([e,t],&quot;maximum&quot;),this.broadcastedBinaryOp(e,t,e.dtype,function(e,t){return Math.max(e,t)})},e.prototype.all=function(e,t){this.assertNotComplex(e,&quot;all&quot;),assertAxesAreInnerMostDims(&quot;all&quot;,t,e.rank);for(var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=n[1],a=zeros(r,e.dtype),i=sizeFromShape(o),s=a.dataSync(),u=e.dataSync(),c=0;c&lt;s.length;++c){for(var l=c*i,p=u[l],d=0;d&lt;i;++d){var h=u[l+d];p=p&amp;&amp;h;}s[c]=p;}return a},e.prototype.any=function(e,t){this.assertNotComplex(e,&quot;any&quot;),assertAxesAreInnerMostDims(&quot;any&quot;,t,e.rank);for(var n=computeOutAndReduceShapes(e.shape,t),r=n[0],o=n[1],a=zeros(r,e.dtype),i=sizeFromShape(o),s=a.dataSync(),u=e.dataSync(),c=0;c&lt;s.length;++c){for(var l=c*i,p=u[l],d=0;d&lt;i;++d){var h=u[l+d];p=p||h;}s[c]=p;}return a},e.prototype.squaredDifference=function(e,t){return this.assertNotComplex([e,t],&quot;squaredDifference&quot;),this.broadcastedBinaryOp(e,t,e.dtype,function(e,t){var n=e-t;return n*n})},e.prototype.ceil=function(e){this.assertNotComplex(e,&quot;ceil&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r)n[r]=Math.ceil(t[r]);return Tensor.make(e.shape,{values:n})},e.prototype.floor=function(e){this.assertNotComplex(e,&quot;floor&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r)n[r]=Math.floor(t[r]);return Tensor.make(e.shape,{values:n})},e.prototype.sign=function(e){this.assertNotComplex(e,&quot;x&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r)t[r]&lt;0?n[r]=-1:t[r]&gt;0?n[r]=1:n[r]=0;return Tensor.make(e.shape,{values:n})},e.prototype.isNaN=function(e){this.assertNotComplex(e,&quot;x&quot;);for(var t=e.dataSync(),n=new Uint8Array(t.length),r=0;r&lt;t.length;++r)Number.isNaN(t[r])&amp;&amp;(n[r]=1);return Tensor.make(e.shape,{values:n},&quot;bool&quot;)},e.prototype.isInf=function(e){this.assertNotComplex(e,&quot;x&quot;);for(var t=e.dataSync(),n=new Uint8Array(t.length),r=0;r&lt;t.length;++r)Math.abs(t[r])===1/0&amp;&amp;(n[r]=1);return Tensor.make(e.shape,{values:n},&quot;bool&quot;)},e.prototype.isFinite=function(e){this.assertNotComplex(e,&quot;x&quot;);for(var t=e.dataSync(),n=new Uint8Array(t.length),r=0;r&lt;t.length;++r)Number.isFinite(t[r])&amp;&amp;(n[r]=1);return Tensor.make(e.shape,{values:n},&quot;bool&quot;)},e.prototype.round=function(e){this.assertNotComplex(e,&quot;round&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r){var o=Math.floor(t[r]);t[r]-o&lt;.5?n[r]=Math.floor(t[r]):t[r]-o&gt;.5?n[r]=Math.ceil(t[r]):n[r]=o%2==0?o:o+1;}return Tensor.make(e.shape,{values:n})},e.prototype.exp=function(e){this.assertNotComplex(e,&quot;exp&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r)n[r]=Math.exp(t[r]);return Tensor.make(e.shape,{values:n})},e.prototype.expm1=function(e){this.assertNotComplex(e,&quot;expm1&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r)n[r]=Math.expm1(t[r]);return Tensor.make(e.shape,{values:n})},e.prototype.log=function(e){this.assertNotComplex(e,&quot;log&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r){var o=t[r];n[r]=Math.log(o);}return Tensor.make(e.shape,{values:n})},e.prototype.log1p=function(e){this.assertNotComplex(e,&quot;log1p&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r){var o=t[r];n[r]=Math.log1p(o);}return Tensor.make(e.shape,{values:n})},e.prototype.sqrt=function(e){this.assertNotComplex(e,&quot;sqrt&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r){var o=t[r];n[r]=Math.sqrt(o);}return Tensor.make(e.shape,{values:n})},e.prototype.rsqrt=function(e){this.assertNotComplex(e,&quot;rsqrt&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r){var o=t[r];n[r]=1/Math.sqrt(o);}return Tensor.make(e.shape,{values:n})},e.prototype.square=function(e){this.assertNotComplex(e,&quot;square&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r){var o=t[r];n[r]=o*o;}return Tensor.make(e.shape,{values:n})},e.prototype.reciprocal=function(e){this.assertNotComplex(e,&quot;reciprocal&quot;);for(var t=e.dataSync(),n=new Float32Array(t.length),r=0;r&lt;t.length;++r)n[r]=1/t[r];return Tensor.make(e.shape,{values:n})},e.prototype.linear=function(e){return e},e.prototype.relu=function(e){this.assertNotComplex(e,&quot;relu&quot;);for(var t=zeros(e.shape,e.dtype),n=t.dataSync(),r=e.dataSync(),o=0;o&lt;r.length;++o)n[o]=Math.max(0,r[o]);return t},e.prototype.prelu=function(e,t){return this.assertNotComplex([e,t],&quot;prelu&quot;),this.broadcastedBinaryOp(e,t,e.dtype,function(e,t){return e&lt;0?t*e:e})},e.prototype.elu=function(e){this.assertNotComplex(e,&quot;elu&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r){var o=n[r];t[r]=o&gt;=0?o:Math.exp(o)-1;}return Tensor.make(e.shape,{values:t})},e.prototype.eluDer=function(e,t){this.assertNotComplex([e,t],&quot;eluDer&quot;);for(var n=new Float32Array(t.size),r=t.dataSync(),o=e.dataSync(),a=0;a&lt;r.length;++a){var i=r[a];n[a]=i&gt;=1?o[a]:o[a]*(i+1);}return Tensor.make(t.shape,{values:n})},e.prototype.selu=function(e){this.assertNotComplex(e,&quot;selu&quot;);for(var t=SELU_SCALEALPHA,n=SELU_SCALE,r=new Float32Array(e.size),o=e.dataSync(),a=0;a&lt;o.length;++a){var i=o[a];r[a]=i&gt;=0?n*i:t*(Math.exp(i)-1);}return Tensor.make(e.shape,{values:r})},e.prototype.clip=function(e,t,n){this.assertNotComplex(e,&quot;clip&quot;);for(var r=new Float32Array(e.size),o=e.dataSync(),a=0;a&lt;o.length;++a){var i=o[a];r[a]=i&gt;n?n:i&lt;t?t:i;}return Tensor.make(e.shape,{values:r})},e.prototype.abs=function(e){for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.abs(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.complexAbs=function(e){for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;e.size;++r){var o=n[2*r],a=n[2*r+1];t[r]=Math.hypot(o,a);}return Tensor.make(e.shape,{values:t})},e.prototype.int=function(e){this.assertNotComplex(e,&quot;int&quot;);for(var t=new Int32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=n[r];return Tensor.make(e.shape,{values:t},&quot;int32&quot;)},e.prototype.sigmoid=function(e){this.assertNotComplex(e,&quot;sigmoid&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=1/(1+Math.exp(-n[r]));return Tensor.make(e.shape,{values:t})},e.prototype.softplus=function(e){this.assertNotComplex(e,&quot;softplus&quot;);for(var t=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(e.size),r=e.dataSync(),o=0;o&lt;r.length;++o){var a=r[o]&gt;-t,i=r[o]&lt;t,s=Math.exp(r[o]),u=void 0;u=i?s:a?r[o]:Math.log(1+s),n[o]=u;}return Tensor.make(e.shape,{values:n})},e.prototype.sin=function(e){this.assertNotComplex(e,&quot;sin&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.sin(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.cos=function(e){this.assertNotComplex(e,&quot;cos&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.cos(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.tan=function(e){this.assertNotComplex(e,&quot;tan&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.tan(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.asin=function(e){this.assertNotComplex(e,&quot;asin&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.asin(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.acos=function(e){this.assertNotComplex(e,&quot;acos&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.acos(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.atan=function(e){this.assertNotComplex(e,&quot;atan&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.atan(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.atan2=function(e,t){return this.assertNotComplex([e,t],&quot;atan2&quot;),this.broadcastedBinaryOp(e,t,e.dtype,function(e,t){return Math.atan2(e,t)})},e.prototype.sinh=function(e){this.assertNotComplex(e,&quot;sinh&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.sinh(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.cosh=function(e){this.assertNotComplex(e,&quot;cosh&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.cosh(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.tanh=function(e){this.assertNotComplex(e,&quot;tanh&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=tanh(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.asinh=function(e){this.assertNotComplex(e,&quot;asinh&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.asinh(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.acosh=function(e){this.assertNotComplex(e,&quot;acosh&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.acosh(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.atanh=function(e){this.assertNotComplex(e,&quot;atanh&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=0;r&lt;n.length;++r)t[r]=Math.atanh(n[r]);return Tensor.make(e.shape,{values:t})},e.prototype.erf=function(e){this.assertNotComplex(e,&quot;erf&quot;);for(var t=new Float32Array(e.size),n=e.dataSync(),r=ERF_P,o=ERF_A1,a=ERF_A2,i=ERF_A3,s=ERF_A4,u=ERF_A5,c=0;c&lt;n.length;++c){var l=n[c],p=1/(1+r*l);t[c]=1-((((u*p+s)*p+i)*p+a)*p+o)*p*Math.exp(-l*l);}return Tensor.make(e.shape,{values:t})},e.prototype.step=function(e,t){void 0===t&amp;&amp;(t=0),this.assertNotComplex(e,&quot;step&quot;);for(var n=new Float32Array(e.size),r=e.dataSync(),o=0;o&lt;r.length;++o){var a=r[o];isNaN(a)?n[o]=NaN:n[o]=a&gt;0?1:t;}return Tensor.make(e.shape,{values:n})},e.prototype.conv2d=function(e,t,n){this.assertNotComplex([e,t],&quot;conv2d&quot;);for(var r=n.filterHeight,o=n.filterWidth,a=n.dilationHeight,i=n.dilationWidth,s=n.padInfo.left,u=n.padInfo.top,c=buffer(n.outShape,e.dtype),l=e.dataSync(),p=t.dataSync(),d=c.values,h=0;h&lt;n.batchSize;++h)for(var f=h*e.strides[0],m=h*c.strides[0],g=0;g&lt;n.outHeight;++g)for(var v=m+g*c.strides[1],y=g*n.strideHeight-s,x=0;x&lt;r;x++){var E=y+x*a;if(!(E&lt;0||E&gt;=n.inHeight))for(var T=x*t.strides[0],b=f+E*e.strides[1],w=0;w&lt;n.outWidth;++w)for(var S=v+w*n.outChannels,C=w*n.strideWidth-u,A=0;A&lt;o;A++){var N=C+A*i;if(!(N&lt;0||N&gt;=n.inWidth))for(var _=T+A*t.strides[1],R=b+N*n.inChannels,I=_,k=0;k&lt;n.inChannels;++k){for(var D=l[R+k],O=0;O&lt;n.outChannels;++O)d[S+O]+=D*p[I+O];I+=n.outChannels;}}}return c.toTensor()},e.prototype.conv3d=function(e,t,n){for(var r=n.filterDepth,o=n.filterHeight,a=n.filterWidth,i=n.dilationDepth,s=n.dilationHeight,u=n.dilationWidth,c=n.padInfo.front,l=n.padInfo.left,p=n.padInfo.top,d=buffer(n.outShape,e.dtype),h=e.dataSync(),f=t.dataSync(),m=d.values,g=0;g&lt;n.batchSize;++g)for(var v=g*e.strides[0],y=g*d.strides[0],x=0;x&lt;n.outDepth;++x)for(var E=y+x*d.strides[1],T=x*n.strideDepth-c,b=0;b&lt;r;b++){var w=T+b*i;if(!(w&lt;0||w&gt;=n.inDepth))for(var S=b*t.strides[0],C=v+w*e.strides[1],A=0;A&lt;n.outHeight;++A)for(var N=E+A*d.strides[2],_=A*n.strideHeight-p,R=0;R&lt;o;R++){var I=_+R*s;if(!(I&lt;0||I&gt;=n.inHeight))for(var k=S+R*t.strides[1],D=C+I*e.strides[2],O=0;O&lt;n.outWidth;++O)for(var P=N+O*n.outChannels,M=O*n.strideWidth-l,F=0;F&lt;a;F++){var L=M+F*u;if(!(L&lt;0||L&gt;=n.inWidth))for(var B=k+F*t.strides[2],V=D+L*n.inChannels,U=B,z=0;z&lt;n.inChannels;++z){for(var W=h[V+z],G=0;G&lt;n.outChannels;++G)m[P+G]+=W*f[U+G];U+=n.outChannels;}}}}return d.toTensor()},e.prototype.conv2dDerInput=function(e,t,n){this.assertNotComplex([e,t],&quot;conv2dDerInput&quot;);for(var r=buffer(n.inShape,&quot;float32&quot;),o=r.values,a=r.strides,i=a[0],s=a[1],u=a[2],c=e.dataSync(),l=e.strides,p=l[0],d=l[1],h=l[2],f=t.dataSync(),m=t.strides,g=m[0],v=m[1],y=m[2],x=n.batchSize,E=n.filterHeight,T=n.filterWidth,b=n.inChannels,w=n.inHeight,S=n.inWidth,C=n.outChannels,A=n.outHeight,N=n.outWidth,_=n.strideHeight,R=n.strideWidth,I=E-1-n.padInfo.top,k=T-1-n.padInfo.left,D=0;D&lt;x;++D)for(var O=0;O&lt;b;++O)for(var P=0;P&lt;w;++P)for(var M=P-I,F=Math.max(0,Math.ceil(M/_)),L=Math.min(A,(E+M)/_),B=0;B&lt;S;++B){for(var V=B-k,U=Math.max(0,Math.ceil(V/R)),z=Math.min(N,(T+V)/R),W=0,G=F;G&lt;L;++G)for(var H=G*_-M,q=U;q&lt;z;++q)for(var $=p*D+d*G+h*q,K=g*(E-1-H)+v*(T-1-(q*R-V))+y*O,X=0;X&lt;C;++X){W+=c[$+X]*f[K+X];}o[i*D+s*P+u*B+O]=W;}return r.toTensor()},e.prototype.conv3dDerInput=function(e,t,n){for(var r=buffer(n.inShape,&quot;float32&quot;),o=r.values,a=r.strides,i=a[0],s=a[1],u=a[2],c=a[3],l=e.dataSync(),p=e.strides,d=p[0],h=p[1],f=p[2],m=p[3],g=t.dataSync(),v=t.strides,y=v[0],x=v[1],E=v[2],T=v[3],b=n.batchSize,w=n.filterDepth,S=n.filterHeight,C=n.filterWidth,A=n.inChannels,N=n.inDepth,_=n.inHeight,R=n.inWidth,I=n.outChannels,k=n.outDepth,D=n.outHeight,O=n.outWidth,P=n.strideDepth,M=n.strideHeight,F=n.strideWidth,L=w-1-n.padInfo.front,B=S-1-n.padInfo.top,V=C-1-n.padInfo.left,U=0;U&lt;b;++U)for(var z=0;z&lt;A;++z)for(var W=0;W&lt;N;++W)for(var G=W-L,H=Math.max(0,Math.ceil(G/P)),q=Math.min(k,(w+G)/P),$=0;$&lt;_;++$)for(var K=$-B,X=Math.max(0,Math.ceil(K/M)),j=Math.min(D,(S+K)/M),Y=0;Y&lt;R;++Y){for(var Q=Y-V,J=Math.max(0,Math.ceil(Q/F)),Z=Math.min(O,(C+Q)/F),ee=0,te=H;te&lt;q;++te)for(var ne=te*P-G,re=X;re&lt;j;++re)for(var oe=re*M-K,ae=J;ae&lt;Z;++ae)for(var ie=d*U+h*te+f*re+m*ae,se=y*(w-1-ne)+x*(S-1-oe)+E*(C-1-(ae*F-Q))+T*z,ue=0;ue&lt;I;++ue){ee+=l[ie+ue]*g[se+ue];}o[i*U+s*W+u*$+c*Y+z]=ee;}return r.toTensor()},e.prototype.conv2dDerFilter=function(e,t,n){this.assertNotComplex([e,t],&quot;conv2dDerFilter&quot;);for(var r=n.strideHeight,o=n.strideWidth,a=n.filterHeight,i=n.filterWidth,s=buffer(n.filterShape,&quot;float32&quot;),u=n.padInfo.left,c=n.padInfo.top,l=e.bufferSync(),p=t.bufferSync(),d=0;d&lt;a;++d)for(var h=Math.max(0,Math.ceil((c-d)/r)),f=Math.min(n.outHeight,(n.inHeight+c-d)/r),m=0;m&lt;i;++m)for(var g=Math.max(0,Math.ceil((u-m)/o)),v=Math.min(n.outWidth,(n.inWidth+u-m)/o),y=0;y&lt;n.inChannels;++y)for(var x=0;x&lt;n.outChannels;++x){for(var E=0,T=0;T&lt;n.batchSize;++T)for(var b=h;b&lt;f;++b)for(var w=d+b*r-c,S=g;S&lt;v;++S){var C=m+S*o-u;E+=l.get(T,w,C,y)*p.get(T,b,S,x);}s.set(E,d,m,y,x);}return s.toTensor()},e.prototype.conv3dDerFilter=function(e,t,n){for(var r=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=n.filterDepth,s=n.filterHeight,u=n.filterWidth,c=buffer(n.filterShape,&quot;float32&quot;),l=c.values,p=c.strides,d=p[0],h=p[1],f=p[2],m=p[3],g=t.dataSync(),v=t.strides,y=v[0],x=v[1],E=v[2],T=v[3],b=e.dataSync(),w=e.strides,S=w[0],C=w[1],A=w[2],N=w[3],_=n.padInfo.front,R=n.padInfo.left,I=n.padInfo.top,k=0;k&lt;i;++k)for(var D=Math.max(0,Math.ceil((_-k)/r)),O=Math.min(n.outDepth,(n.inDepth+_-k)/r),P=k*d,M=0;M&lt;s;++M)for(var F=Math.max(0,Math.ceil((I-M)/o)),L=Math.min(n.outHeight,(n.inHeight+I-M)/o),B=M*h+P,V=0;V&lt;u;++V)for(var U=Math.max(0,Math.ceil((R-V)/a)),z=Math.min(n.outWidth,(n.inWidth+R-V)/a),W=V*f+B,G=0;G&lt;n.inChannels;++G)for(var H=G*m+W,q=0;q&lt;n.outChannels;++q){for(var $=0,K=0;K&lt;n.batchSize;++K)for(var X=K*S,j=K*y,Y=D;Y&lt;O;++Y)for(var Q=(k+Y*r-_)*C+X,J=Y*x+j,Z=F;Z&lt;L;++Z)for(var ee=(M+Z*o-I)*A+Q,te=Z*E+J,ne=U;ne&lt;z;++ne){var re=ne*T+te;$+=b[(V+ne*a-R)*N+ee+G]*g[re+q];}l[H+q]=$;}return c.toTensor()},e.prototype.depthwiseConv2D=function(e,t,n){this.assertNotComplex([e,t],&quot;depthwiseConv2D&quot;);for(var r=n.filterHeight,o=n.filterWidth,a=n.dilationHeight,i=n.dilationWidth,s=n.padInfo.left,u=n.padInfo.top,c=n.outChannels/n.inChannels,l=buffer(n.outShape,e.dtype),p=e.dataSync(),d=t.dataSync(),h=l.values,f=0;f&lt;n.batchSize;++f)for(var m=f*e.strides[0],g=f*l.strides[0],v=0;v&lt;n.outHeight;++v)for(var y=g+v*l.strides[1],x=v*n.strideHeight-s,E=0;E&lt;r;++E){var T=x+E*a;if(!(T&lt;0||T&gt;=n.inHeight))for(var b=E*t.strides[0],w=m+T*e.strides[1],S=0;S&lt;n.outWidth;++S)for(var C=y+S*l.strides[2],A=S*n.strideWidth-u,N=0;N&lt;o;++N){var _=A+N*i;if(!(_&lt;0||_&gt;=n.inWidth))for(var R=b+N*t.strides[1],I=w+_*n.inChannels,k=C,D=R,O=0;O&lt;n.inChannels;++O){for(var P=p[I+O],M=0;M&lt;c;++M)h[k+M]+=P*d[D+M];k+=c,D+=c;}}}return l.toTensor()},e.prototype.depthwiseConv2DDerInput=function(e,t,n){this.assertNotComplex([e,t],&quot;depthwiseConv2DDerInput&quot;);for(var r=buffer(n.inShape,&quot;float32&quot;),o=r.values,a=r.strides,i=a[0],s=a[1],u=a[2],c=e.dataSync(),l=e.strides,p=l[0],d=l[1],h=l[2],f=t.dataSync(),m=t.strides,g=m[0],v=m[1],y=m[2],x=n.batchSize,E=n.filterHeight,T=n.filterWidth,b=n.inChannels,w=n.inHeight,S=n.inWidth,C=n.outChannels,A=n.outHeight,N=n.outWidth,_=n.strideHeight,R=n.strideWidth,I=E-1-n.padInfo.top,k=T-1-n.padInfo.left,D=C/b,O=0;O&lt;x;++O)for(var P=0;P&lt;b;++P)for(var M=0;M&lt;w;++M)for(var F=M-I,L=Math.max(0,Math.ceil(F/_)),B=Math.min(A,(E+F)/_),V=0;V&lt;S;++V){for(var U=V-k,z=Math.max(0,Math.ceil(U/R)),W=Math.min(N,(T+U)/R),G=0,H=L;H&lt;B;++H)for(var q=H*_-F,$=z;$&lt;W;++$)for(var K=p*O+d*H+h*$,X=g*(E-1-q)+v*(T-1-($*R-U))+y*P,j=0;j&lt;D;++j){G+=c[K+(P*D+j)]*f[X+j];}o[i*O+s*M+u*V+P]=G;}return r.toTensor()},e.prototype.depthwiseConv2DDerFilter=function(e,t,n){this.assertNotComplex([e,t],&quot;depthwiseConv2DDerFilter&quot;);for(var r=n.strideHeight,o=n.strideWidth,a=n.filterHeight,i=n.filterWidth,s=buffer(n.filterShape,&quot;float32&quot;),u=n.padInfo.left,c=n.padInfo.top,l=n.outChannels/n.inChannels,p=e.bufferSync(),d=t.bufferSync(),h=0;h&lt;a;++h)for(var f=Math.max(0,Math.ceil((c-h)/r)),m=Math.min(n.outHeight,(n.inHeight+c-h)/r),g=0;g&lt;i;++g)for(var v=Math.max(0,Math.ceil((u-g)/o)),y=Math.min(n.outWidth,(n.inWidth+u-g)/o),x=0;x&lt;n.outChannels;++x){for(var E=Math.trunc(x/l),T=x%l,b=0,w=0;w&lt;n.batchSize;++w)for(var S=f;S&lt;m;++S)for(var C=h+S*r-c,A=v;A&lt;y;++A){var N=g+A*o-u;b+=p.get(w,C,N,E)*d.get(w,S,A,x);}s.set(b,h,g,E,T);}return s.toTensor()},e.prototype.tile=function(e,t){this.assertNotComplex(e,&quot;tile&quot;);for(var n=new Array(e.rank),r=0;r&lt;n.length;r++)n[r]=e.shape[r]*t[r];var o=buffer(n,e.dtype),a=e.bufferSync();for(r=0;r&lt;o.values.length;++r){for(var i=o.indexToLoc(r),s=new Array(e.rank),u=0;u&lt;s.length;u++)s[u]=i[u]%e.shape[u];var c=a.locToIndex(s);o.values[r]=a.values[c];}return o.toTensor()},e.prototype.pad=function(e,t,n){this.assertNotComplex(e,&quot;pad&quot;);var r=t.map(function(t,n){return t[0]+e.shape[n]+t[1]}),o=t.map(function(e){return e[0]}),a=e.bufferSync(),i=buffer(r,e.dtype);0!==n&amp;&amp;i.values.fill(n);for(var s=0;s&lt;e.size;s++){var u=a.indexToLoc(s),c=u.map(function(e,t){return e+o[t]});i.set.apply(i,[a.get.apply(a,u)].concat(c));}return i.toTensor()},e.prototype.transpose=function(e,t){this.assertNotComplex(e,&quot;transpose&quot;);for(var n=new Array(e.rank),r=0;r&lt;n.length;r++)n[r]=e.shape[t[r]];var o=e.dataSync(),a=buffer(n,e.dtype),i=e.bufferSync();for(r=0;r&lt;e.size;++r){for(var s=i.indexToLoc(r),u=new Array(s.length),c=0;c&lt;u.length;c++)u[c]=s[t[c]];var l=a.locToIndex(u);a.values[l]=o[r];}return a.toTensor()},e.prototype.gather=function(e,t,n){this.assertNotComplex([e,t],&quot;gather&quot;);var r=e.shape.slice(),o=t.dataSync();r[n]=o.length;for(var a=buffer(r,e.dtype),i=e.bufferSync(),s=0;s&lt;a.size;++s){var u=a.indexToLoc(s),c=u.slice();c[n]=o[u[n]];var l=i.locToIndex(c);a.values[s]=i.values[l];}return a.toTensor()},e.prototype.batchToSpaceND=function(e,t,n){this.assertNotComplex([e],&quot;batchToSpaceND&quot;);var r=t.reduce(function(e,t){return e*t}),o=getReshaped(e.shape,t,r),a=getPermuted(o.length,t.length),i=getReshapedPermuted(e.shape,t,r),s=getSliceBeginCoords(n,t.length),u=getSliceSize(i,n,t.length);return e.reshape(o).transpose(a).reshape(i).slice(s,u)},e.prototype.spaceToBatchND=function(e,t,n){this.assertNotComplex([e],&quot;spaceToBatchND&quot;);var r=t.reduce(function(e,t){return e*t}),o=[[0,0]];o.push.apply(o,n);for(var a=1+t.length;a&lt;e.shape.length;++a)o.push([0,0]);var i=e.pad(o),s=getReshaped(i.shape,t,r,!1),u=getPermuted(s.length,t.length,!1),c=getReshapedPermuted(i.shape,t,r,!1);return i.reshape(s).transpose(u).reshape(c)},e.prototype.pool=function(e,t,n){this.assertNotComplex(e,&quot;pool&quot;);for(var r=t.strideHeight,o=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,s=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=t.padInfo.top,l=t.padInfo.left,p=&quot;max&quot;===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,d=e.dataSync(),h=buffer(t.outShape,e.dtype),f=h.values,m=t.outShape[1]*t.outShape[2]*t.outShape[3],g=t.outShape[2]*t.outShape[3],v=t.outShape[3],y=0;y&lt;t.batchSize;++y)for(var x=y*m,E=y*e.strides[0],T=0;T&lt;t.inChannels;++T)for(var b=0;b&lt;t.outHeight;++b)for(var w=b*r-c,S=Math.max(0,w),C=Math.min(t.inHeight,s+w),A=x+b*g,N=0;N&lt;t.outWidth;++N){for(var _=N*o-l,R=Math.max(0,_),I=Math.min(t.inWidth,u+_),k=p,D=0,O=0,P=S;P&lt;C;P+=a){for(var M=E+P*e.strides[1],F=R;F&lt;I;F+=i){var L=d[M+F*e.strides[2]+T];&quot;max&quot;===n&amp;&amp;L&gt;k?k=L:&quot;avg&quot;===n&amp;&amp;(D+=L,O++);}if(isNaN(k))break}f[A+N*v+T]=&quot;avg&quot;===n?D/O:k;}return h.toTensor()},e.prototype.maxPool=function(e,t){return this.pool(e,t,&quot;max&quot;)},e.prototype.maxPoolPositions=function(e,t){for(var n=buffer(t.outShape,&quot;int32&quot;),r=t.strideHeight,o=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,s=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=t.padInfo.top,l=t.padInfo.left,p=e.bufferSync(),d=0;d&lt;t.batchSize;++d)for(var h=0;h&lt;t.inChannels;++h)for(var f=0;f&lt;t.outHeight;++f){for(var m=f*r-c,g=m;g&lt;0;)g+=a;for(var v=Math.min(t.inHeight,s+m),y=0;y&lt;t.outWidth;++y){for(var x=y*o-l,E=x;E&lt;0;)E+=i;for(var T=Math.min(t.inWidth,u+x),b=Number.NEGATIVE_INFINITY,w=-1,S=g;S&lt;v;S+=a)for(var C=S-m,A=E;A&lt;T;A+=i){var N=A-x,_=p.get(d,S,A,h);_&gt;b&amp;&amp;(b=_,w=C*u+N);}n.set(w,d,f,y,h);}}return n.toTensor()},e.prototype.maxPoolBackprop=function(e,t,n,r){this.assertNotComplex([t,n],&quot;maxPoolBackprop&quot;);for(var o=this.maxPoolPositions(t,r),a=r.strideHeight,i=r.strideWidth,s=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,l=r.effectiveFilterWidth,p=l-1-r.padInfo.left,d=c-1-r.padInfo.top,h=buffer(t.shape,&quot;float32&quot;),f=o.bufferSync(),m=e.bufferSync(),g=0;g&lt;r.batchSize;++g)for(var v=0;v&lt;r.inChannels;++v)for(var y=0;y&lt;r.inHeight;++y)for(var x=0;x&lt;r.inWidth;++x){for(var E=y-d,T=x-p,b=0,w=0;w&lt;c;w+=s){var S=(E+w)/a;if(!(S&lt;0||S&gt;=r.outHeight||Math.floor(S)!==S))for(var C=0;C&lt;l;C+=u){var A=(T+C)/i;if(!(A&lt;0||A&gt;=r.outWidth||Math.floor(A)!==A)){var N=c*l-1-f.get(g,S,A,v)===w*l+C?1:0;if(0!==N)b+=m.get(g,S,A,v)*N;}}}h.set(b,g,y,x,v);}return h.toTensor()},e.prototype.avgPoolBackprop=function(e,t,n){this.assertNotComplex([e,t],&quot;avgPoolBackprop&quot;);for(var r=n.strideHeight,o=n.strideWidth,a=n.filterHeight,i=n.filterWidth,s=n.dilationHeight,u=n.dilationWidth,c=n.effectiveFilterHeight,l=n.effectiveFilterWidth,p=l-1-n.padInfo.left,d=c-1-n.padInfo.top,h=buffer(t.shape,&quot;float32&quot;),f=1/(a*i),m=e.bufferSync(),g=0;g&lt;n.batchSize;++g)for(var v=0;v&lt;n.inChannels;++v)for(var y=0;y&lt;n.inHeight;++y)for(var x=0;x&lt;n.inWidth;++x){for(var E=y-d,T=x-p,b=0,w=0;w&lt;c;w+=s){var S=(E+w)/r;if(!(S&lt;0||S&gt;=n.outHeight||Math.floor(S)!==S))for(var C=0;C&lt;l;C+=u){var A=(T+C)/o;if(!(A&lt;0||A&gt;=n.outWidth||Math.floor(A)!==A))b+=m.get(g,S,A,v);}}h.set(b*f,g,y,x,v);}return h.toTensor()},e.prototype.cast=function(e,t){return castTensor(e,t,this)},e.prototype.reshape=function(e,t){return reshapeTensor(e,t)},e.prototype.avgPool=function(e,t){return this.assertNotComplex(e,&quot;avgPool&quot;),this.pool(e,t,&quot;avg&quot;).toFloat()},e.prototype.resizeBilinear=function(e,t,n,r){this.assertNotComplex(e,&quot;resizeBilinear&quot;);for(var o=e.shape,a=o[0],i=o[1],s=o[2],u=o[3],c=e.dataSync(),l=new Float32Array(sizeFromShape([a,t,n,u])),p=[r&amp;&amp;t&gt;1?i-1:i,r&amp;&amp;n&gt;1?s-1:s],d=[r&amp;&amp;t&gt;1?t-1:t,r&amp;&amp;n&gt;1?n-1:n],h=0,f=p[0]/d[0],m=p[1]/d[1],g=0;g&lt;a;g++)for(var v=0;v&lt;t;v++)for(var y=f*v,x=Math.floor(y),E=y-x,T=Math.min(i-1,Math.ceil(y)),b=g*e.strides[0]+x*e.strides[1],w=g*e.strides[0]+T*e.strides[1],S=0;S&lt;n;S++)for(var C=m*S,A=Math.floor(C),N=C-A,_=Math.min(s-1,Math.ceil(C)),R=b+A*e.strides[2],I=w+A*e.strides[2],k=b+ +_*e.strides[2],D=w+_*e.strides[2],O=0;O&lt;u;O++){var P=c[R+O],M=c[I+O],F=P+(c[k+O]-P)*N,L=F+(M+(c[D+O]-M)*N-F)*E;l[h++]=L;}return tensor(l,[a,t,n,u])},e.prototype.resizeBilinearBackprop=function(e,t,n){this.assertNotComplex([e,t],&quot;resizeBilinearBackprop&quot;);for(var r=t.shape,o=r[0],a=r[1],i=r[2],s=r[3],u=e.shape,c=u[1],l=u[2],p=new Float32Array(o*a*i*s),d=[n&amp;&amp;c&gt;1?a-1:a,n&amp;&amp;l&gt;1?i-1:i],h=[n&amp;&amp;c&gt;1?c-1:c,n&amp;&amp;l&gt;1?l-1:l],f=d[0]/h[0],m=d[1]/h[1],g=e.dataSync(),v=0,y=0;y&lt;o;y++)for(var x=y*t.strides[0],E=0;E&lt;c;E++)for(var T=E*f,b=Math.floor(T),w=Math.min(Math.ceil(T),a-1),S=x+b*t.strides[1],C=x+w*t.strides[1],A=T-b,N=1-A,_=0;_&lt;l;_++)for(var R=_*m,I=Math.floor(R),k=Math.min(Math.ceil(R),i-1),D=R-I,O=1-D,P=S+I*t.strides[2],M=S+k*t.strides[2],F=C+I*t.strides[2],L=C+k*t.strides[2],B=N*O,V=N*D,U=A*O,z=A*D,W=0;W&lt;s;W++){var G=g[v++];p[P+W]+=G*B,p[M+W]+=G*V,p[F+W]+=G*U,p[L+W]+=G*z;}return tensor4d(p,[o,i,a,s],t.dtype)},e.prototype.resizeNearestNeighbor=function(e,t,n,r){this.assertNotComplex(e,&quot;resizeNearestNeighbor&quot;);for(var o=e.shape,a=o[0],i=o[1],s=o[2],u=o[3],c=e.dataSync(),l=new Float32Array(a*t*n*u),p=[r&amp;&amp;t&gt;1?i-1:i,r&amp;&amp;n&gt;1?s-1:s],d=[r&amp;&amp;t&gt;1?t-1:t,r&amp;&amp;n&gt;1?n-1:n],h=p[0]/d[0],f=p[1]/d[1],m=0,g=0;g&lt;a;g++)for(var v=g*e.strides[0],y=0;y&lt;t;y++)for(var x=h*y,E=v+Math.min(i-1,r?Math.round(x):Math.floor(x))*e.strides[1],T=0;T&lt;n;T++)for(var b=f*T,w=E+Math.min(s-1,r?Math.round(b):Math.floor(b))*e.strides[2],S=0;S&lt;u;S++){var C=c[w+S];l[m++]=C;}return tensor(l,[a,t,n,u],e.dtype)},e.prototype.resizeNearestNeighborBackprop=function(e,t,n){this.assertNotComplex([e,t],&quot;resizeNearestNeighborBackprop&quot;);for(var r=t.shape,o=r[0],a=r[1],i=r[2],s=r[3],u=e.shape,c=u[1],l=u[2],p=new Float32Array(o*a*i*s),d=e.dataSync(),h=[n&amp;&amp;c&gt;1?a-1:a,n&amp;&amp;l&gt;1?i-1:i],f=[n&amp;&amp;c&gt;1?c-1:c,n&amp;&amp;l&gt;1?l-1:l],m=h[0]/f[0],g=h[1]/f[1],v=1/m,y=1/g,x=2*Math.ceil(v)+2,E=2*Math.ceil(y)+2,T=0;T&lt;o;T++)for(var b=T*t.strides[0],w=0;w&lt;a;w++)for(var S=b+w*t.strides[1],C=Math.floor(w*v),A=Math.floor(C-x/2),N=0;N&lt;i;N++)for(var _=S+N*t.strides[2],R=Math.floor(N*y),I=Math.floor(R-E/2),k=0;k&lt;s;k++){for(var D=0,O=0;O&lt;x;O++){var P=O+A;if(!(P&lt;0||P&gt;=c)){var M=b+P*e.strides[1],F=P*m;if(w===Math.min(a-1,n?Math.round(F):Math.floor(F)))for(var L=0;L&lt;E;L++){var B=L+I;if(!(B&lt;0||B&gt;=l)){var V=M+B*e.strides[2],U=B*g;N===Math.min(i-1,n?Math.round(U):Math.floor(U))&amp;&amp;(D+=d[V+k]);}}}}p[_+k]=D;}return tensor4d(p,t.shape,t.dtype)},e.prototype.batchNormalization=function(e,t,n,r,o,a){this.assertNotComplex([e,t,n,o,a],&quot;batchNorm&quot;);for(var i=e.dataSync(),s=t.dataSync(),u=n.dataSync(),c=o?o.dataSync():new Float32Array([1]),l=a?a.dataSync():new Float32Array([0]),p=new Float32Array(i.length),d=l.length,h=c.length,f=u.length,m=s.length,g=0,v=0,y=0,x=0,E=0;E&lt;i.length;++E)p[E]=l[g++]+(i[E]-s[v++])*c[y++]/Math.sqrt(u[x++]+r),g&gt;=d&amp;&amp;(g=0),v&gt;=m&amp;&amp;(v=0),y&gt;=h&amp;&amp;(y=0),x&gt;=f&amp;&amp;(x=0);return tensor4d(p,e.shape)},e.prototype.localResponseNormalization4D=function(e,t,n,r,o){this.assertNotComplex(e,&quot;localResponseNormalization4D&quot;);var a=e.shape[3],i=a-1,s=e.dataSync(),u=e.size,c=new Float32Array(u);function l(e){for(var n=e%a,r=e-n+Math.max(0,n-t),o=e-n+Math.min(n+t,i),u=0;r&lt;=o;r++){var c=s[r];u+=c*c;}return u}for(var p=0;p&lt;u;p++){var d=l(p),h=s[p]*Math.pow(n+r*d,-o);c[p]=h;}return tensor4d(c,e.shape)},e.prototype.LRNGrad=function(e,t,n,r,o,a,i){this.assertNotComplex(e,&quot;LRNGrad&quot;);for(var s=e.shape[3],u=e.dataSync(),c=t.dataSync(),l=n.dataSync(),p=new Float32Array(e.size),d=e.size,h=0;h&lt;d;h++){for(var f=h%s,m=h-f+Math.max(0,f-r),g=h-f+Math.min(s,f+r+1),v=0,y=m;y&lt;g;y++)v+=Math.pow(c[y],2);v=a*v+o;for(y=m;y&lt;g;y++){var x=-2*a*i*c[y]*l[h]/v;h===y&amp;&amp;(x+=Math.pow(v,-i)),x*=u[h],p[y]+=x;}}return tensor4d(p,e.shape)},e.prototype.multinomial=function(e,t,n,r){this.assertNotComplex(e,&quot;multinomial&quot;);for(var o=t?e:softmax(e),a=o.shape[0],i=o.shape[1],s=zeros([a,n],&quot;int32&quot;),u=s.dataSync(),c=o.dataSync(),l=0;l&lt;a;++l){var p=l*i,d=new Float32Array(i-1);d[0]=c[p];for(var h=1;h&lt;d.length;++h)d[h]=d[h-1]+c[p+h];for(var f=seedrandom_1(r.toString()),m=l*n,g=0;g&lt;n;++g){var v=f();u[m+g]=d.length;for(var y=0;y&lt;d.length;y++)if(v&lt;d[y]){u[m+g]=y;break}}}return s},e.prototype.oneHot=function(e,t,n,r){this.assertNotComplex(e,&quot;oneHot&quot;);var o=new Float32Array(e.size*t);o.fill(r);for(var a=e.dataSync(),i=0;i&lt;e.size;++i)a[i]&gt;=0&amp;&amp;a[i]&lt;t&amp;&amp;(o[i*t+a[i]]=n);return tensor2d(o,[e.size,t],&quot;int32&quot;)},e.prototype.nonMaxSuppression=function(e,t,n,r,o){return this.assertNotComplex(e,&quot;nonMaxSuppression&quot;),nonMaxSuppressionImpl(e.dataSync(),t.dataSync(),n,r,o)},e.prototype.fft=function(e){return this.fftBatch(e,!1)},e.prototype.ifft=function(e){return this.fftBatch(e,!0)},e.prototype.fftBatch=function(e,t){for(var n=e.shape[0],r=e.shape[1],o=buffer(e.shape,&quot;float32&quot;),a=buffer(e.shape,&quot;float32&quot;),i=real(e).as2D(n,r),s=imag(e).as2D(n,r),u=0;u&lt;n;u++)for(var c=i.slice([u,0],[1,r]),l=s.slice([u,0],[1,r]),p=complex(c,l),d=this.fftImpl(p,t).dataSync(),h=0;h&lt;r;h++){var f=getComplexWithIndex(d,h);o.values[u*r+h]=f.real,a.values[u*r+h]=f.imag;}return complex(o.toTensor(),a.toTensor()).as2D(n,r)},e.prototype.fftImpl=function(e,t){var n=e.as1D(),r=n.size;if(this.isExponentOf2(r)){var o=this.fftRadix2(n,r,t).as2D(e.shape[0],e.shape[1]);return t&amp;&amp;(o=complex(real(o).div(scalar(r)),imag(o).div(scalar(r)))),o}var a=e.dataSync(),i=splitRealAndImagArrays(this.fourierTransformByMatmul(a,r,t));return complex(i.real,i.imag).as2D(e.shape[0],e.shape[1])},e.prototype.isExponentOf2=function(e){return 0==(e&amp;e-1)},e.prototype.fftRadix2=function(e,t,n){if(1===t)return e;var r=e.dataSync(),o=t/2,a=complexWithEvenIndex(r),i=complex(a.real,a.imag).as1D(),s=complexWithOddIndex(r),u=complex(s.real,s.imag).as1D();i=this.fftRadix2(i,o,n),u=this.fftRadix2(u,o,n);var c=exponents(t,n),l=complex(c.real,c.imag).mul(u),p=i.add(l),d=i.sub(l),h=real(p).concat(real(d)),f=imag(p).concat(imag(d));return complex(h,f).as1D()},e.prototype.fourierTransformByMatmul=function(e,t,n){for(var r=new Float32Array(2*t),o=0;o&lt;t;o++){for(var a=0,i=0,s=0;s&lt;t;s++){var u=exponent(o*s,t,n),c=getComplexWithIndex(e,s);a+=c.real*u.real-c.imag*u.imag,i+=c.real*u.imag+c.imag*u.real;}n&amp;&amp;(a/=t,i/=t),assignToTypedArray(r,a,i,o);}return r},e.prototype.depthToSpace=function(e,t,n){assert(&quot;NHWC&quot;===n,function(){return &quot;Only NHWC dataFormat supported on CPU for depthToSpace. Got &quot;+n}),assert(t&gt;1,function(){return &quot;blockSize should be &gt; 1 for depthToSpace, but was: &quot;+t});for(var r=e.shape[0],o=e.shape[1],a=e.shape[2],i=e.shape[3],s=o*t,u=a*t,c=i/(t*t),l=e.dataSync(),p=new Float32Array(r*s*u*c),d=0,h=0;h&lt;r;++h)for(var f=0;f&lt;s;++f)for(var m=Math.floor(f/t),g=f%t,v=0;v&lt;u;++v)for(var y=Math.floor(v/t),x=(g*t+v%t)*c,E=0;E&lt;c;++E){var T=E+x+i*(y+a*(m+o*h));p[d++]=l[T];}return tensor4d(p,[r,s,u,c])},e.prototype.broadcastedBinaryOp=function(e,t,n,r){var o=assertAndGetBroadcastShape(e.shape,t.shape),a=buffer(o,n),i=e.dataSync(),s=t.dataSync(),u=getBroadcastDims(e.shape,o),c=getBroadcastDims(t.shape,o),l=a.values;if(u.length+c.length===0)for(var p=0;p&lt;l.length;++p)l[p]=r(i[p%i.length],s[p%s.length]);else{var d=e.bufferSync(),h=t.bufferSync(),f=function(n){var o=a.indexToLoc(n),p=o.slice(-e.rank);u.forEach(function(e){return p[e]=0});var f=d.locToIndex(p),m=o.slice(-t.rank);c.forEach(function(e){return m[e]=0});var g=h.locToIndex(m);l[n]=r(i[f],s[g]);};for(p=0;p&lt;l.length;++p)f(p);}return a.toTensor()},e.prototype.broadcastedBinaryComplexOp=function(e,t,n){var r=assertAndGetBroadcastShape(e.shape,t.shape),o=buffer(r,&quot;float32&quot;),a=buffer(r,&quot;float32&quot;),i=e.dataSync(),s=t.dataSync(),u=getBroadcastDims(e.shape,r),c=getBroadcastDims(t.shape,r),l=o.values,p=a.values;if(u.length+c.length===0)for(var d=0;d&lt;l.length;d++){var h=d%i.length,f=d%s.length,m=n(i[2*h],i[2*h+1],s[2*f],s[2*f+1]);l[d]=m.real,p[d]=m.imag;}else{var g=this.data.get(e.dataId).complexTensors.real.bufferSync(),v=this.data.get(t.dataId).complexTensors.real.bufferSync(),y=function(r){var a=o.indexToLoc(r),d=a.slice(-e.rank);u.forEach(function(e){return d[e]=0});var h=g.locToIndex(d),f=a.slice(-t.rank);c.forEach(function(e){return f[e]=0});var m=v.locToIndex(f),y=n(i[2*h],i[2*h+1],s[2*m],s[2*m+1]);l[r]=y.real,p[r]=y.imag;};for(d=0;d&lt;l.length;d++)y(d);}return this.complex(o.toTensor(),a.toTensor())},e.prototype.split=function(e,t,n){return split(e,t,n)},e.prototype.dispose=function(){},e.prototype.floatPrecision=function(){return 32},e.prototype.cropAndResize=function(e,t,n,r,o,a){for(var i=e.shape,s=i[0],u=i[1],c=i[2],l=i[3],p=t.shape[0],d=r[0],h=r[1],f=buffer([p,d,h,l],e.dtype),m=t.dataSync(),g=n.dataSync(),v=e.dataSync(),y=e.strides,x=f.strides,E=0;E&lt;p;E++){var T=4*E,b=m[T],w=m[T+1],S=m[T+2],C=m[T+3],A=g[E];if(!(A&gt;=s))for(var N=d&gt;1?(S-b)*(u-1)/(d-1):0,_=h&gt;1?(C-w)*(c-1)/(h-1):0,R=0;R&lt;d;R++){var I=d&gt;1?b*(u-1)+R*N:.5*(b+S)*(u-1);if(I&lt;0||I&gt;u-1)for(var k=0;k&lt;h;k++)for(var D=0;D&lt;l;D++){var O=D+k*x[2]+R*x[1]+E*x[0];f.values[O]=a;}else if(&quot;bilinear&quot;===o){var P=Math.floor(I),M=Math.ceil(I),F=I-P;for(k=0;k&lt;h;k++){if((q=h&gt;1?w*(c-1)+k*_:.5*(w+C)*(c-1))&lt;0||q&gt;c-1)for(D=0;D&lt;l;D++){O=D+k*x[2]+R*x[1]+E*x[0];f.values[O]=a;}else{var L=Math.floor(q),B=Math.ceil(q),V=q-L;for(D=0;D&lt;l;D++){var U=v[O=D+L*y[2]+P*y[1]+A*y[0]],z=v[O=D+B*y[2]+P*y[1]+A*y[0]],W=v[O=D+L*y[2]+M*y[1]+A*y[0]],G=U+(z-U)*V,H=W+(v[O=D+B*y[2]+M*y[1]+A*y[0]]-W)*V;O=D+k*x[2]+R*x[1]+E*x[0],f.values[O]=G+(H-G)*F;}}}}else for(k=0;k&lt;h;++k){var q;if((q=h&gt;1?w*(c-1)+k*_:.5*(w+C)*(c-1))&lt;0||q&gt;c-1)for(D=0;D&lt;l;D++){O=D+k*x[2]+R*x[1]+E*x[0];f.values[O]=a;}else{var $=Math.round(q),K=Math.round(I);for(D=0;D&lt;l;D++){var X=D+$*y[2]+K*y[1]+A*y[0],j=D+k*x[2]+R*x[1]+E*x[0];f.values[j]=v[X];}}}}}return f.toTensor()},e.prototype.sparseToDense=function(e,t,n,r){var o=calculateShapes(t,e,n),a=o.sliceRank,i=o.numUpdates,s=o.sliceSize,u=o.strides,c=o.outputSize;return this.scatter(e,t,n,c,s,i,a,u,r,!1)},e.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],o=prepareAndValidate(e,t),a=o[0],i=o[1],s=o[2],u=o[3];if(0===i)return tensor([],a,e.dtype);for(var c=new TensorBuffer([i,s],e.dtype),l=t.dataSync(),p=e.dataSync(),d=0;d&lt;i;d++){for(var h=[],f=0,m=0;m&lt;r;m++){var g=l[d*r+m];f+=g*u[m],h.push(g);}if(f&lt;0||f&gt;=e.size/s)throw new Error(&quot;Invalid indices: &quot;+h+&quot; does not index into &quot;+e.shape);for(var v=0;v&lt;s;v++)c.values[d*s+v]=p[f*s+v];}return c.toTensor().reshape(a)},e.prototype.scatterND=function(e,t,n){var r=calculateShapes(t,e,n),o=r.sliceRank,a=r.numUpdates,i=r.sliceSize,s=r.strides,u=r.outputSize,c=scalar(0);return this.scatter(e,t,n,u,i,a,o,s,c,!0)},e.prototype.fill=function(e,t,n){var r=getArrayFromDType(n=n||inferDtype(t),sizeFromShape(e));return r.fill(t),Tensor.make(e,{values:r},n)},e.prototype.onesLike=function(e){if(&quot;string&quot;===e.dtype)throw new Error(&quot;onesLike is not supported for string tensors&quot;);return this.fill(e.shape,1,e.dtype)},e.prototype.zerosLike=function(e){var t=getArrayFromDType(e.dtype,sizeFromShape(e.shape));return Tensor.make(e.shape,{values:t},e.dtype)},e.prototype.scatter=function(e,t,n,r,o,a,i,s,u,c){var l=[r/o,o],p=e.dataSync(),d=t.dataSync();if(0===r)return tensor([],n,t.dtype);var h=new TensorBuffer(l,t.dtype);h.values.fill(u.dataSync()[0]);for(var f=0;f&lt;a;f++){for(var m=[],g=0,v=0;v&lt;i;v++){var y=p[f*i+v];m.push(y),g+=y*s[v];}if(g&lt;0||g&gt;=r/o)throw new Error(&quot;Invalid indices: &quot;+m+&quot; does not index into &quot;+n);for(var x=0;x&lt;o;x++)c?h.values[g*o+x]+=d[f*o+x]:h.values[g*o+x]=0===t.rank?d[0]:d[f*o+x];}return h.toTensor().reshape(n)},e}();ENV.registerBackend(&quot;cpu&quot;,function(){return new MathBackendCPU},1);var delayCallback=&quot;undefined&quot;!=typeof requestAnimationFrame?requestAnimationFrame:&quot;undefined&quot;!=typeof setImmediate?setImmediate:function(e){return e()};function nextFrame(){return new Promise(function(e){return delayCallback(function(){return e()})})}var DTYPE_VALUE_SIZE_MAP={float32:4,int32:4,uint16:2,uint8:1,bool:1};function encodeWeights(e){return __awaiter$1(this,void 0,void 0,function(){var t,n,r,o;return __generator$1(this,function(a){switch(a.label){case 0:for(r in t=[],n=[],e){if(&quot;float32&quot;!==(o=e[r]).dtype&amp;&amp;&quot;int32&quot;!==o.dtype&amp;&amp;&quot;bool&quot;!==o.dtype)throw new Error(&quot;Unsupported dtype in weight &#39;&quot;+r+&quot;&#39;: &quot;+o.dtype);t.push({name:r,shape:o.shape,dtype:o.dtype}),n.push(o.data());}return [4,Promise.all(n)];case 1:return [2,{data:concatenateTypedArrays(a.sent()),specs:t}]}})})}function decodeWeights(e,t){for(var n={},r=0,o=function(t){var o=t.name,a=t.dtype,i=t.shape,s=sizeFromShape(i),u=void 0;if(&quot;quantization&quot;in t){var c=t.quantization;if(&quot;uint8&quot;!==c.dtype&amp;&amp;&quot;uint16&quot;!==c.dtype)throw new Error(&quot;Weight &quot;+t.name+&quot; has unknown quantization dtype &quot;+c.dtype+&quot;. Supported quantization dtypes are: &#39;uint8&#39; and &#39;uint16&#39;.&quot;);var l=DTYPE_VALUE_SIZE_MAP[c.dtype],p=e.slice(r,r+s*l),d=&quot;uint8&quot;===c.dtype?new Uint8Array(p):new Uint16Array(p);if(&quot;float32&quot;===a)u=Float32Array.from(d,function(e){return e*c.scale+c.min});else{if(&quot;int32&quot;!==a)throw new Error(&quot;Unsupported dtype in weight &#39;&quot;+o+&quot;&#39;: &quot;+a);u=Int32Array.from(d,function(e){return Math.round(e*c.scale+c.min)});}r+=s*l;}else{var h=DTYPE_VALUE_SIZE_MAP[a];p=e.slice(r,r+s*h);if(&quot;float32&quot;===a)u=new Float32Array(p);else if(&quot;int32&quot;===a)u=new Int32Array(p);else{if(&quot;bool&quot;!==a)throw new Error(&quot;Unsupported dtype in weight &#39;&quot;+o+&quot;&#39;: &quot;+a);u=new Uint8Array(p);}r+=s*h;}var f=void 0;if(&quot;float32&quot;===a)f=tensor(u,i,&quot;float32&quot;);else if(&quot;int32&quot;===a)f=tensor(u,i,&quot;int32&quot;);else{if(&quot;bool&quot;!==a)throw new Error(&quot;Unsupported dtype in weight &#39;&quot;+o+&quot;&#39;: &quot;+a);f=tensor(u,i,&quot;bool&quot;);}n[o]=f;},a=0,i=t;a&lt;i.length;a++){o(i[a]);}return n}function concatenateTypedArrays(e){if(null===e)throw new Error(&quot;Invalid input value: &quot;+JSON.stringify(e));var t=0,n=[];e.forEach(function(e){if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(&quot;Unsupported TypedArray subtype: &quot;+e.constructor.name)});var r=new Uint8Array(t),o=0;return n.forEach(function(e){r.set(new Uint8Array(e.buffer),o),o+=e.byteLength;}),r.buffer}var useNodeBuffer=&quot;undefined&quot;!=typeof Buffer&amp;&amp;(&quot;undefined&quot;==typeof Blob||&quot;undefined&quot;==typeof atob||&quot;undefined&quot;==typeof btoa);function stringByteLength(e){return useNodeBuffer?Buffer.byteLength(e):new Blob([e]).size}function arrayBufferToBase64String(e){return useNodeBuffer?Buffer.from(e).toString(&quot;base64&quot;):btoa(String.fromCharCode.apply(null,new Uint8Array(e)))}function base64StringToArrayBuffer(e){if(useNodeBuffer){var t=Buffer.from(e,&quot;base64&quot;);return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}for(var n=atob(e),r=new Uint8Array(n.length),o=0;o&lt;n.length;++o)r.set([n.charCodeAt(o)],o);return r.buffer}function concatenateArrayBuffers(e){var t=0;e.forEach(function(e){t+=e.byteLength;});var n=new Uint8Array(t),r=0;return e.forEach(function(e){n.set(new Uint8Array(e),r),r+=e.byteLength;}),n.buffer}function basename(e){for(e=e.trim();e.endsWith(&quot;/&quot;);)e=e.slice(0,e.length-1);var t=e.split(&quot;/&quot;);return t[t.length-1]}function getModelArtifactsInfoForJSON(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error(&quot;Expected JSON model topology, received ArrayBuffer.&quot;);return {dateSaved:new Date,modelTopologyType:&quot;JSON&quot;,modelTopologyBytes:null==e.modelTopology?0:stringByteLength(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:stringByteLength(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}var IORouterRegistry=function(){function e(){this.saveRouters=[],this.loadRouters=[];}return e.getInstance=function(){return null==e.instance&amp;&amp;(e.instance=new e),e.instance},e.registerSaveRouter=function(t){e.getInstance().saveRouters.push(t);},e.registerLoadRouter=function(t){e.getInstance().loadRouters.push(t);},e.getSaveHandlers=function(t){return e.getHandlers(t,&quot;save&quot;)},e.getLoadHandlers=function(t,n){return e.getHandlers(t,&quot;load&quot;,n)},e.getHandlers=function(t,n,r){var o=[];return (&quot;load&quot;===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach(function(e){var n=e(t,r);null!==n&amp;&amp;o.push(n);}),o},e}(),registerSaveRouter=function(e){return IORouterRegistry.registerSaveRouter(e)},registerLoadRouter=function(e){return IORouterRegistry.registerLoadRouter(e)},getSaveHandlers=function(e){return IORouterRegistry.getSaveHandlers(e)},getLoadHandlers=function(e,t){return IORouterRegistry.getLoadHandlers(e)},URL_SCHEME_SUFFIX=&quot;://&quot;,ModelStoreManagerRegistry=function(){function e(){this.managers={};}return e.getInstance=function(){return null==e.instance&amp;&amp;(e.instance=new e),e.instance},e.registerManager=function(t,n){assert(null!=t,function(){return &quot;scheme must not be undefined or null.&quot;}),t.endsWith(URL_SCHEME_SUFFIX)&amp;&amp;(t=t.slice(0,t.indexOf(URL_SCHEME_SUFFIX))),assert(t.length&gt;0,function(){return &quot;scheme must not be an empty string.&quot;});var r=e.getInstance();assert(null==r.managers[t],function(){return &quot;A model store manager is already registered for scheme &#39;&quot;+t+&quot;&#39;.&quot;}),r.managers[t]=n;},e.getManager=function(e){var t=this.getInstance().managers[e];if(null==t)throw new Error(&quot;Cannot find model manager for scheme &#39;&quot;+e+&quot;&#39;&quot;);return t},e.getSchemes=function(){return Object.keys(this.getInstance().managers)},e}();function parseURL(e){if(-1===e.indexOf(URL_SCHEME_SUFFIX))throw new Error(&quot;The url string provided does not contain a scheme. Supported schemes are: &quot;+ModelStoreManagerRegistry.getSchemes().join(&quot;,&quot;));return {scheme:e.split(URL_SCHEME_SUFFIX)[0],path:e.split(URL_SCHEME_SUFFIX)[1]}}function cloneModelInternal(e,t,n){return void 0===n&amp;&amp;(n=!1),__awaiter$1(this,void 0,void 0,function(){var r,o,a,i,s,u,c,l,p;return __generator$1(this,function(d){switch(d.label){case 0:return assert(e!==t,function(){return &quot;Old path and new path are the same: &#39;&quot;+e+&quot;&#39;&quot;}),assert((r=IORouterRegistry.getLoadHandlers(e)).length&gt;0,function(){return &quot;Copying failed because no load handler is found for source URL &quot;+e+&quot;.&quot;}),assert(r.length&lt;2,function(){return &quot;Copying failed because more than one (&quot;+r.length+&quot;) load handlers for source URL &quot;+e+&quot;.&quot;}),o=r[0],assert((a=IORouterRegistry.getSaveHandlers(t)).length&gt;0,function(){return &quot;Copying failed because no save handler is found for destination URL &quot;+t+&quot;.&quot;}),assert(a.length&lt;2,function(){return &quot;Copying failed because more than one (&quot;+r.length+&quot;) save handlers for destination URL &quot;+t+&quot;.&quot;}),i=a[0],s=parseURL(e).scheme,u=parseURL(e).path,c=s===parseURL(e).scheme,[4,o.load()];case 1:return l=d.sent(),n&amp;&amp;c?[4,ModelStoreManagerRegistry.getManager(s).removeModel(u)]:[3,3];case 2:d.sent(),d.label=3;case 3:return [4,i.save(l)];case 4:return p=d.sent(),!n||c?[3,6]:[4,ModelStoreManagerRegistry.getManager(s).removeModel(u)];case 5:d.sent(),d.label=6;case 6:return [2,p.modelArtifactsInfo]}})})}function listModels(){return __awaiter$1(this,void 0,void 0,function(){var e,t,n,r,o,a,i;return __generator$1(this,function(s){switch(s.label){case 0:e=ModelStoreManagerRegistry.getSchemes(),t={},n=0,r=e,s.label=1;case 1:return n&lt;r.length?(o=r[n],[4,ModelStoreManagerRegistry.getManager(o).listModels()]):[3,4];case 2:for(i in a=s.sent())t[o+URL_SCHEME_SUFFIX+i]=a[i];s.label=3;case 3:return n++,[3,1];case 4:return [2,t]}})})}function removeModel(e){return __awaiter$1(this,void 0,void 0,function(){var t;return __generator$1(this,function(n){switch(n.label){case 0:return t=parseURL(e),[4,ModelStoreManagerRegistry.getManager(t.scheme).removeModel(t.path)];case 1:return [2,n.sent()]}})})}function copyModel(e,t){return __awaiter$1(this,void 0,void 0,function(){return __generator$1(this,function(n){switch(n.label){case 0:return [4,cloneModelInternal(e,t,!1)];case 1:return [2,n.sent()]}})})}function moveModel(e,t){return __awaiter$1(this,void 0,void 0,function(){return __generator$1(this,function(n){switch(n.label){case 0:return [4,cloneModelInternal(e,t,!0)];case 1:return [2,n.sent()]}})})}var DATABASE_NAME=&quot;tensorflowjs&quot;,DATABASE_VERSION=1,MODEL_STORE_NAME=&quot;models_store&quot;,INFO_STORE_NAME=&quot;model_info_store&quot;;function getIndexedDBFactory(){if(!ENV.get(&quot;IS_BROWSER&quot;))throw new Error(&quot;Failed to obtain IndexedDB factory because the current environmentis not a web browser.&quot;);var e=window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error(&quot;The current browser does not appear to support IndexedDB.&quot;);return t}function setUpDatabase(e){var t=e.result;t.createObjectStore(MODEL_STORE_NAME,{keyPath:&quot;modelPath&quot;}),t.createObjectStore(INFO_STORE_NAME,{keyPath:&quot;modelPath&quot;});}var BrowserIndexedDB=function(){function e(e){if(this.indexedDB=getIndexedDBFactory(),null==e||!e)throw new Error(&quot;For IndexedDB, modelPath must not be null, undefined or empty.&quot;);this.modelPath=e;}return e.prototype.save=function(e){return __awaiter$1(this,void 0,void 0,function(){return __generator$1(this,function(t){if(e.modelTopology instanceof ArrayBuffer)throw new Error(&quot;BrowserLocalStorage.save() does not support saving model topology in binary formats yet.&quot;);return [2,this.databaseAction(this.modelPath,e)]})})},e.prototype.load=function(){return __awaiter$1(this,void 0,void 0,function(){return __generator$1(this,function(e){return [2,this.databaseAction(this.modelPath)]})})},e.prototype.databaseAction=function(e,t){var n=this;return new Promise(function(e,r){var o=n.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);o.onupgradeneeded=function(){return setUpDatabase(o)},o.onsuccess=function(){var a=o.result;if(null==t){var i=a.transaction(MODEL_STORE_NAME,&quot;readonly&quot;),s=i.objectStore(MODEL_STORE_NAME).get(n.modelPath);s.onsuccess=function(){if(null==s.result)return a.close(),r(new Error(&quot;Cannot find model with path &#39;&quot;+n.modelPath+&quot;&#39; in IndexedDB.&quot;));e(s.result.modelArtifacts);},s.onerror=function(e){return a.close(),r(s.error)},i.oncomplete=function(){return a.close()};}else{var u,c=getModelArtifactsInfoForJSON(t),l=a.transaction(INFO_STORE_NAME,&quot;readwrite&quot;),p=l.objectStore(INFO_STORE_NAME),d=p.put({modelPath:n.modelPath,modelArtifactsInfo:c});d.onsuccess=function(){var o=(u=a.transaction(MODEL_STORE_NAME,&quot;readwrite&quot;)).objectStore(MODEL_STORE_NAME).put({modelPath:n.modelPath,modelArtifacts:t,modelArtifactsInfo:c});o.onsuccess=function(){return e({modelArtifactsInfo:c})},o.onerror=function(e){var t=(p=l.objectStore(INFO_STORE_NAME)).delete(n.modelPath);t.onsuccess=function(){return a.close(),r(o.error)},t.onerror=function(e){return a.close(),r(o.error)};};},d.onerror=function(e){return a.close(),r(d.error)},l.oncomplete=function(){null==u?a.close():u.oncomplete=function(){return a.close()};};}},o.onerror=function(e){return r(o.error)};})},e.URL_SCHEME=&quot;indexeddb://&quot;,e}(),indexedDBRouter=function(e){return ENV.get(&quot;IS_BROWSER&quot;)&amp;&amp;!Array.isArray(e)&amp;&amp;e.startsWith(BrowserIndexedDB.URL_SCHEME)?browserIndexedDB(e.slice(BrowserIndexedDB.URL_SCHEME.length)):null};function browserIndexedDB(e){return new BrowserIndexedDB(e)}function maybeStripScheme(e){return e.startsWith(BrowserIndexedDB.URL_SCHEME)?e.slice(BrowserIndexedDB.URL_SCHEME.length):e}IORouterRegistry.registerSaveRouter(indexedDBRouter),IORouterRegistry.registerLoadRouter(indexedDBRouter);var BrowserIndexedDBManager=function(){function e(){this.indexedDB=getIndexedDBFactory();}return e.prototype.listModels=function(){return __awaiter$1(this,void 0,void 0,function(){var e=this;return __generator$1(this,function(t){return [2,new Promise(function(t,n){var r=e.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);r.onupgradeneeded=function(){return setUpDatabase(r)},r.onsuccess=function(){var e=r.result,o=e.transaction(INFO_STORE_NAME,&quot;readonly&quot;),a=o.objectStore(INFO_STORE_NAME).getAll();a.onsuccess=function(){for(var e={},n=0,r=a.result;n&lt;r.length;n++){var o=r[n];e[o.modelPath]=o.modelArtifactsInfo;}t(e);},a.onerror=function(t){return e.close(),n(a.error)},o.oncomplete=function(){return e.close()};},r.onerror=function(e){return n(r.error)};})]})})},e.prototype.removeModel=function(e){return __awaiter$1(this,void 0,void 0,function(){var t=this;return __generator$1(this,function(n){return e=maybeStripScheme(e),[2,new Promise(function(n,r){var o=t.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);o.onupgradeneeded=function(){return setUpDatabase(o)},o.onsuccess=function(){var t,a=o.result,i=a.transaction(INFO_STORE_NAME,&quot;readwrite&quot;),s=i.objectStore(INFO_STORE_NAME),u=s.get(e);u.onsuccess=function(){if(null==u.result)return a.close(),r(new Error(&quot;Cannot find model with path &#39;&quot;+e+&quot;&#39; in IndexedDB.&quot;));var o=s.delete(e),i=function(){var o=(t=a.transaction(MODEL_STORE_NAME,&quot;readwrite&quot;)).objectStore(MODEL_STORE_NAME).delete(e);o.onsuccess=function(){return n(u.result.modelArtifactsInfo)},o.onerror=function(e){return r(u.error)};};o.onsuccess=i,o.onerror=function(e){return i(),a.close(),r(u.error)};},u.onerror=function(e){return a.close(),r(u.error)},i.oncomplete=function(){null==t?a.close():t.oncomplete=function(){return a.close()};};},o.onerror=function(e){return r(o.error)};})]})})},e}();if(ENV.get(&quot;IS_BROWSER&quot;))try{ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME,new BrowserIndexedDBManager);}catch(e){}var PATH_SEPARATOR=&quot;/&quot;,PATH_PREFIX=&quot;tensorflowjs_models&quot;,INFO_SUFFIX=&quot;info&quot;,MODEL_TOPOLOGY_SUFFIX=&quot;model_topology&quot;,WEIGHT_SPECS_SUFFIX=&quot;weight_specs&quot;,WEIGHT_DATA_SUFFIX=&quot;weight_data&quot;,MODEL_METADATA_SUFFIX=&quot;model_metadata&quot;;function getModelKeys(e){return {info:[PATH_PREFIX,e,INFO_SUFFIX].join(PATH_SEPARATOR),topology:[PATH_PREFIX,e,MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),weightSpecs:[PATH_PREFIX,e,WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),weightData:[PATH_PREFIX,e,WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),modelMetadata:[PATH_PREFIX,e,MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)}}function getModelPathFromKey(e){var t=e.split(PATH_SEPARATOR);if(t.length&lt;3)throw new Error(&quot;Invalid key format: &quot;+e);return t.slice(1,t.length-1).join(PATH_SEPARATOR)}function maybeStripScheme$1(e){return e.startsWith(BrowserLocalStorage.URL_SCHEME)?e.slice(BrowserLocalStorage.URL_SCHEME.length):e}var BrowserLocalStorage=function(){function e(e){if(!ENV.get(&quot;IS_BROWSER&quot;)||void 0===window.localStorage)throw new Error(&quot;The current environment does not support local storage.&quot;);if(this.LS=window.localStorage,null==e||!e)throw new Error(&quot;For local storage, modelPath must not be null, undefined or empty.&quot;);this.modelPath=e,this.keys=getModelKeys(this.modelPath);}return e.prototype.save=function(e){return __awaiter$1(this,void 0,void 0,function(){var t,n,r;return __generator$1(this,function(o){if(e.modelTopology instanceof ArrayBuffer)throw new Error(&quot;BrowserLocalStorage.save() does not support saving model topology in binary formats yet.&quot;);t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=getModelArtifactsInfoForJSON(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,arrayBufferToBase64String(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy})),[2,{modelArtifactsInfo:r}]}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(&quot;Failed to save model &#39;&quot;+this.modelPath+&quot;&#39; to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=&quot;+r.modelTopologyBytes+&quot;, weightSpecsBytes=&quot;+r.weightSpecsBytes+&quot;, weightDataBytes=&quot;+r.weightDataBytes+&quot;.&quot;)}return [2]})})},e.prototype.load=function(){return __awaiter$1(this,void 0,void 0,function(){var e,t,n,r,o,a,i;return __generator$1(this,function(s){if(null==(e=JSON.parse(this.LS.getItem(this.keys.info))))throw new Error(&quot;In local storage, there is no model with name &#39;&quot;+this.modelPath+&quot;&#39;&quot;);if(&quot;JSON&quot;!==e.modelTopologyType)throw new Error(&quot;BrowserLocalStorage does not support loading non-JSON model topology yet.&quot;);if(t={},null==(n=JSON.parse(this.LS.getItem(this.keys.topology))))throw new Error(&quot;In local storage, the topology of model &#39;&quot;+this.modelPath+&quot;&#39; is missing.&quot;);if(t.modelTopology=n,null==(r=JSON.parse(this.LS.getItem(this.keys.weightSpecs))))throw new Error(&quot;In local storage, the weight specs of model &#39;&quot;+this.modelPath+&quot;&#39; are missing.&quot;);if(t.weightSpecs=r,null!=(o=this.LS.getItem(this.keys.modelMetadata))&amp;&amp;(a=JSON.parse(o),t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy),null==(i=this.LS.getItem(this.keys.weightData)))throw new Error(&quot;In local storage, the binary weight values of model &#39;&quot;+this.modelPath+&quot;&#39; are missing.&quot;);return t.weightData=base64StringToArrayBuffer(i),[2,t]})})},e.URL_SCHEME=&quot;localstorage://&quot;,e}(),localStorageRouter=function(e){return ENV.get(&quot;IS_BROWSER&quot;)&amp;&amp;!Array.isArray(e)&amp;&amp;e.startsWith(BrowserLocalStorage.URL_SCHEME)?browserLocalStorage(e.slice(BrowserLocalStorage.URL_SCHEME.length)):null};function browserLocalStorage(e){return new BrowserLocalStorage(e)}IORouterRegistry.registerSaveRouter(localStorageRouter),IORouterRegistry.registerLoadRouter(localStorageRouter);var BrowserLocalStorageManager=function(){function e(){assert(ENV.get(&quot;IS_BROWSER&quot;),function(){return &quot;Current environment is not a web browser&quot;}),assert(void 0!==window.localStorage,function(){return &quot;Current browser does not appear to support localStorage&quot;}),this.LS=window.localStorage;}return e.prototype.listModels=function(){return __awaiter$1(this,void 0,void 0,function(){var e,t,n,r,o,a;return __generator$1(this,function(i){for(e={},t=PATH_PREFIX+PATH_SEPARATOR,n=PATH_SEPARATOR+INFO_SUFFIX,r=0;r&lt;this.LS.length;++r)(o=this.LS.key(r)).startsWith(t)&amp;&amp;o.endsWith(n)&amp;&amp;(a=getModelPathFromKey(o),e[a]=JSON.parse(this.LS.getItem(o)));return [2,e]})})},e.prototype.removeModel=function(e){return __awaiter$1(this,void 0,void 0,function(){var t,n;return __generator$1(this,function(r){if(e=maybeStripScheme$1(e),t=getModelKeys(e),null==this.LS.getItem(t.info))throw new Error(&quot;Cannot find model at path &#39;&quot;+e+&quot;&#39;&quot;);return n=JSON.parse(this.LS.getItem(t.info)),this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),[2,n]})})},e}();if(ENV.get(&quot;IS_BROWSER&quot;))try{ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME,new BrowserLocalStorageManager);}catch(e){}var DEFAULT_FILE_NAME_PREFIX=&quot;model&quot;,DEFAULT_JSON_EXTENSION_NAME=&quot;.json&quot;,DEFAULT_WEIGHT_DATA_EXTENSION_NAME=&quot;.weights.bin&quot;,BrowserDownloads=function(){function e(t){if(!ENV.get(&quot;IS_BROWSER&quot;))throw new Error(&quot;browserDownloads() cannot proceed because the current environment is not a browser.&quot;);t.startsWith(e.URL_SCHEME)&amp;&amp;(t=t.slice(e.URL_SCHEME.length)),null!=t&amp;&amp;0!==t.length||(t=DEFAULT_FILE_NAME_PREFIX),this.modelTopologyFileName=t+DEFAULT_JSON_EXTENSION_NAME,this.weightDataFileName=t+DEFAULT_WEIGHT_DATA_EXTENSION_NAME;}return e.prototype.save=function(e){return __awaiter$1(this,void 0,void 0,function(){var t,n,r,o,a,i;return __generator$1(this,function(s){if(t=window.URL.createObjectURL(new Blob([e.weightData],{type:&quot;application/octet-stream&quot;})),e.modelTopology instanceof ArrayBuffer)throw new Error(&quot;BrowserDownloads.save() does not support saving model topology in binary formats yet.&quot;);return n=[{paths:[&quot;./&quot;+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:&quot;application/json&quot;})),(a=null==this.jsonAnchor?document.createElement(&quot;a&quot;):this.jsonAnchor).download=this.modelTopologyFileName,a.href=o,a.click(),null!=e.weightData&amp;&amp;((i=null==this.weightDataAnchor?document.createElement(&quot;a&quot;):this.weightDataAnchor).download=this.weightDataFileName,i.href=t,i.click()),[2,{modelArtifactsInfo:getModelArtifactsInfoForJSON(e)}]})})},e.URL_SCHEME=&quot;downloads://&quot;,e}(),BrowserFiles=function(){function e(e){if(null==e||e.length&lt;1)throw new Error(&quot;When calling browserFiles, at least 1 file is required, but received &quot;+e);this.files=e;}return e.prototype.load=function(){return __awaiter$1(this,void 0,void 0,function(){var e,t,n=this;return __generator$1(this,function(r){return e=this.files[0],t=this.files.slice(1),[2,new Promise(function(r,o){var a=new FileReader;a.onload=function(a){var i=JSON.parse(a.target.result),s=i.modelTopology;if(null!=s){0===t.length&amp;&amp;r({modelTopology:s});var u=i.weightsManifest;if(null!=u){var c;try{c=n.checkManifestAndWeightFiles(u,t);}catch(e){return void o(e)}var l=[],p=[],d=[];u.forEach(function(e){e.paths.forEach(function(e){p.push(e),d.push(null);}),l.push.apply(l,e.weights);}),u.forEach(function(e){e.paths.forEach(function(e){var t=new FileReader;t.onload=function(t){var n=t.target.result,o=p.indexOf(e);d[o]=n,-1===d.indexOf(null)&amp;&amp;r({modelTopology:s,weightSpecs:l,weightData:concatenateArrayBuffers(d)});},t.onerror=function(t){return o(&quot;Failed to weights data from file of path &#39;&quot;+e+&quot;&#39;.&quot;)},t.readAsArrayBuffer(c[e]);});});}else o(new Error(&quot;weightManifest field is missing from file &quot;+e.name));}else o(new Error(&quot;modelTopology field is missing from file &quot;+e.name));},a.onerror=function(t){return o(&quot;Failed to read model topology and weights manifest JSON from file &#39;&quot;+e.name+&quot;&#39;. BrowserFiles supports loading Keras-style tf.Model artifacts only.&quot;)},a.readAsText(e);})]})})},e.prototype.checkManifestAndWeightFiles=function(e,t){for(var n=[],r=t.map(function(e){return basename(e.name)}),o={},a=0,i=e;a&lt;i.length;a++){i[a].paths.forEach(function(e){var a=basename(e);if(-1!==n.indexOf(a))throw new Error(&quot;Duplicate file basename found in weights manifest: &#39;&quot;+a+&quot;&#39;&quot;);if(n.push(a),-1===r.indexOf(a))throw new Error(&quot;Weight file with basename &#39;&quot;+a+&quot;&#39; is not provided.&quot;);o[e]=t[r.indexOf(a)];});}if(n.length!==t.length)throw new Error(&quot;Mismatch in the number of files in weights manifest (&quot;+n.length+&quot;) and the number of weight files provided (&quot;+t.length+&quot;).&quot;);return o},e}(),browserDownloadsRouter=function(e){return ENV.get(&quot;IS_BROWSER&quot;)&amp;&amp;!Array.isArray(e)&amp;&amp;e.startsWith(BrowserDownloads.URL_SCHEME)?browserDownloads(e.slice(BrowserDownloads.URL_SCHEME.length)):null};function browserDownloads(e){return void 0===e&amp;&amp;(e=&quot;model&quot;),new BrowserDownloads(e)}function browserFiles(e){return new BrowserFiles(e)}function monitorPromisesProgress(e,t,n,r){!function(e){assert(null!=e&amp;&amp;Array.isArray(e)&amp;&amp;e.length&gt;0,function(){return &quot;promises must be a none empty array&quot;});}(e),function(e,t){assert(e&gt;=0&amp;&amp;e&lt;=1,function(){return &quot;Progress fraction must be in range [0, 1], but got startFraction &quot;+e}),assert(t&gt;=0&amp;&amp;t&lt;=1,function(){return &quot;Progress fraction must be in range [0, 1], but got endFraction &quot;+t}),assert(t&gt;=e,function(){return &quot;startFraction must be no more than endFraction, but got startFraction &quot;+e+&quot; and endFraction &quot;+t});}(n=null==n?0:n,r=null==r?1:r);var o=0;return Promise.all(e.map(function(a){return a.then(function(a){var i=n+ ++o/e.length*(r-n);return t(i),a}),a}))}function loadWeightsAsArrayBuffer(e,t){return __awaiter$1(this,void 0,void 0,function(){var n,r,o,a,i,s,u,c,l;return __generator$1(this,function(p){switch(p.label){case 0:return null==t&amp;&amp;(t={}),n=null==t.fetchFunc?fetch:t.fetchFunc,r=e.map(function(e){return n(e,t.requestInit)}),o=0,a=.5,null!=t.onProgress?[3,2]:[4,Promise.all(r)];case 1:return i=p.sent(),[3,4];case 2:return [4,monitorPromisesProgress(r,t.onProgress,o,a)];case 3:i=p.sent(),p.label=4;case 4:return s=i.map(function(e){return e.arrayBuffer()}),u=.5,c=1,null!=t.onProgress?[3,6]:[4,Promise.all(s)];case 5:return l=p.sent(),[3,8];case 6:return [4,monitorPromisesProgress(s,t.onProgress,u,c)];case 7:l=p.sent(),p.label=8;case 8:return [2,l]}})})}function loadWeights(e,t,n,r){return void 0===t&amp;&amp;(t=&quot;&quot;),__awaiter$1(this,void 0,void 0,function(){return __generator$1(this,function(o){return [2,weightsLoaderFactory(function(e){return loadWeightsAsArrayBuffer(e,{requestInit:r})})(e,t,n)]})})}function weightsLoaderFactory(e){var t=this;return function(n,r,o){return void 0===r&amp;&amp;(r=&quot;&quot;),__awaiter$1(t,void 0,void 0,function(){var t,a,i,s,u,c,l,p,d,h;return __generator$1(this,function(f){switch(f.label){case 0:if(t=n.map(function(){return !1}),a={},i=null!=o?o.map(function(){return !1}):[],s=[],n.forEach(function(e,n){var r=0;e.weights.forEach(function(e){var u=&quot;quantization&quot;in e?e.quantization.dtype:e.dtype,c=DTYPE_VALUE_SIZE_MAP[u]*sizeFromShape(e.shape),l=function(){t[n]=!0,null==a[n]&amp;&amp;(a[n]=[]),a[n].push({manifestEntry:e,groupOffset:r,sizeBytes:c});};null!=o?o.forEach(function(t,n){t===e.name&amp;&amp;(l(),i[n]=!0);}):l(),s.push(e.name),r+=c;});}),!i.every(function(e){return e}))throw u=o.filter(function(e,t){return !i[t]}),new Error(&quot;Could not find weights in manifest with names: &quot;+u.join(&quot;, &quot;)+&quot;. \nManifest JSON has weights with names: &quot;+s.join(&quot;, &quot;)+&quot;.&quot;);return c=t.reduce(function(e,t,n){return t&amp;&amp;e.push(n),e},[]),l=[],c.forEach(function(e){n[e].paths.forEach(function(e){var t=r+(r.endsWith(&quot;/&quot;)?&quot;&quot;:&quot;/&quot;)+e;l.push(t);});}),[4,e(l)];case 1:return p=f.sent(),d={},h=0,c.forEach(function(e){for(var t=n[e].paths.length,r=0,o=0;o&lt;t;o++)r+=p[h+o].byteLength;for(var i=new ArrayBuffer(r),s=new Uint8Array(i),u=0,c=0;c&lt;t;c++){var l=new Uint8Array(p[h+c]);s.set(l,u),u+=l.byteLength;}a[e].forEach(function(e){var t=decodeWeights(i.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(var n in t)d[n]=t[n];}),h+=t;}),[2,d]}})})}}IORouterRegistry.registerSaveRouter(browserDownloadsRouter);var OCTET_STREAM_MIME_TYPE=&quot;application/octet-stream&quot;,JSON_TYPE=&quot;application/json&quot;,BrowserHTTPRequest=function(){function e(e,t){if(this.DEFAULT_METHOD=&quot;POST&quot;,null==t&amp;&amp;(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,null==t.fetchFunc){var n=ENV.global.fetch;if(void 0===n)throw new Error(&quot;browserHTTPRequest is not supported outside the web browser without a fetch polyfill.&quot;);t.fetchFunc=n.bind(ENV.global);}else assert(&quot;function&quot;==typeof t.fetchFunc,function(){return &quot;Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)&quot;});if(this.fetchFunc=function(e,n){return t.fetchFunc(e,n).catch(function(t){throw new Error(&quot;Request for &quot;+e+&quot; failed due to error: &quot;+t)})},assert(null!=e&amp;&amp;e.length&gt;0,function(){return &quot;URL path for browserHTTPRequest must not be null, undefined or empty.&quot;}),Array.isArray(e)&amp;&amp;assert(2===e.length,function(){return &quot;URL paths for browserHTTPRequest must have a length of 2, (actual length is &quot;+e.length+&quot;).&quot;}),this.path=e,null!=t.requestInit&amp;&amp;null!=t.requestInit.body)throw new Error(&quot;requestInit is expected to have no pre-existing body, but has one.&quot;);this.requestInit=t.requestInit||{};}return e.prototype.save=function(e){return __awaiter$1(this,void 0,void 0,function(){var t,n,r,o;return __generator$1(this,function(a){switch(a.label){case 0:if(e.modelTopology instanceof ArrayBuffer)throw new Error(&quot;BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.&quot;);return (t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,n=[{paths:[&quot;./model.weights.bin&quot;],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},t.body.append(&quot;model.json&quot;,new Blob([JSON.stringify(r)],{type:JSON_TYPE}),&quot;model.json&quot;),null!=e.weightData&amp;&amp;t.body.append(&quot;model.weights.bin&quot;,new Blob([e.weightData],{type:OCTET_STREAM_MIME_TYPE}),&quot;model.weights.bin&quot;),[4,this.getFetchFunc()(this.path,t)];case 1:if((o=a.sent()).ok)return [2,{modelArtifactsInfo:getModelArtifactsInfoForJSON(e),responses:[o]}];throw new Error(&quot;BrowserHTTPRequest.save() failed due to HTTP response status &quot;+o.status+&quot;.&quot;)}})})},e.prototype.load=function(){return __awaiter$1(this,void 0,void 0,function(){var e,t,n,r,o,a,i,s;return __generator$1(this,function(u){switch(u.label){case 0:return [4,this.getFetchFunc()(this.path,this.requestInit)];case 1:if(!(e=u.sent()).ok)throw new Error(&quot;Request to &quot;+this.path+&quot; failed with status code &quot;+e.status+&quot;. Please verify this URL points to the model JSON of the model to load.&quot;);u.label=2;case 2:return u.trys.push([2,4,,5]),[4,e.json()];case 3:return t=u.sent(),[3,5];case 4:throw u.sent(),n=&quot;Failed to parse model JSON of response from &quot;+this.path+&quot;.&quot;,this.path.endsWith(&quot;.pb&quot;)?n+=&quot; Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the &#39;pb2json&#39;NPM script in the tensorflow/tfjs-converter repository.&quot;:n+=&quot; Please make sure the server is serving valid JSON for this request.&quot;,new Error(n);case 5:if(r=t.modelTopology,o=t.weightsManifest,null==r&amp;&amp;null==o)throw new Error(&quot;The JSON from HTTP path &quot;+this.path+&quot; contains neither model topology or manifest for weights.&quot;);return null==o?[3,7]:[4,this.loadWeights(o)];case 6:s=u.sent(),a=s[0],i=s[1],u.label=7;case 7:return [2,{modelTopology:r,weightSpecs:a,weightData:i}]}})})},e.prototype.loadWeights=function(e){return __awaiter$1(this,void 0,void 0,function(){var t,n,r,o,a,i,s,u,c,l,p;return __generator$1(this,function(d){switch(d.label){case 0:for(t=Array.isArray(this.path)?this.path[1]:this.path,n=parseUrl(t),r=n[0],o=n[1],a=this.weightPathPrefix||r,i=[],s=0,u=e;s&lt;u.length;s++)c=u[s],i.push.apply(i,c.weights);return l=[],e.forEach(function(e){e.paths.forEach(function(e){l.push(a+e+o);});}),[4,loadWeightsAsArrayBuffer(l,{requestInit:this.requestInit,fetchFunc:this.getFetchFunc(),onProgress:this.onProgress})];case 1:return p=d.sent(),[2,[i,concatenateArrayBuffers(p)]]}})})},e.prototype.getFetchFunc=function(){return this.fetchFunc},e.URL_SCHEME_REGEX=/^https?:\/\//,e}();function parseUrl(e){var t=e.lastIndexOf(&quot;/&quot;),n=e.lastIndexOf(&quot;?&quot;);return [e.substring(0,t)+&quot;/&quot;,n&gt;t?e.substring(n):&quot;&quot;]}function isHTTPScheme(e){return null!=e.match(BrowserHTTPRequest.URL_SCHEME_REGEX)}var httpRequestRouter=function(e,t){if(&quot;undefined&quot;==typeof fetch)return null;return (Array.isArray(e)?e.every(function(e){return isHTTPScheme(e)}):isHTTPScheme(e))?browserHTTPRequest(e,{onProgress:t}):null};function browserHTTPRequest(e,t){return new BrowserHTTPRequest(e,t)}IORouterRegistry.registerSaveRouter(httpRequestRouter),IORouterRegistry.registerLoadRouter(httpRequestRouter);var PassthroughLoader=function(){function e(e,t,n){this.modelTopology=e,this.weightSpecs=t,this.weightData=n;}return e.prototype.load=function(){return __awaiter$1(this,void 0,void 0,function(){var e;return __generator$1(this,function(t){return e={},null!=this.modelTopology&amp;&amp;(e=__assign$1({modelTopology:this.modelTopology},e)),null!=this.weightSpecs&amp;&amp;this.weightSpecs.length&gt;0&amp;&amp;(e=__assign$1({weightSpecs:this.weightSpecs},e)),null!=this.weightData&amp;&amp;this.weightData.byteLength&gt;0&amp;&amp;(e=__assign$1({weightData:this.weightData},e)),[2,e]})})},e}(),PassthroughSaver=function(){function e(e){this.saveHandler=e;}return e.prototype.save=function(e){return __awaiter$1(this,void 0,void 0,function(){return __generator$1(this,function(t){return [2,this.saveHandler(e)]})})},e}();function fromMemory(e,t,n){return new PassthroughLoader(e,t,n)}function withSaveHandler(e){return new PassthroughSaver(e)}var io=Object.freeze({browserFiles:browserFiles,browserHTTPRequest:browserHTTPRequest,concatenateArrayBuffers:concatenateArrayBuffers,decodeWeights:decodeWeights,encodeWeights:encodeWeights,fromMemory:fromMemory,getLoadHandlers:getLoadHandlers,getModelArtifactsInfoForJSON:getModelArtifactsInfoForJSON,getSaveHandlers:getSaveHandlers,isHTTPScheme:isHTTPScheme,loadWeights:loadWeights,registerLoadRouter:registerLoadRouter,registerSaveRouter:registerSaveRouter,weightsLoaderFactory:weightsLoaderFactory,withSaveHandler:withSaveHandler,copyModel:copyModel,listModels:listModels,moveModel:moveModel,removeModel:removeModel});function confusionMatrix_(e,t,n){var r=convertToTensor(e,&quot;labels&quot;,&quot;confusionMatrix&quot;),o=convertToTensor(t,&quot;predictions&quot;,&quot;confusionMatrix&quot;);assert(null==n||n&gt;0&amp;&amp;Number.isInteger(n),function(){return &quot;If provided, numClasses must be a positive integer, but got &quot;+n}),assert(1===r.rank,function(){return &quot;Expected the rank of labels to be 1, but got &quot;+r.rank}),assert(1===o.rank,function(){return &quot;Expected the rank of predictions to be 1, but got &quot;+o.rank}),assert(r.shape[0]===o.shape[0],function(){return &quot;Mismatch in the number of examples: &quot;+r.shape[0]+&quot; vs. &quot;+o.shape[0]+&quot;. Labels and predictions should have the same number of elements.&quot;}),assert(n&gt;0&amp;&amp;Number.isInteger(n),function(){return &quot;numClasses is required to be a positive integer, but got &quot;+n});var a=oneHot(r.asType(&quot;int32&quot;),n),i=oneHot(o.asType(&quot;int32&quot;),n);return a.transpose().matMul(i).asType(&quot;int32&quot;)}var confusionMatrix=op({confusionMatrix_:confusionMatrix_}),math=Object.freeze({confusionMatrix:confusionMatrix});function fromPixels_(e,t){if(void 0===t&amp;&amp;(t=3),t&gt;4)throw new Error(&quot;Cannot construct Tensor with more than 4 channels from pixels.&quot;);return ENV.engine.fromPixels(e,t)}function toPixels(e,t){return __awaiter$1(this,void 0,void 0,function(){var n,r,o,a,i,s,u,c,l,p,d,h,f,m,g,v,y,x,E,T;return __generator$1(this,function(b){switch(b.label){case 0:if(n=convertToTensor(e,&quot;img&quot;,&quot;toPixels&quot;),e instanceof Tensor||(n=n.toInt()),2!==n.rank&amp;&amp;3!==n.rank)throw new Error(&quot;toPixels only supports rank 2 or 3 tensors, got rank &quot;+n.rank+&quot;.&quot;);if(r=n.shape.slice(0,2),o=r[0],a=r[1],(i=2===n.rank?1:n.shape[2])&gt;4||2===i)throw new Error(&quot;toPixels only supports depth of size 1, 3 or 4 but got &quot;+i);return s=n.min(),u=n.max(),[4,s.data()];case 1:return c=b.sent()[0],[4,u.data()];case 2:if(l=b.sent()[0],s.dispose(),u.dispose(),&quot;float32&quot;===n.dtype){if(c&lt;0||l&gt;1)throw new Error(&quot;Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [&quot;+c+&quot; - &quot;+l+&quot;].&quot;)}else{if(&quot;int32&quot;!==n.dtype)throw new Error(&quot;Unsupported type for toPixels: &quot;+n.dtype+&quot;. Please use float32 or int32 tensors.&quot;);if(c&lt;0||l&gt;255)throw new Error(&quot;Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [&quot;+c+&quot; - &quot;+l+&quot;].&quot;)}return [4,n.data()];case 3:for(p=b.sent(),d=&quot;float32&quot;===n.dtype?255:1,h=new Uint8ClampedArray(a*o*4),f=0;f&lt;o*a;++f)m=void 0,g=void 0,v=void 0,y=void 0,1===i?(m=p[f]*d,g=p[f]*d,v=p[f]*d,y=255):3===i?(m=p[3*f]*d,g=p[3*f+1]*d,v=p[3*f+2]*d,y=255):4===i&amp;&amp;(m=p[4*f]*d,g=p[4*f+1]*d,v=p[4*f+2]*d,y=p[4*f+3]*d),h[(x=4*f)+0]=Math.round(m),h[x+1]=Math.round(g),h[x+2]=Math.round(v),h[x+3]=Math.round(y);return null!=t&amp;&amp;(t.width=a,t.height=o,E=t.getContext(&quot;2d&quot;),T=new ImageData(h,a,o),E.putImageData(T,0,0)),n!==e&amp;&amp;n.dispose(),[2,h]}})})}var fromPixels=op({fromPixels_:fromPixels_}),browser=Object.freeze({toPixels:toPixels,fromPixels:fromPixels}),Serializable=function(){function e(){}return e.prototype.getClassName=function(){return this.constructor.className},e.fromConfig=function(e,t){return new e(t)},e}(),SerializationMap=function(){function e(){this.classNameMap={};}return e.getMap=function(){return null==e.instance&amp;&amp;(e.instance=new e),e.instance},e.register=function(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig];},e}();function registerClass(e){assert(null!=e.className,function(){return &quot;Class being registered does not have the static className property defined.&quot;}),assert(&quot;string&quot;==typeof e.className,function(){return &quot;className is required to be a string, but got type &quot;+typeof e.className}),assert(e.className.length&gt;0,function(){return &quot;Class being registered has an empty-string as its className, which is disallowed.&quot;}),SerializationMap.register(e);}var serialization=Object.freeze({Serializable:Serializable,SerializationMap:SerializationMap,registerClass:registerClass}),WEBGL_ENVS={HAS_WEBGL:!0},PACKED_ENVS={WEBGL_PACK:!0},NODE_ENVS={IS_NODE:!0},CHROME_ENVS={IS_CHROME:!0},BROWSER_ENVS={IS_BROWSER:!0},CPU_ENVS={HAS_WEBGL:!1},ALL_ENVS={};function expectArraysClose(e,t,n){return null==n&amp;&amp;(n=ENV.get(&quot;TEST_EPSILON&quot;)),expectArraysPredicate(e,&quot;number&quot;==typeof t||&quot;boolean&quot;==typeof t?[t]:t,function(e,t){return areClose(e,Number(t),n)})}function expectArraysPredicate(e,t,n){if(e instanceof Tensor||t instanceof Tensor){if(e instanceof Tensor&amp;&amp;t instanceof Tensor){if(e.dtype!==t.dtype)throw new Error(&quot;Arrays are of different type actual: &quot;+e.dtype+&quot; vs expected: &quot;+t.dtype+&quot;.&quot;);if(!arraysEqual(e.shape,t.shape))throw new Error(&quot;Arrays are of different shape actual: &quot;+e.shape+&quot; vs expected: &quot;+t.shape+&quot;.&quot;)}}else{var r=e.constructor.name,o=t.constructor.name;if(r!==o)throw new Error(&quot;Arrays are of different type actual: &quot;+r+&quot; vs expected: &quot;+o)}var a,i;if(a=e instanceof Tensor?e.dataSync():e,i=t instanceof Tensor?t.dataSync():t,a.length!==i.length)throw new Error(&quot;Arrays have different lengths actual: &quot;+a.length+&quot; vs expected: &quot;+i.length+&quot;.\nActual:   &quot;+a+&quot;.\nExpected: &quot;+i+&quot;.&quot;);for(var s=0;s&lt;i.length;++s){var u=a[s],c=i[s];if(!n(u,c))throw new Error(&quot;Arrays differ: actual[&quot;+s+&quot;] = &quot;+u+&quot;, expected[&quot;+s+&quot;] = &quot;+c+&quot;.\nActual:   &quot;+a+&quot;.\nExpected: &quot;+i+&quot;.&quot;)}}function expectPromiseToFail(e,t){e().then(function(){return t.fail()},function(){return t()});}function expectArraysEqual(e,t){var n=&quot;string&quot;==typeof t||&quot;number&quot;==typeof t||&quot;boolean&quot;==typeof t?[t]:t;return e instanceof Tensor&amp;&amp;&quot;string&quot;===e.dtype||t instanceof Tensor&amp;&amp;&quot;string&quot;===t.dtype||Array.isArray(e)&amp;&amp;isString(e[0])||Array.isArray(t)&amp;&amp;isString(t[0])?expectArraysPredicate(e,n,function(e,t){return e==t}):expectArraysClose(e,t,0)}function expectNumbersClose(e,t,n){if(null==n&amp;&amp;(n=ENV.get(&quot;TEST_EPSILON&quot;)),!areClose(e,t,n))throw new Error(&quot;Numbers differ: actual === &quot;+e+&quot;, expected === &quot;+t)}function areClose(e,t,n){return !(!isNaN(e)||!isNaN(t))||!(isNaN(e)||isNaN(t)||Math.abs(e-t)&gt;n)}function expectValuesInRange(e,t,n){var r;r=e instanceof Tensor?e.dataSync():e;for(var o=0;o&lt;r.length;o++)if(r[o]&lt;t||r[o]&gt;n)throw new Error(&quot;Value out of range:&quot;+r[o]+&quot; low: &quot;+t+&quot;, high: &quot;+n)}function expectArrayBuffersEqual(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t));}var test_util=Object.freeze({WEBGL_ENVS:WEBGL_ENVS,PACKED_ENVS:PACKED_ENVS,NODE_ENVS:NODE_ENVS,CHROME_ENVS:CHROME_ENVS,BROWSER_ENVS:BROWSER_ENVS,CPU_ENVS:CPU_ENVS,ALL_ENVS:ALL_ENVS,expectArraysClose:expectArraysClose,expectPromiseToFail:expectPromiseToFail,expectArraysEqual:expectArraysEqual,expectNumbersClose:expectNumbersClose,expectValuesInRange:expectValuesInRange,expectArrayBuffersEqual:expectArrayBuffersEqual}),version=&quot;1.0.3&quot;,webgl=Object.freeze({gpgpu_util:gpgpu_util,webgl_util:webgl_util,MathBackendWebGL:MathBackendWebGL,GPGPUContext:GPGPUContext}),Optimizer=function(e){function t(){return null!==e&amp;&amp;e.apply(this,arguments)||this}return __extends$1(t,e),t.prototype.minimize=function(e,t,n){void 0===t&amp;&amp;(t=!1);var r=this.computeGradients(e,n),o=r.value,a=r.grads;return this.applyGradients(a),Object.keys(a).forEach(function(e){return a[e].dispose()}),t?o:(o.dispose(),null)},t.prototype.computeGradients=function(e,t){return variableGrads(e,t)},t.prototype.dispose=function(){},t}(Serializable);Object.defineProperty(Optimizer,Symbol.hasInstance,{value:function(e){return null!=e.minimize&amp;&amp;null!=e.computeGradients&amp;&amp;null!=e.applyGradients}});var AdadeltaOptimizer=function(e){function t(t,n,r){void 0===r&amp;&amp;(r=null);var o=e.call(this)||this;return o.learningRate=t,o.rho=n,o.epsilon=r,o.accumulatedGrads={},o.accumulatedUpdates={},o.c=keep(scalar(-t)),o.rhoScalar=keep(scalar(n)),o.oneMinusRho=keep(scalar(1-n)),null===r&amp;&amp;(r=ENV.get(&quot;EPSILON&quot;)),o.epsilonScalar=keep(scalar(r)),o}return __extends$1(t,e),t.prototype.applyGradients=function(e){var t=this,n=function(n){var o=ENV.engine.registeredVariables[n];if(null==r.accumulatedGrads[n]){tidy(function(){t.accumulatedGrads[n]=zerosLike(o).variable(!1);});}if(null==r.accumulatedUpdates[n]){tidy(function(){t.accumulatedUpdates[n]=zerosLike(o).variable(!1);});}var a=e[n],i=r.accumulatedGrads[n],s=r.accumulatedUpdates[n];tidy(function(){var e=t.rhoScalar.mul(i).add(t.oneMinusRho.mul(a.square())),r=s.add(t.epsilonScalar).sqrt().div(i.add(t.epsilonScalar).sqrt()).mul(a),u=t.rhoScalar.mul(s).add(t.oneMinusRho.mul(r.square()));t.accumulatedGrads[n].assign(e),t.accumulatedUpdates[n].assign(u);var c=t.c.mul(r).add(o);o.assign(c);});},r=this;for(var o in e)n(o);},t.prototype.dispose=function(){var e=this;this.c.dispose(),this.epsilonScalar.dispose(),this.rhoScalar.dispose(),this.oneMinusRho.dispose(),null!=this.accumulatedUpdates&amp;&amp;(Object.keys(this.accumulatedUpdates).forEach(function(t){return e.accumulatedUpdates[t].dispose()}),Object.keys(this.accumulatedGrads).forEach(function(t){return e.accumulatedGrads[t].dispose()}));},t.prototype.getConfig=function(){return {learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.rho,t.epsilon)},t.className=&quot;AdadeltaOptimizer&quot;,t}(Optimizer);registerClass(AdadeltaOptimizer);var AdagradOptimizer=function(e){function t(t,n){void 0===n&amp;&amp;(n=.1);var r=e.call(this)||this;return r.learningRate=t,r.initialAccumulatorValue=n,r.accumulatedGrads={},r.c=keep(scalar(-t)),r.epsilon=keep(scalar(ENV.get(&quot;EPSILON&quot;))),r}return __extends$1(t,e),t.prototype.applyGradients=function(e){var t=this,n=function(n){var o=ENV.engine.registeredVariables[n];if(null==r.accumulatedGrads[n]){tidy(function(){t.accumulatedGrads[n]=fill(o.shape,t.initialAccumulatorValue).variable(!1);});}var a=e[n],i=r.accumulatedGrads[n];tidy(function(){var e=i.add(a.square());t.accumulatedGrads[n].assign(e);var r=t.c.mul(a.div(e.add(t.epsilon).sqrt())).add(o);o.assign(r);});},r=this;for(var o in e)n(o);},t.prototype.dispose=function(){var e=this;this.epsilon.dispose(),this.c.dispose(),null!=this.accumulatedGrads&amp;&amp;Object.keys(this.accumulatedGrads).forEach(function(t){return e.accumulatedGrads[t].dispose()});},t.prototype.getConfig=function(){return {learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},t.fromConfig=function(e,t){return new e(t.learningRate,t.initialAccumulatorValue)},t.className=&quot;AdagradOptimizer&quot;,t}(Optimizer);registerClass(AdagradOptimizer);var AdamOptimizer=function(e){function t(t,n,r,o){void 0===o&amp;&amp;(o=null);var a=e.call(this)||this;return a.learningRate=t,a.beta1=n,a.beta2=r,a.epsilon=o,a.accumulatedFirstMoment={},a.accumulatedSecondMoment={},a.c=keep(scalar(-t)),a.beta1Scalar=keep(scalar(n)),a.beta2Scalar=keep(scalar(r)),tidy(function(){a.accBeta1=scalar(n).variable(),a.accBeta2=scalar(r).variable();}),a.oneMinusBeta1=keep(scalar(1-n)),a.oneMinusBeta2=keep(scalar(1-r)),a.one=keep(scalar(1)),null===o&amp;&amp;(o=ENV.get(&quot;EPSILON&quot;)),a.epsScalar=keep(scalar(o)),a}return __extends$1(t,e),t.prototype.applyGradients=function(e){var t=this;tidy(function(){var n=t.one.sub(t.accBeta1),r=t.one.sub(t.accBeta2);for(var o in e){var a=ENV.engine.registeredVariables[o];if(null==t.accumulatedFirstMoment[o]){var i=!1;t.accumulatedFirstMoment[o]=zerosLike(a).variable(i);}if(null==t.accumulatedSecondMoment[o]){i=!1;t.accumulatedSecondMoment[o]=zerosLike(a).variable(i);}var s=e[o],u=t.accumulatedFirstMoment[o],c=t.accumulatedSecondMoment[o],l=t.beta1Scalar.mul(u).add(t.oneMinusBeta1.mul(s)),p=t.beta2Scalar.mul(c).add(t.oneMinusBeta2.mul(s.square())),d=l.div(n),h=p.div(r);t.accumulatedFirstMoment[o].assign(l),t.accumulatedSecondMoment[o].assign(p);var f=t.c.mul(d.div(t.epsScalar.add(h.sqrt()))).add(a);a.assign(f);}t.accBeta1.assign(t.accBeta1.mul(t.beta1Scalar)),t.accBeta2.assign(t.accBeta2.mul(t.beta2Scalar));});},t.prototype.dispose=function(){var e=this;this.c.dispose(),this.epsScalar.dispose(),this.beta1Scalar.dispose(),this.beta2Scalar.dispose(),this.accBeta1.dispose(),this.accBeta2.dispose(),this.oneMinusBeta1.dispose(),this.oneMinusBeta2.dispose(),this.one.dispose(),null!=this.accumulatedFirstMoment&amp;&amp;Object.keys(this.accumulatedFirstMoment).forEach(function(t){return e.accumulatedFirstMoment[t].dispose()}),null!=this.accumulatedSecondMoment&amp;&amp;Object.keys(this.accumulatedSecondMoment).forEach(function(t){return e.accumulatedSecondMoment[t].dispose()});},t.prototype.getConfig=function(){return {learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)},t.className=&quot;AdamOptimizer&quot;,t}(Optimizer);registerClass(AdamOptimizer);var AdamaxOptimizer=function(e){function t(t,n,r,o,a){void 0===o&amp;&amp;(o=null),void 0===a&amp;&amp;(a=0);var i=e.call(this)||this;return i.learningRate=t,i.beta1=n,i.beta2=r,i.epsilon=o,i.decay=a,i.accumulatedFirstMoment={},i.accumulatedWeightedInfNorm={},i.c=keep(scalar(-t)),i.beta1Scalar=keep(scalar(n)),i.beta2Scalar=keep(scalar(r)),i.decayScalar=keep(scalar(a)),tidy(function(){i.iteration=scalar(0).variable(),i.accBeta1=scalar(n).variable();}),i.oneMinusBeta1=keep(scalar(1-n)),i.one=keep(scalar(1)),null===o&amp;&amp;(o=ENV.get(&quot;EPSILON&quot;)),i.epsScalar=keep(scalar(o)),i}return __extends$1(t,e),t.prototype.applyGradients=function(e){var t=this;tidy(function(){var n=t.one.sub(t.accBeta1),r=t.c.div(t.one.add(t.decayScalar.mul(t.iteration)));for(var o in e){var a=ENV.engine.registeredVariables[o];if(null==t.accumulatedFirstMoment[o]){var i=!1;t.accumulatedFirstMoment[o]=zerosLike(a).variable(i);}if(null==t.accumulatedWeightedInfNorm[o]){i=!1;t.accumulatedWeightedInfNorm[o]=zerosLike(a).variable(i);}var s=e[o],u=t.accumulatedFirstMoment[o],c=t.accumulatedWeightedInfNorm[o],l=t.beta1Scalar.mul(u).add(t.oneMinusBeta1.mul(s)),p=t.beta2Scalar.mul(c),d=s.abs(),h=p.maximum(d);t.accumulatedFirstMoment[o].assign(l),t.accumulatedWeightedInfNorm[o].assign(h);var f=r.div(n).mul(l.div(t.epsScalar.add(h))).add(a);a.assign(f);}t.iteration.assign(t.iteration.add(t.one)),t.accBeta1.assign(t.accBeta1.mul(t.beta1Scalar));});},t.prototype.dispose=function(){var e=this;this.c.dispose(),this.epsScalar.dispose(),this.accBeta1.dispose(),this.beta1Scalar.dispose(),this.beta2Scalar.dispose(),this.oneMinusBeta1.dispose(),this.decayScalar.dispose(),this.iteration.dispose(),this.one.dispose(),null!=this.accumulatedFirstMoment&amp;&amp;Object.keys(this.accumulatedFirstMoment).forEach(function(t){return e.accumulatedFirstMoment[t].dispose()}),null!=this.accumulatedWeightedInfNorm&amp;&amp;Object.keys(this.accumulatedWeightedInfNorm).forEach(function(t){return e.accumulatedWeightedInfNorm[t].dispose()});},t.prototype.getConfig=function(){return {learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)},t.className=&quot;AdamaxOptimizer&quot;,t}(Optimizer);registerClass(AdamaxOptimizer);var SGDOptimizer=function(e){function t(t){var n=e.call(this)||this;return n.learningRate=t,n.setLearningRate(t),n}return __extends$1(t,e),t.prototype.applyGradients=function(e){var t=this;Object.keys(e).forEach(function(n){var r=e[n],o=ENV.engine.registeredVariables[n];tidy(function(){var e=t.c.mul(r).add(o);o.assign(e);});});},t.prototype.setLearningRate=function(e){this.learningRate=e,null!=this.c&amp;&amp;this.c.dispose(),this.c=keep(scalar(-e));},t.prototype.dispose=function(){this.c.dispose();},t.prototype.getConfig=function(){return {learningRate:this.learningRate}},t.fromConfig=function(e,t){return new e(t.learningRate)},t.className=&quot;SGDOptimizer&quot;,t}(Optimizer);registerClass(SGDOptimizer);var MomentumOptimizer=function(e){function t(t,n,r){void 0===r&amp;&amp;(r=!1);var o=e.call(this,t)||this;return o.learningRate=t,o.momentum=n,o.useNesterov=r,o.m=scalar(o.momentum),o.accumulations={},o}return __extends$1(t,e),t.prototype.applyGradients=function(e){var t=this,n=function(n){var o=ENV.engine.registeredVariables[n];if(null==r.accumulations[n]){tidy(function(){t.accumulations[n]=zerosLike(o).variable(!1);});}var a=r.accumulations[n],i=e[n];tidy(function(){var e,r=t.m.mul(a).add(i);e=t.useNesterov?t.c.mul(i.add(r.mul(t.m))).add(o):t.c.mul(r).add(o),t.accumulations[n].assign(r),o.assign(e);});},r=this;for(var o in e)n(o);},t.prototype.dispose=function(){if(e.prototype.dispose.call(this),this.m.dispose(),null!=this.accumulations)for(var t in this.accumulations)this.accumulations[t].dispose();},t.prototype.setMomentum=function(e){this.momentum=e;},t.prototype.getConfig=function(){return {learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},t.fromConfig=function(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)},t.className=&quot;MomentumOptimizer&quot;,t}(SGDOptimizer);registerClass(MomentumOptimizer);var RMSPropOptimizer=function(e){function t(t,n,r,o,a){void 0===n&amp;&amp;(n=.9),void 0===r&amp;&amp;(r=0),void 0===o&amp;&amp;(o=null),void 0===a&amp;&amp;(a=!1);var i=e.call(this)||this;return i.learningRate=t,i.decay=n,i.momentum=r,i.epsilon=o,i.accumulatedMeanSquares={},i.accumulatedMeanGrads={},i.accumulatedMoments={},i.c=keep(scalar(t)),i.decayScalar=keep(scalar(n)),i.momentumScalar=keep(scalar(r)),i.oneMinusDecay=keep(scalar(1-n)),i.centered=a,null===o&amp;&amp;(o=ENV.get(&quot;EPSILON&quot;)),i.epsilonScalar=keep(scalar(o)),i}return __extends$1(t,e),t.prototype.applyGradients=function(e){var t=this,n=function(n){var o=ENV.engine.registeredVariables[n];if(null==r.accumulatedMeanSquares[n]){tidy(function(){t.accumulatedMeanSquares[n]=zerosLike(o).variable(!1);});}if(null==r.accumulatedMeanGrads[n]&amp;&amp;r.centered){tidy(function(){t.accumulatedMeanGrads[n]=zerosLike(o).variable(!1);});}if(null==r.accumulatedMoments[n]){tidy(function(){t.accumulatedMoments[n]=zerosLike(o).variable(!1);});}var a=r.accumulatedMeanSquares[n],i=r.accumulatedMeanGrads[n],s=r.accumulatedMoments[n],u=e[n];tidy(function(){var e=t.decayScalar.mul(a).add(t.oneMinusDecay.mul(u.square()));if(t.centered){var r=t.decayScalar.mul(i).add(t.oneMinusDecay.mul(u)),c=t.momentumScalar.mul(s).add(t.c.mul(u).div(e.sub(r.square().add(t.epsilonScalar)).sqrt()));t.accumulatedMeanSquares[n].assign(e),t.accumulatedMeanGrads[n].assign(r),t.accumulatedMoments[n].assign(c);var l=o.sub(c);o.assign(l);}else{var p=t.decayScalar.mul(a).add(t.oneMinusDecay.mul(u.square()));c=t.momentumScalar.mul(s).add(t.c.mul(u).div(p.add(t.epsilonScalar).sqrt()));t.accumulatedMeanSquares[n].assign(p),t.accumulatedMoments[n].assign(c);l=o.sub(c);o.assign(l);}});},r=this;for(var o in e)n(o);},t.prototype.dispose=function(){var e=this;this.c.dispose(),this.epsilonScalar.dispose(),this.decayScalar.dispose(),this.momentumScalar.dispose(),this.oneMinusDecay.dispose(),null!=this.accumulatedMeanSquares&amp;&amp;Object.keys(this.accumulatedMeanSquares).forEach(function(t){return e.accumulatedMeanSquares[t].dispose()}),null!=this.accumulatedMeanGrads&amp;&amp;this.centered&amp;&amp;Object.keys(this.accumulatedMeanGrads).forEach(function(t){return e.accumulatedMeanGrads[t].dispose()}),null!=this.accumulatedMoments&amp;&amp;Object.keys(this.accumulatedMoments).forEach(function(t){return e.accumulatedMoments[t].dispose()});},t.prototype.getConfig=function(){return {learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},t.fromConfig=function(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)},t.className=&quot;RMSPropOptimizer&quot;,t}(Optimizer);registerClass(RMSPropOptimizer);var OptimizerConstructors=function(){function e(){}return e.sgd=function(e){return new SGDOptimizer(e)},e.momentum=function(e,t,n){return void 0===n&amp;&amp;(n=!1),new MomentumOptimizer(e,t,n)},e.rmsprop=function(e,t,n,r,o){return void 0===t&amp;&amp;(t=.9),void 0===n&amp;&amp;(n=0),void 0===r&amp;&amp;(r=null),void 0===o&amp;&amp;(o=!1),new RMSPropOptimizer(e,t,n,r,o)},e.adam=function(e,t,n,r){return void 0===e&amp;&amp;(e=.001),void 0===t&amp;&amp;(t=.9),void 0===n&amp;&amp;(n=.999),void 0===r&amp;&amp;(r=null),new AdamOptimizer(e,t,n,r)},e.adadelta=function(e,t,n){return void 0===e&amp;&amp;(e=.001),void 0===t&amp;&amp;(t=.95),void 0===n&amp;&amp;(n=null),new AdadeltaOptimizer(e,t,n)},e.adamax=function(e,t,n,r,o){return void 0===e&amp;&amp;(e=.002),void 0===t&amp;&amp;(t=.9),void 0===n&amp;&amp;(n=.999),void 0===r&amp;&amp;(r=null),void 0===o&amp;&amp;(o=0),new AdamaxOptimizer(e,t,n,r,o)},e.adagrad=function(e,t){return void 0===t&amp;&amp;(t=.1),new AdagradOptimizer(e,t)},e}(),train={sgd:OptimizerConstructors.sgd,momentum:OptimizerConstructors.momentum,adadelta:OptimizerConstructors.adadelta,adagrad:OptimizerConstructors.adagrad,rmsprop:OptimizerConstructors.rmsprop,adamax:OptimizerConstructors.adamax,adam:OptimizerConstructors.adam},setBackend=Environment.setBackend,getBackend=Environment.getBackend,disposeVariables=Environment.disposeVariables,memory=Environment.memory;setOpHandler(ops);</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> tfCore_esm <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/*</span>#__PURE__<span class="pl-c">*/</span></span><span class="pl-c1">Object</span>.<span class="pl-en">freeze</span>({</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line">        setBackend<span class="pl-k">:</span> setBackend,</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line">        getBackend<span class="pl-k">:</span> getBackend,</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line">        disposeVariables<span class="pl-k">:</span> disposeVariables,</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line">        memory<span class="pl-k">:</span> memory,</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line">        version_core<span class="pl-k">:</span> version,</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line">        nextFrame<span class="pl-k">:</span> nextFrame,</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line">        enableProdMode<span class="pl-k">:</span> enableProdMode,</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">        enableDebugMode<span class="pl-k">:</span> enableDebugMode,</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line">        disableDeprecationWarnings<span class="pl-k">:</span> disableDeprecationWarnings,</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line">        deprecationWarn<span class="pl-k">:</span> deprecationWarn,</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line">        browser<span class="pl-k">:</span> browser,</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line">        environment<span class="pl-k">:</span> environment,</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line">        io<span class="pl-k">:</span> io,</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line">        math<span class="pl-k">:</span> math,</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line">        serialization<span class="pl-k">:</span> serialization,</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line">        test_util<span class="pl-k">:</span> test_util,</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line">        util<span class="pl-k">:</span> util,</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line">        webgl<span class="pl-k">:</span> webgl,</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line">        tensor_util<span class="pl-k">:</span> tensor_util,</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line">        AdadeltaOptimizer<span class="pl-k">:</span> AdadeltaOptimizer,</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line">        AdagradOptimizer<span class="pl-k">:</span> AdagradOptimizer,</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line">        AdamOptimizer<span class="pl-k">:</span> AdamOptimizer,</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line">        AdamaxOptimizer<span class="pl-k">:</span> AdamaxOptimizer,</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line">        MomentumOptimizer<span class="pl-k">:</span> MomentumOptimizer,</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line">        Optimizer<span class="pl-k">:</span> Optimizer,</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line">        RMSPropOptimizer<span class="pl-k">:</span> RMSPropOptimizer,</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line">        SGDOptimizer<span class="pl-k">:</span> SGDOptimizer,</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line">        Tensor<span class="pl-k">:</span> Tensor,</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line">        TensorBuffer<span class="pl-k">:</span> TensorBuffer,</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line">        variable<span class="pl-k">:</span> variable,</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line">        Variable<span class="pl-k">:</span> Variable,</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">get</span> <span class="pl-en">Rank</span> () { <span class="pl-k">return</span> Rank; },</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">get</span> <span class="pl-en">Reduction</span> () { <span class="pl-k">return</span> Reduction; },</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">ENV</span><span class="pl-k">:</span> <span class="pl-c1">ENV</span>,</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line">        Environment<span class="pl-k">:</span> Environment,</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line">        KernelBackend<span class="pl-k">:</span> KernelBackend,</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line">        DataStorage<span class="pl-k">:</span> DataStorage,</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line">        image<span class="pl-k">:</span> image_ops,</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line">        linalg<span class="pl-k">:</span> linalg_ops,</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line">        losses<span class="pl-k">:</span> loss_ops,</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line">        spectral<span class="pl-k">:</span> spectral_ops,</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line">        fused<span class="pl-k">:</span> fused_ops,</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line">        op<span class="pl-k">:</span> op,</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line">        batchNormalization2d<span class="pl-k">:</span> batchNormalization2d,</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line">        batchNormalization3d<span class="pl-k">:</span> batchNormalization3d,</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line">        batchNormalization4d<span class="pl-k">:</span> batchNormalization4d,</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line">        batchNormalization<span class="pl-k">:</span> batchNormalization,</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line">        batchNorm<span class="pl-k">:</span> batchNorm,</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line">        batchNorm2d<span class="pl-k">:</span> batchNorm2d,</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line">        batchNorm3d<span class="pl-k">:</span> batchNorm3d,</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line">        batchNorm4d<span class="pl-k">:</span> batchNorm4d,</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line">        complex<span class="pl-k">:</span> complex,</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line">        real<span class="pl-k">:</span> real,</td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line">        imag<span class="pl-k">:</span> imag,</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line">        concat<span class="pl-k">:</span> concat,</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line">        concat1d<span class="pl-k">:</span> concat1d,</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line">        concat2d<span class="pl-k">:</span> concat2d,</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line">        concat3d<span class="pl-k">:</span> concat3d,</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line">        concat4d<span class="pl-k">:</span> concat4d,</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line">        split<span class="pl-k">:</span> split$1,</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line">        conv1d<span class="pl-k">:</span> conv1d,</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line">        conv2d<span class="pl-k">:</span> conv2d,</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line">        conv3d<span class="pl-k">:</span> conv3d,</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line">        conv2dDerFilter<span class="pl-k">:</span> conv2dDerFilter,</td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line">        depthwiseConv2d<span class="pl-k">:</span> depthwiseConv2d,</td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line">        separableConv2d<span class="pl-k">:</span> separableConv2d,</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line">        conv2dTranspose<span class="pl-k">:</span> conv2dTranspose,</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line">        matMul<span class="pl-k">:</span> matMul,</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line">        dot<span class="pl-k">:</span> dot,</td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line">        outerProduct<span class="pl-k">:</span> outerProduct,</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line">        reverse<span class="pl-k">:</span> reverse,</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line">        reverse1d<span class="pl-k">:</span> reverse1d,</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line">        reverse2d<span class="pl-k">:</span> reverse2d,</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line">        reverse3d<span class="pl-k">:</span> reverse3d,</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line">        reverse4d<span class="pl-k">:</span> reverse4d,</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line">        maxPool<span class="pl-k">:</span> maxPool,</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line">        avgPool<span class="pl-k">:</span> avgPool,</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line">        pool<span class="pl-k">:</span> pool,</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line">        slice<span class="pl-k">:</span> slice,</td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line">        slice1d<span class="pl-k">:</span> slice1d,</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line">        slice2d<span class="pl-k">:</span> slice2d,</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line">        slice3d<span class="pl-k">:</span> slice3d,</td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line">        slice4d<span class="pl-k">:</span> slice4d,</td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line">        abs<span class="pl-k">:</span> abs,</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line">        acos<span class="pl-k">:</span> acos,</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line">        acosh<span class="pl-k">:</span> acosh,</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line">        asin<span class="pl-k">:</span> asin,</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line">        asinh<span class="pl-k">:</span> asinh,</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line">        atan<span class="pl-k">:</span> atan,</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line">        atanh<span class="pl-k">:</span> atanh,</td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line">        ceil<span class="pl-k">:</span> ceil,</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line">        clipByValue<span class="pl-k">:</span> clipByValue,</td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line">        cos<span class="pl-k">:</span> cos,</td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line">        cosh<span class="pl-k">:</span> cosh,</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line">        erf<span class="pl-k">:</span> erf,</td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line">        exp<span class="pl-k">:</span> exp,</td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line">        expm1<span class="pl-k">:</span> expm1,</td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line">        floor<span class="pl-k">:</span> floor,</td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line">        log<span class="pl-k">:</span> log$1,</td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line">        log1p<span class="pl-k">:</span> log1p,</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line">        logSigmoid<span class="pl-k">:</span> logSigmoid,</td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line">        neg<span class="pl-k">:</span> neg,</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line">        reciprocal<span class="pl-k">:</span> reciprocal,</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line">        round<span class="pl-k">:</span> round,</td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line">        rsqrt<span class="pl-k">:</span> rsqrt,</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line">        sigmoid<span class="pl-k">:</span> sigmoid,</td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line">        sign<span class="pl-k">:</span> sign,</td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line">        isNaN<span class="pl-k">:</span> isNaN$1,</td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line">        isInf<span class="pl-k">:</span> isInf,</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line">        isFinite<span class="pl-k">:</span> isFinite$1,</td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line">        sin<span class="pl-k">:</span> sin,</td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line">        sinh<span class="pl-k">:</span> sinh,</td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line">        softplus<span class="pl-k">:</span> softplus,</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line">        sqrt<span class="pl-k">:</span> sqrt,</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line">        square<span class="pl-k">:</span> square,</td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line">        step<span class="pl-k">:</span> step,</td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line">        tan<span class="pl-k">:</span> tan,</td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line">        tanh<span class="pl-k">:</span> tanh$1,</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line">        all<span class="pl-k">:</span> all,</td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line">        any<span class="pl-k">:</span> any,</td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line">        argMax<span class="pl-k">:</span> argMax,</td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line">        argMin<span class="pl-k">:</span> argMin,</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line">        logSumExp<span class="pl-k">:</span> logSumExp,</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line">        max<span class="pl-k">:</span> max,</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line">        mean<span class="pl-k">:</span> mean,</td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line">        min<span class="pl-k">:</span> min,</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line">        moments<span class="pl-k">:</span> moments,</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line">        sum<span class="pl-k">:</span> sum$1,</td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line">        prod<span class="pl-k">:</span> prod,</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line">        equal<span class="pl-k">:</span> equal,</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line">        equalStrict<span class="pl-k">:</span> equalStrict,</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line">        greater<span class="pl-k">:</span> greater,</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line">        greaterEqual<span class="pl-k">:</span> greaterEqual,</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line">        greaterEqualStrict<span class="pl-k">:</span> greaterEqualStrict,</td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line">        greaterStrict<span class="pl-k">:</span> greaterStrict,</td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line">        less<span class="pl-k">:</span> less,</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line">        lessEqual<span class="pl-k">:</span> lessEqual,</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line">        lessEqualStrict<span class="pl-k">:</span> lessEqualStrict,</td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line">        lessStrict<span class="pl-k">:</span> lessStrict,</td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line">        notEqual<span class="pl-k">:</span> notEqual,</td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line">        notEqualStrict<span class="pl-k">:</span> notEqualStrict,</td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line">        add<span class="pl-k">:</span> add,</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line">        addN<span class="pl-k">:</span> addN,</td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line">        addStrict<span class="pl-k">:</span> addStrict,</td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line">        atan2<span class="pl-k">:</span> atan2,</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line">        div<span class="pl-k">:</span> div,</td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line">        divStrict<span class="pl-k">:</span> divStrict,</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line">        floorDiv<span class="pl-k">:</span> floorDiv,</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line">        maximum<span class="pl-k">:</span> maximum,</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line">        maximumStrict<span class="pl-k">:</span> maximumStrict,</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line">        minimum<span class="pl-k">:</span> minimum,</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line">        minimumStrict<span class="pl-k">:</span> minimumStrict,</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line">        mod<span class="pl-k">:</span> mod,</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line">        modStrict<span class="pl-k">:</span> modStrict,</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line">        mul<span class="pl-k">:</span> mul,</td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line">        mulStrict<span class="pl-k">:</span> mulStrict,</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line">        pow<span class="pl-k">:</span> pow,</td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line">        powStrict<span class="pl-k">:</span> powStrict,</td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line">        squaredDifference<span class="pl-k">:</span> squaredDifference,</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line">        squaredDifferenceStrict<span class="pl-k">:</span> squaredDifferenceStrict,</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line">        sub<span class="pl-k">:</span> sub,</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line">        subStrict<span class="pl-k">:</span> subStrict,</td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line">        elu<span class="pl-k">:</span> elu,</td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line">        leakyRelu<span class="pl-k">:</span> leakyRelu,</td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line">        prelu<span class="pl-k">:</span> prelu,</td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line">        relu<span class="pl-k">:</span> relu,</td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line">        selu<span class="pl-k">:</span> selu,</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line">        logicalAnd<span class="pl-k">:</span> logicalAnd,</td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line">        logicalNot<span class="pl-k">:</span> logicalNot,</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line">        logicalOr<span class="pl-k">:</span> logicalOr,</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line">        logicalXor<span class="pl-k">:</span> logicalXor,</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line">        where<span class="pl-k">:</span> where,</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line">        whereAsync<span class="pl-k">:</span> whereAsync,</td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line">        buffer<span class="pl-k">:</span> buffer,</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line">        print<span class="pl-k">:</span> print,</td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line">        batchToSpaceND<span class="pl-k">:</span> batchToSpaceND,</td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line">        cast<span class="pl-k">:</span> cast,</td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line">        clone<span class="pl-k">:</span> clone,</td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line">        cumsum<span class="pl-k">:</span> cumsum,</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line">        depthToSpace<span class="pl-k">:</span> depthToSpace,</td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line">        expandDims<span class="pl-k">:</span> expandDims,</td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line">        eye<span class="pl-k">:</span> eye,</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line">        multinomial<span class="pl-k">:</span> multinomial,</td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line">        oneHot<span class="pl-k">:</span> oneHot,</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line">        pad<span class="pl-k">:</span> pad,</td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line">        pad1d<span class="pl-k">:</span> pad1d,</td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line">        pad2d<span class="pl-k">:</span> pad2d,</td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line">        pad3d<span class="pl-k">:</span> pad3d,</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line">        pad4d<span class="pl-k">:</span> pad4d,</td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line">        rand<span class="pl-k">:</span> rand,</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line">        randomNormal<span class="pl-k">:</span> randomNormal,</td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line">        randomUniform<span class="pl-k">:</span> randomUniform,</td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line">        reshape<span class="pl-k">:</span> reshape,</td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line">        spaceToBatchND<span class="pl-k">:</span> spaceToBatchND,</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line">        squeeze<span class="pl-k">:</span> squeeze,</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line">        stack<span class="pl-k">:</span> stack,</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line">        tile<span class="pl-k">:</span> tile,</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line">        truncatedNormal<span class="pl-k">:</span> truncatedNormal,</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line">        unstack<span class="pl-k">:</span> unstack,</td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line">        setdiff1dAsync<span class="pl-k">:</span> setdiff1dAsync,</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line">        fill<span class="pl-k">:</span> fill,</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line">        linspace<span class="pl-k">:</span> linspace,</td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line">        ones<span class="pl-k">:</span> ones$1,</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line">        range<span class="pl-k">:</span> range,</td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line">        scalar<span class="pl-k">:</span> scalar,</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line">        tensor<span class="pl-k">:</span> tensor,</td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line">        tensor1d<span class="pl-k">:</span> tensor1d,</td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line">        tensor2d<span class="pl-k">:</span> tensor2d,</td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line">        tensor3d<span class="pl-k">:</span> tensor3d,</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line">        tensor4d<span class="pl-k">:</span> tensor4d,</td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line">        tensor5d<span class="pl-k">:</span> tensor5d,</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line">        tensor6d<span class="pl-k">:</span> tensor6d,</td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line">        zeros<span class="pl-k">:</span> zeros,</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line">        onesLike<span class="pl-k">:</span> onesLike,</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line">        zerosLike<span class="pl-k">:</span> zerosLike,</td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line">        transpose<span class="pl-k">:</span> transpose,</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line">        softmax<span class="pl-k">:</span> softmax,</td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line">        logSoftmax<span class="pl-k">:</span> logSoftmax,</td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line">        localResponseNormalization<span class="pl-k">:</span> localResponseNormalization,</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line">        norm<span class="pl-k">:</span> norm,</td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line">        gather<span class="pl-k">:</span> gather,</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line">        unsortedSegmentSum<span class="pl-k">:</span> unsortedSegmentSum,</td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line">        basicLSTMCell<span class="pl-k">:</span> basicLSTMCell,</td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line">        multiRNNCell<span class="pl-k">:</span> multiRNNCell,</td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line">        movingAverage<span class="pl-k">:</span> movingAverage,</td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line">        stridedSlice<span class="pl-k">:</span> stridedSlice,</td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line">        topk<span class="pl-k">:</span> topk,</td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line">        scatterND<span class="pl-k">:</span> scatterND,</td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line">        fft<span class="pl-k">:</span> fft,</td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line">        ifft<span class="pl-k">:</span> ifft,</td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line">        rfft<span class="pl-k">:</span> rfft,</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line">        irfft<span class="pl-k">:</span> irfft,</td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line">        sparseToDense<span class="pl-k">:</span> sparseToDense,</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line">        gatherND<span class="pl-k">:</span> gatherND,</td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line">        train<span class="pl-k">:</span> train,</td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line">        tidy<span class="pl-k">:</span> tidy,</td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line">        keep<span class="pl-k">:</span> keep,</td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line">        dispose<span class="pl-k">:</span> dispose,</td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line">        time<span class="pl-k">:</span> time,</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line">        profile<span class="pl-k">:</span> profile,</td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line">        customGrad<span class="pl-k">:</span> customGrad,</td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line">        grad<span class="pl-k">:</span> grad,</td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line">        grads<span class="pl-k">:</span> grads,</td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line">        valueAndGrad<span class="pl-k">:</span> valueAndGrad,</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line">        valueAndGrads<span class="pl-k">:</span> valueAndGrads,</td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line">        variableGrads<span class="pl-k">:</span> variableGrads</td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Dimensions <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">Dimensions</span>(<span class="pl-smi">width</span>, <span class="pl-smi">height</span>) {</td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isValidNumber</span>(width) <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-en">isValidNumber</span>(height)) {</td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Dimensions.constructor - expected width and height to be valid numbers, instead have <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>({ width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height }));</td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_width</span> <span class="pl-k">=</span> width;</td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_height</span> <span class="pl-k">=</span> height;</td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Dimensions</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_width</span>; },</td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Dimensions</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_height</span>; },</td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Dimensions</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">reverse</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Dimensions</span>(<span class="pl-c1">1</span> <span class="pl-k">/</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span>, <span class="pl-c1">1</span> <span class="pl-k">/</span> <span class="pl-c1">this</span>.<span class="pl-c1">height</span>);</td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> Dimensions;</td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">Point</span> <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">Point</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_x</span> <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_y</span> <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-c1">Point</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_x</span>; },</td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-c1">Point</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_y</span>; },</td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Point</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">pt</span>) {</td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-smi">pt</span>.<span class="pl-c1">x</span>, <span class="pl-c1">this</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> <span class="pl-smi">pt</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Point</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">sub</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">pt</span>) {</td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> <span class="pl-smi">pt</span>.<span class="pl-c1">x</span>, <span class="pl-c1">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> <span class="pl-smi">pt</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Point</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">mul</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">pt</span>) {</td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span> <span class="pl-k">*</span> <span class="pl-smi">pt</span>.<span class="pl-c1">x</span>, <span class="pl-c1">this</span>.<span class="pl-c1">y</span> <span class="pl-k">*</span> <span class="pl-smi">pt</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Point</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">div</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">pt</span>) {</td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span> <span class="pl-k">/</span> <span class="pl-smi">pt</span>.<span class="pl-c1">x</span>, <span class="pl-c1">this</span>.<span class="pl-c1">y</span> <span class="pl-k">/</span> <span class="pl-smi">pt</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Point</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">abs</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>), <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>));</td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Point</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">magnitude</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>, <span class="pl-c1">2</span>) <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>, <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Point</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">floor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>), <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>));</td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Point</span>;</td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isTensor</span>(<span class="pl-smi">tensor</span>, <span class="pl-smi">dim</span>) {</td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> tensor <span class="pl-k">instanceof</span> Tensor <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">tensor</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> dim;</td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isTensor1D</span>(<span class="pl-smi">tensor</span>) {</td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">isTensor</span>(tensor, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isTensor2D</span>(<span class="pl-smi">tensor</span>) {</td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">isTensor</span>(tensor, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isTensor3D</span>(<span class="pl-smi">tensor</span>) {</td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">isTensor</span>(tensor, <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isTensor4D</span>(<span class="pl-smi">tensor</span>) {</td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">isTensor</span>(tensor, <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isFloat</span>(<span class="pl-smi">num</span>) {</td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> num <span class="pl-k">%</span> <span class="pl-c1">1</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isEven$1</span>(<span class="pl-smi">num</span>) {</td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> num <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">round$1</span>(<span class="pl-smi">num</span>, <span class="pl-smi">prec</span>) {</td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (prec <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { prec <span class="pl-k">=</span> <span class="pl-c1">2</span>; }</td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, prec);</td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(num <span class="pl-k">*</span> f) <span class="pl-k">/</span> f;</td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isDimensions</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> obj <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">obj</span>.<span class="pl-c1">width</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">obj</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">computeReshapedDimensions</span>(<span class="pl-smi">_a</span>, <span class="pl-smi">inputSize</span>) {</td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> scale <span class="pl-k">=</span> inputSize <span class="pl-k">/</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(height, width);</td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Dimensions</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(width <span class="pl-k">*</span> scale), <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(height <span class="pl-k">*</span> scale));</td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getCenterPoint</span>(<span class="pl-smi">pts</span>) {</td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">pts</span>.<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">sum</span>, <span class="pl-smi">pt</span>) { <span class="pl-k">return</span> <span class="pl-smi">sum</span>.<span class="pl-c1">add</span>(pt); }, <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>))</td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code blob-code-inner js-file-line">            .<span class="pl-en">div</span>(<span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-smi">pts</span>.<span class="pl-c1">length</span>, <span class="pl-smi">pts</span>.<span class="pl-c1">length</span>));</td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">range$1</span>(<span class="pl-smi">num</span>, <span class="pl-smi">start</span>, <span class="pl-smi">step</span>) {</td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Array</span>(num).<span class="pl-en">fill</span>(<span class="pl-c1">0</span>).<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> start <span class="pl-k">+</span> (i <span class="pl-k">*</span> step); });</td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isValidNumber</span>(<span class="pl-smi">num</span>) {</td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">!!</span>num <span class="pl-k">&amp;&amp;</span> num <span class="pl-k">!==</span> <span class="pl-c1">Infinity</span> <span class="pl-k">&amp;&amp;</span> num <span class="pl-k">!==</span> <span class="pl-k">-</span><span class="pl-c1">Infinity</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-c1">isNaN</span>(num) <span class="pl-k">||</span> num <span class="pl-k">===</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isValidProbablitiy</span>(<span class="pl-smi">num</span>) {</td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">isValidNumber</span>(num) <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">0</span> <span class="pl-k">&lt;=</span> num <span class="pl-k">&amp;&amp;</span> num <span class="pl-k">&lt;=</span> <span class="pl-c1">1.0</span>;</td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Box <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">Box</span>(<span class="pl-smi">_box</span>, <span class="pl-smi">allowNegativeDimensions</span>) {</td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (allowNegativeDimensions <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { allowNegativeDimensions <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box <span class="pl-k">=</span> (_box <span class="pl-k">||</span> {});</td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> isBbox <span class="pl-k">=</span> [<span class="pl-smi">box</span>.<span class="pl-c1">left</span>, <span class="pl-smi">box</span>.<span class="pl-c1">top</span>, <span class="pl-smi">box</span>.<span class="pl-c1">right</span>, <span class="pl-smi">box</span>.<span class="pl-c1">bottom</span>].<span class="pl-en">every</span>(isValidNumber);</td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> isRect <span class="pl-k">=</span> [<span class="pl-smi">box</span>.<span class="pl-c1">x</span>, <span class="pl-smi">box</span>.<span class="pl-c1">y</span>, <span class="pl-smi">box</span>.<span class="pl-c1">width</span>, <span class="pl-smi">box</span>.<span class="pl-c1">height</span>].<span class="pl-en">every</span>(isValidNumber);</td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>isRect <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isBbox) {</td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Box.constructor - expected box to be IBoundingBox | IRect, instead have <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(box));</td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> isRect</td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> [<span class="pl-smi">box</span>.<span class="pl-c1">x</span>, <span class="pl-smi">box</span>.<span class="pl-c1">y</span>, <span class="pl-smi">box</span>.<span class="pl-c1">width</span>, <span class="pl-smi">box</span>.<span class="pl-c1">height</span>]</td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> [<span class="pl-smi">box</span>.<span class="pl-c1">left</span>, <span class="pl-smi">box</span>.<span class="pl-c1">top</span>, <span class="pl-smi">box</span>.<span class="pl-c1">right</span> <span class="pl-k">-</span> <span class="pl-smi">box</span>.<span class="pl-c1">left</span>, <span class="pl-smi">box</span>.<span class="pl-c1">bottom</span> <span class="pl-k">-</span> <span class="pl-smi">box</span>.<span class="pl-c1">top</span>], x <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], y <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>], width <span class="pl-k">=</span> _a[<span class="pl-c1">2</span>], height <span class="pl-k">=</span> _a[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">Box</span>.<span class="pl-en">assertIsValidBox</span>({ x<span class="pl-k">:</span> x, y<span class="pl-k">:</span> y, width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height }, <span class="pl-s"><span class="pl-pds">&#39;</span>Box.constructor<span class="pl-pds">&#39;</span></span>, allowNegativeDimensions);</td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_x</span> <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_y</span> <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_width</span> <span class="pl-k">=</span> width;</td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_height</span> <span class="pl-k">=</span> height;</td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-en">isRect</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">rect</span>) {</td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">!!</span>rect <span class="pl-k">&amp;&amp;</span> [<span class="pl-smi">rect</span>.<span class="pl-c1">x</span>, <span class="pl-smi">rect</span>.<span class="pl-c1">y</span>, <span class="pl-smi">rect</span>.<span class="pl-c1">width</span>, <span class="pl-smi">rect</span>.<span class="pl-c1">height</span>].<span class="pl-en">every</span>(isValidNumber);</td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-en">assertIsValidBox</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">box</span>, <span class="pl-smi">callee</span>, <span class="pl-smi">allowNegativeDimensions</span>) {</td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (allowNegativeDimensions <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { allowNegativeDimensions <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">Box</span>.<span class="pl-en">isRect</span>(box)) {</td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(callee <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - invalid box: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(box) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, expected object with properties x, y, width, height<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>allowNegativeDimensions <span class="pl-k">&amp;&amp;</span> (<span class="pl-smi">box</span>.<span class="pl-c1">width</span> <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> <span class="pl-smi">box</span>.<span class="pl-c1">height</span> <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>)) {</td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(callee <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - width (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">box</span>.<span class="pl-c1">width</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>) and height (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">box</span>.<span class="pl-c1">height</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>) must be positive numbers<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_x</span>; },</td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_y</span>; },</td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_width</span>; },</td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_height</span>; },</td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span>; },</td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span>; },</td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span>; },</td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> <span class="pl-c1">this</span>.<span class="pl-c1">height</span>; },</td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>area<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span> <span class="pl-k">*</span> <span class="pl-c1">this</span>.<span class="pl-c1">height</span>; },</td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>topLeft<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">this</span>.<span class="pl-c1">left</span>, <span class="pl-c1">this</span>.<span class="pl-c1">top</span>); },</td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>topRight<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">this</span>.<span class="pl-c1">right</span>, <span class="pl-c1">this</span>.<span class="pl-c1">top</span>); },</td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bottomLeft<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">this</span>.<span class="pl-c1">left</span>, <span class="pl-c1">this</span>.<span class="pl-c1">bottom</span>); },</td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bottomRight<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">this</span>.<span class="pl-c1">right</span>, <span class="pl-c1">this</span>.<span class="pl-c1">bottom</span>); },</td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">round</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> [<span class="pl-c1">this</span>.<span class="pl-c1">x</span>, <span class="pl-c1">this</span>.<span class="pl-c1">y</span>, <span class="pl-c1">this</span>.<span class="pl-c1">width</span>, <span class="pl-c1">this</span>.<span class="pl-c1">height</span>]</td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">val</span>) { <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(val); }), x <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], y <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>], width <span class="pl-k">=</span> _a[<span class="pl-c1">2</span>], height <span class="pl-k">=</span> _a[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>({ x<span class="pl-k">:</span> x, y<span class="pl-k">:</span> y, width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">floor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> [<span class="pl-c1">this</span>.<span class="pl-c1">x</span>, <span class="pl-c1">this</span>.<span class="pl-c1">y</span>, <span class="pl-c1">this</span>.<span class="pl-c1">width</span>, <span class="pl-c1">this</span>.<span class="pl-c1">height</span>]</td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">val</span>) { <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(val); }), x <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], y <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>], width <span class="pl-k">=</span> _a[<span class="pl-c1">2</span>], height <span class="pl-k">=</span> _a[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>({ x<span class="pl-k">:</span> x, y<span class="pl-k">:</span> y, width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toSquare</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>, x <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">x</span>, y <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">y</span>, width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> diff <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(width <span class="pl-k">-</span> height);</td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (width <span class="pl-k">&lt;</span> height) {</td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code blob-code-inner js-file-line">                x <span class="pl-k">-=</span> (diff <span class="pl-k">/</span> <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code blob-code-inner js-file-line">                width <span class="pl-k">+=</span> diff;</td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (height <span class="pl-k">&lt;</span> width) {</td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code blob-code-inner js-file-line">                y <span class="pl-k">-=</span> (diff <span class="pl-k">/</span> <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code blob-code-inner js-file-line">                height <span class="pl-k">+=</span> diff;</td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>({ x<span class="pl-k">:</span> x, y<span class="pl-k">:</span> y, width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">rescale</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">s</span>) {</td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scaleX <span class="pl-k">=</span> <span class="pl-en">isDimensions</span>(s) <span class="pl-k">?</span> <span class="pl-smi">s</span>.<span class="pl-c1">width</span> <span class="pl-k">:</span> s;</td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scaleY <span class="pl-k">=</span> <span class="pl-en">isDimensions</span>(s) <span class="pl-k">?</span> <span class="pl-smi">s</span>.<span class="pl-c1">height</span> <span class="pl-k">:</span> s;</td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>({</td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code blob-code-inner js-file-line">                x<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span> <span class="pl-k">*</span> scaleX,</td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code blob-code-inner js-file-line">                y<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span> <span class="pl-k">*</span> scaleY,</td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code blob-code-inner js-file-line">                width<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span> <span class="pl-k">*</span> scaleX,</td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code blob-code-inner js-file-line">                height<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-c1">height</span> <span class="pl-k">*</span> scaleY</td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">pad</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">padX</span>, <span class="pl-smi">padY</span>) {</td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> (padX <span class="pl-k">/</span> <span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> (padY <span class="pl-k">/</span> <span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-c1">width</span> <span class="pl-k">+</span> padX,</td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-c1">height</span> <span class="pl-k">+</span> padY</td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code blob-code-inner js-file-line">            ], x <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], y <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>], width <span class="pl-k">=</span> _a[<span class="pl-c1">2</span>], height <span class="pl-k">=</span> _a[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>({ x<span class="pl-k">:</span> x, y<span class="pl-k">:</span> y, width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clipAtImageBorders</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">imgWidth</span>, <span class="pl-smi">imgHeight</span>) {</td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>, x <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">x</span>, y <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">y</span>, right <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">right</span>, bottom <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">bottom</span>;</td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> clippedX <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(x, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> clippedY <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(y, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> newWidth <span class="pl-k">=</span> right <span class="pl-k">-</span> clippedX;</td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> newHeight <span class="pl-k">=</span> bottom <span class="pl-k">-</span> clippedY;</td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> clippedWidth <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(newWidth, imgWidth <span class="pl-k">-</span> clippedX);</td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> clippedHeight <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(newHeight, imgHeight <span class="pl-k">-</span> clippedY);</td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> (<span class="pl-k">new</span> <span class="pl-en">Box</span>({ x<span class="pl-k">:</span> clippedX, y<span class="pl-k">:</span> clippedY, width<span class="pl-k">:</span> clippedWidth, height<span class="pl-k">:</span> clippedHeight })).<span class="pl-en">floor</span>();</td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">shift</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">sx</span>, <span class="pl-smi">sy</span>) {</td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>, width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> x <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> sx;</td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> y <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> sy;</td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>({ x<span class="pl-k">:</span> x, y<span class="pl-k">:</span> y, width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">padAtBorders</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">imageHeight</span>, <span class="pl-smi">imageWidth</span>) {</td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> w <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> h <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">height</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> dx <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> dy <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> edx <span class="pl-k">=</span> w;</td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> edy <span class="pl-k">=</span> h;</td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> x <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">left</span>;</td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> y <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">top</span>;</td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ex <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">right</span>;</td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ey <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">bottom</span>;</td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (ex <span class="pl-k">&gt;</span> imageWidth) {</td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code blob-code-inner js-file-line">                edx <span class="pl-k">=</span> <span class="pl-k">-</span>ex <span class="pl-k">+</span> imageWidth <span class="pl-k">+</span> w;</td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code blob-code-inner js-file-line">                ex <span class="pl-k">=</span> imageWidth;</td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (ey <span class="pl-k">&gt;</span> imageHeight) {</td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code blob-code-inner js-file-line">                edy <span class="pl-k">=</span> <span class="pl-k">-</span>ey <span class="pl-k">+</span> imageHeight <span class="pl-k">+</span> h;</td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code blob-code-inner js-file-line">                ey <span class="pl-k">=</span> imageHeight;</td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (x <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code blob-code-inner js-file-line">                edy <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> x;</td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code blob-code-inner js-file-line">                x <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (y <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code blob-code-inner js-file-line">                edy <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> y;</td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code blob-code-inner js-file-line">                y <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { dy<span class="pl-k">:</span> dy, edy<span class="pl-k">:</span> edy, dx<span class="pl-k">:</span> dx, edx<span class="pl-k">:</span> edx, y<span class="pl-k">:</span> y, ey<span class="pl-k">:</span> ey, x<span class="pl-k">:</span> x, ex<span class="pl-k">:</span> ex, w<span class="pl-k">:</span> w, h<span class="pl-k">:</span> h };</td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Box</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">calibrate</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">region</span>) {</td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>({</td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code blob-code-inner js-file-line">                left<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-c1">left</span> <span class="pl-k">+</span> (<span class="pl-smi">region</span>.<span class="pl-c1">left</span> <span class="pl-k">*</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span>),</td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code blob-code-inner js-file-line">                top<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-c1">top</span> <span class="pl-k">+</span> (<span class="pl-smi">region</span>.<span class="pl-c1">top</span> <span class="pl-k">*</span> <span class="pl-c1">this</span>.<span class="pl-c1">height</span>),</td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code blob-code-inner js-file-line">                right<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-c1">right</span> <span class="pl-k">+</span> (<span class="pl-smi">region</span>.<span class="pl-c1">right</span> <span class="pl-k">*</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span>),</td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code blob-code-inner js-file-line">                bottom<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-c1">bottom</span> <span class="pl-k">+</span> (<span class="pl-smi">region</span>.<span class="pl-c1">bottom</span> <span class="pl-k">*</span> <span class="pl-c1">this</span>.<span class="pl-c1">height</span>)</td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code blob-code-inner js-file-line">            }).<span class="pl-en">toSquare</span>().<span class="pl-en">round</span>();</td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> Box;</td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> BoundingBox <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(BoundingBox, _super);</td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">BoundingBox</span>(<span class="pl-smi">left</span>, <span class="pl-smi">top</span>, <span class="pl-smi">right</span>, <span class="pl-smi">bottom</span>, <span class="pl-smi">allowNegativeDimensions</span>) {</td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (allowNegativeDimensions <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { allowNegativeDimensions <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, { left<span class="pl-k">:</span> left, top<span class="pl-k">:</span> top, right<span class="pl-k">:</span> right, bottom<span class="pl-k">:</span> bottom }, allowNegativeDimensions) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> BoundingBox;</td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code blob-code-inner js-file-line">    }(Box));</td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> LabeledBox <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(LabeledBox, _super);</td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">LabeledBox</span>(<span class="pl-smi">box</span>, <span class="pl-smi">label</span>) {</td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, box) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">_label</span> <span class="pl-k">=</span> label;</td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">LabeledBox</span>.<span class="pl-en">assertIsValidLabeledBox</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">box</span>, <span class="pl-smi">callee</span>) {</td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">Box</span>.<span class="pl-en">assertIsValidBox</span>(box, callee);</td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isValidNumber</span>(<span class="pl-smi">box</span>.<span class="pl-c1">label</span>)) {</td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(callee <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected property label (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">box</span>.<span class="pl-c1">label</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>) to be a number<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">LabeledBox</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>label<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_label</span>; },</td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> LabeledBox;</td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code blob-code-inner js-file-line">    }(Box));</td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ObjectDetection <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">ObjectDetection</span>(<span class="pl-smi">score</span>, <span class="pl-smi">classScore</span>, <span class="pl-smi">className</span>, <span class="pl-smi">relativeBox</span>, <span class="pl-smi">imageDims</span>) {</td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_imageDims</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Dimensions</span>(<span class="pl-smi">imageDims</span>.<span class="pl-c1">width</span>, <span class="pl-smi">imageDims</span>.<span class="pl-c1">height</span>);</td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_score</span> <span class="pl-k">=</span> score;</td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_classScore</span> <span class="pl-k">=</span> classScore;</td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_className</span> <span class="pl-k">=</span> className;</td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_box</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>(relativeBox).<span class="pl-en">rescale</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_imageDims</span>);</td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">ObjectDetection</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>score<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_score</span>; },</td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">ObjectDetection</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>classScore<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_classScore</span>; },</td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">ObjectDetection</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>className<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_className</span>; },</td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">ObjectDetection</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>box<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_box</span>; },</td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">ObjectDetection</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>imageDims<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_imageDims</span>; },</td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">ObjectDetection</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>imageWidth<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">imageDims</span>.<span class="pl-c1">width</span>; },</td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">ObjectDetection</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>imageHeight<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">imageDims</span>.<span class="pl-c1">height</span>; },</td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">ObjectDetection</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>relativeBox<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_box</span>).<span class="pl-en">rescale</span>(<span class="pl-c1">this</span>.<span class="pl-smi">imageDims</span>.<span class="pl-c1">reverse</span>()); },</td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ObjectDetection</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forSize</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">width</span>, <span class="pl-smi">height</span>) {</td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ObjectDetection</span>(<span class="pl-c1">this</span>.<span class="pl-smi">score</span>, <span class="pl-c1">this</span>.<span class="pl-smi">classScore</span>, <span class="pl-c1">this</span>.<span class="pl-c1">className</span>, <span class="pl-c1">this</span>.<span class="pl-smi">relativeBox</span>, { width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ObjectDetection;</td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictedBox <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictedBox, _super);</td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictedBox</span>(<span class="pl-smi">box</span>, <span class="pl-smi">label</span>, <span class="pl-smi">score</span>, <span class="pl-smi">classScore</span>) {</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, box, label) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">_score</span> <span class="pl-k">=</span> score;</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">_classScore</span> <span class="pl-k">=</span> classScore;</td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictedBox</span>.<span class="pl-en">assertIsValidPredictedBox</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">box</span>, <span class="pl-smi">callee</span>) {</td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">LabeledBox</span>.<span class="pl-en">assertIsValidLabeledBox</span>(box, callee);</td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isValidProbablitiy</span>(<span class="pl-smi">box</span>.<span class="pl-smi">score</span>)</td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-en">isValidProbablitiy</span>(<span class="pl-smi">box</span>.<span class="pl-smi">classScore</span>)) {</td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(callee <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected properties score (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">box</span>.<span class="pl-smi">score</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>) and (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">box</span>.<span class="pl-smi">classScore</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>) to be a number between [0, 1]<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">PredictedBox</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>score<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_score</span>; },</td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">PredictedBox</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>classScore<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_classScore</span>; },</td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictedBox;</td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code blob-code-inner js-file-line">    }(LabeledBox));</td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Rect <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(Rect, _super);</td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">Rect</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>, <span class="pl-smi">width</span>, <span class="pl-smi">height</span>, <span class="pl-smi">allowNegativeDimensions</span>) {</td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (allowNegativeDimensions <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { allowNegativeDimensions <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, { x<span class="pl-k">:</span> x, y<span class="pl-k">:</span> y, width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height }, allowNegativeDimensions) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> Rect;</td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code blob-code-inner js-file-line">    }(Box));</td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createBrowserEnv</span>() {</td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> fetch <span class="pl-k">=</span> <span class="pl-c1">window</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>fetch<span class="pl-pds">&#39;</span></span>] <span class="pl-k">||</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>fetch - missing fetch implementation for browser environment<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">readFile</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>readFile - filesystem not available for browser environment<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code blob-code-inner js-file-line">            Canvas<span class="pl-k">:</span> <span class="pl-c1">HTMLCanvasElement</span>,</td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">CanvasRenderingContext2D</span><span class="pl-k">:</span> <span class="pl-c1">CanvasRenderingContext2D</span>,</td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code blob-code-inner js-file-line">            Image<span class="pl-k">:</span> <span class="pl-c1">HTMLImageElement</span>,</td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">ImageData</span><span class="pl-k">:</span> <span class="pl-c1">ImageData</span>,</td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code blob-code-inner js-file-line">            Video<span class="pl-k">:</span> <span class="pl-c1">HTMLVideoElement</span>,</td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">createCanvasElement</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>canvas<span class="pl-pds">&#39;</span></span>); },</td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">createImageElement</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>img<span class="pl-pds">&#39;</span></span>); },</td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code blob-code-inner js-file-line">            fetch<span class="pl-k">:</span> fetch,</td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code blob-code-inner js-file-line">            readFile<span class="pl-k">:</span> readFile</td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createFileSystem</span>(<span class="pl-smi">fs</span>) {</td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> requireFsError <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>fs) {</td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code blob-code-inner js-file-line">                fs <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>fs<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">catch</span> (err) {</td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code blob-code-inner js-file-line">                requireFsError <span class="pl-k">=</span> <span class="pl-smi">err</span>.<span class="pl-c1">toString</span>();</td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> readFile <span class="pl-k">=</span> fs</td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">?</span> <span class="pl-k">function</span> (<span class="pl-smi">filePath</span>) {</td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Promise</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>, <span class="pl-smi">rej</span>) {</td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">fs</span>.<span class="pl-en">readFile</span>(filePath, <span class="pl-k">function</span> (<span class="pl-smi">err</span>, <span class="pl-smi">buffer</span>) {</td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> err <span class="pl-k">?</span> <span class="pl-en">rej</span>(err) <span class="pl-k">:</span> <span class="pl-en">res</span>(buffer);</td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code blob-code-inner js-file-line">                    });</td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>readFile - failed to require fs in nodejs environment with error: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> requireFsError);</td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code blob-code-inner js-file-line">            readFile<span class="pl-k">:</span> readFile</td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createNodejsEnv</span>() {</td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> Canvas <span class="pl-k">=</span> <span class="pl-c1">global</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>Canvas<span class="pl-pds">&#39;</span></span>] <span class="pl-k">||</span> <span class="pl-c1">global</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>HTMLCanvasElement<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> Image <span class="pl-k">=</span> <span class="pl-c1">global</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>Image<span class="pl-pds">&#39;</span></span>] <span class="pl-k">||</span> <span class="pl-c1">global</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>HTMLImageElement<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">createCanvasElement</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (Canvas) {</td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Canvas</span>();</td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>createCanvasElement - missing Canvas implementation for nodejs environment<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">createImageElement</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (Image) {</td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Image</span>();</td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>createImageElement - missing Image implementation for nodejs environment<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> fetch <span class="pl-k">=</span> <span class="pl-c1">global</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>fetch<span class="pl-pds">&#39;</span></span>] <span class="pl-k">||</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>fetch - missing fetch implementation for nodejs environment<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> fileSystem <span class="pl-k">=</span> <span class="pl-en">createFileSystem</span>();</td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__assign</span>({ Canvas<span class="pl-k">:</span> Canvas <span class="pl-k">||</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">function</span> <span class="pl-en">Canvas</span>() {</td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> Canvas;</td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code blob-code-inner js-file-line">            }()), <span class="pl-c1">CanvasRenderingContext2D</span><span class="pl-k">:</span> <span class="pl-c1">global</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>CanvasRenderingContext2D<span class="pl-pds">&#39;</span></span>] <span class="pl-k">||</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">function</span> <span class="pl-en">class_1</span>() {</td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> class_1;</td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code blob-code-inner js-file-line">            }()), Image<span class="pl-k">:</span> Image <span class="pl-k">||</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">function</span> <span class="pl-en">Image</span>() {</td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> Image;</td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code blob-code-inner js-file-line">            }()), <span class="pl-c1">ImageData</span><span class="pl-k">:</span> <span class="pl-c1">global</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>ImageData<span class="pl-pds">&#39;</span></span>] <span class="pl-k">||</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">function</span> <span class="pl-en">class_2</span>() {</td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> class_2;</td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code blob-code-inner js-file-line">            }()), Video<span class="pl-k">:</span> <span class="pl-c1">global</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>HTMLVideoElement<span class="pl-pds">&#39;</span></span>] <span class="pl-k">||</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">function</span> <span class="pl-en">class_3</span>() {</td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> class_3;</td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code blob-code-inner js-file-line">            }()), createCanvasElement<span class="pl-k">:</span> createCanvasElement,</td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code blob-code-inner js-file-line">            createImageElement<span class="pl-k">:</span> createImageElement,</td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code blob-code-inner js-file-line">            fetch<span class="pl-k">:</span> fetch }, fileSystem);</td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isBrowser</span>() {</td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">typeof</span> <span class="pl-c1">window</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">document</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">HTMLImageElement</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">HTMLCanvasElement</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">HTMLVideoElement</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">ImageData</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">CanvasRenderingContext2D</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isNodejs</span>() {</td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">typeof</span> <span class="pl-c1">global</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> require <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">module</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> issues with gatsby.js: module.exports is undefined</span></td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> &amp;&amp; !!module.exports</span></td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">process</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!!</span><span class="pl-c1">process</span>.<span class="pl-c1">version</span>;</td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> environment$1;</td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getEnv</span>() {</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>environment$1) {</td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>getEnv - environment is not defined, check isNodejs() and isBrowser()<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> environment$1;</td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">setEnv</span>(<span class="pl-smi">env</span>) {</td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code blob-code-inner js-file-line">        environment$1 <span class="pl-k">=</span> env;</td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">initialize</span>() {</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> check for isBrowser() first to prevent electron renderer process</span></td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> to be initialized with wrong environment due to isNodejs() returning true</span></td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isBrowser</span>()) {</td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">setEnv</span>(<span class="pl-en">createBrowserEnv</span>());</td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isNodejs</span>()) {</td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">setEnv</span>(<span class="pl-en">createNodejsEnv</span>());</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">monkeyPatch</span>(<span class="pl-smi">env</span>) {</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>environment$1) {</td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">initialize</span>();</td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>environment$1) {</td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>monkeyPatch - environment is not defined, check isNodejs() and isBrowser()<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-smi">Canvas</span>, Canvas <span class="pl-k">=</span> _a <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-smi">environment$1</span>.<span class="pl-smi">Canvas</span> <span class="pl-k">:</span> _a, _b <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-smi">Image</span>, Image <span class="pl-k">=</span> _b <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-smi">environment$1</span>.<span class="pl-smi">Image</span> <span class="pl-k">:</span> _b;</td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">environment$1</span>.<span class="pl-smi">Canvas</span> <span class="pl-k">=</span> Canvas;</td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">environment$1</span>.<span class="pl-smi">Image</span> <span class="pl-k">=</span> Image;</td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">environment$1</span>.<span class="pl-smi">createCanvasElement</span> <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-smi">createCanvasElement</span> <span class="pl-k">||</span> (<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Canvas</span>(); });</td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">environment$1</span>.<span class="pl-smi">createImageElement</span> <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-smi">createImageElement</span> <span class="pl-k">||</span> (<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Image</span>(); });</td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">environment$1</span>.<span class="pl-smi">ImageData</span> <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-smi">ImageData</span> <span class="pl-k">||</span> <span class="pl-smi">environment$1</span>.<span class="pl-smi">ImageData</span>;</td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">environment$1</span>.<span class="pl-smi">Video</span> <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-smi">Video</span> <span class="pl-k">||</span> <span class="pl-smi">environment$1</span>.<span class="pl-smi">Video</span>;</td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">environment$1</span>.<span class="pl-smi">fetch</span> <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-smi">fetch</span> <span class="pl-k">||</span> <span class="pl-smi">environment$1</span>.<span class="pl-smi">fetch</span>;</td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">environment$1</span>.<span class="pl-smi">readFile</span> <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-smi">readFile</span> <span class="pl-k">||</span> <span class="pl-smi">environment$1</span>.<span class="pl-smi">readFile</span>;</td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> env <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code blob-code-inner js-file-line">        getEnv<span class="pl-k">:</span> getEnv,</td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code blob-code-inner js-file-line">        setEnv<span class="pl-k">:</span> setEnv,</td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code blob-code-inner js-file-line">        initialize<span class="pl-k">:</span> initialize,</td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code blob-code-inner js-file-line">        createBrowserEnv<span class="pl-k">:</span> createBrowserEnv,</td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code blob-code-inner js-file-line">        createFileSystem<span class="pl-k">:</span> createFileSystem,</td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code blob-code-inner js-file-line">        createNodejsEnv<span class="pl-k">:</span> createNodejsEnv,</td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code blob-code-inner js-file-line">        monkeyPatch<span class="pl-k">:</span> monkeyPatch,</td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code blob-code-inner js-file-line">        isBrowser<span class="pl-k">:</span> isBrowser,</td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code blob-code-inner js-file-line">        isNodejs<span class="pl-k">:</span> isNodejs</td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">initialize</span>();</td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">resolveInput</span>(<span class="pl-smi">arg</span>) {</td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">env</span>.<span class="pl-en">isNodejs</span>() <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> arg <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(arg);</td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> arg;</td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getContext2dOrThrow</span>(<span class="pl-smi">canvasArg</span>) {</td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>(), Canvas <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Canvas</span>, <span class="pl-c1">CanvasRenderingContext2D</span> <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">CanvasRenderingContext2D</span>;</td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (canvasArg <span class="pl-k">instanceof</span> <span class="pl-c1">CanvasRenderingContext2D</span>) {</td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> canvasArg;</td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="LC947" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> canvas <span class="pl-k">=</span> <span class="pl-en">resolveInput</span>(canvasArg);</td>
      </tr>
      <tr>
        <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="LC948" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>(canvas <span class="pl-k">instanceof</span> Canvas)) {</td>
      </tr>
      <tr>
        <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="LC949" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>resolveContext2d - expected canvas to be of instance of Canvas<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="LC950" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="LC951" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-smi">canvas</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>2d<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="LC952" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>ctx) {</td>
      </tr>
      <tr>
        <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="LC953" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>resolveContext2d - canvas 2d context is null<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="LC954" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="LC955" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ctx;</td>
      </tr>
      <tr>
        <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="LC956" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="LC957" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="LC958" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> AnchorPosition;</td>
      </tr>
      <tr>
        <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="LC959" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span> (<span class="pl-smi">AnchorPosition</span>) {</td>
      </tr>
      <tr>
        <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="LC960" class="blob-code blob-code-inner js-file-line">        AnchorPosition[<span class="pl-s"><span class="pl-pds">&quot;</span>TOP_LEFT<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TOP_LEFT<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="LC961" class="blob-code blob-code-inner js-file-line">        AnchorPosition[<span class="pl-s"><span class="pl-pds">&quot;</span>TOP_RIGHT<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TOP_RIGHT<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="LC962" class="blob-code blob-code-inner js-file-line">        AnchorPosition[<span class="pl-s"><span class="pl-pds">&quot;</span>BOTTOM_LEFT<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>BOTTOM_LEFT<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="LC963" class="blob-code blob-code-inner js-file-line">        AnchorPosition[<span class="pl-s"><span class="pl-pds">&quot;</span>BOTTOM_RIGHT<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>BOTTOM_RIGHT<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="LC964" class="blob-code blob-code-inner js-file-line">    })(AnchorPosition <span class="pl-k">||</span> (AnchorPosition <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="LC965" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DrawTextFieldOptions <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="LC966" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DrawTextFieldOptions</span>(<span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="LC967" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="LC968" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> anchorPosition <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">anchorPosition</span>, backgroundColor <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-c1">backgroundColor</span>, fontColor <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">fontColor</span>, fontSize <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-c1">fontSize</span>, fontStyle <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">fontStyle</span>, padding <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">padding</span>;</td>
      </tr>
      <tr>
        <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="LC969" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">anchorPosition</span> <span class="pl-k">=</span> anchorPosition <span class="pl-k">||</span> <span class="pl-smi">AnchorPosition</span>.<span class="pl-c1">TOP_LEFT</span>;</td>
      </tr>
      <tr>
        <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="LC970" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-c1">backgroundColor</span> <span class="pl-k">=</span> backgroundColor <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>rgba(0, 0, 0, 0.5)<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="LC971" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">fontColor</span> <span class="pl-k">=</span> fontColor <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>rgba(255, 255, 255, 1)<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="LC972" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-c1">fontSize</span> <span class="pl-k">=</span> fontSize <span class="pl-k">||</span> <span class="pl-c1">14</span>;</td>
      </tr>
      <tr>
        <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="LC973" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">fontStyle</span> <span class="pl-k">=</span> fontStyle <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Georgia<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="LC974" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">padding</span> <span class="pl-k">=</span> padding <span class="pl-k">||</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="LC975" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="LC976" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DrawTextFieldOptions;</td>
      </tr>
      <tr>
        <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="LC977" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="LC978" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DrawTextField <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="LC979" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DrawTextField</span>(<span class="pl-smi">text</span>, <span class="pl-smi">anchor</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="LC980" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="LC981" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-c1">text</span> <span class="pl-k">=</span> <span class="pl-k">typeof</span> text <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="LC982" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> [text]</td>
      </tr>
      <tr>
        <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="LC983" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> (text <span class="pl-k">instanceof</span> DrawTextField <span class="pl-k">?</span> <span class="pl-smi">text</span>.<span class="pl-c1">text</span> <span class="pl-k">:</span> text);</td>
      </tr>
      <tr>
        <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="LC984" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">anchor</span> <span class="pl-k">=</span> anchor;</td>
      </tr>
      <tr>
        <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="LC985" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-c1">options</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">DrawTextFieldOptions</span>(options);</td>
      </tr>
      <tr>
        <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="LC986" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="LC987" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DrawTextField</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">measureWidth</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">ctx</span>) {</td>
      </tr>
      <tr>
        <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="LC988" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> padding <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">padding</span>;</td>
      </tr>
      <tr>
        <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="LC989" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">text</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">l</span>) { <span class="pl-k">return</span> <span class="pl-smi">ctx</span>.<span class="pl-en">measureText</span>(l).<span class="pl-c1">width</span>; }).<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">w0</span>, <span class="pl-smi">w1</span>) { <span class="pl-k">return</span> w0 <span class="pl-k">&lt;</span> w1 <span class="pl-k">?</span> w1 <span class="pl-k">:</span> w0; }, <span class="pl-c1">0</span>) <span class="pl-k">+</span> (<span class="pl-c1">2</span> <span class="pl-k">*</span> padding);</td>
      </tr>
      <tr>
        <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="LC990" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="LC991" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DrawTextField</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">measureHeight</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="LC992" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">options</span>, fontSize <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">fontSize</span>, padding <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">padding</span>;</td>
      </tr>
      <tr>
        <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="LC993" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">text</span>.<span class="pl-c1">length</span> <span class="pl-k">*</span> fontSize <span class="pl-k">+</span> (<span class="pl-c1">2</span> <span class="pl-k">*</span> padding);</td>
      </tr>
      <tr>
        <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="LC994" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="LC995" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DrawTextField</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getUpperLeft</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">ctx</span>, <span class="pl-smi">canvasDims</span>) {</td>
      </tr>
      <tr>
        <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="LC996" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> anchorPosition <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">anchorPosition</span>;</td>
      </tr>
      <tr>
        <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="LC997" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> isShiftLeft <span class="pl-k">=</span> anchorPosition <span class="pl-k">===</span> <span class="pl-smi">AnchorPosition</span>.<span class="pl-c1">BOTTOM_RIGHT</span> <span class="pl-k">||</span> anchorPosition <span class="pl-k">===</span> <span class="pl-smi">AnchorPosition</span>.<span class="pl-c1">TOP_RIGHT</span>;</td>
      </tr>
      <tr>
        <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="LC998" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> isShiftTop <span class="pl-k">=</span> anchorPosition <span class="pl-k">===</span> <span class="pl-smi">AnchorPosition</span>.<span class="pl-c1">BOTTOM_LEFT</span> <span class="pl-k">||</span> anchorPosition <span class="pl-k">===</span> <span class="pl-smi">AnchorPosition</span>.<span class="pl-c1">BOTTOM_RIGHT</span>;</td>
      </tr>
      <tr>
        <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="LC999" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> textFieldWidth <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">measureWidth</span>(ctx);</td>
      </tr>
      <tr>
        <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="LC1000" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> textFieldHeight <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">measureHeight</span>();</td>
      </tr>
      <tr>
        <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="LC1001" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> x <span class="pl-k">=</span> (isShiftLeft <span class="pl-k">?</span> <span class="pl-c1">this</span>.<span class="pl-smi">anchor</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> textFieldWidth <span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-smi">anchor</span>.<span class="pl-c1">x</span>);</td>
      </tr>
      <tr>
        <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="LC1002" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> y <span class="pl-k">=</span> isShiftTop <span class="pl-k">?</span> <span class="pl-c1">this</span>.<span class="pl-smi">anchor</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> textFieldHeight <span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-smi">anchor</span>.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="LC1003" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> adjust anchor if text box exceeds canvas borders</span></td>
      </tr>
      <tr>
        <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="LC1004" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (canvasDims) {</td>
      </tr>
      <tr>
        <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="LC1005" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> width <span class="pl-k">=</span> <span class="pl-smi">canvasDims</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">canvasDims</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="LC1006" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> newX <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(x, width <span class="pl-k">-</span> textFieldWidth), <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="LC1007" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> newY <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(y, height <span class="pl-k">-</span> textFieldHeight), <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="LC1008" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> { x<span class="pl-k">:</span> newX, y<span class="pl-k">:</span> newY };</td>
      </tr>
      <tr>
        <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="LC1009" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="LC1010" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { x<span class="pl-k">:</span> x, y<span class="pl-k">:</span> y };</td>
      </tr>
      <tr>
        <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="LC1011" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="LC1012" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DrawTextField</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">canvasArg</span>) {</td>
      </tr>
      <tr>
        <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="LC1013" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> canvas <span class="pl-k">=</span> <span class="pl-en">resolveInput</span>(canvasArg);</td>
      </tr>
      <tr>
        <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="LC1014" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-en">getContext2dOrThrow</span>(canvas);</td>
      </tr>
      <tr>
        <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="LC1015" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">options</span>, backgroundColor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">backgroundColor</span>, fontColor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">fontColor</span>, fontSize <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">fontSize</span>, fontStyle <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">fontStyle</span>, padding <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">padding</span>;</td>
      </tr>
      <tr>
        <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="LC1016" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-smi">font</span> <span class="pl-k">=</span> fontSize <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> fontStyle;</td>
      </tr>
      <tr>
        <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="LC1017" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> maxTextWidth <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">measureWidth</span>(ctx);</td>
      </tr>
      <tr>
        <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="LC1018" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> textHeight <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">measureHeight</span>();</td>
      </tr>
      <tr>
        <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="LC1019" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-smi">fillStyle</span> <span class="pl-k">=</span> backgroundColor;</td>
      </tr>
      <tr>
        <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="LC1020" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> upperLeft <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">getUpperLeft</span>(ctx, canvas);</td>
      </tr>
      <tr>
        <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="LC1021" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-en">fillRect</span>(<span class="pl-smi">upperLeft</span>.<span class="pl-c1">x</span>, <span class="pl-smi">upperLeft</span>.<span class="pl-c1">y</span>, maxTextWidth, textHeight);</td>
      </tr>
      <tr>
        <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="LC1022" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-smi">fillStyle</span> <span class="pl-k">=</span> fontColor;</td>
      </tr>
      <tr>
        <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="LC1023" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-c1">text</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">textLine</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="LC1024" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> x <span class="pl-k">=</span> padding <span class="pl-k">+</span> <span class="pl-smi">upperLeft</span>.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="LC1025" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> y <span class="pl-k">=</span> padding <span class="pl-k">+</span> <span class="pl-smi">upperLeft</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> ((i <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> fontSize);</td>
      </tr>
      <tr>
        <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="LC1026" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">ctx</span>.<span class="pl-en">fillText</span>(textLine, x, y);</td>
      </tr>
      <tr>
        <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="LC1027" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="LC1028" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="LC1029" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DrawTextField;</td>
      </tr>
      <tr>
        <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="LC1030" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="LC1031" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="LC1032" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DrawBoxOptions <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="LC1033" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DrawBoxOptions</span>(<span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="LC1034" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="LC1035" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxColor <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">boxColor</span>, lineWidth <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">lineWidth</span>, label <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-c1">label</span>, drawLabelOptions <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">drawLabelOptions</span>;</td>
      </tr>
      <tr>
        <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="LC1036" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">boxColor</span> <span class="pl-k">=</span> boxColor <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>rgba(0, 0, 255, 1)<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="LC1037" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">lineWidth</span> <span class="pl-k">=</span> lineWidth <span class="pl-k">||</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="LC1038" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> label;</td>
      </tr>
      <tr>
        <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="LC1039" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> defaultDrawLabelOptions <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="LC1040" class="blob-code blob-code-inner js-file-line">                anchorPosition<span class="pl-k">:</span> <span class="pl-smi">AnchorPosition</span>.<span class="pl-c1">BOTTOM_LEFT</span>,</td>
      </tr>
      <tr>
        <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="LC1041" class="blob-code blob-code-inner js-file-line">                backgroundColor<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-smi">boxColor</span></td>
      </tr>
      <tr>
        <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="LC1042" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="LC1043" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">drawLabelOptions</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">DrawTextFieldOptions</span>(<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({}, defaultDrawLabelOptions, drawLabelOptions));</td>
      </tr>
      <tr>
        <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="LC1044" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="LC1045" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DrawBoxOptions;</td>
      </tr>
      <tr>
        <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="LC1046" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="LC1047" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DrawBox <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="LC1048" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DrawBox</span>(<span class="pl-smi">box</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="LC1049" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="LC1050" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">box</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>(box);</td>
      </tr>
      <tr>
        <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="LC1051" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-c1">options</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">DrawBoxOptions</span>(options);</td>
      </tr>
      <tr>
        <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="LC1052" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="LC1053" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DrawBox</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">canvasArg</span>) {</td>
      </tr>
      <tr>
        <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="LC1054" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-en">getContext2dOrThrow</span>(canvasArg);</td>
      </tr>
      <tr>
        <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="LC1055" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">options</span>, boxColor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">boxColor</span>, lineWidth <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">lineWidth</span>;</td>
      </tr>
      <tr>
        <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="LC1056" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _b <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">box</span>, x <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-c1">x</span>, y <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-c1">y</span>, width <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="LC1057" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-smi">strokeStyle</span> <span class="pl-k">=</span> boxColor;</td>
      </tr>
      <tr>
        <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="LC1058" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-smi">lineWidth</span> <span class="pl-k">=</span> lineWidth;</td>
      </tr>
      <tr>
        <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="LC1059" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-en">strokeRect</span>(x, y, width, height);</td>
      </tr>
      <tr>
        <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="LC1060" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> label <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">label</span>;</td>
      </tr>
      <tr>
        <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="LC1061" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (label) {</td>
      </tr>
      <tr>
        <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="LC1062" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">new</span> <span class="pl-en">DrawTextField</span>([label], { x<span class="pl-k">:</span> x <span class="pl-k">-</span> (lineWidth <span class="pl-k">/</span> <span class="pl-c1">2</span>), y<span class="pl-k">:</span> y }, <span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">drawLabelOptions</span>).<span class="pl-en">draw</span>(canvasArg);</td>
      </tr>
      <tr>
        <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="LC1063" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="LC1064" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="LC1065" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DrawBox;</td>
      </tr>
      <tr>
        <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="LC1066" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="LC1067" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="LC1068" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="LC1069" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="LC1070" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> drawBase <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/*</span>#__PURE__<span class="pl-c">*/</span></span><span class="pl-c1">Object</span>.<span class="pl-en">freeze</span>({</td>
      </tr>
      <tr>
        <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="LC1071" class="blob-code blob-code-inner js-file-line">        DrawBoxOptions<span class="pl-k">:</span> DrawBoxOptions,</td>
      </tr>
      <tr>
        <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="LC1072" class="blob-code blob-code-inner js-file-line">        DrawBox<span class="pl-k">:</span> DrawBox,</td>
      </tr>
      <tr>
        <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="LC1073" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">get</span> <span class="pl-en">AnchorPosition</span> () { <span class="pl-k">return</span> AnchorPosition; },</td>
      </tr>
      <tr>
        <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="LC1074" class="blob-code blob-code-inner js-file-line">        DrawTextFieldOptions<span class="pl-k">:</span> DrawTextFieldOptions,</td>
      </tr>
      <tr>
        <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="LC1075" class="blob-code blob-code-inner js-file-line">        DrawTextField<span class="pl-k">:</span> DrawTextField</td>
      </tr>
      <tr>
        <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="LC1076" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="LC1077" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="LC1078" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">convLayer</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>, <span class="pl-smi">padding</span>, <span class="pl-smi">withRelu</span>) {</td>
      </tr>
      <tr>
        <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="LC1079" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (padding <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { padding <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>; }</td>
      </tr>
      <tr>
        <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="LC1080" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (withRelu <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { withRelu <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="LC1081" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="LC1082" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">add</span>(<span class="pl-en">conv2d</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">filters</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], padding), <span class="pl-smi">params</span>.<span class="pl-smi">bias</span>);</td>
      </tr>
      <tr>
        <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="LC1083" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> withRelu <span class="pl-k">?</span> <span class="pl-en">relu</span>(out) <span class="pl-k">:</span> out;</td>
      </tr>
      <tr>
        <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="LC1084" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="LC1085" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="LC1086" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="LC1087" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">disposeUnusedWeightTensors</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="LC1088" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-c1">keys</span>(weightMap).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">path</span>) {</td>
      </tr>
      <tr>
        <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="LC1089" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">paramMappings</span>.<span class="pl-en">some</span>(<span class="pl-k">function</span> (<span class="pl-smi">pm</span>) { <span class="pl-k">return</span> <span class="pl-smi">pm</span>.<span class="pl-smi">originalPath</span> <span class="pl-k">===</span> path; })) {</td>
      </tr>
      <tr>
        <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="LC1090" class="blob-code blob-code-inner js-file-line">                weightMap[path].<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="LC1091" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="LC1092" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="LC1093" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="LC1094" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="LC1095" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractConvParamsFactory</span>(<span class="pl-smi">extractWeights</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="LC1096" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span> (<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">filterSize</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="LC1097" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">tensor4d</span>(<span class="pl-en">extractWeights</span>(channelsIn <span class="pl-k">*</span> channelsOut <span class="pl-k">*</span> filterSize <span class="pl-k">*</span> filterSize), [filterSize, filterSize, channelsIn, channelsOut]);</td>
      </tr>
      <tr>
        <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="LC1098" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(channelsOut));</td>
      </tr>
      <tr>
        <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="LC1099" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span> });</td>
      </tr>
      <tr>
        <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="LC1100" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { filters<span class="pl-k">:</span> filters, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="LC1101" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="LC1102" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="LC1103" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="LC1104" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractFCParamsFactory</span>(<span class="pl-smi">extractWeights</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="LC1105" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span> (<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="LC1106" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc_weights <span class="pl-k">=</span> <span class="pl-en">tensor2d</span>(<span class="pl-en">extractWeights</span>(channelsIn <span class="pl-k">*</span> channelsOut), [channelsIn, channelsOut]);</td>
      </tr>
      <tr>
        <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="LC1107" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc_bias <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(channelsOut));</td>
      </tr>
      <tr>
        <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="LC1108" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/weights<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span> });</td>
      </tr>
      <tr>
        <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="LC1109" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="LC1110" class="blob-code blob-code-inner js-file-line">                weights<span class="pl-k">:</span> fc_weights,</td>
      </tr>
      <tr>
        <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="LC1111" class="blob-code blob-code-inner js-file-line">                bias<span class="pl-k">:</span> fc_bias</td>
      </tr>
      <tr>
        <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="LC1112" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="LC1113" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="LC1114" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="LC1115" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="LC1116" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> SeparableConvParams <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="LC1117" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">SeparableConvParams</span>(<span class="pl-smi">depthwise_filter</span>, <span class="pl-smi">pointwise_filter</span>, <span class="pl-smi">bias</span>) {</td>
      </tr>
      <tr>
        <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="LC1118" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">depthwise_filter</span> <span class="pl-k">=</span> depthwise_filter;</td>
      </tr>
      <tr>
        <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="LC1119" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">pointwise_filter</span> <span class="pl-k">=</span> pointwise_filter;</td>
      </tr>
      <tr>
        <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="LC1120" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">bias</span> <span class="pl-k">=</span> bias;</td>
      </tr>
      <tr>
        <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="LC1121" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="LC1122" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> SeparableConvParams;</td>
      </tr>
      <tr>
        <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="LC1123" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="LC1124" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="LC1125" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractSeparableConvParamsFactory</span>(<span class="pl-smi">extractWeights</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="LC1126" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span> (<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="LC1127" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> depthwise_filter <span class="pl-k">=</span> <span class="pl-en">tensor4d</span>(<span class="pl-en">extractWeights</span>(<span class="pl-c1">3</span> <span class="pl-k">*</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> channelsIn), [<span class="pl-c1">3</span>, <span class="pl-c1">3</span>, channelsIn, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="LC1128" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> pointwise_filter <span class="pl-k">=</span> <span class="pl-en">tensor4d</span>(<span class="pl-en">extractWeights</span>(channelsIn <span class="pl-k">*</span> channelsOut), [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>, channelsIn, channelsOut]);</td>
      </tr>
      <tr>
        <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="LC1129" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(channelsOut));</td>
      </tr>
      <tr>
        <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="LC1130" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/depthwise_filter<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/pointwise_filter<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span> });</td>
      </tr>
      <tr>
        <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="LC1131" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">SeparableConvParams</span>(depthwise_filter, pointwise_filter, bias);</td>
      </tr>
      <tr>
        <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="LC1132" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="LC1133" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="LC1134" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">loadSeparableConvParamsFactory</span>(<span class="pl-smi">extractWeightEntry</span>) {</td>
      </tr>
      <tr>
        <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="LC1135" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span> (<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="LC1136" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> depthwise_filter <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/depthwise_filter<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="LC1137" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> pointwise_filter <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/pointwise_filter<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="LC1138" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="LC1139" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">SeparableConvParams</span>(depthwise_filter, pointwise_filter, bias);</td>
      </tr>
      <tr>
        <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="LC1140" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="LC1141" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="LC1142" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="LC1143" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractWeightEntryFactory</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span> (<span class="pl-smi">originalPath</span>, <span class="pl-smi">paramRank</span>, <span class="pl-smi">mappedPath</span>) {</td>
      </tr>
      <tr>
        <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="LC1145" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> tensor <span class="pl-k">=</span> weightMap[originalPath];</td>
      </tr>
      <tr>
        <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="LC1146" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isTensor</span>(tensor, paramRank)) {</td>
      </tr>
      <tr>
        <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="LC1147" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expected weightMap[<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> originalPath <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>] to be a Tensor<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> paramRank <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>D, instead have <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> tensor);</td>
      </tr>
      <tr>
        <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="LC1148" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="LC1149" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ originalPath<span class="pl-k">:</span> originalPath, paramPath<span class="pl-k">:</span> mappedPath <span class="pl-k">||</span> originalPath });</td>
      </tr>
      <tr>
        <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="LC1150" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> tensor;</td>
      </tr>
      <tr>
        <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="LC1151" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="LC1152" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="LC1153" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="LC1154" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractWeightsFactory</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> remainingWeights <span class="pl-k">=</span> weights;</td>
      </tr>
      <tr>
        <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="LC1156" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractWeights</span>(<span class="pl-smi">numWeights</span>) {</td>
      </tr>
      <tr>
        <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="LC1157" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ret <span class="pl-k">=</span> <span class="pl-smi">remainingWeights</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, numWeights);</td>
      </tr>
      <tr>
        <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="LC1158" class="blob-code blob-code-inner js-file-line">            remainingWeights <span class="pl-k">=</span> <span class="pl-smi">remainingWeights</span>.<span class="pl-c1">slice</span>(numWeights);</td>
      </tr>
      <tr>
        <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="LC1159" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="LC1160" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="LC1161" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">getRemainingWeights</span>() {</td>
      </tr>
      <tr>
        <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="LC1162" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> remainingWeights;</td>
      </tr>
      <tr>
        <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="LC1163" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="LC1164" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="LC1165" class="blob-code blob-code-inner js-file-line">            extractWeights<span class="pl-k">:</span> extractWeights,</td>
      </tr>
      <tr>
        <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="LC1166" class="blob-code blob-code-inner js-file-line">            getRemainingWeights<span class="pl-k">:</span> getRemainingWeights</td>
      </tr>
      <tr>
        <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="LC1167" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="LC1168" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
        <td id="LC1169" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
        <td id="LC1170" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getModelUris</span>(<span class="pl-smi">uri</span>, <span class="pl-smi">defaultModelName</span>) {</td>
      </tr>
      <tr>
        <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
        <td id="LC1171" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> defaultManifestFilename <span class="pl-k">=</span> defaultModelName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-weights_manifest.json<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
        <td id="LC1172" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>uri) {</td>
      </tr>
      <tr>
        <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
        <td id="LC1173" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
        <td id="LC1174" class="blob-code blob-code-inner js-file-line">                modelBaseUri<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
        <td id="LC1175" class="blob-code blob-code-inner js-file-line">                manifestUri<span class="pl-k">:</span> defaultManifestFilename</td>
      </tr>
      <tr>
        <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
        <td id="LC1176" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
        <td id="LC1177" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
        <td id="LC1178" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (uri <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
        <td id="LC1179" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
        <td id="LC1180" class="blob-code blob-code-inner js-file-line">                modelBaseUri<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
        <td id="LC1181" class="blob-code blob-code-inner js-file-line">                manifestUri<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> defaultManifestFilename</td>
      </tr>
      <tr>
        <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
        <td id="LC1182" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
        <td id="LC1183" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
        <td id="LC1184" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> protocol <span class="pl-k">=</span> <span class="pl-smi">uri</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>http://<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>http://<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-smi">uri</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>https://<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>https://<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
        <td id="LC1185" class="blob-code blob-code-inner js-file-line">        uri <span class="pl-k">=</span> <span class="pl-smi">uri</span>.<span class="pl-c1">replace</span>(protocol, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
        <td id="LC1186" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> parts <span class="pl-k">=</span> <span class="pl-smi">uri</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>).<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">s</span>) { <span class="pl-k">return</span> s; });</td>
      </tr>
      <tr>
        <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
        <td id="LC1187" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> manifestFile <span class="pl-k">=</span> <span class="pl-smi">uri</span>.<span class="pl-en">endsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>.json<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
        <td id="LC1188" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">?</span> parts[<span class="pl-smi">parts</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>]</td>
      </tr>
      <tr>
        <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
        <td id="LC1189" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">:</span> defaultManifestFilename;</td>
      </tr>
      <tr>
        <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
        <td id="LC1190" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> modelBaseUri <span class="pl-k">=</span> protocol <span class="pl-k">+</span> (<span class="pl-smi">uri</span>.<span class="pl-en">endsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>.json<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-smi">parts</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, <span class="pl-smi">parts</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">:</span> parts).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
        <td id="LC1191" class="blob-code blob-code-inner js-file-line">        modelBaseUri <span class="pl-k">=</span> <span class="pl-smi">uri</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> modelBaseUri <span class="pl-k">:</span> modelBaseUri;</td>
      </tr>
      <tr>
        <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
        <td id="LC1192" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
        <td id="LC1193" class="blob-code blob-code-inner js-file-line">            modelBaseUri<span class="pl-k">:</span> modelBaseUri,</td>
      </tr>
      <tr>
        <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
        <td id="LC1194" class="blob-code blob-code-inner js-file-line">            manifestUri<span class="pl-k">:</span> modelBaseUri <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> manifestFile <span class="pl-k">:</span> modelBaseUri <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> manifestFile</td>
      </tr>
      <tr>
        <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
        <td id="LC1195" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
        <td id="LC1196" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
        <td id="LC1197" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
        <td id="LC1198" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isMediaLoaded</span>(<span class="pl-smi">media</span>) {</td>
      </tr>
      <tr>
        <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
        <td id="LC1199" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>(), Image <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Image</span>, Video <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Video</span>;</td>
      </tr>
      <tr>
        <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
        <td id="LC1200" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> (media <span class="pl-k">instanceof</span> Image <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">media</span>.<span class="pl-c1">complete</span>)</td>
      </tr>
      <tr>
        <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
        <td id="LC1201" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">||</span> (media <span class="pl-k">instanceof</span> Video <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">media</span>.<span class="pl-c1">readyState</span> <span class="pl-k">&gt;=</span> <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
        <td id="LC1202" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
        <td id="LC1203" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
        <td id="LC1204" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">awaitMediaLoaded</span>(<span class="pl-smi">media</span>) {</td>
      </tr>
      <tr>
        <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
        <td id="LC1205" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Promise</span>(<span class="pl-k">function</span> (<span class="pl-smi">resolve</span>, <span class="pl-smi">reject</span>) {</td>
      </tr>
      <tr>
        <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
        <td id="LC1206" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (media <span class="pl-k">instanceof</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-smi">Canvas</span> <span class="pl-k">||</span> <span class="pl-en">isMediaLoaded</span>(media)) {</td>
      </tr>
      <tr>
        <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
        <td id="LC1207" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">resolve</span>();</td>
      </tr>
      <tr>
        <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
        <td id="LC1208" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
        <td id="LC1209" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">onLoad</span>(<span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
        <td id="LC1210" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">currentTarget</span>)</td>
      </tr>
      <tr>
        <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
        <td id="LC1211" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
        <td id="LC1212" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">e</span>.<span class="pl-smi">currentTarget</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>load<span class="pl-pds">&#39;</span></span>, onLoad);</td>
      </tr>
      <tr>
        <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
        <td id="LC1213" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">e</span>.<span class="pl-smi">currentTarget</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>error<span class="pl-pds">&#39;</span></span>, onError);</td>
      </tr>
      <tr>
        <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
        <td id="LC1214" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">resolve</span>(e);</td>
      </tr>
      <tr>
        <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
        <td id="LC1215" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
        <td id="LC1216" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">onError</span>(<span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
        <td id="LC1217" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">currentTarget</span>)</td>
      </tr>
      <tr>
        <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
        <td id="LC1218" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
        <td id="LC1219" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">e</span>.<span class="pl-smi">currentTarget</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>load<span class="pl-pds">&#39;</span></span>, onLoad);</td>
      </tr>
      <tr>
        <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
        <td id="LC1220" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">e</span>.<span class="pl-smi">currentTarget</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>error<span class="pl-pds">&#39;</span></span>, onError);</td>
      </tr>
      <tr>
        <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
        <td id="LC1221" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">reject</span>(e);</td>
      </tr>
      <tr>
        <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
        <td id="LC1222" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
        <td id="LC1223" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">media</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>load<span class="pl-pds">&#39;</span></span>, onLoad);</td>
      </tr>
      <tr>
        <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
        <td id="LC1224" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">media</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>error<span class="pl-pds">&#39;</span></span>, onError);</td>
      </tr>
      <tr>
        <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
        <td id="LC1225" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
        <td id="LC1226" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
        <td id="LC1227" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
        <td id="LC1228" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">bufferToImage</span>(<span class="pl-smi">buf</span>) {</td>
      </tr>
      <tr>
        <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
        <td id="LC1229" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Promise</span>(<span class="pl-k">function</span> (<span class="pl-smi">resolve</span>, <span class="pl-smi">reject</span>) {</td>
      </tr>
      <tr>
        <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
        <td id="LC1230" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>(buf <span class="pl-k">instanceof</span> <span class="pl-c1">Blob</span>)) {</td>
      </tr>
      <tr>
        <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
        <td id="LC1231" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">reject</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>bufferToImage - expected buf to be of type: Blob<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
        <td id="LC1232" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
        <td id="LC1233" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> reader <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">FileReader</span>();</td>
      </tr>
      <tr>
        <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
        <td id="LC1234" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">reader</span>.<span class="pl-en">onload</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
        <td id="LC1235" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-smi">reader</span>.<span class="pl-smi">result</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
        <td id="LC1236" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-en">reject</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>bufferToImage - expected reader.result to be a string, in onload<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
        <td id="LC1237" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
        <td id="LC1238" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> img <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-en">createImageElement</span>();</td>
      </tr>
      <tr>
        <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
        <td id="LC1239" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">img</span>.<span class="pl-en">onload</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">resolve</span>(img); };</td>
      </tr>
      <tr>
        <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
        <td id="LC1240" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">img</span>.<span class="pl-smi">onerror</span> <span class="pl-k">=</span> reject;</td>
      </tr>
      <tr>
        <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
        <td id="LC1241" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">img</span>.<span class="pl-smi">src</span> <span class="pl-k">=</span> <span class="pl-smi">reader</span>.<span class="pl-smi">result</span>;</td>
      </tr>
      <tr>
        <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
        <td id="LC1242" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
        <td id="LC1243" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">reader</span>.<span class="pl-smi">onerror</span> <span class="pl-k">=</span> reject;</td>
      </tr>
      <tr>
        <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
        <td id="LC1244" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">reader</span>.<span class="pl-en">readAsDataURL</span>(buf);</td>
      </tr>
      <tr>
        <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
        <td id="LC1245" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
        <td id="LC1246" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
        <td id="LC1247" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
        <td id="LC1248" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getMediaDimensions</span>(<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
        <td id="LC1249" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>(), Image <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Image</span>, Video <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Video</span>;</td>
      </tr>
      <tr>
        <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
        <td id="LC1250" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (input <span class="pl-k">instanceof</span> Image) {</td>
      </tr>
      <tr>
        <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
        <td id="LC1251" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Dimensions</span>(<span class="pl-smi">input</span>.<span class="pl-smi">naturalWidth</span>, <span class="pl-smi">input</span>.<span class="pl-smi">naturalHeight</span>);</td>
      </tr>
      <tr>
        <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
        <td id="LC1252" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
        <td id="LC1253" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (input <span class="pl-k">instanceof</span> Video) {</td>
      </tr>
      <tr>
        <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
        <td id="LC1254" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Dimensions</span>(<span class="pl-smi">input</span>.<span class="pl-smi">videoWidth</span>, <span class="pl-smi">input</span>.<span class="pl-smi">videoHeight</span>);</td>
      </tr>
      <tr>
        <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
        <td id="LC1255" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
        <td id="LC1256" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Dimensions</span>(<span class="pl-smi">input</span>.<span class="pl-c1">width</span>, <span class="pl-smi">input</span>.<span class="pl-c1">height</span>);</td>
      </tr>
      <tr>
        <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
        <td id="LC1257" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
        <td id="LC1258" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
        <td id="LC1259" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createCanvas</span>(<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
        <td id="LC1260" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
        <td id="LC1261" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> createCanvasElement <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-smi">createCanvasElement</span>;</td>
      </tr>
      <tr>
        <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
        <td id="LC1262" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> canvas <span class="pl-k">=</span> <span class="pl-en">createCanvasElement</span>();</td>
      </tr>
      <tr>
        <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
        <td id="LC1263" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">canvas</span>.<span class="pl-c1">width</span> <span class="pl-k">=</span> width;</td>
      </tr>
      <tr>
        <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
        <td id="LC1264" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">canvas</span>.<span class="pl-c1">height</span> <span class="pl-k">=</span> height;</td>
      </tr>
      <tr>
        <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
        <td id="LC1265" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> canvas;</td>
      </tr>
      <tr>
        <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
        <td id="LC1266" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
        <td id="LC1267" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createCanvasFromMedia</span>(<span class="pl-smi">media</span>, <span class="pl-smi">dims</span>) {</td>
      </tr>
      <tr>
        <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
        <td id="LC1268" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-c1">ImageData</span> <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-smi">ImageData</span>;</td>
      </tr>
      <tr>
        <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
        <td id="LC1269" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>(media <span class="pl-k">instanceof</span> <span class="pl-c1">ImageData</span>) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">isMediaLoaded</span>(media)) {</td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>createCanvasFromMedia - media has not finished loading yet<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
        <td id="LC1271" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
        <td id="LC1272" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> dims <span class="pl-k">||</span> <span class="pl-en">getMediaDimensions</span>(media), width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
        <td id="LC1273" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> canvas <span class="pl-k">=</span> <span class="pl-en">createCanvas</span>({ width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
        <td id="LC1274" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (media <span class="pl-k">instanceof</span> <span class="pl-c1">ImageData</span>) {</td>
      </tr>
      <tr>
        <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
        <td id="LC1275" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">getContext2dOrThrow</span>(canvas).<span class="pl-en">putImageData</span>(media, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
        <td id="LC1276" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
        <td id="LC1277" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
        <td id="LC1278" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">getContext2dOrThrow</span>(canvas).<span class="pl-en">drawImage</span>(media, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, width, height);</td>
      </tr>
      <tr>
        <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
        <td id="LC1279" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
        <td id="LC1280" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> canvas;</td>
      </tr>
      <tr>
        <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
        <td id="LC1281" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
        <td id="LC1282" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
        <td id="LC1283" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">fetchOrThrow</span>(<span class="pl-smi">url</span>, <span class="pl-smi">init</span>) {</td>
      </tr>
      <tr>
        <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
        <td id="LC1284" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
        <td id="LC1285" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fetch, res;</td>
      </tr>
      <tr>
        <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
        <td id="LC1286" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
        <td id="LC1287" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
        <td id="LC1288" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
        <td id="LC1289" class="blob-code blob-code-inner js-file-line">                        fetch <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-smi">fetch</span>;</td>
      </tr>
      <tr>
        <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
        <td id="LC1290" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">fetch</span>(url, init)];</td>
      </tr>
      <tr>
        <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
        <td id="LC1291" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
        <td id="LC1292" class="blob-code blob-code-inner js-file-line">                        res <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
        <td id="LC1293" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-smi">res</span>.<span class="pl-c1">status</span> <span class="pl-k">&lt;</span> <span class="pl-c1">400</span>)) {</td>
      </tr>
      <tr>
        <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
        <td id="LC1294" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>failed to fetch: (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">res</span>.<span class="pl-c1">status</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>) <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">res</span>.<span class="pl-c1">statusText</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, from url: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">res</span>.<span class="pl-smi">url</span>);</td>
      </tr>
      <tr>
        <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
        <td id="LC1295" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
        <td id="LC1296" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, res];</td>
      </tr>
      <tr>
        <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
        <td id="LC1297" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
        <td id="LC1298" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
        <td id="LC1299" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
        <td id="LC1300" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
        <td id="LC1301" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
        <td id="LC1302" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">fetchImage</span>(<span class="pl-smi">uri</span>) {</td>
      </tr>
      <tr>
        <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
        <td id="LC1303" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
        <td id="LC1304" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> res, blob;</td>
      </tr>
      <tr>
        <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
        <td id="LC1305" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
        <td id="LC1306" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
        <td id="LC1307" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">fetchOrThrow</span>(uri)];</td>
      </tr>
      <tr>
        <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
        <td id="LC1308" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code blob-code-inner js-file-line">                        res <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, (res).<span class="pl-en">blob</span>()];</td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code blob-code-inner js-file-line">                        blob <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
        <td id="LC1313" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">blob</span>.<span class="pl-c1">type</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>image/<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
        <td id="LC1314" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>fetchImage - expected blob type to be of type image/*, instead have: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">blob</span>.<span class="pl-c1">type</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, for url: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">res</span>.<span class="pl-smi">url</span>);</td>
      </tr>
      <tr>
        <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
        <td id="LC1315" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
        <td id="LC1316" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">bufferToImage</span>(blob)];</td>
      </tr>
      <tr>
        <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
        <td id="LC1317" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
        <td id="LC1318" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
        <td id="LC1319" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
        <td id="LC1320" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
        <td id="LC1321" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
        <td id="LC1322" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">fetchJson</span>(<span class="pl-smi">uri</span>) {</td>
      </tr>
      <tr>
        <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
        <td id="LC1323" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
        <td id="LC1324" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
        <td id="LC1325" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
        <td id="LC1326" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">fetchOrThrow</span>(uri)];</td>
      </tr>
      <tr>
        <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
        <td id="LC1327" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, (<span class="pl-smi">_a</span>.<span class="pl-en">sent</span>()).<span class="pl-en">json</span>()];</td>
      </tr>
      <tr>
        <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
        <td id="LC1328" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
        <td id="LC1329" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
        <td id="LC1330" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
        <td id="LC1331" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
        <td id="LC1332" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
        <td id="LC1333" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">fetchNetWeights</span>(<span class="pl-smi">uri</span>) {</td>
      </tr>
      <tr>
        <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
        <td id="LC1334" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
        <td id="LC1335" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
        <td id="LC1336" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
        <td id="LC1337" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
        <td id="LC1338" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
        <td id="LC1339" class="blob-code blob-code-inner js-file-line">                        _a <span class="pl-k">=</span> <span class="pl-c1">Float32Array</span>.<span class="pl-smi">bind</span>;</td>
      </tr>
      <tr>
        <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
        <td id="LC1340" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">fetchOrThrow</span>(uri)];</td>
      </tr>
      <tr>
        <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
        <td id="LC1341" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, (<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()).<span class="pl-en">arrayBuffer</span>()];</td>
      </tr>
      <tr>
        <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
        <td id="LC1342" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">2</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-k">new</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">Float32Array</span>, [<span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()]))()];</td>
      </tr>
      <tr>
        <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
        <td id="LC1343" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
        <td id="LC1344" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
        <td id="LC1345" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
        <td id="LC1346" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
        <td id="LC1347" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
        <td id="LC1348" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">imageTensorToCanvas</span>(<span class="pl-smi">imgTensor</span>, <span class="pl-smi">canvas</span>) {</td>
      </tr>
      <tr>
        <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
        <td id="LC1349" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
        <td id="LC1350" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> targetCanvas, _a, height, width, numChannels, imgTensor3D;</td>
      </tr>
      <tr>
        <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
        <td id="LC1351" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
        <td id="LC1352" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
        <td id="LC1353" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
        <td id="LC1354" class="blob-code blob-code-inner js-file-line">                        targetCanvas <span class="pl-k">=</span> canvas <span class="pl-k">||</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-en">createCanvasElement</span>();</td>
      </tr>
      <tr>
        <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
        <td id="LC1355" class="blob-code blob-code-inner js-file-line">                        _a <span class="pl-k">=</span> <span class="pl-smi">imgTensor</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>(<span class="pl-en">isTensor4D</span>(imgTensor) <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>), height <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], width <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>], numChannels <span class="pl-k">=</span> _a[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
        <td id="LC1356" class="blob-code blob-code-inner js-file-line">                        imgTensor3D <span class="pl-k">=</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-smi">imgTensor</span>.<span class="pl-en">as3D</span>(height, width, numChannels).<span class="pl-en">toInt</span>(); });</td>
      </tr>
      <tr>
        <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
        <td id="LC1357" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">browser</span>.<span class="pl-en">toPixels</span>(imgTensor3D, targetCanvas)];</td>
      </tr>
      <tr>
        <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
        <td id="LC1358" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
        <td id="LC1359" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
        <td id="LC1360" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">imgTensor3D</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
        <td id="LC1361" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, targetCanvas];</td>
      </tr>
      <tr>
        <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
        <td id="LC1362" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
        <td id="LC1363" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
        <td id="LC1364" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
        <td id="LC1365" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
        <td id="LC1366" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
        <td id="LC1367" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">imageToSquare</span>(<span class="pl-smi">input</span>, <span class="pl-smi">inputSize</span>, <span class="pl-smi">centerImage</span>) {</td>
      </tr>
      <tr>
        <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
        <td id="LC1368" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (centerImage <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { centerImage <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
        <td id="LC1369" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>(), Image <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Image</span>, Canvas <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Canvas</span>;</td>
      </tr>
      <tr>
        <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
        <td id="LC1370" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>(input <span class="pl-k">instanceof</span> Image <span class="pl-k">||</span> input <span class="pl-k">instanceof</span> Canvas)) {</td>
      </tr>
      <tr>
        <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
        <td id="LC1371" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
        <td id="LC1372" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
        <td id="LC1373" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dims <span class="pl-k">=</span> <span class="pl-en">getMediaDimensions</span>(input);</td>
      </tr>
      <tr>
        <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
        <td id="LC1374" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> scale <span class="pl-k">=</span> inputSize <span class="pl-k">/</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">dims</span>.<span class="pl-c1">height</span>, <span class="pl-smi">dims</span>.<span class="pl-c1">width</span>);</td>
      </tr>
      <tr>
        <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
        <td id="LC1375" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> width <span class="pl-k">=</span> scale <span class="pl-k">*</span> <span class="pl-smi">dims</span>.<span class="pl-c1">width</span>;</td>
      </tr>
      <tr>
        <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
        <td id="LC1376" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> height <span class="pl-k">=</span> scale <span class="pl-k">*</span> <span class="pl-smi">dims</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
        <td id="LC1377" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> targetCanvas <span class="pl-k">=</span> <span class="pl-en">createCanvas</span>({ width<span class="pl-k">:</span> inputSize, height<span class="pl-k">:</span> inputSize });</td>
      </tr>
      <tr>
        <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
        <td id="LC1378" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> inputCanvas <span class="pl-k">=</span> input <span class="pl-k">instanceof</span> Canvas <span class="pl-k">?</span> input <span class="pl-k">:</span> <span class="pl-en">createCanvasFromMedia</span>(input);</td>
      </tr>
      <tr>
        <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
        <td id="LC1379" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> offset <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(width <span class="pl-k">-</span> height) <span class="pl-k">/</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
        <td id="LC1380" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dx <span class="pl-k">=</span> centerImage <span class="pl-k">&amp;&amp;</span> width <span class="pl-k">&lt;</span> height <span class="pl-k">?</span> offset <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
        <td id="LC1381" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dy <span class="pl-k">=</span> centerImage <span class="pl-k">&amp;&amp;</span> height <span class="pl-k">&lt;</span> width <span class="pl-k">?</span> offset <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1382" class="blob-num js-line-number" data-line-number="1382"></td>
        <td id="LC1382" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">getContext2dOrThrow</span>(targetCanvas).<span class="pl-en">drawImage</span>(inputCanvas, dx, dy, width, height);</td>
      </tr>
      <tr>
        <td id="L1383" class="blob-num js-line-number" data-line-number="1383"></td>
        <td id="LC1383" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> targetCanvas;</td>
      </tr>
      <tr>
        <td id="L1384" class="blob-num js-line-number" data-line-number="1384"></td>
        <td id="LC1384" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1385" class="blob-num js-line-number" data-line-number="1385"></td>
        <td id="LC1385" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1386" class="blob-num js-line-number" data-line-number="1386"></td>
        <td id="LC1386" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isMediaElement</span>(<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L1387" class="blob-num js-line-number" data-line-number="1387"></td>
        <td id="LC1387" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>(), Image <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Image</span>, Canvas <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Canvas</span>, Video <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">Video</span>;</td>
      </tr>
      <tr>
        <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
        <td id="LC1388" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> input <span class="pl-k">instanceof</span> Image</td>
      </tr>
      <tr>
        <td id="L1389" class="blob-num js-line-number" data-line-number="1389"></td>
        <td id="LC1389" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">||</span> input <span class="pl-k">instanceof</span> Canvas</td>
      </tr>
      <tr>
        <td id="L1390" class="blob-num js-line-number" data-line-number="1390"></td>
        <td id="LC1390" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">||</span> input <span class="pl-k">instanceof</span> Video;</td>
      </tr>
      <tr>
        <td id="L1391" class="blob-num js-line-number" data-line-number="1391"></td>
        <td id="LC1391" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1392" class="blob-num js-line-number" data-line-number="1392"></td>
        <td id="LC1392" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1393" class="blob-num js-line-number" data-line-number="1393"></td>
        <td id="LC1393" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">loadWeightMap</span>(<span class="pl-smi">uri</span>, <span class="pl-smi">defaultModelName</span>) {</td>
      </tr>
      <tr>
        <td id="L1394" class="blob-num js-line-number" data-line-number="1394"></td>
        <td id="LC1394" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1395" class="blob-num js-line-number" data-line-number="1395"></td>
        <td id="LC1395" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a, manifestUri, modelBaseUri, manifest;</td>
      </tr>
      <tr>
        <td id="L1396" class="blob-num js-line-number" data-line-number="1396"></td>
        <td id="LC1396" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L1397" class="blob-num js-line-number" data-line-number="1397"></td>
        <td id="LC1397" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1398" class="blob-num js-line-number" data-line-number="1398"></td>
        <td id="LC1398" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L1399" class="blob-num js-line-number" data-line-number="1399"></td>
        <td id="LC1399" class="blob-code blob-code-inner js-file-line">                        _a <span class="pl-k">=</span> <span class="pl-en">getModelUris</span>(uri, defaultModelName), manifestUri <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">manifestUri</span>, modelBaseUri <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">modelBaseUri</span>;</td>
      </tr>
      <tr>
        <td id="L1400" class="blob-num js-line-number" data-line-number="1400"></td>
        <td id="LC1400" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">fetchJson</span>(manifestUri)];</td>
      </tr>
      <tr>
        <td id="L1401" class="blob-num js-line-number" data-line-number="1401"></td>
        <td id="LC1401" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L1402" class="blob-num js-line-number" data-line-number="1402"></td>
        <td id="LC1402" class="blob-code blob-code-inner js-file-line">                        manifest <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L1403" class="blob-num js-line-number" data-line-number="1403"></td>
        <td id="LC1403" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">io</span>.<span class="pl-en">loadWeights</span>(manifest, modelBaseUri)];</td>
      </tr>
      <tr>
        <td id="L1404" class="blob-num js-line-number" data-line-number="1404"></td>
        <td id="LC1404" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1405" class="blob-num js-line-number" data-line-number="1405"></td>
        <td id="LC1405" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1406" class="blob-num js-line-number" data-line-number="1406"></td>
        <td id="LC1406" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1407" class="blob-num js-line-number" data-line-number="1407"></td>
        <td id="LC1407" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1408" class="blob-num js-line-number" data-line-number="1408"></td>
        <td id="LC1408" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1409" class="blob-num js-line-number" data-line-number="1409"></td>
        <td id="LC1409" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">matchDimensions</span>(<span class="pl-smi">input</span>, <span class="pl-smi">reference</span>, <span class="pl-smi">useMediaDimensions</span>) {</td>
      </tr>
      <tr>
        <td id="L1410" class="blob-num js-line-number" data-line-number="1410"></td>
        <td id="LC1410" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (useMediaDimensions <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { useMediaDimensions <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L1411" class="blob-num js-line-number" data-line-number="1411"></td>
        <td id="LC1411" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> useMediaDimensions</td>
      </tr>
      <tr>
        <td id="L1412" class="blob-num js-line-number" data-line-number="1412"></td>
        <td id="LC1412" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">?</span> <span class="pl-en">getMediaDimensions</span>(reference)</td>
      </tr>
      <tr>
        <td id="L1413" class="blob-num js-line-number" data-line-number="1413"></td>
        <td id="LC1413" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">:</span> reference, width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L1414" class="blob-num js-line-number" data-line-number="1414"></td>
        <td id="LC1414" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">input</span>.<span class="pl-c1">width</span> <span class="pl-k">=</span> width;</td>
      </tr>
      <tr>
        <td id="L1415" class="blob-num js-line-number" data-line-number="1415"></td>
        <td id="LC1415" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">input</span>.<span class="pl-c1">height</span> <span class="pl-k">=</span> height;</td>
      </tr>
      <tr>
        <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
        <td id="LC1416" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height };</td>
      </tr>
      <tr>
        <td id="L1417" class="blob-num js-line-number" data-line-number="1417"></td>
        <td id="LC1417" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1418" class="blob-num js-line-number" data-line-number="1418"></td>
        <td id="LC1418" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1419" class="blob-num js-line-number" data-line-number="1419"></td>
        <td id="LC1419" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1420" class="blob-num js-line-number" data-line-number="1420"></td>
        <td id="LC1420" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Pads the smaller dimension of an image tensor with zeros, such that width === height.</span></td>
      </tr>
      <tr>
        <td id="L1421" class="blob-num js-line-number" data-line-number="1421"></td>
        <td id="LC1421" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1422" class="blob-num js-line-number" data-line-number="1422"></td>
        <td id="LC1422" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">imgTensor</span> The image tensor.</span></td>
      </tr>
      <tr>
        <td id="L1423" class="blob-num js-line-number" data-line-number="1423"></td>
        <td id="LC1423" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">isCenterImage</span> (optional, default: false) If true, add an equal amount of padding on</span></td>
      </tr>
      <tr>
        <td id="L1424" class="blob-num js-line-number" data-line-number="1424"></td>
        <td id="LC1424" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * both sides of the minor dimension oof the image.</span></td>
      </tr>
      <tr>
        <td id="L1425" class="blob-num js-line-number" data-line-number="1425"></td>
        <td id="LC1425" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> The padded tensor with width === height.</span></td>
      </tr>
      <tr>
        <td id="L1426" class="blob-num js-line-number" data-line-number="1426"></td>
        <td id="LC1426" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1427" class="blob-num js-line-number" data-line-number="1427"></td>
        <td id="LC1427" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">padToSquare</span>(<span class="pl-smi">imgTensor</span>, <span class="pl-smi">isCenterImage</span>) {</td>
      </tr>
      <tr>
        <td id="L1428" class="blob-num js-line-number" data-line-number="1428"></td>
        <td id="LC1428" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isCenterImage <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isCenterImage <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L1429" class="blob-num js-line-number" data-line-number="1429"></td>
        <td id="LC1429" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1430" class="blob-num js-line-number" data-line-number="1430"></td>
        <td id="LC1430" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">imgTensor</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>), height <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], width <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1431" class="blob-num js-line-number" data-line-number="1431"></td>
        <td id="LC1431" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (height <span class="pl-k">===</span> width) {</td>
      </tr>
      <tr>
        <td id="L1432" class="blob-num js-line-number" data-line-number="1432"></td>
        <td id="LC1432" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> imgTensor;</td>
      </tr>
      <tr>
        <td id="L1433" class="blob-num js-line-number" data-line-number="1433"></td>
        <td id="LC1433" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1434" class="blob-num js-line-number" data-line-number="1434"></td>
        <td id="LC1434" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> dimDiff <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(height <span class="pl-k">-</span> width);</td>
      </tr>
      <tr>
        <td id="L1435" class="blob-num js-line-number" data-line-number="1435"></td>
        <td id="LC1435" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> paddingAmount <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(dimDiff <span class="pl-k">*</span> (isCenterImage <span class="pl-k">?</span> <span class="pl-c1">0.5</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L1436" class="blob-num js-line-number" data-line-number="1436"></td>
        <td id="LC1436" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> paddingAxis <span class="pl-k">=</span> height <span class="pl-k">&gt;</span> width <span class="pl-k">?</span> <span class="pl-c1">2</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1437" class="blob-num js-line-number" data-line-number="1437"></td>
        <td id="LC1437" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> <span class="pl-en">createPaddingTensor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">paddingAmount</span>) {</td>
      </tr>
      <tr>
        <td id="L1438" class="blob-num js-line-number" data-line-number="1438"></td>
        <td id="LC1438" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> paddingTensorShape <span class="pl-k">=</span> <span class="pl-smi">imgTensor</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L1439" class="blob-num js-line-number" data-line-number="1439"></td>
        <td id="LC1439" class="blob-code blob-code-inner js-file-line">                paddingTensorShape[paddingAxis] <span class="pl-k">=</span> paddingAmount;</td>
      </tr>
      <tr>
        <td id="L1440" class="blob-num js-line-number" data-line-number="1440"></td>
        <td id="LC1440" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">fill</span>(paddingTensorShape, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L1441" class="blob-num js-line-number" data-line-number="1441"></td>
        <td id="LC1441" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1442" class="blob-num js-line-number" data-line-number="1442"></td>
        <td id="LC1442" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> paddingTensorAppend <span class="pl-k">=</span> <span class="pl-en">createPaddingTensor</span>(paddingAmount);</td>
      </tr>
      <tr>
        <td id="L1443" class="blob-num js-line-number" data-line-number="1443"></td>
        <td id="LC1443" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> remainingPaddingAmount <span class="pl-k">=</span> dimDiff <span class="pl-k">-</span> <span class="pl-smi">paddingTensorAppend</span>.<span class="pl-c1">shape</span>[paddingAxis];</td>
      </tr>
      <tr>
        <td id="L1444" class="blob-num js-line-number" data-line-number="1444"></td>
        <td id="LC1444" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> paddingTensorPrepend <span class="pl-k">=</span> isCenterImage <span class="pl-k">&amp;&amp;</span> remainingPaddingAmount</td>
      </tr>
      <tr>
        <td id="L1445" class="blob-num js-line-number" data-line-number="1445"></td>
        <td id="LC1445" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-en">createPaddingTensor</span>(remainingPaddingAmount)</td>
      </tr>
      <tr>
        <td id="L1446" class="blob-num js-line-number" data-line-number="1446"></td>
        <td id="LC1446" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1447" class="blob-num js-line-number" data-line-number="1447"></td>
        <td id="LC1447" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> tensorsToStack <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L1448" class="blob-num js-line-number" data-line-number="1448"></td>
        <td id="LC1448" class="blob-code blob-code-inner js-file-line">                paddingTensorPrepend,</td>
      </tr>
      <tr>
        <td id="L1449" class="blob-num js-line-number" data-line-number="1449"></td>
        <td id="LC1449" class="blob-code blob-code-inner js-file-line">                imgTensor,</td>
      </tr>
      <tr>
        <td id="L1450" class="blob-num js-line-number" data-line-number="1450"></td>
        <td id="LC1450" class="blob-code blob-code-inner js-file-line">                paddingTensorAppend</td>
      </tr>
      <tr>
        <td id="L1451" class="blob-num js-line-number" data-line-number="1451"></td>
        <td id="LC1451" class="blob-code blob-code-inner js-file-line">            ]</td>
      </tr>
      <tr>
        <td id="L1452" class="blob-num js-line-number" data-line-number="1452"></td>
        <td id="LC1452" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">t</span>) { <span class="pl-k">return</span> <span class="pl-k">!!</span>t; })</td>
      </tr>
      <tr>
        <td id="L1453" class="blob-num js-line-number" data-line-number="1453"></td>
        <td id="LC1453" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">t</span>) { <span class="pl-k">return</span> <span class="pl-smi">t</span>.<span class="pl-en">toFloat</span>(); });</td>
      </tr>
      <tr>
        <td id="L1454" class="blob-num js-line-number" data-line-number="1454"></td>
        <td id="LC1454" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">concat</span>(tensorsToStack, paddingAxis);</td>
      </tr>
      <tr>
        <td id="L1455" class="blob-num js-line-number" data-line-number="1455"></td>
        <td id="LC1455" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1456" class="blob-num js-line-number" data-line-number="1456"></td>
        <td id="LC1456" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1457" class="blob-num js-line-number" data-line-number="1457"></td>
        <td id="LC1457" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1458" class="blob-num js-line-number" data-line-number="1458"></td>
        <td id="LC1458" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> NetInput <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1459" class="blob-num js-line-number" data-line-number="1459"></td>
        <td id="LC1459" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">NetInput</span>(<span class="pl-smi">inputs</span>, <span class="pl-smi">treatAsBatchInput</span>) {</td>
      </tr>
      <tr>
        <td id="L1460" class="blob-num js-line-number" data-line-number="1460"></td>
        <td id="LC1460" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (treatAsBatchInput <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { treatAsBatchInput <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L1461" class="blob-num js-line-number" data-line-number="1461"></td>
        <td id="LC1461" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L1462" class="blob-num js-line-number" data-line-number="1462"></td>
        <td id="LC1462" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_imageTensors</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1463" class="blob-num js-line-number" data-line-number="1463"></td>
        <td id="LC1463" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_canvases</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1464" class="blob-num js-line-number" data-line-number="1464"></td>
        <td id="LC1464" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_treatAsBatchInput</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1465" class="blob-num js-line-number" data-line-number="1465"></td>
        <td id="LC1465" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_inputDimensions</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1466" class="blob-num js-line-number" data-line-number="1466"></td>
        <td id="LC1466" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(inputs)) {</td>
      </tr>
      <tr>
        <td id="L1467" class="blob-num js-line-number" data-line-number="1467"></td>
        <td id="LC1467" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> inputs);</td>
      </tr>
      <tr>
        <td id="L1468" class="blob-num js-line-number" data-line-number="1468"></td>
        <td id="LC1468" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1469" class="blob-num js-line-number" data-line-number="1469"></td>
        <td id="LC1469" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_treatAsBatchInput</span> <span class="pl-k">=</span> treatAsBatchInput;</td>
      </tr>
      <tr>
        <td id="L1470" class="blob-num js-line-number" data-line-number="1470"></td>
        <td id="LC1470" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_batchSize</span> <span class="pl-k">=</span> <span class="pl-smi">inputs</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L1471" class="blob-num js-line-number" data-line-number="1471"></td>
        <td id="LC1471" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">inputs</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L1472" class="blob-num js-line-number" data-line-number="1472"></td>
        <td id="LC1472" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">isTensor3D</span>(input)) {</td>
      </tr>
      <tr>
        <td id="L1473" class="blob-num js-line-number" data-line-number="1473"></td>
        <td id="LC1473" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">_this</span>.<span class="pl-smi">_imageTensors</span>[idx] <span class="pl-k">=</span> input;</td>
      </tr>
      <tr>
        <td id="L1474" class="blob-num js-line-number" data-line-number="1474"></td>
        <td id="LC1474" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">_this</span>.<span class="pl-smi">_inputDimensions</span>[idx] <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-c1">shape</span>;</td>
      </tr>
      <tr>
        <td id="L1475" class="blob-num js-line-number" data-line-number="1475"></td>
        <td id="LC1475" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1476" class="blob-num js-line-number" data-line-number="1476"></td>
        <td id="LC1476" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1477" class="blob-num js-line-number" data-line-number="1477"></td>
        <td id="LC1477" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">isTensor4D</span>(input)) {</td>
      </tr>
      <tr>
        <td id="L1478" class="blob-num js-line-number" data-line-number="1478"></td>
        <td id="LC1478" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> batchSize <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1479" class="blob-num js-line-number" data-line-number="1479"></td>
        <td id="LC1479" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (batchSize <span class="pl-k">!==</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1480" class="blob-num js-line-number" data-line-number="1480"></td>
        <td id="LC1480" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NetInput - tf.Tensor4D with batchSize <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> batchSize <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> passed, but not supported in input array<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1481" class="blob-num js-line-number" data-line-number="1481"></td>
        <td id="LC1481" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1482" class="blob-num js-line-number" data-line-number="1482"></td>
        <td id="LC1482" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">_this</span>.<span class="pl-smi">_imageTensors</span>[idx] <span class="pl-k">=</span> input;</td>
      </tr>
      <tr>
        <td id="L1483" class="blob-num js-line-number" data-line-number="1483"></td>
        <td id="LC1483" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">_this</span>.<span class="pl-smi">_inputDimensions</span>[idx] <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1484" class="blob-num js-line-number" data-line-number="1484"></td>
        <td id="LC1484" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1485" class="blob-num js-line-number" data-line-number="1485"></td>
        <td id="LC1485" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1486" class="blob-num js-line-number" data-line-number="1486"></td>
        <td id="LC1486" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> canvas <span class="pl-k">=</span> input <span class="pl-k">instanceof</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-smi">Canvas</span> <span class="pl-k">?</span> input <span class="pl-k">:</span> <span class="pl-en">createCanvasFromMedia</span>(input);</td>
      </tr>
      <tr>
        <td id="L1487" class="blob-num js-line-number" data-line-number="1487"></td>
        <td id="LC1487" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">_this</span>.<span class="pl-smi">_canvases</span>[idx] <span class="pl-k">=</span> canvas;</td>
      </tr>
      <tr>
        <td id="L1488" class="blob-num js-line-number" data-line-number="1488"></td>
        <td id="LC1488" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">_this</span>.<span class="pl-smi">_inputDimensions</span>[idx] <span class="pl-k">=</span> [<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span>, <span class="pl-smi">canvas</span>.<span class="pl-c1">width</span>, <span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L1489" class="blob-num js-line-number" data-line-number="1489"></td>
        <td id="LC1489" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1490" class="blob-num js-line-number" data-line-number="1490"></td>
        <td id="LC1490" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1491" class="blob-num js-line-number" data-line-number="1491"></td>
        <td id="LC1491" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>imageTensors<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1492" class="blob-num js-line-number" data-line-number="1492"></td>
        <td id="LC1492" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1493" class="blob-num js-line-number" data-line-number="1493"></td>
        <td id="LC1493" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_imageTensors</span>;</td>
      </tr>
      <tr>
        <td id="L1494" class="blob-num js-line-number" data-line-number="1494"></td>
        <td id="LC1494" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L1495" class="blob-num js-line-number" data-line-number="1495"></td>
        <td id="LC1495" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1496" class="blob-num js-line-number" data-line-number="1496"></td>
        <td id="LC1496" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1497" class="blob-num js-line-number" data-line-number="1497"></td>
        <td id="LC1497" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1498" class="blob-num js-line-number" data-line-number="1498"></td>
        <td id="LC1498" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>canvases<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1499" class="blob-num js-line-number" data-line-number="1499"></td>
        <td id="LC1499" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1500" class="blob-num js-line-number" data-line-number="1500"></td>
        <td id="LC1500" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_canvases</span>;</td>
      </tr>
      <tr>
        <td id="L1501" class="blob-num js-line-number" data-line-number="1501"></td>
        <td id="LC1501" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L1502" class="blob-num js-line-number" data-line-number="1502"></td>
        <td id="LC1502" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1503" class="blob-num js-line-number" data-line-number="1503"></td>
        <td id="LC1503" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1504" class="blob-num js-line-number" data-line-number="1504"></td>
        <td id="LC1504" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1505" class="blob-num js-line-number" data-line-number="1505"></td>
        <td id="LC1505" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>isBatchInput<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1506" class="blob-num js-line-number" data-line-number="1506"></td>
        <td id="LC1506" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1507" class="blob-num js-line-number" data-line-number="1507"></td>
        <td id="LC1507" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">batchSize</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_treatAsBatchInput</span>;</td>
      </tr>
      <tr>
        <td id="L1508" class="blob-num js-line-number" data-line-number="1508"></td>
        <td id="LC1508" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L1509" class="blob-num js-line-number" data-line-number="1509"></td>
        <td id="LC1509" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1510" class="blob-num js-line-number" data-line-number="1510"></td>
        <td id="LC1510" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1511" class="blob-num js-line-number" data-line-number="1511"></td>
        <td id="LC1511" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1512" class="blob-num js-line-number" data-line-number="1512"></td>
        <td id="LC1512" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>batchSize<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1513" class="blob-num js-line-number" data-line-number="1513"></td>
        <td id="LC1513" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1514" class="blob-num js-line-number" data-line-number="1514"></td>
        <td id="LC1514" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_batchSize</span>;</td>
      </tr>
      <tr>
        <td id="L1515" class="blob-num js-line-number" data-line-number="1515"></td>
        <td id="LC1515" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L1516" class="blob-num js-line-number" data-line-number="1516"></td>
        <td id="LC1516" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1517" class="blob-num js-line-number" data-line-number="1517"></td>
        <td id="LC1517" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1518" class="blob-num js-line-number" data-line-number="1518"></td>
        <td id="LC1518" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1519" class="blob-num js-line-number" data-line-number="1519"></td>
        <td id="LC1519" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>inputDimensions<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1520" class="blob-num js-line-number" data-line-number="1520"></td>
        <td id="LC1520" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1521" class="blob-num js-line-number" data-line-number="1521"></td>
        <td id="LC1521" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_inputDimensions</span>;</td>
      </tr>
      <tr>
        <td id="L1522" class="blob-num js-line-number" data-line-number="1522"></td>
        <td id="LC1522" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L1523" class="blob-num js-line-number" data-line-number="1523"></td>
        <td id="LC1523" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1524" class="blob-num js-line-number" data-line-number="1524"></td>
        <td id="LC1524" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1525" class="blob-num js-line-number" data-line-number="1525"></td>
        <td id="LC1525" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1526" class="blob-num js-line-number" data-line-number="1526"></td>
        <td id="LC1526" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>inputSize<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1527" class="blob-num js-line-number" data-line-number="1527"></td>
        <td id="LC1527" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1528" class="blob-num js-line-number" data-line-number="1528"></td>
        <td id="LC1528" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_inputSize</span>;</td>
      </tr>
      <tr>
        <td id="L1529" class="blob-num js-line-number" data-line-number="1529"></td>
        <td id="LC1529" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L1530" class="blob-num js-line-number" data-line-number="1530"></td>
        <td id="LC1530" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1531" class="blob-num js-line-number" data-line-number="1531"></td>
        <td id="LC1531" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1532" class="blob-num js-line-number" data-line-number="1532"></td>
        <td id="LC1532" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1533" class="blob-num js-line-number" data-line-number="1533"></td>
        <td id="LC1533" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>reshapedInputDimensions<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1534" class="blob-num js-line-number" data-line-number="1534"></td>
        <td id="LC1534" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1535" class="blob-num js-line-number" data-line-number="1535"></td>
        <td id="LC1535" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L1536" class="blob-num js-line-number" data-line-number="1536"></td>
        <td id="LC1536" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">range$1</span>(<span class="pl-c1">this</span>.<span class="pl-smi">batchSize</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>).<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">batchIdx</span>) { <span class="pl-k">return</span> <span class="pl-smi">_this</span>.<span class="pl-en">getReshapedInputDimensions</span>(batchIdx); });</td>
      </tr>
      <tr>
        <td id="L1537" class="blob-num js-line-number" data-line-number="1537"></td>
        <td id="LC1537" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L1538" class="blob-num js-line-number" data-line-number="1538"></td>
        <td id="LC1538" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1539" class="blob-num js-line-number" data-line-number="1539"></td>
        <td id="LC1539" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1540" class="blob-num js-line-number" data-line-number="1540"></td>
        <td id="LC1540" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1541" class="blob-num js-line-number" data-line-number="1541"></td>
        <td id="LC1541" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">batchIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L1542" class="blob-num js-line-number" data-line-number="1542"></td>
        <td id="LC1542" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">canvases</span>[batchIdx] <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">imageTensors</span>[batchIdx];</td>
      </tr>
      <tr>
        <td id="L1543" class="blob-num js-line-number" data-line-number="1543"></td>
        <td id="LC1543" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1544" class="blob-num js-line-number" data-line-number="1544"></td>
        <td id="LC1544" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getInputDimensions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">batchIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L1545" class="blob-num js-line-number" data-line-number="1545"></td>
        <td id="LC1545" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_inputDimensions</span>[batchIdx];</td>
      </tr>
      <tr>
        <td id="L1546" class="blob-num js-line-number" data-line-number="1546"></td>
        <td id="LC1546" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1547" class="blob-num js-line-number" data-line-number="1547"></td>
        <td id="LC1547" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getInputHeight</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">batchIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L1548" class="blob-num js-line-number" data-line-number="1548"></td>
        <td id="LC1548" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_inputDimensions</span>[batchIdx][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1549" class="blob-num js-line-number" data-line-number="1549"></td>
        <td id="LC1549" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1550" class="blob-num js-line-number" data-line-number="1550"></td>
        <td id="LC1550" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getInputWidth</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">batchIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L1551" class="blob-num js-line-number" data-line-number="1551"></td>
        <td id="LC1551" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_inputDimensions</span>[batchIdx][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1552" class="blob-num js-line-number" data-line-number="1552"></td>
        <td id="LC1552" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1553" class="blob-num js-line-number" data-line-number="1553"></td>
        <td id="LC1553" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getReshapedInputDimensions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">batchIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L1554" class="blob-num js-line-number" data-line-number="1554"></td>
        <td id="LC1554" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-smi">inputSize</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1555" class="blob-num js-line-number" data-line-number="1555"></td>
        <td id="LC1555" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1556" class="blob-num js-line-number" data-line-number="1556"></td>
        <td id="LC1556" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1557" class="blob-num js-line-number" data-line-number="1557"></td>
        <td id="LC1557" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> width <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">getInputWidth</span>(batchIdx);</td>
      </tr>
      <tr>
        <td id="L1558" class="blob-num js-line-number" data-line-number="1558"></td>
        <td id="LC1558" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> height <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">getInputHeight</span>(batchIdx);</td>
      </tr>
      <tr>
        <td id="L1559" class="blob-num js-line-number" data-line-number="1559"></td>
        <td id="LC1559" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">computeReshapedDimensions</span>({ width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height }, <span class="pl-c1">this</span>.<span class="pl-smi">inputSize</span>);</td>
      </tr>
      <tr>
        <td id="L1560" class="blob-num js-line-number" data-line-number="1560"></td>
        <td id="LC1560" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1561" class="blob-num js-line-number" data-line-number="1561"></td>
        <td id="LC1561" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1562" class="blob-num js-line-number" data-line-number="1562"></td>
        <td id="LC1562" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Create a batch tensor from all input canvases and tensors</span></td>
      </tr>
      <tr>
        <td id="L1563" class="blob-num js-line-number" data-line-number="1563"></td>
        <td id="LC1563" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * with size [batchSize, inputSize, inputSize, 3].</span></td>
      </tr>
      <tr>
        <td id="L1564" class="blob-num js-line-number" data-line-number="1564"></td>
        <td id="LC1564" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         *</span></td>
      </tr>
      <tr>
        <td id="L1565" class="blob-num js-line-number" data-line-number="1565"></td>
        <td id="LC1565" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@param</span> <span class="pl-smi">inputSize</span> Height and width of the tensor.</span></td>
      </tr>
      <tr>
        <td id="L1566" class="blob-num js-line-number" data-line-number="1566"></td>
        <td id="LC1566" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@param</span> <span class="pl-smi">isCenterImage</span> (optional, default: false) If true, add an equal amount of padding on</span></td>
      </tr>
      <tr>
        <td id="L1567" class="blob-num js-line-number" data-line-number="1567"></td>
        <td id="LC1567" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * both sides of the minor dimension oof the image.</span></td>
      </tr>
      <tr>
        <td id="L1568" class="blob-num js-line-number" data-line-number="1568"></td>
        <td id="LC1568" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@returns</span> The batch tensor.</span></td>
      </tr>
      <tr>
        <td id="L1569" class="blob-num js-line-number" data-line-number="1569"></td>
        <td id="LC1569" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1570" class="blob-num js-line-number" data-line-number="1570"></td>
        <td id="LC1570" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NetInput</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toBatchTensor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">inputSize</span>, <span class="pl-smi">isCenterInputs</span>) {</td>
      </tr>
      <tr>
        <td id="L1571" class="blob-num js-line-number" data-line-number="1571"></td>
        <td id="LC1571" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L1572" class="blob-num js-line-number" data-line-number="1572"></td>
        <td id="LC1572" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isCenterInputs <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isCenterInputs <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L1573" class="blob-num js-line-number" data-line-number="1573"></td>
        <td id="LC1573" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_inputSize</span> <span class="pl-k">=</span> inputSize;</td>
      </tr>
      <tr>
        <td id="L1574" class="blob-num js-line-number" data-line-number="1574"></td>
        <td id="LC1574" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1575" class="blob-num js-line-number" data-line-number="1575"></td>
        <td id="LC1575" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> inputTensors <span class="pl-k">=</span> <span class="pl-en">range$1</span>(<span class="pl-smi">_this</span>.<span class="pl-smi">batchSize</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>).<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">batchIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L1576" class="blob-num js-line-number" data-line-number="1576"></td>
        <td id="LC1576" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> input <span class="pl-k">=</span> <span class="pl-smi">_this</span>.<span class="pl-en">getInput</span>(batchIdx);</td>
      </tr>
      <tr>
        <td id="L1577" class="blob-num js-line-number" data-line-number="1577"></td>
        <td id="LC1577" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (input <span class="pl-k">instanceof</span> Tensor) {</td>
      </tr>
      <tr>
        <td id="L1578" class="blob-num js-line-number" data-line-number="1578"></td>
        <td id="LC1578" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> imgTensor <span class="pl-k">=</span> <span class="pl-en">isTensor4D</span>(input) <span class="pl-k">?</span> input <span class="pl-k">:</span> <span class="pl-smi">input</span>.<span class="pl-en">expandDims</span>();</td>
      </tr>
      <tr>
        <td id="L1579" class="blob-num js-line-number" data-line-number="1579"></td>
        <td id="LC1579" class="blob-code blob-code-inner js-file-line">                        imgTensor <span class="pl-k">=</span> <span class="pl-en">padToSquare</span>(imgTensor, isCenterInputs);</td>
      </tr>
      <tr>
        <td id="L1580" class="blob-num js-line-number" data-line-number="1580"></td>
        <td id="LC1580" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-smi">imgTensor</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">1</span>] <span class="pl-k">!==</span> inputSize <span class="pl-k">||</span> <span class="pl-smi">imgTensor</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">2</span>] <span class="pl-k">!==</span> inputSize) {</td>
      </tr>
      <tr>
        <td id="L1581" class="blob-num js-line-number" data-line-number="1581"></td>
        <td id="LC1581" class="blob-code blob-code-inner js-file-line">                            imgTensor <span class="pl-k">=</span> <span class="pl-smi">image_ops</span>.<span class="pl-en">resizeBilinear</span>(imgTensor, [inputSize, inputSize]);</td>
      </tr>
      <tr>
        <td id="L1582" class="blob-num js-line-number" data-line-number="1582"></td>
        <td id="LC1582" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1583" class="blob-num js-line-number" data-line-number="1583"></td>
        <td id="LC1583" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> <span class="pl-smi">imgTensor</span>.<span class="pl-en">as3D</span>(inputSize, inputSize, <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L1584" class="blob-num js-line-number" data-line-number="1584"></td>
        <td id="LC1584" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1585" class="blob-num js-line-number" data-line-number="1585"></td>
        <td id="LC1585" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (input <span class="pl-k">instanceof</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-smi">Canvas</span>) {</td>
      </tr>
      <tr>
        <td id="L1586" class="blob-num js-line-number" data-line-number="1586"></td>
        <td id="LC1586" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> <span class="pl-smi">browser</span>.<span class="pl-en">fromPixels</span>(<span class="pl-en">imageToSquare</span>(input, inputSize, isCenterInputs));</td>
      </tr>
      <tr>
        <td id="L1587" class="blob-num js-line-number" data-line-number="1587"></td>
        <td id="LC1587" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1588" class="blob-num js-line-number" data-line-number="1588"></td>
        <td id="LC1588" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toBatchTensor - at batchIdx <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> batchIdx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> input);</td>
      </tr>
      <tr>
        <td id="L1589" class="blob-num js-line-number" data-line-number="1589"></td>
        <td id="LC1589" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L1590" class="blob-num js-line-number" data-line-number="1590"></td>
        <td id="LC1590" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> batchTensor <span class="pl-k">=</span> <span class="pl-en">stack</span>(<span class="pl-smi">inputTensors</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">t</span>) { <span class="pl-k">return</span> <span class="pl-smi">t</span>.<span class="pl-en">toFloat</span>(); })).<span class="pl-en">as4D</span>(<span class="pl-smi">_this</span>.<span class="pl-smi">batchSize</span>, inputSize, inputSize, <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L1591" class="blob-num js-line-number" data-line-number="1591"></td>
        <td id="LC1591" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> batchTensor;</td>
      </tr>
      <tr>
        <td id="L1592" class="blob-num js-line-number" data-line-number="1592"></td>
        <td id="LC1592" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1593" class="blob-num js-line-number" data-line-number="1593"></td>
        <td id="LC1593" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1594" class="blob-num js-line-number" data-line-number="1594"></td>
        <td id="LC1594" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> NetInput;</td>
      </tr>
      <tr>
        <td id="L1595" class="blob-num js-line-number" data-line-number="1595"></td>
        <td id="LC1595" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L1596" class="blob-num js-line-number" data-line-number="1596"></td>
        <td id="LC1596" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1597" class="blob-num js-line-number" data-line-number="1597"></td>
        <td id="LC1597" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1598" class="blob-num js-line-number" data-line-number="1598"></td>
        <td id="LC1598" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Validates the input to make sure, they are valid net inputs and awaits all media elements</span></td>
      </tr>
      <tr>
        <td id="L1599" class="blob-num js-line-number" data-line-number="1599"></td>
        <td id="LC1599" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * to be finished loading.</span></td>
      </tr>
      <tr>
        <td id="L1600" class="blob-num js-line-number" data-line-number="1600"></td>
        <td id="LC1600" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1601" class="blob-num js-line-number" data-line-number="1601"></td>
        <td id="LC1601" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">input</span> The input, which can be a media element or an array of different media elements.</span></td>
      </tr>
      <tr>
        <td id="L1602" class="blob-num js-line-number" data-line-number="1602"></td>
        <td id="LC1602" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> A NetInput instance, which can be passed into one of the neural networks.</span></td>
      </tr>
      <tr>
        <td id="L1603" class="blob-num js-line-number" data-line-number="1603"></td>
        <td id="LC1603" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1604" class="blob-num js-line-number" data-line-number="1604"></td>
        <td id="LC1604" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">toNetInput</span>(<span class="pl-smi">inputs</span>) {</td>
      </tr>
      <tr>
        <td id="L1605" class="blob-num js-line-number" data-line-number="1605"></td>
        <td id="LC1605" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1606" class="blob-num js-line-number" data-line-number="1606"></td>
        <td id="LC1606" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> inputArgArray, getIdxHint, inputArray;</td>
      </tr>
      <tr>
        <td id="L1607" class="blob-num js-line-number" data-line-number="1607"></td>
        <td id="LC1607" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1608" class="blob-num js-line-number" data-line-number="1608"></td>
        <td id="LC1608" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1609" class="blob-num js-line-number" data-line-number="1609"></td>
        <td id="LC1609" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L1610" class="blob-num js-line-number" data-line-number="1610"></td>
        <td id="LC1610" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (inputs <span class="pl-k">instanceof</span> NetInput) {</td>
      </tr>
      <tr>
        <td id="L1611" class="blob-num js-line-number" data-line-number="1611"></td>
        <td id="LC1611" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, inputs];</td>
      </tr>
      <tr>
        <td id="L1612" class="blob-num js-line-number" data-line-number="1612"></td>
        <td id="LC1612" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1613" class="blob-num js-line-number" data-line-number="1613"></td>
        <td id="LC1613" class="blob-code blob-code-inner js-file-line">                        inputArgArray <span class="pl-k">=</span> <span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(inputs)</td>
      </tr>
      <tr>
        <td id="L1614" class="blob-num js-line-number" data-line-number="1614"></td>
        <td id="LC1614" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">?</span> inputs</td>
      </tr>
      <tr>
        <td id="L1615" class="blob-num js-line-number" data-line-number="1615"></td>
        <td id="LC1615" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">:</span> [inputs];</td>
      </tr>
      <tr>
        <td id="L1616" class="blob-num js-line-number" data-line-number="1616"></td>
        <td id="LC1616" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">inputArgArray</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L1617" class="blob-num js-line-number" data-line-number="1617"></td>
        <td id="LC1617" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>toNetInput - empty array passed as input<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1618" class="blob-num js-line-number" data-line-number="1618"></td>
        <td id="LC1618" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1619" class="blob-num js-line-number" data-line-number="1619"></td>
        <td id="LC1619" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">getIdxHint</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> <span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(inputs) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span> at input index <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>; };</td>
      </tr>
      <tr>
        <td id="L1620" class="blob-num js-line-number" data-line-number="1620"></td>
        <td id="LC1620" class="blob-code blob-code-inner js-file-line">                        inputArray <span class="pl-k">=</span> <span class="pl-smi">inputArgArray</span>.<span class="pl-en">map</span>(resolveInput);</td>
      </tr>
      <tr>
        <td id="L1621" class="blob-num js-line-number" data-line-number="1621"></td>
        <td id="LC1621" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">inputArray</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L1622" class="blob-num js-line-number" data-line-number="1622"></td>
        <td id="LC1622" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isMediaElement</span>(input) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">isTensor3D</span>(input) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">isTensor4D</span>(input)) {</td>
      </tr>
      <tr>
        <td id="L1623" class="blob-num js-line-number" data-line-number="1623"></td>
        <td id="LC1623" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (<span class="pl-k">typeof</span> inputArgArray[i] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1624" class="blob-num js-line-number" data-line-number="1624"></td>
        <td id="LC1624" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toNetInput -<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getIdxHint</span>(i) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> string passed, but could not resolve HTMLElement for element id <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> inputArgArray[i]);</td>
      </tr>
      <tr>
        <td id="L1625" class="blob-num js-line-number" data-line-number="1625"></td>
        <td id="LC1625" class="blob-code blob-code-inner js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L1626" class="blob-num js-line-number" data-line-number="1626"></td>
        <td id="LC1626" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toNetInput -<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getIdxHint</span>(i) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1627" class="blob-num js-line-number" data-line-number="1627"></td>
        <td id="LC1627" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1628" class="blob-num js-line-number" data-line-number="1628"></td>
        <td id="LC1628" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-en">isTensor4D</span>(input)) {</td>
      </tr>
      <tr>
        <td id="L1629" class="blob-num js-line-number" data-line-number="1629"></td>
        <td id="LC1629" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> if tf.Tensor4D is passed in the input array, the batch size has to be 1</span></td>
      </tr>
      <tr>
        <td id="L1630" class="blob-num js-line-number" data-line-number="1630"></td>
        <td id="LC1630" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> batchSize <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1631" class="blob-num js-line-number" data-line-number="1631"></td>
        <td id="LC1631" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (batchSize <span class="pl-k">!==</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1632" class="blob-num js-line-number" data-line-number="1632"></td>
        <td id="LC1632" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toNetInput -<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getIdxHint</span>(i) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> tf.Tensor4D with batchSize <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> batchSize <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> passed, but not supported in input array<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1633" class="blob-num js-line-number" data-line-number="1633"></td>
        <td id="LC1633" class="blob-code blob-code-inner js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L1634" class="blob-num js-line-number" data-line-number="1634"></td>
        <td id="LC1634" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1635" class="blob-num js-line-number" data-line-number="1635"></td>
        <td id="LC1635" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L1636" class="blob-num js-line-number" data-line-number="1636"></td>
        <td id="LC1636" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> wait for all media elements being loaded</span></td>
      </tr>
      <tr>
        <td id="L1637" class="blob-num js-line-number" data-line-number="1637"></td>
        <td id="LC1637" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">inputArray</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">input</span>) { <span class="pl-k">return</span> <span class="pl-en">isMediaElement</span>(input) <span class="pl-k">&amp;&amp;</span> <span class="pl-en">awaitMediaLoaded</span>(input); }))];</td>
      </tr>
      <tr>
        <td id="L1638" class="blob-num js-line-number" data-line-number="1638"></td>
        <td id="LC1638" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L1639" class="blob-num js-line-number" data-line-number="1639"></td>
        <td id="LC1639" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> wait for all media elements being loaded</span></td>
      </tr>
      <tr>
        <td id="L1640" class="blob-num js-line-number" data-line-number="1640"></td>
        <td id="LC1640" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L1641" class="blob-num js-line-number" data-line-number="1641"></td>
        <td id="LC1641" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-k">new</span> <span class="pl-en">NetInput</span>(inputArray, <span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(inputs))];</td>
      </tr>
      <tr>
        <td id="L1642" class="blob-num js-line-number" data-line-number="1642"></td>
        <td id="LC1642" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1643" class="blob-num js-line-number" data-line-number="1643"></td>
        <td id="LC1643" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1644" class="blob-num js-line-number" data-line-number="1644"></td>
        <td id="LC1644" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1645" class="blob-num js-line-number" data-line-number="1645"></td>
        <td id="LC1645" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1646" class="blob-num js-line-number" data-line-number="1646"></td>
        <td id="LC1646" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1647" class="blob-num js-line-number" data-line-number="1647"></td>
        <td id="LC1647" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> NeuralNetwork <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1648" class="blob-num js-line-number" data-line-number="1648"></td>
        <td id="LC1648" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">NeuralNetwork</span>(<span class="pl-smi">_name</span>) {</td>
      </tr>
      <tr>
        <td id="L1649" class="blob-num js-line-number" data-line-number="1649"></td>
        <td id="LC1649" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">=</span> _name;</td>
      </tr>
      <tr>
        <td id="L1650" class="blob-num js-line-number" data-line-number="1650"></td>
        <td id="LC1650" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_params</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L1651" class="blob-num js-line-number" data-line-number="1651"></td>
        <td id="LC1651" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_paramMappings</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1652" class="blob-num js-line-number" data-line-number="1652"></td>
        <td id="LC1652" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1653" class="blob-num js-line-number" data-line-number="1653"></td>
        <td id="LC1653" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>params<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1654" class="blob-num js-line-number" data-line-number="1654"></td>
        <td id="LC1654" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_params</span>; },</td>
      </tr>
      <tr>
        <td id="L1655" class="blob-num js-line-number" data-line-number="1655"></td>
        <td id="LC1655" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1656" class="blob-num js-line-number" data-line-number="1656"></td>
        <td id="LC1656" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1657" class="blob-num js-line-number" data-line-number="1657"></td>
        <td id="LC1657" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1658" class="blob-num js-line-number" data-line-number="1658"></td>
        <td id="LC1658" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>paramMappings<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1659" class="blob-num js-line-number" data-line-number="1659"></td>
        <td id="LC1659" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_paramMappings</span>; },</td>
      </tr>
      <tr>
        <td id="L1660" class="blob-num js-line-number" data-line-number="1660"></td>
        <td id="LC1660" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1661" class="blob-num js-line-number" data-line-number="1661"></td>
        <td id="LC1661" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1662" class="blob-num js-line-number" data-line-number="1662"></td>
        <td id="LC1662" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1663" class="blob-num js-line-number" data-line-number="1663"></td>
        <td id="LC1663" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>isLoaded<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L1664" class="blob-num js-line-number" data-line-number="1664"></td>
        <td id="LC1664" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">!!</span><span class="pl-c1">this</span>.<span class="pl-smi">params</span>; },</td>
      </tr>
      <tr>
        <td id="L1665" class="blob-num js-line-number" data-line-number="1665"></td>
        <td id="LC1665" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L1666" class="blob-num js-line-number" data-line-number="1666"></td>
        <td id="LC1666" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1667" class="blob-num js-line-number" data-line-number="1667"></td>
        <td id="LC1667" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1668" class="blob-num js-line-number" data-line-number="1668"></td>
        <td id="LC1668" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getParamFromPath</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">paramPath</span>) {</td>
      </tr>
      <tr>
        <td id="L1669" class="blob-num js-line-number" data-line-number="1669"></td>
        <td id="LC1669" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">traversePropertyPath</span>(paramPath), obj <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">obj</span>, objProp <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">objProp</span>;</td>
      </tr>
      <tr>
        <td id="L1670" class="blob-num js-line-number" data-line-number="1670"></td>
        <td id="LC1670" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> obj[objProp];</td>
      </tr>
      <tr>
        <td id="L1671" class="blob-num js-line-number" data-line-number="1671"></td>
        <td id="LC1671" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1672" class="blob-num js-line-number" data-line-number="1672"></td>
        <td id="LC1672" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">reassignParamFromPath</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">paramPath</span>, <span class="pl-smi">tensor</span>) {</td>
      </tr>
      <tr>
        <td id="L1673" class="blob-num js-line-number" data-line-number="1673"></td>
        <td id="LC1673" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">traversePropertyPath</span>(paramPath), obj <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">obj</span>, objProp <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">objProp</span>;</td>
      </tr>
      <tr>
        <td id="L1674" class="blob-num js-line-number" data-line-number="1674"></td>
        <td id="LC1674" class="blob-code blob-code-inner js-file-line">            obj[objProp].<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L1675" class="blob-num js-line-number" data-line-number="1675"></td>
        <td id="LC1675" class="blob-code blob-code-inner js-file-line">            obj[objProp] <span class="pl-k">=</span> tensor;</td>
      </tr>
      <tr>
        <td id="L1676" class="blob-num js-line-number" data-line-number="1676"></td>
        <td id="LC1676" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1677" class="blob-num js-line-number" data-line-number="1677"></td>
        <td id="LC1677" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getParamList</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1678" class="blob-num js-line-number" data-line-number="1678"></td>
        <td id="LC1678" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L1679" class="blob-num js-line-number" data-line-number="1679"></td>
        <td id="LC1679" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_paramMappings</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1680" class="blob-num js-line-number" data-line-number="1680"></td>
        <td id="LC1680" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> paramPath <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">paramPath</span>;</td>
      </tr>
      <tr>
        <td id="L1681" class="blob-num js-line-number" data-line-number="1681"></td>
        <td id="LC1681" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> ({</td>
      </tr>
      <tr>
        <td id="L1682" class="blob-num js-line-number" data-line-number="1682"></td>
        <td id="LC1682" class="blob-code blob-code-inner js-file-line">                    path<span class="pl-k">:</span> paramPath,</td>
      </tr>
      <tr>
        <td id="L1683" class="blob-num js-line-number" data-line-number="1683"></td>
        <td id="LC1683" class="blob-code blob-code-inner js-file-line">                    tensor<span class="pl-k">:</span> <span class="pl-smi">_this</span>.<span class="pl-en">getParamFromPath</span>(paramPath)</td>
      </tr>
      <tr>
        <td id="L1684" class="blob-num js-line-number" data-line-number="1684"></td>
        <td id="LC1684" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L1685" class="blob-num js-line-number" data-line-number="1685"></td>
        <td id="LC1685" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1686" class="blob-num js-line-number" data-line-number="1686"></td>
        <td id="LC1686" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1687" class="blob-num js-line-number" data-line-number="1687"></td>
        <td id="LC1687" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTrainableParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1688" class="blob-num js-line-number" data-line-number="1688"></td>
        <td id="LC1688" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getParamList</span>().<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">param</span>) { <span class="pl-k">return</span> <span class="pl-smi">param</span>.<span class="pl-smi">tensor</span> <span class="pl-k">instanceof</span> Variable; });</td>
      </tr>
      <tr>
        <td id="L1689" class="blob-num js-line-number" data-line-number="1689"></td>
        <td id="LC1689" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1690" class="blob-num js-line-number" data-line-number="1690"></td>
        <td id="LC1690" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getFrozenParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1691" class="blob-num js-line-number" data-line-number="1691"></td>
        <td id="LC1691" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getParamList</span>().<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">param</span>) { <span class="pl-k">return</span> <span class="pl-k">!</span>(<span class="pl-smi">param</span>.<span class="pl-smi">tensor</span> <span class="pl-k">instanceof</span> Variable); });</td>
      </tr>
      <tr>
        <td id="L1692" class="blob-num js-line-number" data-line-number="1692"></td>
        <td id="LC1692" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1693" class="blob-num js-line-number" data-line-number="1693"></td>
        <td id="LC1693" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">variable</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1694" class="blob-num js-line-number" data-line-number="1694"></td>
        <td id="LC1694" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L1695" class="blob-num js-line-number" data-line-number="1695"></td>
        <td id="LC1695" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-en">getFrozenParams</span>().<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1696" class="blob-num js-line-number" data-line-number="1696"></td>
        <td id="LC1696" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> path <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">path</span>, tensor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">tensor</span>;</td>
      </tr>
      <tr>
        <td id="L1697" class="blob-num js-line-number" data-line-number="1697"></td>
        <td id="LC1697" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">_this</span>.<span class="pl-en">reassignParamFromPath</span>(path, <span class="pl-smi">tensor</span>.<span class="pl-en">variable</span>());</td>
      </tr>
      <tr>
        <td id="L1698" class="blob-num js-line-number" data-line-number="1698"></td>
        <td id="LC1698" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1699" class="blob-num js-line-number" data-line-number="1699"></td>
        <td id="LC1699" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1700" class="blob-num js-line-number" data-line-number="1700"></td>
        <td id="LC1700" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">freeze</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1701" class="blob-num js-line-number" data-line-number="1701"></td>
        <td id="LC1701" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L1702" class="blob-num js-line-number" data-line-number="1702"></td>
        <td id="LC1702" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-en">getTrainableParams</span>().<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1703" class="blob-num js-line-number" data-line-number="1703"></td>
        <td id="LC1703" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> path <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">path</span>, variable <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">tensor</span>;</td>
      </tr>
      <tr>
        <td id="L1704" class="blob-num js-line-number" data-line-number="1704"></td>
        <td id="LC1704" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> tensor$1 <span class="pl-k">=</span> <span class="pl-en">tensor</span>(<span class="pl-smi">variable</span>.<span class="pl-en">dataSync</span>());</td>
      </tr>
      <tr>
        <td id="L1705" class="blob-num js-line-number" data-line-number="1705"></td>
        <td id="LC1705" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">variable</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L1706" class="blob-num js-line-number" data-line-number="1706"></td>
        <td id="LC1706" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">_this</span>.<span class="pl-en">reassignParamFromPath</span>(path, tensor$1);</td>
      </tr>
      <tr>
        <td id="L1707" class="blob-num js-line-number" data-line-number="1707"></td>
        <td id="LC1707" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1708" class="blob-num js-line-number" data-line-number="1708"></td>
        <td id="LC1708" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1709" class="blob-num js-line-number" data-line-number="1709"></td>
        <td id="LC1709" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">dispose</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">throwOnRedispose</span>) {</td>
      </tr>
      <tr>
        <td id="L1710" class="blob-num js-line-number" data-line-number="1710"></td>
        <td id="LC1710" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (throwOnRedispose <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { throwOnRedispose <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L1711" class="blob-num js-line-number" data-line-number="1711"></td>
        <td id="LC1711" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-en">getParamList</span>().<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">param</span>) {</td>
      </tr>
      <tr>
        <td id="L1712" class="blob-num js-line-number" data-line-number="1712"></td>
        <td id="LC1712" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (throwOnRedispose <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">param</span>.<span class="pl-smi">tensor</span>.<span class="pl-smi">isDisposed</span>) {</td>
      </tr>
      <tr>
        <td id="L1713" class="blob-num js-line-number" data-line-number="1713"></td>
        <td id="LC1713" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>param tensor has already been disposed for path <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">param</span>.<span class="pl-smi">path</span>);</td>
      </tr>
      <tr>
        <td id="L1714" class="blob-num js-line-number" data-line-number="1714"></td>
        <td id="LC1714" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1715" class="blob-num js-line-number" data-line-number="1715"></td>
        <td id="LC1715" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">param</span>.<span class="pl-smi">tensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L1716" class="blob-num js-line-number" data-line-number="1716"></td>
        <td id="LC1716" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1717" class="blob-num js-line-number" data-line-number="1717"></td>
        <td id="LC1717" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_params</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L1718" class="blob-num js-line-number" data-line-number="1718"></td>
        <td id="LC1718" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1719" class="blob-num js-line-number" data-line-number="1719"></td>
        <td id="LC1719" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">serializeParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1720" class="blob-num js-line-number" data-line-number="1720"></td>
        <td id="LC1720" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">this</span>.<span class="pl-en">getParamList</span>()</td>
      </tr>
      <tr>
        <td id="L1721" class="blob-num js-line-number" data-line-number="1721"></td>
        <td id="LC1721" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1722" class="blob-num js-line-number" data-line-number="1722"></td>
        <td id="LC1722" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> tensor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">tensor</span>;</td>
      </tr>
      <tr>
        <td id="L1723" class="blob-num js-line-number" data-line-number="1723"></td>
        <td id="LC1723" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">Array</span>.<span class="pl-en">from</span>(<span class="pl-smi">tensor</span>.<span class="pl-en">dataSync</span>());</td>
      </tr>
      <tr>
        <td id="L1724" class="blob-num js-line-number" data-line-number="1724"></td>
        <td id="LC1724" class="blob-code blob-code-inner js-file-line">            })</td>
      </tr>
      <tr>
        <td id="L1725" class="blob-num js-line-number" data-line-number="1725"></td>
        <td id="LC1725" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">flat</span>, <span class="pl-smi">arr</span>) { <span class="pl-k">return</span> <span class="pl-smi">flat</span>.<span class="pl-c1">concat</span>(arr); }));</td>
      </tr>
      <tr>
        <td id="L1726" class="blob-num js-line-number" data-line-number="1726"></td>
        <td id="LC1726" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1727" class="blob-num js-line-number" data-line-number="1727"></td>
        <td id="LC1727" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">load</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightsOrUrl</span>) {</td>
      </tr>
      <tr>
        <td id="L1728" class="blob-num js-line-number" data-line-number="1728"></td>
        <td id="LC1728" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1729" class="blob-num js-line-number" data-line-number="1729"></td>
        <td id="LC1729" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1730" class="blob-num js-line-number" data-line-number="1730"></td>
        <td id="LC1730" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1731" class="blob-num js-line-number" data-line-number="1731"></td>
        <td id="LC1731" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L1732" class="blob-num js-line-number" data-line-number="1732"></td>
        <td id="LC1732" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (weightsOrUrl <span class="pl-k">instanceof</span> <span class="pl-c1">Float32Array</span>) {</td>
      </tr>
      <tr>
        <td id="L1733" class="blob-num js-line-number" data-line-number="1733"></td>
        <td id="LC1733" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">this</span>.<span class="pl-en">extractWeights</span>(weightsOrUrl);</td>
      </tr>
      <tr>
        <td id="L1734" class="blob-num js-line-number" data-line-number="1734"></td>
        <td id="LC1734" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>];</td>
      </tr>
      <tr>
        <td id="L1735" class="blob-num js-line-number" data-line-number="1735"></td>
        <td id="LC1735" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1736" class="blob-num js-line-number" data-line-number="1736"></td>
        <td id="LC1736" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">loadFromUri</span>(weightsOrUrl)];</td>
      </tr>
      <tr>
        <td id="L1737" class="blob-num js-line-number" data-line-number="1737"></td>
        <td id="LC1737" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L1738" class="blob-num js-line-number" data-line-number="1738"></td>
        <td id="LC1738" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L1739" class="blob-num js-line-number" data-line-number="1739"></td>
        <td id="LC1739" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>];</td>
      </tr>
      <tr>
        <td id="L1740" class="blob-num js-line-number" data-line-number="1740"></td>
        <td id="LC1740" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1741" class="blob-num js-line-number" data-line-number="1741"></td>
        <td id="LC1741" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L1742" class="blob-num js-line-number" data-line-number="1742"></td>
        <td id="LC1742" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1743" class="blob-num js-line-number" data-line-number="1743"></td>
        <td id="LC1743" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1744" class="blob-num js-line-number" data-line-number="1744"></td>
        <td id="LC1744" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">loadFromUri</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">uri</span>) {</td>
      </tr>
      <tr>
        <td id="L1745" class="blob-num js-line-number" data-line-number="1745"></td>
        <td id="LC1745" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1746" class="blob-num js-line-number" data-line-number="1746"></td>
        <td id="LC1746" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> weightMap;</td>
      </tr>
      <tr>
        <td id="L1747" class="blob-num js-line-number" data-line-number="1747"></td>
        <td id="LC1747" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L1748" class="blob-num js-line-number" data-line-number="1748"></td>
        <td id="LC1748" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1749" class="blob-num js-line-number" data-line-number="1749"></td>
        <td id="LC1749" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L1750" class="blob-num js-line-number" data-line-number="1750"></td>
        <td id="LC1750" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (uri <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> uri <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1751" class="blob-num js-line-number" data-line-number="1751"></td>
        <td id="LC1751" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.loadFromUri - expected model uri<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1752" class="blob-num js-line-number" data-line-number="1752"></td>
        <td id="LC1752" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1753" class="blob-num js-line-number" data-line-number="1753"></td>
        <td id="LC1753" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">loadWeightMap</span>(uri, <span class="pl-c1">this</span>.<span class="pl-en">getDefaultModelName</span>())];</td>
      </tr>
      <tr>
        <td id="L1754" class="blob-num js-line-number" data-line-number="1754"></td>
        <td id="LC1754" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L1755" class="blob-num js-line-number" data-line-number="1755"></td>
        <td id="LC1755" class="blob-code blob-code-inner js-file-line">                            weightMap <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L1756" class="blob-num js-line-number" data-line-number="1756"></td>
        <td id="LC1756" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">this</span>.<span class="pl-en">loadFromWeightMap</span>(weightMap);</td>
      </tr>
      <tr>
        <td id="L1757" class="blob-num js-line-number" data-line-number="1757"></td>
        <td id="LC1757" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>];</td>
      </tr>
      <tr>
        <td id="L1758" class="blob-num js-line-number" data-line-number="1758"></td>
        <td id="LC1758" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1759" class="blob-num js-line-number" data-line-number="1759"></td>
        <td id="LC1759" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L1760" class="blob-num js-line-number" data-line-number="1760"></td>
        <td id="LC1760" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1761" class="blob-num js-line-number" data-line-number="1761"></td>
        <td id="LC1761" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1762" class="blob-num js-line-number" data-line-number="1762"></td>
        <td id="LC1762" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">loadFromDisk</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">filePath</span>) {</td>
      </tr>
      <tr>
        <td id="L1763" class="blob-num js-line-number" data-line-number="1763"></td>
        <td id="LC1763" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1764" class="blob-num js-line-number" data-line-number="1764"></td>
        <td id="LC1764" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> readFile, _a, manifestUri, modelBaseUri, fetchWeightsFromDisk, loadWeights, manifest, _b, _c, weightMap;</td>
      </tr>
      <tr>
        <td id="L1765" class="blob-num js-line-number" data-line-number="1765"></td>
        <td id="LC1765" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_d</span>) {</td>
      </tr>
      <tr>
        <td id="L1766" class="blob-num js-line-number" data-line-number="1766"></td>
        <td id="LC1766" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_d</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L1767" class="blob-num js-line-number" data-line-number="1767"></td>
        <td id="LC1767" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L1768" class="blob-num js-line-number" data-line-number="1768"></td>
        <td id="LC1768" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (filePath <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> filePath <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1769" class="blob-num js-line-number" data-line-number="1769"></td>
        <td id="LC1769" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.loadFromDisk - expected model file path<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1770" class="blob-num js-line-number" data-line-number="1770"></td>
        <td id="LC1770" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1771" class="blob-num js-line-number" data-line-number="1771"></td>
        <td id="LC1771" class="blob-code blob-code-inner js-file-line">                            readFile <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-smi">readFile</span>;</td>
      </tr>
      <tr>
        <td id="L1772" class="blob-num js-line-number" data-line-number="1772"></td>
        <td id="LC1772" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-en">getModelUris</span>(filePath, <span class="pl-c1">this</span>.<span class="pl-en">getDefaultModelName</span>()), manifestUri <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">manifestUri</span>, modelBaseUri <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">modelBaseUri</span>;</td>
      </tr>
      <tr>
        <td id="L1773" class="blob-num js-line-number" data-line-number="1773"></td>
        <td id="LC1773" class="blob-code blob-code-inner js-file-line">                            <span class="pl-en">fetchWeightsFromDisk</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">filePaths</span>) { <span class="pl-k">return</span> <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">filePaths</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">filePath</span>) { <span class="pl-k">return</span> <span class="pl-en">readFile</span>(filePath).<span class="pl-c1">then</span>(<span class="pl-k">function</span> (<span class="pl-smi">buf</span>) { <span class="pl-k">return</span> <span class="pl-smi">buf</span>.<span class="pl-smi">buffer</span>; }); })); };</td>
      </tr>
      <tr>
        <td id="L1774" class="blob-num js-line-number" data-line-number="1774"></td>
        <td id="LC1774" class="blob-code blob-code-inner js-file-line">                            loadWeights <span class="pl-k">=</span> <span class="pl-smi">io</span>.<span class="pl-en">weightsLoaderFactory</span>(fetchWeightsFromDisk);</td>
      </tr>
      <tr>
        <td id="L1775" class="blob-num js-line-number" data-line-number="1775"></td>
        <td id="LC1775" class="blob-code blob-code-inner js-file-line">                            _c <span class="pl-k">=</span> (_b <span class="pl-k">=</span> <span class="pl-c1">JSON</span>).<span class="pl-smi">parse</span>;</td>
      </tr>
      <tr>
        <td id="L1776" class="blob-num js-line-number" data-line-number="1776"></td>
        <td id="LC1776" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">readFile</span>(manifestUri)];</td>
      </tr>
      <tr>
        <td id="L1777" class="blob-num js-line-number" data-line-number="1777"></td>
        <td id="LC1777" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L1778" class="blob-num js-line-number" data-line-number="1778"></td>
        <td id="LC1778" class="blob-code blob-code-inner js-file-line">                            manifest <span class="pl-k">=</span> <span class="pl-smi">_c</span>.<span class="pl-c1">apply</span>(_b, [(<span class="pl-smi">_d</span>.<span class="pl-en">sent</span>()).<span class="pl-c1">toString</span>()]);</td>
      </tr>
      <tr>
        <td id="L1779" class="blob-num js-line-number" data-line-number="1779"></td>
        <td id="LC1779" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">loadWeights</span>(manifest, modelBaseUri)];</td>
      </tr>
      <tr>
        <td id="L1780" class="blob-num js-line-number" data-line-number="1780"></td>
        <td id="LC1780" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L1781" class="blob-num js-line-number" data-line-number="1781"></td>
        <td id="LC1781" class="blob-code blob-code-inner js-file-line">                            weightMap <span class="pl-k">=</span> <span class="pl-smi">_d</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L1782" class="blob-num js-line-number" data-line-number="1782"></td>
        <td id="LC1782" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">this</span>.<span class="pl-en">loadFromWeightMap</span>(weightMap);</td>
      </tr>
      <tr>
        <td id="L1783" class="blob-num js-line-number" data-line-number="1783"></td>
        <td id="LC1783" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>];</td>
      </tr>
      <tr>
        <td id="L1784" class="blob-num js-line-number" data-line-number="1784"></td>
        <td id="LC1784" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1785" class="blob-num js-line-number" data-line-number="1785"></td>
        <td id="LC1785" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L1786" class="blob-num js-line-number" data-line-number="1786"></td>
        <td id="LC1786" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1787" class="blob-num js-line-number" data-line-number="1787"></td>
        <td id="LC1787" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1788" class="blob-num js-line-number" data-line-number="1788"></td>
        <td id="LC1788" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">loadFromWeightMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L1789" class="blob-num js-line-number" data-line-number="1789"></td>
        <td id="LC1789" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">extractParamsFromWeigthMap</span>(weightMap), paramMappings <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">paramMappings</span>, params <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L1790" class="blob-num js-line-number" data-line-number="1790"></td>
        <td id="LC1790" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_paramMappings</span> <span class="pl-k">=</span> paramMappings;</td>
      </tr>
      <tr>
        <td id="L1791" class="blob-num js-line-number" data-line-number="1791"></td>
        <td id="LC1791" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_params</span> <span class="pl-k">=</span> params;</td>
      </tr>
      <tr>
        <td id="L1792" class="blob-num js-line-number" data-line-number="1792"></td>
        <td id="LC1792" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1793" class="blob-num js-line-number" data-line-number="1793"></td>
        <td id="LC1793" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractWeights</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L1794" class="blob-num js-line-number" data-line-number="1794"></td>
        <td id="LC1794" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">extractParams</span>(weights), paramMappings <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">paramMappings</span>, params <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L1795" class="blob-num js-line-number" data-line-number="1795"></td>
        <td id="LC1795" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_paramMappings</span> <span class="pl-k">=</span> paramMappings;</td>
      </tr>
      <tr>
        <td id="L1796" class="blob-num js-line-number" data-line-number="1796"></td>
        <td id="LC1796" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_params</span> <span class="pl-k">=</span> params;</td>
      </tr>
      <tr>
        <td id="L1797" class="blob-num js-line-number" data-line-number="1797"></td>
        <td id="LC1797" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1798" class="blob-num js-line-number" data-line-number="1798"></td>
        <td id="LC1798" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">NeuralNetwork</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">traversePropertyPath</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">paramPath</span>) {</td>
      </tr>
      <tr>
        <td id="L1799" class="blob-num js-line-number" data-line-number="1799"></td>
        <td id="LC1799" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L1800" class="blob-num js-line-number" data-line-number="1800"></td>
        <td id="LC1800" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>traversePropertyPath - model has no loaded params<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1801" class="blob-num js-line-number" data-line-number="1801"></td>
        <td id="LC1801" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1802" class="blob-num js-line-number" data-line-number="1802"></td>
        <td id="LC1802" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> result <span class="pl-k">=</span> <span class="pl-smi">paramPath</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>).<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>, <span class="pl-smi">objProp</span>) {</td>
      </tr>
      <tr>
        <td id="L1803" class="blob-num js-line-number" data-line-number="1803"></td>
        <td id="LC1803" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">res</span>.<span class="pl-smi">nextObj</span>.<span class="pl-en">hasOwnProperty</span>(objProp)) {</td>
      </tr>
      <tr>
        <td id="L1804" class="blob-num js-line-number" data-line-number="1804"></td>
        <td id="LC1804" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>traversePropertyPath - object does not have property <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> objProp <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, for path <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> paramPath);</td>
      </tr>
      <tr>
        <td id="L1805" class="blob-num js-line-number" data-line-number="1805"></td>
        <td id="LC1805" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1806" class="blob-num js-line-number" data-line-number="1806"></td>
        <td id="LC1806" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> { obj<span class="pl-k">:</span> <span class="pl-smi">res</span>.<span class="pl-smi">nextObj</span>, objProp<span class="pl-k">:</span> objProp, nextObj<span class="pl-k">:</span> <span class="pl-smi">res</span>.<span class="pl-smi">nextObj</span>[objProp] };</td>
      </tr>
      <tr>
        <td id="L1807" class="blob-num js-line-number" data-line-number="1807"></td>
        <td id="LC1807" class="blob-code blob-code-inner js-file-line">            }, { nextObj<span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span> });</td>
      </tr>
      <tr>
        <td id="L1808" class="blob-num js-line-number" data-line-number="1808"></td>
        <td id="LC1808" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> obj <span class="pl-k">=</span> <span class="pl-smi">result</span>.<span class="pl-smi">obj</span>, objProp <span class="pl-k">=</span> <span class="pl-smi">result</span>.<span class="pl-smi">objProp</span>;</td>
      </tr>
      <tr>
        <td id="L1809" class="blob-num js-line-number" data-line-number="1809"></td>
        <td id="LC1809" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>obj <span class="pl-k">||</span> <span class="pl-k">!</span>objProp <span class="pl-k">||</span> <span class="pl-k">!</span>(obj[objProp] <span class="pl-k">instanceof</span> Tensor)) {</td>
      </tr>
      <tr>
        <td id="L1810" class="blob-num js-line-number" data-line-number="1810"></td>
        <td id="LC1810" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>traversePropertyPath - parameter is not a tensor, for path <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> paramPath);</td>
      </tr>
      <tr>
        <td id="L1811" class="blob-num js-line-number" data-line-number="1811"></td>
        <td id="LC1811" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1812" class="blob-num js-line-number" data-line-number="1812"></td>
        <td id="LC1812" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { obj<span class="pl-k">:</span> obj, objProp<span class="pl-k">:</span> objProp };</td>
      </tr>
      <tr>
        <td id="L1813" class="blob-num js-line-number" data-line-number="1813"></td>
        <td id="LC1813" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1814" class="blob-num js-line-number" data-line-number="1814"></td>
        <td id="LC1814" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> NeuralNetwork;</td>
      </tr>
      <tr>
        <td id="L1815" class="blob-num js-line-number" data-line-number="1815"></td>
        <td id="LC1815" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L1816" class="blob-num js-line-number" data-line-number="1816"></td>
        <td id="LC1816" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1817" class="blob-num js-line-number" data-line-number="1817"></td>
        <td id="LC1817" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">iou</span>(<span class="pl-smi">box1</span>, <span class="pl-smi">box2</span>, <span class="pl-smi">isIOU</span>) {</td>
      </tr>
      <tr>
        <td id="L1818" class="blob-num js-line-number" data-line-number="1818"></td>
        <td id="LC1818" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isIOU <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isIOU <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L1819" class="blob-num js-line-number" data-line-number="1819"></td>
        <td id="LC1819" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> width <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0.0</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">box1</span>.<span class="pl-c1">right</span>, <span class="pl-smi">box2</span>.<span class="pl-c1">right</span>) <span class="pl-k">-</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">box1</span>.<span class="pl-c1">left</span>, <span class="pl-smi">box2</span>.<span class="pl-c1">left</span>));</td>
      </tr>
      <tr>
        <td id="L1820" class="blob-num js-line-number" data-line-number="1820"></td>
        <td id="LC1820" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> height <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0.0</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">box1</span>.<span class="pl-c1">bottom</span>, <span class="pl-smi">box2</span>.<span class="pl-c1">bottom</span>) <span class="pl-k">-</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">box1</span>.<span class="pl-c1">top</span>, <span class="pl-smi">box2</span>.<span class="pl-c1">top</span>));</td>
      </tr>
      <tr>
        <td id="L1821" class="blob-num js-line-number" data-line-number="1821"></td>
        <td id="LC1821" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> interSection <span class="pl-k">=</span> width <span class="pl-k">*</span> height;</td>
      </tr>
      <tr>
        <td id="L1822" class="blob-num js-line-number" data-line-number="1822"></td>
        <td id="LC1822" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> isIOU</td>
      </tr>
      <tr>
        <td id="L1823" class="blob-num js-line-number" data-line-number="1823"></td>
        <td id="LC1823" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">?</span> interSection <span class="pl-k">/</span> (<span class="pl-smi">box1</span>.<span class="pl-smi">area</span> <span class="pl-k">+</span> <span class="pl-smi">box2</span>.<span class="pl-smi">area</span> <span class="pl-k">-</span> interSection)</td>
      </tr>
      <tr>
        <td id="L1824" class="blob-num js-line-number" data-line-number="1824"></td>
        <td id="LC1824" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">:</span> interSection <span class="pl-k">/</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">box1</span>.<span class="pl-smi">area</span>, <span class="pl-smi">box2</span>.<span class="pl-smi">area</span>);</td>
      </tr>
      <tr>
        <td id="L1825" class="blob-num js-line-number" data-line-number="1825"></td>
        <td id="LC1825" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1826" class="blob-num js-line-number" data-line-number="1826"></td>
        <td id="LC1826" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1827" class="blob-num js-line-number" data-line-number="1827"></td>
        <td id="LC1827" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">nonMaxSuppression$1</span>(<span class="pl-smi">boxes</span>, <span class="pl-smi">scores</span>, <span class="pl-smi">iouThreshold</span>, <span class="pl-smi">isIOU</span>) {</td>
      </tr>
      <tr>
        <td id="L1828" class="blob-num js-line-number" data-line-number="1828"></td>
        <td id="LC1828" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isIOU <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isIOU <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L1829" class="blob-num js-line-number" data-line-number="1829"></td>
        <td id="LC1829" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> indicesSortedByScore <span class="pl-k">=</span> scores</td>
      </tr>
      <tr>
        <td id="L1830" class="blob-num js-line-number" data-line-number="1830"></td>
        <td id="LC1830" class="blob-code blob-code-inner js-file-line">            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">score</span>, <span class="pl-smi">boxIndex</span>) { <span class="pl-k">return</span> ({ score<span class="pl-k">:</span> score, boxIndex<span class="pl-k">:</span> boxIndex }); })</td>
      </tr>
      <tr>
        <td id="L1831" class="blob-num js-line-number" data-line-number="1831"></td>
        <td id="LC1831" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">sort</span>(<span class="pl-k">function</span> (<span class="pl-smi">c1</span>, <span class="pl-smi">c2</span>) { <span class="pl-k">return</span> <span class="pl-smi">c1</span>.<span class="pl-smi">score</span> <span class="pl-k">-</span> <span class="pl-smi">c2</span>.<span class="pl-smi">score</span>; })</td>
      </tr>
      <tr>
        <td id="L1832" class="blob-num js-line-number" data-line-number="1832"></td>
        <td id="LC1832" class="blob-code blob-code-inner js-file-line">            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">c</span>) { <span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">boxIndex</span>; });</td>
      </tr>
      <tr>
        <td id="L1833" class="blob-num js-line-number" data-line-number="1833"></td>
        <td id="LC1833" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> pick <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1834" class="blob-num js-line-number" data-line-number="1834"></td>
        <td id="LC1834" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">_loop_1</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1835" class="blob-num js-line-number" data-line-number="1835"></td>
        <td id="LC1835" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> curr <span class="pl-k">=</span> <span class="pl-smi">indicesSortedByScore</span>.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L1836" class="blob-num js-line-number" data-line-number="1836"></td>
        <td id="LC1836" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">pick</span>.<span class="pl-c1">push</span>(curr);</td>
      </tr>
      <tr>
        <td id="L1837" class="blob-num js-line-number" data-line-number="1837"></td>
        <td id="LC1837" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> indices <span class="pl-k">=</span> indicesSortedByScore;</td>
      </tr>
      <tr>
        <td id="L1838" class="blob-num js-line-number" data-line-number="1838"></td>
        <td id="LC1838" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> outputs <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1839" class="blob-num js-line-number" data-line-number="1839"></td>
        <td id="LC1839" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">indices</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1840" class="blob-num js-line-number" data-line-number="1840"></td>
        <td id="LC1840" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> idx <span class="pl-k">=</span> indices[i];</td>
      </tr>
      <tr>
        <td id="L1841" class="blob-num js-line-number" data-line-number="1841"></td>
        <td id="LC1841" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> currBox <span class="pl-k">=</span> boxes[curr];</td>
      </tr>
      <tr>
        <td id="L1842" class="blob-num js-line-number" data-line-number="1842"></td>
        <td id="LC1842" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> idxBox <span class="pl-k">=</span> boxes[idx];</td>
      </tr>
      <tr>
        <td id="L1843" class="blob-num js-line-number" data-line-number="1843"></td>
        <td id="LC1843" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">outputs</span>.<span class="pl-c1">push</span>(<span class="pl-en">iou</span>(currBox, idxBox, isIOU));</td>
      </tr>
      <tr>
        <td id="L1844" class="blob-num js-line-number" data-line-number="1844"></td>
        <td id="LC1844" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1845" class="blob-num js-line-number" data-line-number="1845"></td>
        <td id="LC1845" class="blob-code blob-code-inner js-file-line">            indicesSortedByScore <span class="pl-k">=</span> <span class="pl-smi">indicesSortedByScore</span>.<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">j</span>) { <span class="pl-k">return</span> outputs[j] <span class="pl-k">&lt;=</span> iouThreshold; });</td>
      </tr>
      <tr>
        <td id="L1846" class="blob-num js-line-number" data-line-number="1846"></td>
        <td id="LC1846" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1847" class="blob-num js-line-number" data-line-number="1847"></td>
        <td id="LC1847" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-smi">indicesSortedByScore</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1848" class="blob-num js-line-number" data-line-number="1848"></td>
        <td id="LC1848" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">_loop_1</span>();</td>
      </tr>
      <tr>
        <td id="L1849" class="blob-num js-line-number" data-line-number="1849"></td>
        <td id="LC1849" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1850" class="blob-num js-line-number" data-line-number="1850"></td>
        <td id="LC1850" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> pick;</td>
      </tr>
      <tr>
        <td id="L1851" class="blob-num js-line-number" data-line-number="1851"></td>
        <td id="LC1851" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1852" class="blob-num js-line-number" data-line-number="1852"></td>
        <td id="LC1852" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1853" class="blob-num js-line-number" data-line-number="1853"></td>
        <td id="LC1853" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">normalize</span>(<span class="pl-smi">x</span>, <span class="pl-smi">meanRgb</span>) {</td>
      </tr>
      <tr>
        <td id="L1854" class="blob-num js-line-number" data-line-number="1854"></td>
        <td id="LC1854" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1855" class="blob-num js-line-number" data-line-number="1855"></td>
        <td id="LC1855" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> r <span class="pl-k">=</span> meanRgb[<span class="pl-c1">0</span>], g <span class="pl-k">=</span> meanRgb[<span class="pl-c1">1</span>], b <span class="pl-k">=</span> meanRgb[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L1856" class="blob-num js-line-number" data-line-number="1856"></td>
        <td id="LC1856" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> avg_r <span class="pl-k">=</span> <span class="pl-en">fill</span>(<span class="pl-smi">x</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>).<span class="pl-c1">concat</span>([<span class="pl-c1">1</span>]), r);</td>
      </tr>
      <tr>
        <td id="L1857" class="blob-num js-line-number" data-line-number="1857"></td>
        <td id="LC1857" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> avg_g <span class="pl-k">=</span> <span class="pl-en">fill</span>(<span class="pl-smi">x</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>).<span class="pl-c1">concat</span>([<span class="pl-c1">1</span>]), g);</td>
      </tr>
      <tr>
        <td id="L1858" class="blob-num js-line-number" data-line-number="1858"></td>
        <td id="LC1858" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> avg_b <span class="pl-k">=</span> <span class="pl-en">fill</span>(<span class="pl-smi">x</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>).<span class="pl-c1">concat</span>([<span class="pl-c1">1</span>]), b);</td>
      </tr>
      <tr>
        <td id="L1859" class="blob-num js-line-number" data-line-number="1859"></td>
        <td id="LC1859" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> avg_rgb <span class="pl-k">=</span> <span class="pl-en">concat</span>([avg_r, avg_g, avg_b], <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L1860" class="blob-num js-line-number" data-line-number="1860"></td>
        <td id="LC1860" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">sub</span>(x, avg_rgb);</td>
      </tr>
      <tr>
        <td id="L1861" class="blob-num js-line-number" data-line-number="1861"></td>
        <td id="LC1861" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1862" class="blob-num js-line-number" data-line-number="1862"></td>
        <td id="LC1862" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1863" class="blob-num js-line-number" data-line-number="1863"></td>
        <td id="LC1863" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1864" class="blob-num js-line-number" data-line-number="1864"></td>
        <td id="LC1864" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">shuffleArray</span>(<span class="pl-smi">inputArray</span>) {</td>
      </tr>
      <tr>
        <td id="L1865" class="blob-num js-line-number" data-line-number="1865"></td>
        <td id="LC1865" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> array <span class="pl-k">=</span> <span class="pl-smi">inputArray</span>.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L1866" class="blob-num js-line-number" data-line-number="1866"></td>
        <td id="LC1866" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-smi">array</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>; i <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>; i<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L1867" class="blob-num js-line-number" data-line-number="1867"></td>
        <td id="LC1867" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">random</span>() <span class="pl-k">*</span> (i <span class="pl-k">+</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L1868" class="blob-num js-line-number" data-line-number="1868"></td>
        <td id="LC1868" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> x <span class="pl-k">=</span> array[i];</td>
      </tr>
      <tr>
        <td id="L1869" class="blob-num js-line-number" data-line-number="1869"></td>
        <td id="LC1869" class="blob-code blob-code-inner js-file-line">            array[i] <span class="pl-k">=</span> array[j];</td>
      </tr>
      <tr>
        <td id="L1870" class="blob-num js-line-number" data-line-number="1870"></td>
        <td id="LC1870" class="blob-code blob-code-inner js-file-line">            array[j] <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L1871" class="blob-num js-line-number" data-line-number="1871"></td>
        <td id="LC1871" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1872" class="blob-num js-line-number" data-line-number="1872"></td>
        <td id="LC1872" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L1873" class="blob-num js-line-number" data-line-number="1873"></td>
        <td id="LC1873" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1874" class="blob-num js-line-number" data-line-number="1874"></td>
        <td id="LC1874" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1875" class="blob-num js-line-number" data-line-number="1875"></td>
        <td id="LC1875" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">sigmoid$1</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1876" class="blob-num js-line-number" data-line-number="1876"></td>
        <td id="LC1876" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">/</span> (<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(<span class="pl-k">-</span>x));</td>
      </tr>
      <tr>
        <td id="L1877" class="blob-num js-line-number" data-line-number="1877"></td>
        <td id="LC1877" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1878" class="blob-num js-line-number" data-line-number="1878"></td>
        <td id="LC1878" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">inverseSigmoid</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1879" class="blob-num js-line-number" data-line-number="1879"></td>
        <td id="LC1879" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">log</span>(x <span class="pl-k">/</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> x));</td>
      </tr>
      <tr>
        <td id="L1880" class="blob-num js-line-number" data-line-number="1880"></td>
        <td id="LC1880" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1881" class="blob-num js-line-number" data-line-number="1881"></td>
        <td id="LC1881" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1882" class="blob-num js-line-number" data-line-number="1882"></td>
        <td id="LC1882" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">isNumber$1</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">arg</span>) { <span class="pl-k">return</span> <span class="pl-k">typeof</span> arg <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>; };</td>
      </tr>
      <tr>
        <td id="L1883" class="blob-num js-line-number" data-line-number="1883"></td>
        <td id="LC1883" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">validateConfig</span>(<span class="pl-smi">config</span>) {</td>
      </tr>
      <tr>
        <td id="L1884" class="blob-num js-line-number" data-line-number="1884"></td>
        <td id="LC1884" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>config) {</td>
      </tr>
      <tr>
        <td id="L1885" class="blob-num js-line-number" data-line-number="1885"></td>
        <td id="LC1885" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid config: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> config);</td>
      </tr>
      <tr>
        <td id="L1886" class="blob-num js-line-number" data-line-number="1886"></td>
        <td id="LC1886" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1887" class="blob-num js-line-number" data-line-number="1887"></td>
        <td id="LC1887" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-smi">config</span>.<span class="pl-smi">withSeparableConvs</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>boolean<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1888" class="blob-num js-line-number" data-line-number="1888"></td>
        <td id="LC1888" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>config.withSeparableConvs has to be a boolean, have: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">config</span>.<span class="pl-smi">withSeparableConvs</span>);</td>
      </tr>
      <tr>
        <td id="L1889" class="blob-num js-line-number" data-line-number="1889"></td>
        <td id="LC1889" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1890" class="blob-num js-line-number" data-line-number="1890"></td>
        <td id="LC1890" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isNumber$1</span>(<span class="pl-smi">config</span>.<span class="pl-smi">iouThreshold</span>) <span class="pl-k">||</span> <span class="pl-smi">config</span>.<span class="pl-smi">iouThreshold</span> <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> <span class="pl-smi">config</span>.<span class="pl-smi">iouThreshold</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1.0</span>) {</td>
      </tr>
      <tr>
        <td id="L1891" class="blob-num js-line-number" data-line-number="1891"></td>
        <td id="LC1891" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>config.iouThreshold has to be a number between [0, 1], have: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">config</span>.<span class="pl-smi">iouThreshold</span>);</td>
      </tr>
      <tr>
        <td id="L1892" class="blob-num js-line-number" data-line-number="1892"></td>
        <td id="LC1892" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1893" class="blob-num js-line-number" data-line-number="1893"></td>
        <td id="LC1893" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(<span class="pl-smi">config</span>.<span class="pl-c1">classes</span>)</td>
      </tr>
      <tr>
        <td id="L1894" class="blob-num js-line-number" data-line-number="1894"></td>
        <td id="LC1894" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-smi">config</span>.<span class="pl-c1">classes</span>.<span class="pl-c1">length</span></td>
      </tr>
      <tr>
        <td id="L1895" class="blob-num js-line-number" data-line-number="1895"></td>
        <td id="LC1895" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-smi">config</span>.<span class="pl-c1">classes</span>.<span class="pl-en">every</span>(<span class="pl-k">function</span> (<span class="pl-smi">c</span>) { <span class="pl-k">return</span> <span class="pl-k">typeof</span> c <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>; })) {</td>
      </tr>
      <tr>
        <td id="L1896" class="blob-num js-line-number" data-line-number="1896"></td>
        <td id="LC1896" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>config.classes has to be an array class names: string[], have: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(<span class="pl-smi">config</span>.<span class="pl-c1">classes</span>));</td>
      </tr>
      <tr>
        <td id="L1897" class="blob-num js-line-number" data-line-number="1897"></td>
        <td id="LC1897" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1898" class="blob-num js-line-number" data-line-number="1898"></td>
        <td id="LC1898" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(<span class="pl-smi">config</span>.<span class="pl-c1">anchors</span>)</td>
      </tr>
      <tr>
        <td id="L1899" class="blob-num js-line-number" data-line-number="1899"></td>
        <td id="LC1899" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-smi">config</span>.<span class="pl-c1">anchors</span>.<span class="pl-c1">length</span></td>
      </tr>
      <tr>
        <td id="L1900" class="blob-num js-line-number" data-line-number="1900"></td>
        <td id="LC1900" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-smi">config</span>.<span class="pl-c1">anchors</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">a</span>) { <span class="pl-k">return</span> a <span class="pl-k">||</span> {}; }).<span class="pl-en">every</span>(<span class="pl-k">function</span> (<span class="pl-smi">a</span>) { <span class="pl-k">return</span> <span class="pl-en">isNumber$1</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>) <span class="pl-k">&amp;&amp;</span> <span class="pl-en">isNumber$1</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>); })) {</td>
      </tr>
      <tr>
        <td id="L1901" class="blob-num js-line-number" data-line-number="1901"></td>
        <td id="LC1901" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>config.anchors has to be an array of { x: number, y: number }, have: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(<span class="pl-smi">config</span>.<span class="pl-c1">anchors</span>));</td>
      </tr>
      <tr>
        <td id="L1902" class="blob-num js-line-number" data-line-number="1902"></td>
        <td id="LC1902" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1903" class="blob-num js-line-number" data-line-number="1903"></td>
        <td id="LC1903" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">config</span>.<span class="pl-smi">meanRgb</span> <span class="pl-k">&amp;&amp;</span> (<span class="pl-k">!</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(<span class="pl-smi">config</span>.<span class="pl-smi">meanRgb</span>)</td>
      </tr>
      <tr>
        <td id="L1904" class="blob-num js-line-number" data-line-number="1904"></td>
        <td id="LC1904" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">||</span> <span class="pl-smi">config</span>.<span class="pl-smi">meanRgb</span>.<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">3</span></td>
      </tr>
      <tr>
        <td id="L1905" class="blob-num js-line-number" data-line-number="1905"></td>
        <td id="LC1905" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-smi">config</span>.<span class="pl-smi">meanRgb</span>.<span class="pl-en">every</span>(isNumber$1))) {</td>
      </tr>
      <tr>
        <td id="L1906" class="blob-num js-line-number" data-line-number="1906"></td>
        <td id="LC1906" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>config.meanRgb has to be an array of shape [number, number, number], have: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(<span class="pl-smi">config</span>.<span class="pl-smi">meanRgb</span>));</td>
      </tr>
      <tr>
        <td id="L1907" class="blob-num js-line-number" data-line-number="1907"></td>
        <td id="LC1907" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1908" class="blob-num js-line-number" data-line-number="1908"></td>
        <td id="LC1908" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1909" class="blob-num js-line-number" data-line-number="1909"></td>
        <td id="LC1909" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1910" class="blob-num js-line-number" data-line-number="1910"></td>
        <td id="LC1910" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">leaky</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1911" class="blob-num js-line-number" data-line-number="1911"></td>
        <td id="LC1911" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1912" class="blob-num js-line-number" data-line-number="1912"></td>
        <td id="LC1912" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> min <span class="pl-k">=</span> <span class="pl-en">mul</span>(x, <span class="pl-en">scalar</span>(<span class="pl-c1">0.10000000149011612</span>));</td>
      </tr>
      <tr>
        <td id="L1913" class="blob-num js-line-number" data-line-number="1913"></td>
        <td id="LC1913" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">add</span>(<span class="pl-en">relu</span>(<span class="pl-en">sub</span>(x, min)), min);</td>
      </tr>
      <tr>
        <td id="L1914" class="blob-num js-line-number" data-line-number="1914"></td>
        <td id="LC1914" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>return tf.maximum(x, min)</span></td>
      </tr>
      <tr>
        <td id="L1915" class="blob-num js-line-number" data-line-number="1915"></td>
        <td id="LC1915" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1916" class="blob-num js-line-number" data-line-number="1916"></td>
        <td id="LC1916" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1917" class="blob-num js-line-number" data-line-number="1917"></td>
        <td id="LC1917" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1918" class="blob-num js-line-number" data-line-number="1918"></td>
        <td id="LC1918" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">convWithBatchNorm</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L1919" class="blob-num js-line-number" data-line-number="1919"></td>
        <td id="LC1919" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1920" class="blob-num js-line-number" data-line-number="1920"></td>
        <td id="LC1920" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">pad</span>(x, [[<span class="pl-c1">0</span>, <span class="pl-c1">0</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>]]);</td>
      </tr>
      <tr>
        <td id="L1921" class="blob-num js-line-number" data-line-number="1921"></td>
        <td id="LC1921" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">conv2d</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv</span>.<span class="pl-smi">filters</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1922" class="blob-num js-line-number" data-line-number="1922"></td>
        <td id="LC1922" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">sub</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">bn</span>.<span class="pl-smi">sub</span>);</td>
      </tr>
      <tr>
        <td id="L1923" class="blob-num js-line-number" data-line-number="1923"></td>
        <td id="LC1923" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">mul</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">bn</span>.<span class="pl-smi">truediv</span>);</td>
      </tr>
      <tr>
        <td id="L1924" class="blob-num js-line-number" data-line-number="1924"></td>
        <td id="LC1924" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">add</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv</span>.<span class="pl-smi">bias</span>);</td>
      </tr>
      <tr>
        <td id="L1925" class="blob-num js-line-number" data-line-number="1925"></td>
        <td id="LC1925" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">leaky</span>(out);</td>
      </tr>
      <tr>
        <td id="L1926" class="blob-num js-line-number" data-line-number="1926"></td>
        <td id="LC1926" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1927" class="blob-num js-line-number" data-line-number="1927"></td>
        <td id="LC1927" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1928" class="blob-num js-line-number" data-line-number="1928"></td>
        <td id="LC1928" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1929" class="blob-num js-line-number" data-line-number="1929"></td>
        <td id="LC1929" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">depthwiseSeparableConv</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L1930" class="blob-num js-line-number" data-line-number="1930"></td>
        <td id="LC1930" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1931" class="blob-num js-line-number" data-line-number="1931"></td>
        <td id="LC1931" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">pad</span>(x, [[<span class="pl-c1">0</span>, <span class="pl-c1">0</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>]]);</td>
      </tr>
      <tr>
        <td id="L1932" class="blob-num js-line-number" data-line-number="1932"></td>
        <td id="LC1932" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">separableConv2d</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">depthwise_filter</span>, <span class="pl-smi">params</span>.<span class="pl-smi">pointwise_filter</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1933" class="blob-num js-line-number" data-line-number="1933"></td>
        <td id="LC1933" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">add</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">bias</span>);</td>
      </tr>
      <tr>
        <td id="L1934" class="blob-num js-line-number" data-line-number="1934"></td>
        <td id="LC1934" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">leaky</span>(out);</td>
      </tr>
      <tr>
        <td id="L1935" class="blob-num js-line-number" data-line-number="1935"></td>
        <td id="LC1935" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1936" class="blob-num js-line-number" data-line-number="1936"></td>
        <td id="LC1936" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1937" class="blob-num js-line-number" data-line-number="1937"></td>
        <td id="LC1937" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1938" class="blob-num js-line-number" data-line-number="1938"></td>
        <td id="LC1938" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory</span>(<span class="pl-smi">extractWeights</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L1939" class="blob-num js-line-number" data-line-number="1939"></td>
        <td id="LC1939" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractConvParams <span class="pl-k">=</span> <span class="pl-en">extractConvParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L1940" class="blob-num js-line-number" data-line-number="1940"></td>
        <td id="LC1940" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractBatchNormParams</span>(<span class="pl-smi">size</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L1941" class="blob-num js-line-number" data-line-number="1941"></td>
        <td id="LC1941" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sub <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(size));</td>
      </tr>
      <tr>
        <td id="L1942" class="blob-num js-line-number" data-line-number="1942"></td>
        <td id="LC1942" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> truediv <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(size));</td>
      </tr>
      <tr>
        <td id="L1943" class="blob-num js-line-number" data-line-number="1943"></td>
        <td id="LC1943" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/sub<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/truediv<span class="pl-pds">&quot;</span></span> });</td>
      </tr>
      <tr>
        <td id="L1944" class="blob-num js-line-number" data-line-number="1944"></td>
        <td id="LC1944" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { sub<span class="pl-k">:</span> sub, truediv<span class="pl-k">:</span> truediv };</td>
      </tr>
      <tr>
        <td id="L1945" class="blob-num js-line-number" data-line-number="1945"></td>
        <td id="LC1945" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1946" class="blob-num js-line-number" data-line-number="1946"></td>
        <td id="LC1946" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L1947" class="blob-num js-line-number" data-line-number="1947"></td>
        <td id="LC1947" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(channelsIn, channelsOut, <span class="pl-c1">3</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1948" class="blob-num js-line-number" data-line-number="1948"></td>
        <td id="LC1948" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bn <span class="pl-k">=</span> <span class="pl-en">extractBatchNormParams</span>(channelsOut, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bn<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1949" class="blob-num js-line-number" data-line-number="1949"></td>
        <td id="LC1949" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv<span class="pl-k">:</span> conv, bn<span class="pl-k">:</span> bn };</td>
      </tr>
      <tr>
        <td id="L1950" class="blob-num js-line-number" data-line-number="1950"></td>
        <td id="LC1950" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1951" class="blob-num js-line-number" data-line-number="1951"></td>
        <td id="LC1951" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L1952" class="blob-num js-line-number" data-line-number="1952"></td>
        <td id="LC1952" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L1953" class="blob-num js-line-number" data-line-number="1953"></td>
        <td id="LC1953" class="blob-code blob-code-inner js-file-line">            extractConvParams<span class="pl-k">:</span> extractConvParams,</td>
      </tr>
      <tr>
        <td id="L1954" class="blob-num js-line-number" data-line-number="1954"></td>
        <td id="LC1954" class="blob-code blob-code-inner js-file-line">            extractConvWithBatchNormParams<span class="pl-k">:</span> extractConvWithBatchNormParams,</td>
      </tr>
      <tr>
        <td id="L1955" class="blob-num js-line-number" data-line-number="1955"></td>
        <td id="LC1955" class="blob-code blob-code-inner js-file-line">            extractSeparableConvParams<span class="pl-k">:</span> extractSeparableConvParams</td>
      </tr>
      <tr>
        <td id="L1956" class="blob-num js-line-number" data-line-number="1956"></td>
        <td id="LC1956" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1957" class="blob-num js-line-number" data-line-number="1957"></td>
        <td id="LC1957" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1958" class="blob-num js-line-number" data-line-number="1958"></td>
        <td id="LC1958" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParams</span>(<span class="pl-smi">weights</span>, <span class="pl-smi">config</span>, <span class="pl-smi">boxEncodingSize</span>, <span class="pl-smi">filterSizes</span>) {</td>
      </tr>
      <tr>
        <td id="L1959" class="blob-num js-line-number" data-line-number="1959"></td>
        <td id="LC1959" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractWeightsFactory</span>(weights), extractWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractWeights</span>, getRemainingWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">getRemainingWeights</span>;</td>
      </tr>
      <tr>
        <td id="L1960" class="blob-num js-line-number" data-line-number="1960"></td>
        <td id="LC1960" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1961" class="blob-num js-line-number" data-line-number="1961"></td>
        <td id="LC1961" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _b <span class="pl-k">=</span> <span class="pl-en">extractorsFactory</span>(extractWeights, paramMappings), extractConvParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractConvParams</span>, extractConvWithBatchNormParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractConvWithBatchNormParams</span>, extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractSeparableConvParams</span>;</td>
      </tr>
      <tr>
        <td id="L1962" class="blob-num js-line-number" data-line-number="1962"></td>
        <td id="LC1962" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> params;</td>
      </tr>
      <tr>
        <td id="L1963" class="blob-num js-line-number" data-line-number="1963"></td>
        <td id="LC1963" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">config</span>.<span class="pl-smi">withSeparableConvs</span>) {</td>
      </tr>
      <tr>
        <td id="L1964" class="blob-num js-line-number" data-line-number="1964"></td>
        <td id="LC1964" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> s0 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">0</span>], s1 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">1</span>], s2 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">2</span>], s3 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">3</span>], s4 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">4</span>], s5 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">5</span>], s6 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">6</span>], s7 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">7</span>], s8 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">8</span>];</td>
      </tr>
      <tr>
        <td id="L1965" class="blob-num js-line-number" data-line-number="1965"></td>
        <td id="LC1965" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv0 <span class="pl-k">=</span> <span class="pl-smi">config</span>.<span class="pl-smi">isFirstLayerConv2d</span></td>
      </tr>
      <tr>
        <td id="L1966" class="blob-num js-line-number" data-line-number="1966"></td>
        <td id="LC1966" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-en">extractConvParams</span>(s0, s1, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv0<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1967" class="blob-num js-line-number" data-line-number="1967"></td>
        <td id="LC1967" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(s0, s1, <span class="pl-s"><span class="pl-pds">&#39;</span>conv0<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1968" class="blob-num js-line-number" data-line-number="1968"></td>
        <td id="LC1968" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv1 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(s1, s2, <span class="pl-s"><span class="pl-pds">&#39;</span>conv1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1969" class="blob-num js-line-number" data-line-number="1969"></td>
        <td id="LC1969" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv2 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(s2, s3, <span class="pl-s"><span class="pl-pds">&#39;</span>conv2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1970" class="blob-num js-line-number" data-line-number="1970"></td>
        <td id="LC1970" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv3 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(s3, s4, <span class="pl-s"><span class="pl-pds">&#39;</span>conv3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1971" class="blob-num js-line-number" data-line-number="1971"></td>
        <td id="LC1971" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv4 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(s4, s5, <span class="pl-s"><span class="pl-pds">&#39;</span>conv4<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1972" class="blob-num js-line-number" data-line-number="1972"></td>
        <td id="LC1972" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv5 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(s5, s6, <span class="pl-s"><span class="pl-pds">&#39;</span>conv5<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1973" class="blob-num js-line-number" data-line-number="1973"></td>
        <td id="LC1973" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv6 <span class="pl-k">=</span> s7 <span class="pl-k">?</span> <span class="pl-en">extractSeparableConvParams</span>(s6, s7, <span class="pl-s"><span class="pl-pds">&#39;</span>conv6<span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L1974" class="blob-num js-line-number" data-line-number="1974"></td>
        <td id="LC1974" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv7 <span class="pl-k">=</span> s8 <span class="pl-k">?</span> <span class="pl-en">extractSeparableConvParams</span>(s7, s8, <span class="pl-s"><span class="pl-pds">&#39;</span>conv7<span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L1975" class="blob-num js-line-number" data-line-number="1975"></td>
        <td id="LC1975" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv8 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(s8 <span class="pl-k">||</span> s7 <span class="pl-k">||</span> s6, <span class="pl-c1">5</span> <span class="pl-k">*</span> boxEncodingSize, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv8<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1976" class="blob-num js-line-number" data-line-number="1976"></td>
        <td id="LC1976" class="blob-code blob-code-inner js-file-line">            params <span class="pl-k">=</span> { conv0<span class="pl-k">:</span> conv0, conv1<span class="pl-k">:</span> conv1, conv2<span class="pl-k">:</span> conv2, conv3<span class="pl-k">:</span> conv3, conv4<span class="pl-k">:</span> conv4, conv5<span class="pl-k">:</span> conv5, conv6<span class="pl-k">:</span> conv6, conv7<span class="pl-k">:</span> conv7, conv8<span class="pl-k">:</span> conv8 };</td>
      </tr>
      <tr>
        <td id="L1977" class="blob-num js-line-number" data-line-number="1977"></td>
        <td id="LC1977" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1978" class="blob-num js-line-number" data-line-number="1978"></td>
        <td id="LC1978" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1979" class="blob-num js-line-number" data-line-number="1979"></td>
        <td id="LC1979" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> s0 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">0</span>], s1 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">1</span>], s2 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">2</span>], s3 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">3</span>], s4 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">4</span>], s5 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">5</span>], s6 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">6</span>], s7 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">7</span>], s8 <span class="pl-k">=</span> filterSizes[<span class="pl-c1">8</span>];</td>
      </tr>
      <tr>
        <td id="L1980" class="blob-num js-line-number" data-line-number="1980"></td>
        <td id="LC1980" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv0 <span class="pl-k">=</span> <span class="pl-en">extractConvWithBatchNormParams</span>(s0, s1, <span class="pl-s"><span class="pl-pds">&#39;</span>conv0<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1981" class="blob-num js-line-number" data-line-number="1981"></td>
        <td id="LC1981" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv1 <span class="pl-k">=</span> <span class="pl-en">extractConvWithBatchNormParams</span>(s1, s2, <span class="pl-s"><span class="pl-pds">&#39;</span>conv1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1982" class="blob-num js-line-number" data-line-number="1982"></td>
        <td id="LC1982" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv2 <span class="pl-k">=</span> <span class="pl-en">extractConvWithBatchNormParams</span>(s2, s3, <span class="pl-s"><span class="pl-pds">&#39;</span>conv2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1983" class="blob-num js-line-number" data-line-number="1983"></td>
        <td id="LC1983" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv3 <span class="pl-k">=</span> <span class="pl-en">extractConvWithBatchNormParams</span>(s3, s4, <span class="pl-s"><span class="pl-pds">&#39;</span>conv3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1984" class="blob-num js-line-number" data-line-number="1984"></td>
        <td id="LC1984" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv4 <span class="pl-k">=</span> <span class="pl-en">extractConvWithBatchNormParams</span>(s4, s5, <span class="pl-s"><span class="pl-pds">&#39;</span>conv4<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1985" class="blob-num js-line-number" data-line-number="1985"></td>
        <td id="LC1985" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv5 <span class="pl-k">=</span> <span class="pl-en">extractConvWithBatchNormParams</span>(s5, s6, <span class="pl-s"><span class="pl-pds">&#39;</span>conv5<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1986" class="blob-num js-line-number" data-line-number="1986"></td>
        <td id="LC1986" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv6 <span class="pl-k">=</span> <span class="pl-en">extractConvWithBatchNormParams</span>(s6, s7, <span class="pl-s"><span class="pl-pds">&#39;</span>conv6<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1987" class="blob-num js-line-number" data-line-number="1987"></td>
        <td id="LC1987" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv7 <span class="pl-k">=</span> <span class="pl-en">extractConvWithBatchNormParams</span>(s7, s8, <span class="pl-s"><span class="pl-pds">&#39;</span>conv7<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1988" class="blob-num js-line-number" data-line-number="1988"></td>
        <td id="LC1988" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv8 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(s8, <span class="pl-c1">5</span> <span class="pl-k">*</span> boxEncodingSize, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv8<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1989" class="blob-num js-line-number" data-line-number="1989"></td>
        <td id="LC1989" class="blob-code blob-code-inner js-file-line">            params <span class="pl-k">=</span> { conv0<span class="pl-k">:</span> conv0, conv1<span class="pl-k">:</span> conv1, conv2<span class="pl-k">:</span> conv2, conv3<span class="pl-k">:</span> conv3, conv4<span class="pl-k">:</span> conv4, conv5<span class="pl-k">:</span> conv5, conv6<span class="pl-k">:</span> conv6, conv7<span class="pl-k">:</span> conv7, conv8<span class="pl-k">:</span> conv8 };</td>
      </tr>
      <tr>
        <td id="L1990" class="blob-num js-line-number" data-line-number="1990"></td>
        <td id="LC1990" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1991" class="blob-num js-line-number" data-line-number="1991"></td>
        <td id="LC1991" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1992" class="blob-num js-line-number" data-line-number="1992"></td>
        <td id="LC1992" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>weights remaing after extract: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L1993" class="blob-num js-line-number" data-line-number="1993"></td>
        <td id="LC1993" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1994" class="blob-num js-line-number" data-line-number="1994"></td>
        <td id="LC1994" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> params, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L1995" class="blob-num js-line-number" data-line-number="1995"></td>
        <td id="LC1995" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1996" class="blob-num js-line-number" data-line-number="1996"></td>
        <td id="LC1996" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1997" class="blob-num js-line-number" data-line-number="1997"></td>
        <td id="LC1997" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory$1</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L1998" class="blob-num js-line-number" data-line-number="1998"></td>
        <td id="LC1998" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractWeightEntry <span class="pl-k">=</span> <span class="pl-en">extractWeightEntryFactory</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L1999" class="blob-num js-line-number" data-line-number="1999"></td>
        <td id="LC1999" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractBatchNormParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L2000" class="blob-num js-line-number" data-line-number="2000"></td>
        <td id="LC2000" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sub <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/sub<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2001" class="blob-num js-line-number" data-line-number="2001"></td>
        <td id="LC2001" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> truediv <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/truediv<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2002" class="blob-num js-line-number" data-line-number="2002"></td>
        <td id="LC2002" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { sub<span class="pl-k">:</span> sub, truediv<span class="pl-k">:</span> truediv };</td>
      </tr>
      <tr>
        <td id="L2003" class="blob-num js-line-number" data-line-number="2003"></td>
        <td id="LC2003" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2004" class="blob-num js-line-number" data-line-number="2004"></td>
        <td id="LC2004" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L2005" class="blob-num js-line-number" data-line-number="2005"></td>
        <td id="LC2005" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L2006" class="blob-num js-line-number" data-line-number="2006"></td>
        <td id="LC2006" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2007" class="blob-num js-line-number" data-line-number="2007"></td>
        <td id="LC2007" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { filters<span class="pl-k">:</span> filters, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L2008" class="blob-num js-line-number" data-line-number="2008"></td>
        <td id="LC2008" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2009" class="blob-num js-line-number" data-line-number="2009"></td>
        <td id="LC2009" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L2010" class="blob-num js-line-number" data-line-number="2010"></td>
        <td id="LC2010" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2011" class="blob-num js-line-number" data-line-number="2011"></td>
        <td id="LC2011" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bn <span class="pl-k">=</span> <span class="pl-en">extractBatchNormParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bn<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2012" class="blob-num js-line-number" data-line-number="2012"></td>
        <td id="LC2012" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv<span class="pl-k">:</span> conv, bn<span class="pl-k">:</span> bn };</td>
      </tr>
      <tr>
        <td id="L2013" class="blob-num js-line-number" data-line-number="2013"></td>
        <td id="LC2013" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2014" class="blob-num js-line-number" data-line-number="2014"></td>
        <td id="LC2014" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-en">loadSeparableConvParamsFactory</span>(extractWeightEntry);</td>
      </tr>
      <tr>
        <td id="L2015" class="blob-num js-line-number" data-line-number="2015"></td>
        <td id="LC2015" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L2016" class="blob-num js-line-number" data-line-number="2016"></td>
        <td id="LC2016" class="blob-code blob-code-inner js-file-line">            extractConvParams<span class="pl-k">:</span> extractConvParams,</td>
      </tr>
      <tr>
        <td id="L2017" class="blob-num js-line-number" data-line-number="2017"></td>
        <td id="LC2017" class="blob-code blob-code-inner js-file-line">            extractConvWithBatchNormParams<span class="pl-k">:</span> extractConvWithBatchNormParams,</td>
      </tr>
      <tr>
        <td id="L2018" class="blob-num js-line-number" data-line-number="2018"></td>
        <td id="LC2018" class="blob-code blob-code-inner js-file-line">            extractSeparableConvParams<span class="pl-k">:</span> extractSeparableConvParams</td>
      </tr>
      <tr>
        <td id="L2019" class="blob-num js-line-number" data-line-number="2019"></td>
        <td id="LC2019" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2020" class="blob-num js-line-number" data-line-number="2020"></td>
        <td id="LC2020" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2021" class="blob-num js-line-number" data-line-number="2021"></td>
        <td id="LC2021" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsFromWeigthMap</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">config</span>) {</td>
      </tr>
      <tr>
        <td id="L2022" class="blob-num js-line-number" data-line-number="2022"></td>
        <td id="LC2022" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2023" class="blob-num js-line-number" data-line-number="2023"></td>
        <td id="LC2023" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$1</span>(weightMap, paramMappings), extractConvParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractConvParams</span>, extractConvWithBatchNormParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractConvWithBatchNormParams</span>, extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractSeparableConvParams</span>;</td>
      </tr>
      <tr>
        <td id="L2024" class="blob-num js-line-number" data-line-number="2024"></td>
        <td id="LC2024" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> params;</td>
      </tr>
      <tr>
        <td id="L2025" class="blob-num js-line-number" data-line-number="2025"></td>
        <td id="LC2025" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">config</span>.<span class="pl-smi">withSeparableConvs</span>) {</td>
      </tr>
      <tr>
        <td id="L2026" class="blob-num js-line-number" data-line-number="2026"></td>
        <td id="LC2026" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> numFilters <span class="pl-k">=</span> (<span class="pl-smi">config</span>.<span class="pl-smi">filterSizes</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">config</span>.<span class="pl-smi">filterSizes</span>.<span class="pl-c1">length</span> <span class="pl-k">||</span> <span class="pl-c1">9</span>);</td>
      </tr>
      <tr>
        <td id="L2027" class="blob-num js-line-number" data-line-number="2027"></td>
        <td id="LC2027" class="blob-code blob-code-inner js-file-line">            params <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2028" class="blob-num js-line-number" data-line-number="2028"></td>
        <td id="LC2028" class="blob-code blob-code-inner js-file-line">                conv0<span class="pl-k">:</span> <span class="pl-smi">config</span>.<span class="pl-smi">isFirstLayerConv2d</span> <span class="pl-k">?</span> <span class="pl-en">extractConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv0<span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv0<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2029" class="blob-num js-line-number" data-line-number="2029"></td>
        <td id="LC2029" class="blob-code blob-code-inner js-file-line">                conv1<span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv1<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2030" class="blob-num js-line-number" data-line-number="2030"></td>
        <td id="LC2030" class="blob-code blob-code-inner js-file-line">                conv2<span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv2<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2031" class="blob-num js-line-number" data-line-number="2031"></td>
        <td id="LC2031" class="blob-code blob-code-inner js-file-line">                conv3<span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv3<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2032" class="blob-num js-line-number" data-line-number="2032"></td>
        <td id="LC2032" class="blob-code blob-code-inner js-file-line">                conv4<span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv4<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2033" class="blob-num js-line-number" data-line-number="2033"></td>
        <td id="LC2033" class="blob-code blob-code-inner js-file-line">                conv5<span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv5<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2034" class="blob-num js-line-number" data-line-number="2034"></td>
        <td id="LC2034" class="blob-code blob-code-inner js-file-line">                conv6<span class="pl-k">:</span> numFilters <span class="pl-k">&gt;</span> <span class="pl-c1">7</span> <span class="pl-k">?</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv6<span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> <span class="pl-c1">undefined</span>,</td>
      </tr>
      <tr>
        <td id="L2035" class="blob-num js-line-number" data-line-number="2035"></td>
        <td id="LC2035" class="blob-code blob-code-inner js-file-line">                conv7<span class="pl-k">:</span> numFilters <span class="pl-k">&gt;</span> <span class="pl-c1">8</span> <span class="pl-k">?</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv7<span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> <span class="pl-c1">undefined</span>,</td>
      </tr>
      <tr>
        <td id="L2036" class="blob-num js-line-number" data-line-number="2036"></td>
        <td id="LC2036" class="blob-code blob-code-inner js-file-line">                conv8<span class="pl-k">:</span> <span class="pl-en">extractConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv8<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2037" class="blob-num js-line-number" data-line-number="2037"></td>
        <td id="LC2037" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L2038" class="blob-num js-line-number" data-line-number="2038"></td>
        <td id="LC2038" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2039" class="blob-num js-line-number" data-line-number="2039"></td>
        <td id="LC2039" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2040" class="blob-num js-line-number" data-line-number="2040"></td>
        <td id="LC2040" class="blob-code blob-code-inner js-file-line">            params <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2041" class="blob-num js-line-number" data-line-number="2041"></td>
        <td id="LC2041" class="blob-code blob-code-inner js-file-line">                conv0<span class="pl-k">:</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv0<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2042" class="blob-num js-line-number" data-line-number="2042"></td>
        <td id="LC2042" class="blob-code blob-code-inner js-file-line">                conv1<span class="pl-k">:</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv1<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2043" class="blob-num js-line-number" data-line-number="2043"></td>
        <td id="LC2043" class="blob-code blob-code-inner js-file-line">                conv2<span class="pl-k">:</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv2<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2044" class="blob-num js-line-number" data-line-number="2044"></td>
        <td id="LC2044" class="blob-code blob-code-inner js-file-line">                conv3<span class="pl-k">:</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv3<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2045" class="blob-num js-line-number" data-line-number="2045"></td>
        <td id="LC2045" class="blob-code blob-code-inner js-file-line">                conv4<span class="pl-k">:</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv4<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2046" class="blob-num js-line-number" data-line-number="2046"></td>
        <td id="LC2046" class="blob-code blob-code-inner js-file-line">                conv5<span class="pl-k">:</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv5<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2047" class="blob-num js-line-number" data-line-number="2047"></td>
        <td id="LC2047" class="blob-code blob-code-inner js-file-line">                conv6<span class="pl-k">:</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv6<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2048" class="blob-num js-line-number" data-line-number="2048"></td>
        <td id="LC2048" class="blob-code blob-code-inner js-file-line">                conv7<span class="pl-k">:</span> <span class="pl-en">extractConvWithBatchNormParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv7<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2049" class="blob-num js-line-number" data-line-number="2049"></td>
        <td id="LC2049" class="blob-code blob-code-inner js-file-line">                conv8<span class="pl-k">:</span> <span class="pl-en">extractConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv8<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2050" class="blob-num js-line-number" data-line-number="2050"></td>
        <td id="LC2050" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L2051" class="blob-num js-line-number" data-line-number="2051"></td>
        <td id="LC2051" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2052" class="blob-num js-line-number" data-line-number="2052"></td>
        <td id="LC2052" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">disposeUnusedWeightTensors</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L2053" class="blob-num js-line-number" data-line-number="2053"></td>
        <td id="LC2053" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> params, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L2054" class="blob-num js-line-number" data-line-number="2054"></td>
        <td id="LC2054" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2055" class="blob-num js-line-number" data-line-number="2055"></td>
        <td id="LC2055" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2056" class="blob-num js-line-number" data-line-number="2056"></td>
        <td id="LC2056" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> TinyYolov2SizeType;</td>
      </tr>
      <tr>
        <td id="L2057" class="blob-num js-line-number" data-line-number="2057"></td>
        <td id="LC2057" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span> (<span class="pl-smi">TinyYolov2SizeType</span>) {</td>
      </tr>
      <tr>
        <td id="L2058" class="blob-num js-line-number" data-line-number="2058"></td>
        <td id="LC2058" class="blob-code blob-code-inner js-file-line">        TinyYolov2SizeType[TinyYolov2SizeType[<span class="pl-s"><span class="pl-pds">&quot;</span>XS<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-c1">224</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>XS<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2059" class="blob-num js-line-number" data-line-number="2059"></td>
        <td id="LC2059" class="blob-code blob-code-inner js-file-line">        TinyYolov2SizeType[TinyYolov2SizeType[<span class="pl-s"><span class="pl-pds">&quot;</span>SM<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-c1">320</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>SM<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2060" class="blob-num js-line-number" data-line-number="2060"></td>
        <td id="LC2060" class="blob-code blob-code-inner js-file-line">        TinyYolov2SizeType[TinyYolov2SizeType[<span class="pl-s"><span class="pl-pds">&quot;</span>MD<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-c1">416</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>MD<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2061" class="blob-num js-line-number" data-line-number="2061"></td>
        <td id="LC2061" class="blob-code blob-code-inner js-file-line">        TinyYolov2SizeType[TinyYolov2SizeType[<span class="pl-s"><span class="pl-pds">&quot;</span>LG<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-c1">608</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>LG<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2062" class="blob-num js-line-number" data-line-number="2062"></td>
        <td id="LC2062" class="blob-code blob-code-inner js-file-line">    })(TinyYolov2SizeType <span class="pl-k">||</span> (TinyYolov2SizeType <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2063" class="blob-num js-line-number" data-line-number="2063"></td>
        <td id="LC2063" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> TinyYolov2Options <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2064" class="blob-num js-line-number" data-line-number="2064"></td>
        <td id="LC2064" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">TinyYolov2Options</span>(<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L2065" class="blob-num js-line-number" data-line-number="2065"></td>
        <td id="LC2065" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _b <span class="pl-k">=</span> _a <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> {} <span class="pl-k">:</span> _a, inputSize <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">inputSize</span>, scoreThreshold <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">scoreThreshold</span>;</td>
      </tr>
      <tr>
        <td id="L2066" class="blob-num js-line-number" data-line-number="2066"></td>
        <td id="LC2066" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>TinyYolov2Options<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2067" class="blob-num js-line-number" data-line-number="2067"></td>
        <td id="LC2067" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_inputSize</span> <span class="pl-k">=</span> inputSize <span class="pl-k">||</span> <span class="pl-c1">416</span>;</td>
      </tr>
      <tr>
        <td id="L2068" class="blob-num js-line-number" data-line-number="2068"></td>
        <td id="LC2068" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_scoreThreshold</span> <span class="pl-k">=</span> scoreThreshold <span class="pl-k">||</span> <span class="pl-c1">0.5</span>;</td>
      </tr>
      <tr>
        <td id="L2069" class="blob-num js-line-number" data-line-number="2069"></td>
        <td id="LC2069" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-smi">_inputSize</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_inputSize</span> <span class="pl-k">%</span> <span class="pl-c1">32</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2070" class="blob-num js-line-number" data-line-number="2070"></td>
        <td id="LC2070" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected inputSize to be a number divisible by 32<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2071" class="blob-num js-line-number" data-line-number="2071"></td>
        <td id="LC2071" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2072" class="blob-num js-line-number" data-line-number="2072"></td>
        <td id="LC2072" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scoreThreshold</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scoreThreshold</span> <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scoreThreshold</span> <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2073" class="blob-num js-line-number" data-line-number="2073"></td>
        <td id="LC2073" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected scoreThreshold to be a number between 0 and 1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2074" class="blob-num js-line-number" data-line-number="2074"></td>
        <td id="LC2074" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2075" class="blob-num js-line-number" data-line-number="2075"></td>
        <td id="LC2075" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2076" class="blob-num js-line-number" data-line-number="2076"></td>
        <td id="LC2076" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">TinyYolov2Options</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>inputSize<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2077" class="blob-num js-line-number" data-line-number="2077"></td>
        <td id="LC2077" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_inputSize</span>; },</td>
      </tr>
      <tr>
        <td id="L2078" class="blob-num js-line-number" data-line-number="2078"></td>
        <td id="LC2078" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2079" class="blob-num js-line-number" data-line-number="2079"></td>
        <td id="LC2079" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2080" class="blob-num js-line-number" data-line-number="2080"></td>
        <td id="LC2080" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2081" class="blob-num js-line-number" data-line-number="2081"></td>
        <td id="LC2081" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">TinyYolov2Options</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>scoreThreshold<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2082" class="blob-num js-line-number" data-line-number="2082"></td>
        <td id="LC2082" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scoreThreshold</span>; },</td>
      </tr>
      <tr>
        <td id="L2083" class="blob-num js-line-number" data-line-number="2083"></td>
        <td id="LC2083" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2084" class="blob-num js-line-number" data-line-number="2084"></td>
        <td id="LC2084" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2085" class="blob-num js-line-number" data-line-number="2085"></td>
        <td id="LC2085" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2086" class="blob-num js-line-number" data-line-number="2086"></td>
        <td id="LC2086" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> TinyYolov2Options;</td>
      </tr>
      <tr>
        <td id="L2087" class="blob-num js-line-number" data-line-number="2087"></td>
        <td id="LC2087" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L2088" class="blob-num js-line-number" data-line-number="2088"></td>
        <td id="LC2088" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2089" class="blob-num js-line-number" data-line-number="2089"></td>
        <td id="LC2089" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> TinyYolov2 <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L2090" class="blob-num js-line-number" data-line-number="2090"></td>
        <td id="LC2090" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(TinyYolov2, _super);</td>
      </tr>
      <tr>
        <td id="L2091" class="blob-num js-line-number" data-line-number="2091"></td>
        <td id="LC2091" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">TinyYolov2</span>(<span class="pl-smi">config</span>) {</td>
      </tr>
      <tr>
        <td id="L2092" class="blob-num js-line-number" data-line-number="2092"></td>
        <td id="LC2092" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>TinyYolov2<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2093" class="blob-num js-line-number" data-line-number="2093"></td>
        <td id="LC2093" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">validateConfig</span>(config);</td>
      </tr>
      <tr>
        <td id="L2094" class="blob-num js-line-number" data-line-number="2094"></td>
        <td id="LC2094" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">_config</span> <span class="pl-k">=</span> config;</td>
      </tr>
      <tr>
        <td id="L2095" class="blob-num js-line-number" data-line-number="2095"></td>
        <td id="LC2095" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L2096" class="blob-num js-line-number" data-line-number="2096"></td>
        <td id="LC2096" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2097" class="blob-num js-line-number" data-line-number="2097"></td>
        <td id="LC2097" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>config<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2098" class="blob-num js-line-number" data-line-number="2098"></td>
        <td id="LC2098" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2099" class="blob-num js-line-number" data-line-number="2099"></td>
        <td id="LC2099" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_config</span>;</td>
      </tr>
      <tr>
        <td id="L2100" class="blob-num js-line-number" data-line-number="2100"></td>
        <td id="LC2100" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2101" class="blob-num js-line-number" data-line-number="2101"></td>
        <td id="LC2101" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2102" class="blob-num js-line-number" data-line-number="2102"></td>
        <td id="LC2102" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2103" class="blob-num js-line-number" data-line-number="2103"></td>
        <td id="LC2103" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2104" class="blob-num js-line-number" data-line-number="2104"></td>
        <td id="LC2104" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>withClassScores<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2105" class="blob-num js-line-number" data-line-number="2105"></td>
        <td id="LC2105" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2106" class="blob-num js-line-number" data-line-number="2106"></td>
        <td id="LC2106" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-smi">withClassScores</span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">classes</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2107" class="blob-num js-line-number" data-line-number="2107"></td>
        <td id="LC2107" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2108" class="blob-num js-line-number" data-line-number="2108"></td>
        <td id="LC2108" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2109" class="blob-num js-line-number" data-line-number="2109"></td>
        <td id="LC2109" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2110" class="blob-num js-line-number" data-line-number="2110"></td>
        <td id="LC2110" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2111" class="blob-num js-line-number" data-line-number="2111"></td>
        <td id="LC2111" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>boxEncodingSize<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2112" class="blob-num js-line-number" data-line-number="2112"></td>
        <td id="LC2112" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2113" class="blob-num js-line-number" data-line-number="2113"></td>
        <td id="LC2113" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">5</span> <span class="pl-k">+</span> (<span class="pl-c1">this</span>.<span class="pl-smi">withClassScores</span> <span class="pl-k">?</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">classes</span>.<span class="pl-c1">length</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2114" class="blob-num js-line-number" data-line-number="2114"></td>
        <td id="LC2114" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2115" class="blob-num js-line-number" data-line-number="2115"></td>
        <td id="LC2115" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2116" class="blob-num js-line-number" data-line-number="2116"></td>
        <td id="LC2116" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2117" class="blob-num js-line-number" data-line-number="2117"></td>
        <td id="LC2117" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2118" class="blob-num js-line-number" data-line-number="2118"></td>
        <td id="LC2118" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">runTinyYolov2</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L2119" class="blob-num js-line-number" data-line-number="2119"></td>
        <td id="LC2119" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">convWithBatchNorm</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">conv0</span>);</td>
      </tr>
      <tr>
        <td id="L2120" class="blob-num js-line-number" data-line-number="2120"></td>
        <td id="LC2120" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2121" class="blob-num js-line-number" data-line-number="2121"></td>
        <td id="LC2121" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convWithBatchNorm</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv1</span>);</td>
      </tr>
      <tr>
        <td id="L2122" class="blob-num js-line-number" data-line-number="2122"></td>
        <td id="LC2122" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2123" class="blob-num js-line-number" data-line-number="2123"></td>
        <td id="LC2123" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convWithBatchNorm</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv2</span>);</td>
      </tr>
      <tr>
        <td id="L2124" class="blob-num js-line-number" data-line-number="2124"></td>
        <td id="LC2124" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2125" class="blob-num js-line-number" data-line-number="2125"></td>
        <td id="LC2125" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convWithBatchNorm</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv3</span>);</td>
      </tr>
      <tr>
        <td id="L2126" class="blob-num js-line-number" data-line-number="2126"></td>
        <td id="LC2126" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2127" class="blob-num js-line-number" data-line-number="2127"></td>
        <td id="LC2127" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convWithBatchNorm</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv4</span>);</td>
      </tr>
      <tr>
        <td id="L2128" class="blob-num js-line-number" data-line-number="2128"></td>
        <td id="LC2128" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2129" class="blob-num js-line-number" data-line-number="2129"></td>
        <td id="LC2129" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convWithBatchNorm</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv5</span>);</td>
      </tr>
      <tr>
        <td id="L2130" class="blob-num js-line-number" data-line-number="2130"></td>
        <td id="LC2130" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2131" class="blob-num js-line-number" data-line-number="2131"></td>
        <td id="LC2131" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convWithBatchNorm</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv6</span>);</td>
      </tr>
      <tr>
        <td id="L2132" class="blob-num js-line-number" data-line-number="2132"></td>
        <td id="LC2132" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convWithBatchNorm</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv7</span>);</td>
      </tr>
      <tr>
        <td id="L2133" class="blob-num js-line-number" data-line-number="2133"></td>
        <td id="LC2133" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">convLayer</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv8</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2134" class="blob-num js-line-number" data-line-number="2134"></td>
        <td id="LC2134" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2135" class="blob-num js-line-number" data-line-number="2135"></td>
        <td id="LC2135" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">runMobilenet</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L2136" class="blob-num js-line-number" data-line-number="2136"></td>
        <td id="LC2136" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-smi">isFirstLayerConv2d</span></td>
      </tr>
      <tr>
        <td id="L2137" class="blob-num js-line-number" data-line-number="2137"></td>
        <td id="LC2137" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-en">leaky</span>(<span class="pl-en">convLayer</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">conv0</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>))</td>
      </tr>
      <tr>
        <td id="L2138" class="blob-num js-line-number" data-line-number="2138"></td>
        <td id="LC2138" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> <span class="pl-en">depthwiseSeparableConv</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">conv0</span>);</td>
      </tr>
      <tr>
        <td id="L2139" class="blob-num js-line-number" data-line-number="2139"></td>
        <td id="LC2139" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2140" class="blob-num js-line-number" data-line-number="2140"></td>
        <td id="LC2140" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv1</span>);</td>
      </tr>
      <tr>
        <td id="L2141" class="blob-num js-line-number" data-line-number="2141"></td>
        <td id="LC2141" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2142" class="blob-num js-line-number" data-line-number="2142"></td>
        <td id="LC2142" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv2</span>);</td>
      </tr>
      <tr>
        <td id="L2143" class="blob-num js-line-number" data-line-number="2143"></td>
        <td id="LC2143" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2144" class="blob-num js-line-number" data-line-number="2144"></td>
        <td id="LC2144" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv3</span>);</td>
      </tr>
      <tr>
        <td id="L2145" class="blob-num js-line-number" data-line-number="2145"></td>
        <td id="LC2145" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2146" class="blob-num js-line-number" data-line-number="2146"></td>
        <td id="LC2146" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv4</span>);</td>
      </tr>
      <tr>
        <td id="L2147" class="blob-num js-line-number" data-line-number="2147"></td>
        <td id="LC2147" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2148" class="blob-num js-line-number" data-line-number="2148"></td>
        <td id="LC2148" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv5</span>);</td>
      </tr>
      <tr>
        <td id="L2149" class="blob-num js-line-number" data-line-number="2149"></td>
        <td id="LC2149" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2150" class="blob-num js-line-number" data-line-number="2150"></td>
        <td id="LC2150" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-smi">params</span>.<span class="pl-smi">conv6</span> <span class="pl-k">?</span> <span class="pl-en">depthwiseSeparableConv</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv6</span>) <span class="pl-k">:</span> out;</td>
      </tr>
      <tr>
        <td id="L2151" class="blob-num js-line-number" data-line-number="2151"></td>
        <td id="LC2151" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-smi">params</span>.<span class="pl-smi">conv7</span> <span class="pl-k">?</span> <span class="pl-en">depthwiseSeparableConv</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv7</span>) <span class="pl-k">:</span> out;</td>
      </tr>
      <tr>
        <td id="L2152" class="blob-num js-line-number" data-line-number="2152"></td>
        <td id="LC2152" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">convLayer</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv8</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2153" class="blob-num js-line-number" data-line-number="2153"></td>
        <td id="LC2153" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2154" class="blob-num js-line-number" data-line-number="2154"></td>
        <td id="LC2154" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">inputSize</span>) {</td>
      </tr>
      <tr>
        <td id="L2155" class="blob-num js-line-number" data-line-number="2155"></td>
        <td id="LC2155" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2156" class="blob-num js-line-number" data-line-number="2156"></td>
        <td id="LC2156" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> params <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L2157" class="blob-num js-line-number" data-line-number="2157"></td>
        <td id="LC2157" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>params) {</td>
      </tr>
      <tr>
        <td id="L2158" class="blob-num js-line-number" data-line-number="2158"></td>
        <td id="LC2158" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>TinyYolov2 - load model before inference<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2159" class="blob-num js-line-number" data-line-number="2159"></td>
        <td id="LC2159" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2160" class="blob-num js-line-number" data-line-number="2160"></td>
        <td id="LC2160" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2161" class="blob-num js-line-number" data-line-number="2161"></td>
        <td id="LC2161" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> batchTensor <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-en">toBatchTensor</span>(inputSize, <span class="pl-c1">false</span>).<span class="pl-en">toFloat</span>();</td>
      </tr>
      <tr>
        <td id="L2162" class="blob-num js-line-number" data-line-number="2162"></td>
        <td id="LC2162" class="blob-code blob-code-inner js-file-line">                batchTensor <span class="pl-k">=</span> <span class="pl-smi">_this</span>.<span class="pl-smi">config</span>.<span class="pl-smi">meanRgb</span></td>
      </tr>
      <tr>
        <td id="L2163" class="blob-num js-line-number" data-line-number="2163"></td>
        <td id="LC2163" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">?</span> <span class="pl-en">normalize</span>(batchTensor, <span class="pl-smi">_this</span>.<span class="pl-smi">config</span>.<span class="pl-smi">meanRgb</span>)</td>
      </tr>
      <tr>
        <td id="L2164" class="blob-num js-line-number" data-line-number="2164"></td>
        <td id="LC2164" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">:</span> batchTensor;</td>
      </tr>
      <tr>
        <td id="L2165" class="blob-num js-line-number" data-line-number="2165"></td>
        <td id="LC2165" class="blob-code blob-code-inner js-file-line">                batchTensor <span class="pl-k">=</span> <span class="pl-smi">batchTensor</span>.<span class="pl-en">div</span>(<span class="pl-en">scalar</span>(<span class="pl-c1">256</span>));</td>
      </tr>
      <tr>
        <td id="L2166" class="blob-num js-line-number" data-line-number="2166"></td>
        <td id="LC2166" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-smi">_this</span>.<span class="pl-smi">config</span>.<span class="pl-smi">withSeparableConvs</span></td>
      </tr>
      <tr>
        <td id="L2167" class="blob-num js-line-number" data-line-number="2167"></td>
        <td id="LC2167" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">?</span> <span class="pl-smi">_this</span>.<span class="pl-en">runMobilenet</span>(batchTensor, params)</td>
      </tr>
      <tr>
        <td id="L2168" class="blob-num js-line-number" data-line-number="2168"></td>
        <td id="LC2168" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">:</span> <span class="pl-smi">_this</span>.<span class="pl-en">runTinyYolov2</span>(batchTensor, params);</td>
      </tr>
      <tr>
        <td id="L2169" class="blob-num js-line-number" data-line-number="2169"></td>
        <td id="LC2169" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2170" class="blob-num js-line-number" data-line-number="2170"></td>
        <td id="LC2170" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2171" class="blob-num js-line-number" data-line-number="2171"></td>
        <td id="LC2171" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">inputSize</span>) {</td>
      </tr>
      <tr>
        <td id="L2172" class="blob-num js-line-number" data-line-number="2172"></td>
        <td id="LC2172" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2173" class="blob-num js-line-number" data-line-number="2173"></td>
        <td id="LC2173" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L2174" class="blob-num js-line-number" data-line-number="2174"></td>
        <td id="LC2174" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L2175" class="blob-num js-line-number" data-line-number="2175"></td>
        <td id="LC2175" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L2176" class="blob-num js-line-number" data-line-number="2176"></td>
        <td id="LC2176" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L2177" class="blob-num js-line-number" data-line-number="2177"></td>
        <td id="LC2177" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L2178" class="blob-num js-line-number" data-line-number="2178"></td>
        <td id="LC2178" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L2179" class="blob-num js-line-number" data-line-number="2179"></td>
        <td id="LC2179" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>(), inputSize])];</td>
      </tr>
      <tr>
        <td id="L2180" class="blob-num js-line-number" data-line-number="2180"></td>
        <td id="LC2180" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()];</td>
      </tr>
      <tr>
        <td id="L2181" class="blob-num js-line-number" data-line-number="2181"></td>
        <td id="LC2181" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2182" class="blob-num js-line-number" data-line-number="2182"></td>
        <td id="LC2182" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L2183" class="blob-num js-line-number" data-line-number="2183"></td>
        <td id="LC2183" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2184" class="blob-num js-line-number" data-line-number="2184"></td>
        <td id="LC2184" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2185" class="blob-num js-line-number" data-line-number="2185"></td>
        <td id="LC2185" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">detect</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">forwardParams</span>) {</td>
      </tr>
      <tr>
        <td id="L2186" class="blob-num js-line-number" data-line-number="2186"></td>
        <td id="LC2186" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (forwardParams <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { forwardParams <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L2187" class="blob-num js-line-number" data-line-number="2187"></td>
        <td id="LC2187" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2188" class="blob-num js-line-number" data-line-number="2188"></td>
        <td id="LC2188" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a, inputSize, scoreThreshold, netInput, out, out0, inputDimensions, results, boxes, scores, classScores, classNames, indices, detections;</td>
      </tr>
      <tr>
        <td id="L2189" class="blob-num js-line-number" data-line-number="2189"></td>
        <td id="LC2189" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2190" class="blob-num js-line-number" data-line-number="2190"></td>
        <td id="LC2190" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L2191" class="blob-num js-line-number" data-line-number="2191"></td>
        <td id="LC2191" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L2192" class="blob-num js-line-number" data-line-number="2192"></td>
        <td id="LC2192" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L2193" class="blob-num js-line-number" data-line-number="2193"></td>
        <td id="LC2193" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">TinyYolov2Options</span>(forwardParams), inputSize <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">inputSize</span>, scoreThreshold <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">scoreThreshold</span>;</td>
      </tr>
      <tr>
        <td id="L2194" class="blob-num js-line-number" data-line-number="2194"></td>
        <td id="LC2194" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L2195" class="blob-num js-line-number" data-line-number="2195"></td>
        <td id="LC2195" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L2196" class="blob-num js-line-number" data-line-number="2196"></td>
        <td id="LC2196" class="blob-code blob-code-inner js-file-line">                            netInput <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2197" class="blob-num js-line-number" data-line-number="2197"></td>
        <td id="LC2197" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">forwardInput</span>(netInput, inputSize)];</td>
      </tr>
      <tr>
        <td id="L2198" class="blob-num js-line-number" data-line-number="2198"></td>
        <td id="LC2198" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L2199" class="blob-num js-line-number" data-line-number="2199"></td>
        <td id="LC2199" class="blob-code blob-code-inner js-file-line">                            out <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2200" class="blob-num js-line-number" data-line-number="2200"></td>
        <td id="LC2200" class="blob-code blob-code-inner js-file-line">                            out0 <span class="pl-k">=</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">unstack</span>(out)[<span class="pl-c1">0</span>].<span class="pl-en">expandDims</span>(); });</td>
      </tr>
      <tr>
        <td id="L2201" class="blob-num js-line-number" data-line-number="2201"></td>
        <td id="LC2201" class="blob-code blob-code-inner js-file-line">                            inputDimensions <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2202" class="blob-num js-line-number" data-line-number="2202"></td>
        <td id="LC2202" class="blob-code blob-code-inner js-file-line">                                width<span class="pl-k">:</span> <span class="pl-smi">netInput</span>.<span class="pl-en">getInputWidth</span>(<span class="pl-c1">0</span>),</td>
      </tr>
      <tr>
        <td id="L2203" class="blob-num js-line-number" data-line-number="2203"></td>
        <td id="LC2203" class="blob-code blob-code-inner js-file-line">                                height<span class="pl-k">:</span> <span class="pl-smi">netInput</span>.<span class="pl-en">getInputHeight</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L2204" class="blob-num js-line-number" data-line-number="2204"></td>
        <td id="LC2204" class="blob-code blob-code-inner js-file-line">                            };</td>
      </tr>
      <tr>
        <td id="L2205" class="blob-num js-line-number" data-line-number="2205"></td>
        <td id="LC2205" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">extractBoxes</span>(out0, <span class="pl-smi">netInput</span>.<span class="pl-en">getReshapedInputDimensions</span>(<span class="pl-c1">0</span>), scoreThreshold)];</td>
      </tr>
      <tr>
        <td id="L2206" class="blob-num js-line-number" data-line-number="2206"></td>
        <td id="LC2206" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">3</span>:</td>
      </tr>
      <tr>
        <td id="L2207" class="blob-num js-line-number" data-line-number="2207"></td>
        <td id="LC2207" class="blob-code blob-code-inner js-file-line">                            results <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2208" class="blob-num js-line-number" data-line-number="2208"></td>
        <td id="LC2208" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">out</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L2209" class="blob-num js-line-number" data-line-number="2209"></td>
        <td id="LC2209" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">out0</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L2210" class="blob-num js-line-number" data-line-number="2210"></td>
        <td id="LC2210" class="blob-code blob-code-inner js-file-line">                            boxes <span class="pl-k">=</span> <span class="pl-smi">results</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>) { <span class="pl-k">return</span> <span class="pl-smi">res</span>.<span class="pl-smi">box</span>; });</td>
      </tr>
      <tr>
        <td id="L2211" class="blob-num js-line-number" data-line-number="2211"></td>
        <td id="LC2211" class="blob-code blob-code-inner js-file-line">                            scores <span class="pl-k">=</span> <span class="pl-smi">results</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>) { <span class="pl-k">return</span> <span class="pl-smi">res</span>.<span class="pl-smi">score</span>; });</td>
      </tr>
      <tr>
        <td id="L2212" class="blob-num js-line-number" data-line-number="2212"></td>
        <td id="LC2212" class="blob-code blob-code-inner js-file-line">                            classScores <span class="pl-k">=</span> <span class="pl-smi">results</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>) { <span class="pl-k">return</span> <span class="pl-smi">res</span>.<span class="pl-smi">classScore</span>; });</td>
      </tr>
      <tr>
        <td id="L2213" class="blob-num js-line-number" data-line-number="2213"></td>
        <td id="LC2213" class="blob-code blob-code-inner js-file-line">                            classNames <span class="pl-k">=</span> <span class="pl-smi">results</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>) { <span class="pl-k">return</span> <span class="pl-smi">_this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">classes</span>[<span class="pl-smi">res</span>.<span class="pl-c1">label</span>]; });</td>
      </tr>
      <tr>
        <td id="L2214" class="blob-num js-line-number" data-line-number="2214"></td>
        <td id="LC2214" class="blob-code blob-code-inner js-file-line">                            indices <span class="pl-k">=</span> <span class="pl-en">nonMaxSuppression$1</span>(<span class="pl-smi">boxes</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">box</span>) { <span class="pl-k">return</span> <span class="pl-smi">box</span>.<span class="pl-en">rescale</span>(inputSize); }), scores, <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-smi">iouThreshold</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2215" class="blob-num js-line-number" data-line-number="2215"></td>
        <td id="LC2215" class="blob-code blob-code-inner js-file-line">                            detections <span class="pl-k">=</span> <span class="pl-smi">indices</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L2216" class="blob-num js-line-number" data-line-number="2216"></td>
        <td id="LC2216" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ObjectDetection</span>(scores[idx], classScores[idx], classNames[idx], boxes[idx], inputDimensions);</td>
      </tr>
      <tr>
        <td id="L2217" class="blob-num js-line-number" data-line-number="2217"></td>
        <td id="LC2217" class="blob-code blob-code-inner js-file-line">                            });</td>
      </tr>
      <tr>
        <td id="L2218" class="blob-num js-line-number" data-line-number="2218"></td>
        <td id="LC2218" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, detections];</td>
      </tr>
      <tr>
        <td id="L2219" class="blob-num js-line-number" data-line-number="2219"></td>
        <td id="LC2219" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2220" class="blob-num js-line-number" data-line-number="2220"></td>
        <td id="LC2220" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L2221" class="blob-num js-line-number" data-line-number="2221"></td>
        <td id="LC2221" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2222" class="blob-num js-line-number" data-line-number="2222"></td>
        <td id="LC2222" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2223" class="blob-num js-line-number" data-line-number="2223"></td>
        <td id="LC2223" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2224" class="blob-num js-line-number" data-line-number="2224"></td>
        <td id="LC2224" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2225" class="blob-num js-line-number" data-line-number="2225"></td>
        <td id="LC2225" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2226" class="blob-num js-line-number" data-line-number="2226"></td>
        <td id="LC2226" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L2227" class="blob-num js-line-number" data-line-number="2227"></td>
        <td id="LC2227" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsFromWeigthMap</span>(weightMap, <span class="pl-c1">this</span>.<span class="pl-smi">config</span>);</td>
      </tr>
      <tr>
        <td id="L2228" class="blob-num js-line-number" data-line-number="2228"></td>
        <td id="LC2228" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2229" class="blob-num js-line-number" data-line-number="2229"></td>
        <td id="LC2229" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L2230" class="blob-num js-line-number" data-line-number="2230"></td>
        <td id="LC2230" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filterSizes <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-smi">filterSizes</span> <span class="pl-k">||</span> <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">DEFAULT_FILTER_SIZES</span>;</td>
      </tr>
      <tr>
        <td id="L2231" class="blob-num js-line-number" data-line-number="2231"></td>
        <td id="LC2231" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> numFilters <span class="pl-k">=</span> filterSizes <span class="pl-k">?</span> <span class="pl-smi">filterSizes</span>.<span class="pl-c1">length</span> <span class="pl-k">:</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L2232" class="blob-num js-line-number" data-line-number="2232"></td>
        <td id="LC2232" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (numFilters <span class="pl-k">!==</span> <span class="pl-c1">7</span> <span class="pl-k">&amp;&amp;</span> numFilters <span class="pl-k">!==</span> <span class="pl-c1">8</span> <span class="pl-k">&amp;&amp;</span> numFilters <span class="pl-k">!==</span> <span class="pl-c1">9</span>) {</td>
      </tr>
      <tr>
        <td id="L2233" class="blob-num js-line-number" data-line-number="2233"></td>
        <td id="LC2233" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> numFilters <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> filterSizes in config<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2234" class="blob-num js-line-number" data-line-number="2234"></td>
        <td id="LC2234" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2235" class="blob-num js-line-number" data-line-number="2235"></td>
        <td id="LC2235" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParams</span>(weights, <span class="pl-c1">this</span>.<span class="pl-smi">config</span>, <span class="pl-c1">this</span>.<span class="pl-smi">boxEncodingSize</span>, filterSizes);</td>
      </tr>
      <tr>
        <td id="L2236" class="blob-num js-line-number" data-line-number="2236"></td>
        <td id="LC2236" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2237" class="blob-num js-line-number" data-line-number="2237"></td>
        <td id="LC2237" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractBoxes</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">outputTensor</span>, <span class="pl-smi">inputBlobDimensions</span>, <span class="pl-smi">scoreThreshold</span>) {</td>
      </tr>
      <tr>
        <td id="L2238" class="blob-num js-line-number" data-line-number="2238"></td>
        <td id="LC2238" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2239" class="blob-num js-line-number" data-line-number="2239"></td>
        <td id="LC2239" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> width, height, inputSize, correctionFactorX, correctionFactorY, numCells, numBoxes, _a, boxesTensor, scoresTensor, classScoresTensor, results, scoresData, boxesData, row, col, anchor, score, ctX, ctY, width_1, height_1, x, y, pos, _b, classScore, label, _c;</td>
      </tr>
      <tr>
        <td id="L2240" class="blob-num js-line-number" data-line-number="2240"></td>
        <td id="LC2240" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2241" class="blob-num js-line-number" data-line-number="2241"></td>
        <td id="LC2241" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_d</span>) {</td>
      </tr>
      <tr>
        <td id="L2242" class="blob-num js-line-number" data-line-number="2242"></td>
        <td id="LC2242" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_d</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L2243" class="blob-num js-line-number" data-line-number="2243"></td>
        <td id="LC2243" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L2244" class="blob-num js-line-number" data-line-number="2244"></td>
        <td id="LC2244" class="blob-code blob-code-inner js-file-line">                            width <span class="pl-k">=</span> <span class="pl-smi">inputBlobDimensions</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">inputBlobDimensions</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L2245" class="blob-num js-line-number" data-line-number="2245"></td>
        <td id="LC2245" class="blob-code blob-code-inner js-file-line">                            inputSize <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(width, height);</td>
      </tr>
      <tr>
        <td id="L2246" class="blob-num js-line-number" data-line-number="2246"></td>
        <td id="LC2246" class="blob-code blob-code-inner js-file-line">                            correctionFactorX <span class="pl-k">=</span> inputSize <span class="pl-k">/</span> width;</td>
      </tr>
      <tr>
        <td id="L2247" class="blob-num js-line-number" data-line-number="2247"></td>
        <td id="LC2247" class="blob-code blob-code-inner js-file-line">                            correctionFactorY <span class="pl-k">=</span> inputSize <span class="pl-k">/</span> height;</td>
      </tr>
      <tr>
        <td id="L2248" class="blob-num js-line-number" data-line-number="2248"></td>
        <td id="LC2248" class="blob-code blob-code-inner js-file-line">                            numCells <span class="pl-k">=</span> <span class="pl-smi">outputTensor</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L2249" class="blob-num js-line-number" data-line-number="2249"></td>
        <td id="LC2249" class="blob-code blob-code-inner js-file-line">                            numBoxes <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">anchors</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2250" class="blob-num js-line-number" data-line-number="2250"></td>
        <td id="LC2250" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2251" class="blob-num js-line-number" data-line-number="2251"></td>
        <td id="LC2251" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> reshaped <span class="pl-k">=</span> <span class="pl-smi">outputTensor</span>.<span class="pl-en">reshape</span>([numCells, numCells, numBoxes, <span class="pl-smi">_this</span>.<span class="pl-smi">boxEncodingSize</span>]);</td>
      </tr>
      <tr>
        <td id="L2252" class="blob-num js-line-number" data-line-number="2252"></td>
        <td id="LC2252" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> boxes <span class="pl-k">=</span> <span class="pl-smi">reshaped</span>.<span class="pl-c1">slice</span>([<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>], [numCells, numCells, numBoxes, <span class="pl-c1">4</span>]);</td>
      </tr>
      <tr>
        <td id="L2253" class="blob-num js-line-number" data-line-number="2253"></td>
        <td id="LC2253" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> scores <span class="pl-k">=</span> <span class="pl-smi">reshaped</span>.<span class="pl-c1">slice</span>([<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">4</span>], [numCells, numCells, numBoxes, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2254" class="blob-num js-line-number" data-line-number="2254"></td>
        <td id="LC2254" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> classScores <span class="pl-k">=</span> <span class="pl-smi">_this</span>.<span class="pl-smi">withClassScores</span></td>
      </tr>
      <tr>
        <td id="L2255" class="blob-num js-line-number" data-line-number="2255"></td>
        <td id="LC2255" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">?</span> <span class="pl-en">softmax</span>(<span class="pl-smi">reshaped</span>.<span class="pl-c1">slice</span>([<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">5</span>], [numCells, numCells, numBoxes, <span class="pl-smi">_this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">classes</span>.<span class="pl-c1">length</span>]), <span class="pl-c1">3</span>)</td>
      </tr>
      <tr>
        <td id="L2256" class="blob-num js-line-number" data-line-number="2256"></td>
        <td id="LC2256" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">:</span> <span class="pl-en">scalar</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2257" class="blob-num js-line-number" data-line-number="2257"></td>
        <td id="LC2257" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> [boxes, scores, classScores];</td>
      </tr>
      <tr>
        <td id="L2258" class="blob-num js-line-number" data-line-number="2258"></td>
        <td id="LC2258" class="blob-code blob-code-inner js-file-line">                            }), boxesTensor <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], scoresTensor <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>], classScoresTensor <span class="pl-k">=</span> _a[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L2259" class="blob-num js-line-number" data-line-number="2259"></td>
        <td id="LC2259" class="blob-code blob-code-inner js-file-line">                            results <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2260" class="blob-num js-line-number" data-line-number="2260"></td>
        <td id="LC2260" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">scoresTensor</span>.<span class="pl-en">array</span>()];</td>
      </tr>
      <tr>
        <td id="L2261" class="blob-num js-line-number" data-line-number="2261"></td>
        <td id="LC2261" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L2262" class="blob-num js-line-number" data-line-number="2262"></td>
        <td id="LC2262" class="blob-code blob-code-inner js-file-line">                            scoresData <span class="pl-k">=</span> <span class="pl-smi">_d</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2263" class="blob-num js-line-number" data-line-number="2263"></td>
        <td id="LC2263" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">boxesTensor</span>.<span class="pl-en">array</span>()];</td>
      </tr>
      <tr>
        <td id="L2264" class="blob-num js-line-number" data-line-number="2264"></td>
        <td id="LC2264" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L2265" class="blob-num js-line-number" data-line-number="2265"></td>
        <td id="LC2265" class="blob-code blob-code-inner js-file-line">                            boxesData <span class="pl-k">=</span> <span class="pl-smi">_d</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2266" class="blob-num js-line-number" data-line-number="2266"></td>
        <td id="LC2266" class="blob-code blob-code-inner js-file-line">                            row <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2267" class="blob-num js-line-number" data-line-number="2267"></td>
        <td id="LC2267" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">_d</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">3</span>;</td>
      </tr>
      <tr>
        <td id="L2268" class="blob-num js-line-number" data-line-number="2268"></td>
        <td id="LC2268" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">3</span>:</td>
      </tr>
      <tr>
        <td id="L2269" class="blob-num js-line-number" data-line-number="2269"></td>
        <td id="LC2269" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>(row <span class="pl-k">&lt;</span> numCells)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">12</span>];</td>
      </tr>
      <tr>
        <td id="L2270" class="blob-num js-line-number" data-line-number="2270"></td>
        <td id="LC2270" class="blob-code blob-code-inner js-file-line">                            col <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2271" class="blob-num js-line-number" data-line-number="2271"></td>
        <td id="LC2271" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">_d</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L2272" class="blob-num js-line-number" data-line-number="2272"></td>
        <td id="LC2272" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">4</span>:</td>
      </tr>
      <tr>
        <td id="L2273" class="blob-num js-line-number" data-line-number="2273"></td>
        <td id="LC2273" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>(col <span class="pl-k">&lt;</span> numCells)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">11</span>];</td>
      </tr>
      <tr>
        <td id="L2274" class="blob-num js-line-number" data-line-number="2274"></td>
        <td id="LC2274" class="blob-code blob-code-inner js-file-line">                            anchor <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2275" class="blob-num js-line-number" data-line-number="2275"></td>
        <td id="LC2275" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">_d</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L2276" class="blob-num js-line-number" data-line-number="2276"></td>
        <td id="LC2276" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">5</span>:</td>
      </tr>
      <tr>
        <td id="L2277" class="blob-num js-line-number" data-line-number="2277"></td>
        <td id="LC2277" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>(anchor <span class="pl-k">&lt;</span> numBoxes)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">10</span>];</td>
      </tr>
      <tr>
        <td id="L2278" class="blob-num js-line-number" data-line-number="2278"></td>
        <td id="LC2278" class="blob-code blob-code-inner js-file-line">                            score <span class="pl-k">=</span> <span class="pl-en">sigmoid$1</span>(scoresData[row][col][anchor][<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L2279" class="blob-num js-line-number" data-line-number="2279"></td>
        <td id="LC2279" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-k">!</span>scoreThreshold <span class="pl-k">||</span> score <span class="pl-k">&gt;</span> scoreThreshold)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">9</span>];</td>
      </tr>
      <tr>
        <td id="L2280" class="blob-num js-line-number" data-line-number="2280"></td>
        <td id="LC2280" class="blob-code blob-code-inner js-file-line">                            ctX <span class="pl-k">=</span> ((col <span class="pl-k">+</span> <span class="pl-en">sigmoid$1</span>(boxesData[row][col][anchor][<span class="pl-c1">0</span>])) <span class="pl-k">/</span> numCells) <span class="pl-k">*</span> correctionFactorX;</td>
      </tr>
      <tr>
        <td id="L2281" class="blob-num js-line-number" data-line-number="2281"></td>
        <td id="LC2281" class="blob-code blob-code-inner js-file-line">                            ctY <span class="pl-k">=</span> ((row <span class="pl-k">+</span> <span class="pl-en">sigmoid$1</span>(boxesData[row][col][anchor][<span class="pl-c1">1</span>])) <span class="pl-k">/</span> numCells) <span class="pl-k">*</span> correctionFactorY;</td>
      </tr>
      <tr>
        <td id="L2282" class="blob-num js-line-number" data-line-number="2282"></td>
        <td id="LC2282" class="blob-code blob-code-inner js-file-line">                            width_1 <span class="pl-k">=</span> ((<span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(boxesData[row][col][anchor][<span class="pl-c1">2</span>]) <span class="pl-k">*</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">anchors</span>[anchor].<span class="pl-c1">x</span>) <span class="pl-k">/</span> numCells) <span class="pl-k">*</span> correctionFactorX;</td>
      </tr>
      <tr>
        <td id="L2283" class="blob-num js-line-number" data-line-number="2283"></td>
        <td id="LC2283" class="blob-code blob-code-inner js-file-line">                            height_1 <span class="pl-k">=</span> ((<span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(boxesData[row][col][anchor][<span class="pl-c1">3</span>]) <span class="pl-k">*</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">anchors</span>[anchor].<span class="pl-c1">y</span>) <span class="pl-k">/</span> numCells) <span class="pl-k">*</span> correctionFactorY;</td>
      </tr>
      <tr>
        <td id="L2284" class="blob-num js-line-number" data-line-number="2284"></td>
        <td id="LC2284" class="blob-code blob-code-inner js-file-line">                            x <span class="pl-k">=</span> (ctX <span class="pl-k">-</span> (width_1 <span class="pl-k">/</span> <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L2285" class="blob-num js-line-number" data-line-number="2285"></td>
        <td id="LC2285" class="blob-code blob-code-inner js-file-line">                            y <span class="pl-k">=</span> (ctY <span class="pl-k">-</span> (height_1 <span class="pl-k">/</span> <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L2286" class="blob-num js-line-number" data-line-number="2286"></td>
        <td id="LC2286" class="blob-code blob-code-inner js-file-line">                            pos <span class="pl-k">=</span> { row<span class="pl-k">:</span> row, col<span class="pl-k">:</span> col, anchor<span class="pl-k">:</span> anchor };</td>
      </tr>
      <tr>
        <td id="L2287" class="blob-num js-line-number" data-line-number="2287"></td>
        <td id="LC2287" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">withClassScores</span>) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">7</span>];</td>
      </tr>
      <tr>
        <td id="L2288" class="blob-num js-line-number" data-line-number="2288"></td>
        <td id="LC2288" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">extractPredictedClass</span>(classScoresTensor, pos)];</td>
      </tr>
      <tr>
        <td id="L2289" class="blob-num js-line-number" data-line-number="2289"></td>
        <td id="LC2289" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">6</span>:</td>
      </tr>
      <tr>
        <td id="L2290" class="blob-num js-line-number" data-line-number="2290"></td>
        <td id="LC2290" class="blob-code blob-code-inner js-file-line">                            _c <span class="pl-k">=</span> <span class="pl-smi">_d</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2291" class="blob-num js-line-number" data-line-number="2291"></td>
        <td id="LC2291" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">8</span>];</td>
      </tr>
      <tr>
        <td id="L2292" class="blob-num js-line-number" data-line-number="2292"></td>
        <td id="LC2292" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">7</span>:</td>
      </tr>
      <tr>
        <td id="L2293" class="blob-num js-line-number" data-line-number="2293"></td>
        <td id="LC2293" class="blob-code blob-code-inner js-file-line">                            _c <span class="pl-k">=</span> { classScore<span class="pl-k">:</span> <span class="pl-c1">1</span>, label<span class="pl-k">:</span> <span class="pl-c1">0</span> };</td>
      </tr>
      <tr>
        <td id="L2294" class="blob-num js-line-number" data-line-number="2294"></td>
        <td id="LC2294" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">_d</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">8</span>;</td>
      </tr>
      <tr>
        <td id="L2295" class="blob-num js-line-number" data-line-number="2295"></td>
        <td id="LC2295" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">8</span>:</td>
      </tr>
      <tr>
        <td id="L2296" class="blob-num js-line-number" data-line-number="2296"></td>
        <td id="LC2296" class="blob-code blob-code-inner js-file-line">                            _b <span class="pl-k">=</span> _c, classScore <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">classScore</span>, label <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-c1">label</span>;</td>
      </tr>
      <tr>
        <td id="L2297" class="blob-num js-line-number" data-line-number="2297"></td>
        <td id="LC2297" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">results</span>.<span class="pl-c1">push</span>(<span class="pl-en">__assign</span>({ box<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">BoundingBox</span>(x, y, x <span class="pl-k">+</span> width_1, y <span class="pl-k">+</span> height_1), score<span class="pl-k">:</span> score, classScore<span class="pl-k">:</span> score <span class="pl-k">*</span> classScore, label<span class="pl-k">:</span> label }, pos));</td>
      </tr>
      <tr>
        <td id="L2298" class="blob-num js-line-number" data-line-number="2298"></td>
        <td id="LC2298" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">_d</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">9</span>;</td>
      </tr>
      <tr>
        <td id="L2299" class="blob-num js-line-number" data-line-number="2299"></td>
        <td id="LC2299" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">9</span>:</td>
      </tr>
      <tr>
        <td id="L2300" class="blob-num js-line-number" data-line-number="2300"></td>
        <td id="LC2300" class="blob-code blob-code-inner js-file-line">                            anchor<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L2301" class="blob-num js-line-number" data-line-number="2301"></td>
        <td id="LC2301" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">5</span>];</td>
      </tr>
      <tr>
        <td id="L2302" class="blob-num js-line-number" data-line-number="2302"></td>
        <td id="LC2302" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">10</span>:</td>
      </tr>
      <tr>
        <td id="L2303" class="blob-num js-line-number" data-line-number="2303"></td>
        <td id="LC2303" class="blob-code blob-code-inner js-file-line">                            col<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L2304" class="blob-num js-line-number" data-line-number="2304"></td>
        <td id="LC2304" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">4</span>];</td>
      </tr>
      <tr>
        <td id="L2305" class="blob-num js-line-number" data-line-number="2305"></td>
        <td id="LC2305" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">11</span>:</td>
      </tr>
      <tr>
        <td id="L2306" class="blob-num js-line-number" data-line-number="2306"></td>
        <td id="LC2306" class="blob-code blob-code-inner js-file-line">                            row<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L2307" class="blob-num js-line-number" data-line-number="2307"></td>
        <td id="LC2307" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L2308" class="blob-num js-line-number" data-line-number="2308"></td>
        <td id="LC2308" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">12</span>:</td>
      </tr>
      <tr>
        <td id="L2309" class="blob-num js-line-number" data-line-number="2309"></td>
        <td id="LC2309" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">boxesTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L2310" class="blob-num js-line-number" data-line-number="2310"></td>
        <td id="LC2310" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">scoresTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L2311" class="blob-num js-line-number" data-line-number="2311"></td>
        <td id="LC2311" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">classScoresTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L2312" class="blob-num js-line-number" data-line-number="2312"></td>
        <td id="LC2312" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, results];</td>
      </tr>
      <tr>
        <td id="L2313" class="blob-num js-line-number" data-line-number="2313"></td>
        <td id="LC2313" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2314" class="blob-num js-line-number" data-line-number="2314"></td>
        <td id="LC2314" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L2315" class="blob-num js-line-number" data-line-number="2315"></td>
        <td id="LC2315" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2316" class="blob-num js-line-number" data-line-number="2316"></td>
        <td id="LC2316" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2317" class="blob-num js-line-number" data-line-number="2317"></td>
        <td id="LC2317" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractPredictedClass</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">classesTensor</span>, <span class="pl-smi">pos</span>) {</td>
      </tr>
      <tr>
        <td id="L2318" class="blob-num js-line-number" data-line-number="2318"></td>
        <td id="LC2318" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2319" class="blob-num js-line-number" data-line-number="2319"></td>
        <td id="LC2319" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> row, col, anchor, classesData;</td>
      </tr>
      <tr>
        <td id="L2320" class="blob-num js-line-number" data-line-number="2320"></td>
        <td id="LC2320" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L2321" class="blob-num js-line-number" data-line-number="2321"></td>
        <td id="LC2321" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L2322" class="blob-num js-line-number" data-line-number="2322"></td>
        <td id="LC2322" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L2323" class="blob-num js-line-number" data-line-number="2323"></td>
        <td id="LC2323" class="blob-code blob-code-inner js-file-line">                            row <span class="pl-k">=</span> <span class="pl-smi">pos</span>.<span class="pl-smi">row</span>, col <span class="pl-k">=</span> <span class="pl-smi">pos</span>.<span class="pl-smi">col</span>, anchor <span class="pl-k">=</span> <span class="pl-smi">pos</span>.<span class="pl-smi">anchor</span>;</td>
      </tr>
      <tr>
        <td id="L2324" class="blob-num js-line-number" data-line-number="2324"></td>
        <td id="LC2324" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">classesTensor</span>.<span class="pl-en">array</span>()];</td>
      </tr>
      <tr>
        <td id="L2325" class="blob-num js-line-number" data-line-number="2325"></td>
        <td id="LC2325" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L2326" class="blob-num js-line-number" data-line-number="2326"></td>
        <td id="LC2326" class="blob-code blob-code-inner js-file-line">                            classesData <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2327" class="blob-num js-line-number" data-line-number="2327"></td>
        <td id="LC2327" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-c1">Array</span>(<span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">classes</span>.<span class="pl-c1">length</span>).<span class="pl-en">fill</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L2328" class="blob-num js-line-number" data-line-number="2328"></td>
        <td id="LC2328" class="blob-code blob-code-inner js-file-line">                                    .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> classesData[row][col][anchor][i]; })</td>
      </tr>
      <tr>
        <td id="L2329" class="blob-num js-line-number" data-line-number="2329"></td>
        <td id="LC2329" class="blob-code blob-code-inner js-file-line">                                    .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">classScore</span>, <span class="pl-smi">label</span>) { <span class="pl-k">return</span> ({</td>
      </tr>
      <tr>
        <td id="L2330" class="blob-num js-line-number" data-line-number="2330"></td>
        <td id="LC2330" class="blob-code blob-code-inner js-file-line">                                    classScore<span class="pl-k">:</span> classScore,</td>
      </tr>
      <tr>
        <td id="L2331" class="blob-num js-line-number" data-line-number="2331"></td>
        <td id="LC2331" class="blob-code blob-code-inner js-file-line">                                    label<span class="pl-k">:</span> label</td>
      </tr>
      <tr>
        <td id="L2332" class="blob-num js-line-number" data-line-number="2332"></td>
        <td id="LC2332" class="blob-code blob-code-inner js-file-line">                                }); })</td>
      </tr>
      <tr>
        <td id="L2333" class="blob-num js-line-number" data-line-number="2333"></td>
        <td id="LC2333" class="blob-code blob-code-inner js-file-line">                                    .<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">max</span>, <span class="pl-smi">curr</span>) { <span class="pl-k">return</span> <span class="pl-smi">max</span>.<span class="pl-smi">classScore</span> <span class="pl-k">&gt;</span> <span class="pl-smi">curr</span>.<span class="pl-smi">classScore</span> <span class="pl-k">?</span> max <span class="pl-k">:</span> curr; })];</td>
      </tr>
      <tr>
        <td id="L2334" class="blob-num js-line-number" data-line-number="2334"></td>
        <td id="LC2334" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2335" class="blob-num js-line-number" data-line-number="2335"></td>
        <td id="LC2335" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L2336" class="blob-num js-line-number" data-line-number="2336"></td>
        <td id="LC2336" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2337" class="blob-num js-line-number" data-line-number="2337"></td>
        <td id="LC2337" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2338" class="blob-num js-line-number" data-line-number="2338"></td>
        <td id="LC2338" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">DEFAULT_FILTER_SIZES</span> <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L2339" class="blob-num js-line-number" data-line-number="2339"></td>
        <td id="LC2339" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">3</span>, <span class="pl-c1">16</span>, <span class="pl-c1">32</span>, <span class="pl-c1">64</span>, <span class="pl-c1">128</span>, <span class="pl-c1">256</span>, <span class="pl-c1">512</span>, <span class="pl-c1">1024</span>, <span class="pl-c1">1024</span></td>
      </tr>
      <tr>
        <td id="L2340" class="blob-num js-line-number" data-line-number="2340"></td>
        <td id="LC2340" class="blob-code blob-code-inner js-file-line">        ];</td>
      </tr>
      <tr>
        <td id="L2341" class="blob-num js-line-number" data-line-number="2341"></td>
        <td id="LC2341" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> TinyYolov2;</td>
      </tr>
      <tr>
        <td id="L2342" class="blob-num js-line-number" data-line-number="2342"></td>
        <td id="LC2342" class="blob-code blob-code-inner js-file-line">    }(NeuralNetwork));</td>
      </tr>
      <tr>
        <td id="L2343" class="blob-num js-line-number" data-line-number="2343"></td>
        <td id="LC2343" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2344" class="blob-num js-line-number" data-line-number="2344"></td>
        <td id="LC2344" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2345" class="blob-num js-line-number" data-line-number="2345"></td>
        <td id="LC2345" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2346" class="blob-num js-line-number" data-line-number="2346"></td>
        <td id="LC2346" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> tfjsImageRecognitionBase <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/*</span>#__PURE__<span class="pl-c">*/</span></span><span class="pl-c1">Object</span>.<span class="pl-en">freeze</span>({</td>
      </tr>
      <tr>
        <td id="L2347" class="blob-num js-line-number" data-line-number="2347"></td>
        <td id="LC2347" class="blob-code blob-code-inner js-file-line">        convLayer<span class="pl-k">:</span> convLayer,</td>
      </tr>
      <tr>
        <td id="L2348" class="blob-num js-line-number" data-line-number="2348"></td>
        <td id="LC2348" class="blob-code blob-code-inner js-file-line">        disposeUnusedWeightTensors<span class="pl-k">:</span> disposeUnusedWeightTensors,</td>
      </tr>
      <tr>
        <td id="L2349" class="blob-num js-line-number" data-line-number="2349"></td>
        <td id="LC2349" class="blob-code blob-code-inner js-file-line">        extractConvParamsFactory<span class="pl-k">:</span> extractConvParamsFactory,</td>
      </tr>
      <tr>
        <td id="L2350" class="blob-num js-line-number" data-line-number="2350"></td>
        <td id="LC2350" class="blob-code blob-code-inner js-file-line">        extractFCParamsFactory<span class="pl-k">:</span> extractFCParamsFactory,</td>
      </tr>
      <tr>
        <td id="L2351" class="blob-num js-line-number" data-line-number="2351"></td>
        <td id="LC2351" class="blob-code blob-code-inner js-file-line">        extractSeparableConvParamsFactory<span class="pl-k">:</span> extractSeparableConvParamsFactory,</td>
      </tr>
      <tr>
        <td id="L2352" class="blob-num js-line-number" data-line-number="2352"></td>
        <td id="LC2352" class="blob-code blob-code-inner js-file-line">        loadSeparableConvParamsFactory<span class="pl-k">:</span> loadSeparableConvParamsFactory,</td>
      </tr>
      <tr>
        <td id="L2353" class="blob-num js-line-number" data-line-number="2353"></td>
        <td id="LC2353" class="blob-code blob-code-inner js-file-line">        extractWeightEntryFactory<span class="pl-k">:</span> extractWeightEntryFactory,</td>
      </tr>
      <tr>
        <td id="L2354" class="blob-num js-line-number" data-line-number="2354"></td>
        <td id="LC2354" class="blob-code blob-code-inner js-file-line">        extractWeightsFactory<span class="pl-k">:</span> extractWeightsFactory,</td>
      </tr>
      <tr>
        <td id="L2355" class="blob-num js-line-number" data-line-number="2355"></td>
        <td id="LC2355" class="blob-code blob-code-inner js-file-line">        getModelUris<span class="pl-k">:</span> getModelUris,</td>
      </tr>
      <tr>
        <td id="L2356" class="blob-num js-line-number" data-line-number="2356"></td>
        <td id="LC2356" class="blob-code blob-code-inner js-file-line">        SeparableConvParams<span class="pl-k">:</span> SeparableConvParams,</td>
      </tr>
      <tr>
        <td id="L2357" class="blob-num js-line-number" data-line-number="2357"></td>
        <td id="LC2357" class="blob-code blob-code-inner js-file-line">        TinyYolov2<span class="pl-k">:</span> TinyYolov2,</td>
      </tr>
      <tr>
        <td id="L2358" class="blob-num js-line-number" data-line-number="2358"></td>
        <td id="LC2358" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">get</span> <span class="pl-en">TinyYolov2SizeType</span> () { <span class="pl-k">return</span> TinyYolov2SizeType; },</td>
      </tr>
      <tr>
        <td id="L2359" class="blob-num js-line-number" data-line-number="2359"></td>
        <td id="LC2359" class="blob-code blob-code-inner js-file-line">        TinyYolov2Options<span class="pl-k">:</span> TinyYolov2Options,</td>
      </tr>
      <tr>
        <td id="L2360" class="blob-num js-line-number" data-line-number="2360"></td>
        <td id="LC2360" class="blob-code blob-code-inner js-file-line">        validateConfig<span class="pl-k">:</span> validateConfig</td>
      </tr>
      <tr>
        <td id="L2361" class="blob-num js-line-number" data-line-number="2361"></td>
        <td id="LC2361" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2362" class="blob-num js-line-number" data-line-number="2362"></td>
        <td id="LC2362" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2363" class="blob-num js-line-number" data-line-number="2363"></td>
        <td id="LC2363" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">drawContour</span>(<span class="pl-smi">ctx</span>, <span class="pl-smi">points</span>, <span class="pl-smi">isClosed</span>) {</td>
      </tr>
      <tr>
        <td id="L2364" class="blob-num js-line-number" data-line-number="2364"></td>
        <td id="LC2364" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isClosed <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isClosed <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L2365" class="blob-num js-line-number" data-line-number="2365"></td>
        <td id="LC2365" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ctx</span>.<span class="pl-en">beginPath</span>();</td>
      </tr>
      <tr>
        <td id="L2366" class="blob-num js-line-number" data-line-number="2366"></td>
        <td id="LC2366" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">points</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>, <span class="pl-smi">prevIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L2367" class="blob-num js-line-number" data-line-number="2367"></td>
        <td id="LC2367" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> x <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">x</span>, y <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L2368" class="blob-num js-line-number" data-line-number="2368"></td>
        <td id="LC2368" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> from <span class="pl-k">=</span> points[prevIdx];</td>
      </tr>
      <tr>
        <td id="L2369" class="blob-num js-line-number" data-line-number="2369"></td>
        <td id="LC2369" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">from</span>.<span class="pl-c1">x</span>, <span class="pl-smi">from</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L2370" class="blob-num js-line-number" data-line-number="2370"></td>
        <td id="LC2370" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-en">lineTo</span>(x, y);</td>
      </tr>
      <tr>
        <td id="L2371" class="blob-num js-line-number" data-line-number="2371"></td>
        <td id="LC2371" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2372" class="blob-num js-line-number" data-line-number="2372"></td>
        <td id="LC2372" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isClosed) {</td>
      </tr>
      <tr>
        <td id="L2373" class="blob-num js-line-number" data-line-number="2373"></td>
        <td id="LC2373" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> from <span class="pl-k">=</span> points[<span class="pl-smi">points</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L2374" class="blob-num js-line-number" data-line-number="2374"></td>
        <td id="LC2374" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> to <span class="pl-k">=</span> points[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L2375" class="blob-num js-line-number" data-line-number="2375"></td>
        <td id="LC2375" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>from <span class="pl-k">||</span> <span class="pl-k">!</span>to) {</td>
      </tr>
      <tr>
        <td id="L2376" class="blob-num js-line-number" data-line-number="2376"></td>
        <td id="LC2376" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L2377" class="blob-num js-line-number" data-line-number="2377"></td>
        <td id="LC2377" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2378" class="blob-num js-line-number" data-line-number="2378"></td>
        <td id="LC2378" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">from</span>.<span class="pl-c1">x</span>, <span class="pl-smi">from</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L2379" class="blob-num js-line-number" data-line-number="2379"></td>
        <td id="LC2379" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">ctx</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">to</span>.<span class="pl-c1">x</span>, <span class="pl-smi">to</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L2380" class="blob-num js-line-number" data-line-number="2380"></td>
        <td id="LC2380" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2381" class="blob-num js-line-number" data-line-number="2381"></td>
        <td id="LC2381" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ctx</span>.<span class="pl-en">stroke</span>();</td>
      </tr>
      <tr>
        <td id="L2382" class="blob-num js-line-number" data-line-number="2382"></td>
        <td id="LC2382" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2383" class="blob-num js-line-number" data-line-number="2383"></td>
        <td id="LC2383" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2384" class="blob-num js-line-number" data-line-number="2384"></td>
        <td id="LC2384" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceDetection <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L2385" class="blob-num js-line-number" data-line-number="2385"></td>
        <td id="LC2385" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceDetection, _super);</td>
      </tr>
      <tr>
        <td id="L2386" class="blob-num js-line-number" data-line-number="2386"></td>
        <td id="LC2386" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceDetection</span>(<span class="pl-smi">score</span>, <span class="pl-smi">relativeBox</span>, <span class="pl-smi">imageDims</span>) {</td>
      </tr>
      <tr>
        <td id="L2387" class="blob-num js-line-number" data-line-number="2387"></td>
        <td id="LC2387" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, score, score, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, relativeBox, imageDims) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2388" class="blob-num js-line-number" data-line-number="2388"></td>
        <td id="LC2388" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2389" class="blob-num js-line-number" data-line-number="2389"></td>
        <td id="LC2389" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceDetection</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forSize</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">width</span>, <span class="pl-smi">height</span>) {</td>
      </tr>
      <tr>
        <td id="L2390" class="blob-num js-line-number" data-line-number="2390"></td>
        <td id="LC2390" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">forSize</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, width, height), score <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">score</span>, relativeBox <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">relativeBox</span>, imageDims <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">imageDims</span>;</td>
      </tr>
      <tr>
        <td id="L2391" class="blob-num js-line-number" data-line-number="2391"></td>
        <td id="LC2391" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FaceDetection</span>(score, relativeBox, imageDims);</td>
      </tr>
      <tr>
        <td id="L2392" class="blob-num js-line-number" data-line-number="2392"></td>
        <td id="LC2392" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2393" class="blob-num js-line-number" data-line-number="2393"></td>
        <td id="LC2393" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceDetection;</td>
      </tr>
      <tr>
        <td id="L2394" class="blob-num js-line-number" data-line-number="2394"></td>
        <td id="LC2394" class="blob-code blob-code-inner js-file-line">    }(ObjectDetection));</td>
      </tr>
      <tr>
        <td id="L2395" class="blob-num js-line-number" data-line-number="2395"></td>
        <td id="LC2395" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2396" class="blob-num js-line-number" data-line-number="2396"></td>
        <td id="LC2396" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isWithFaceDetection</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L2397" class="blob-num js-line-number" data-line-number="2397"></td>
        <td id="LC2397" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> obj[<span class="pl-s"><span class="pl-pds">&#39;</span>detection<span class="pl-pds">&#39;</span></span>] <span class="pl-k">instanceof</span> FaceDetection;</td>
      </tr>
      <tr>
        <td id="L2398" class="blob-num js-line-number" data-line-number="2398"></td>
        <td id="LC2398" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2399" class="blob-num js-line-number" data-line-number="2399"></td>
        <td id="LC2399" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extendWithFaceDetection</span>(<span class="pl-smi">sourceObj</span>, <span class="pl-smi">detection</span>) {</td>
      </tr>
      <tr>
        <td id="L2400" class="blob-num js-line-number" data-line-number="2400"></td>
        <td id="LC2400" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extension <span class="pl-k">=</span> { detection<span class="pl-k">:</span> detection };</td>
      </tr>
      <tr>
        <td id="L2401" class="blob-num js-line-number" data-line-number="2401"></td>
        <td id="LC2401" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({}, sourceObj, extension);</td>
      </tr>
      <tr>
        <td id="L2402" class="blob-num js-line-number" data-line-number="2402"></td>
        <td id="LC2402" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2403" class="blob-num js-line-number" data-line-number="2403"></td>
        <td id="LC2403" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2404" class="blob-num js-line-number" data-line-number="2404"></td>
        <td id="LC2404" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">drawDetections</span>(<span class="pl-smi">canvasArg</span>, <span class="pl-smi">detections</span>) {</td>
      </tr>
      <tr>
        <td id="L2405" class="blob-num js-line-number" data-line-number="2405"></td>
        <td id="LC2405" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> detectionsArray <span class="pl-k">=</span> <span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(detections) <span class="pl-k">?</span> detections <span class="pl-k">:</span> [detections];</td>
      </tr>
      <tr>
        <td id="L2406" class="blob-num js-line-number" data-line-number="2406"></td>
        <td id="LC2406" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">detectionsArray</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">det</span>) {</td>
      </tr>
      <tr>
        <td id="L2407" class="blob-num js-line-number" data-line-number="2407"></td>
        <td id="LC2407" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> score <span class="pl-k">=</span> det <span class="pl-k">instanceof</span> FaceDetection</td>
      </tr>
      <tr>
        <td id="L2408" class="blob-num js-line-number" data-line-number="2408"></td>
        <td id="LC2408" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-smi">det</span>.<span class="pl-smi">score</span></td>
      </tr>
      <tr>
        <td id="L2409" class="blob-num js-line-number" data-line-number="2409"></td>
        <td id="LC2409" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> (<span class="pl-en">isWithFaceDetection</span>(det) <span class="pl-k">?</span> <span class="pl-smi">det</span>.<span class="pl-smi">detection</span>.<span class="pl-smi">score</span> <span class="pl-k">:</span> <span class="pl-c1">undefined</span>);</td>
      </tr>
      <tr>
        <td id="L2410" class="blob-num js-line-number" data-line-number="2410"></td>
        <td id="LC2410" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box <span class="pl-k">=</span> det <span class="pl-k">instanceof</span> FaceDetection</td>
      </tr>
      <tr>
        <td id="L2411" class="blob-num js-line-number" data-line-number="2411"></td>
        <td id="LC2411" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-smi">det</span>.<span class="pl-smi">box</span></td>
      </tr>
      <tr>
        <td id="L2412" class="blob-num js-line-number" data-line-number="2412"></td>
        <td id="LC2412" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> (<span class="pl-en">isWithFaceDetection</span>(det) <span class="pl-k">?</span> <span class="pl-smi">det</span>.<span class="pl-smi">detection</span>.<span class="pl-smi">box</span> <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>(det));</td>
      </tr>
      <tr>
        <td id="L2413" class="blob-num js-line-number" data-line-number="2413"></td>
        <td id="LC2413" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> label <span class="pl-k">=</span> score <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">round$1</span>(score) <span class="pl-k">:</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L2414" class="blob-num js-line-number" data-line-number="2414"></td>
        <td id="LC2414" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">new</span> <span class="pl-en">DrawBox</span>(box, { label<span class="pl-k">:</span> label }).<span class="pl-en">draw</span>(canvasArg);</td>
      </tr>
      <tr>
        <td id="L2415" class="blob-num js-line-number" data-line-number="2415"></td>
        <td id="LC2415" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2416" class="blob-num js-line-number" data-line-number="2416"></td>
        <td id="LC2416" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2417" class="blob-num js-line-number" data-line-number="2417"></td>
        <td id="LC2417" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2418" class="blob-num js-line-number" data-line-number="2418"></td>
        <td id="LC2418" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">depthwiseSeparableConv$1</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>, <span class="pl-smi">stride</span>) {</td>
      </tr>
      <tr>
        <td id="L2419" class="blob-num js-line-number" data-line-number="2419"></td>
        <td id="LC2419" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2420" class="blob-num js-line-number" data-line-number="2420"></td>
        <td id="LC2420" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">separableConv2d</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">depthwise_filter</span>, <span class="pl-smi">params</span>.<span class="pl-smi">pointwise_filter</span>, stride, <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2421" class="blob-num js-line-number" data-line-number="2421"></td>
        <td id="LC2421" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">add</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">bias</span>);</td>
      </tr>
      <tr>
        <td id="L2422" class="blob-num js-line-number" data-line-number="2422"></td>
        <td id="LC2422" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L2423" class="blob-num js-line-number" data-line-number="2423"></td>
        <td id="LC2423" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2424" class="blob-num js-line-number" data-line-number="2424"></td>
        <td id="LC2424" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2425" class="blob-num js-line-number" data-line-number="2425"></td>
        <td id="LC2425" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2426" class="blob-num js-line-number" data-line-number="2426"></td>
        <td id="LC2426" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">denseBlock3</span>(<span class="pl-smi">x</span>, <span class="pl-smi">denseBlockParams</span>, <span class="pl-smi">isFirstLayer</span>) {</td>
      </tr>
      <tr>
        <td id="L2427" class="blob-num js-line-number" data-line-number="2427"></td>
        <td id="LC2427" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isFirstLayer <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isFirstLayer <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L2428" class="blob-num js-line-number" data-line-number="2428"></td>
        <td id="LC2428" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2429" class="blob-num js-line-number" data-line-number="2429"></td>
        <td id="LC2429" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out1 <span class="pl-k">=</span> <span class="pl-en">relu</span>(isFirstLayer</td>
      </tr>
      <tr>
        <td id="L2430" class="blob-num js-line-number" data-line-number="2430"></td>
        <td id="LC2430" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-en">add</span>(<span class="pl-en">conv2d</span>(x, <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv0</span>.<span class="pl-smi">filters</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>), <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv0</span>.<span class="pl-smi">bias</span>)</td>
      </tr>
      <tr>
        <td id="L2431" class="blob-num js-line-number" data-line-number="2431"></td>
        <td id="LC2431" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> <span class="pl-en">depthwiseSeparableConv$1</span>(x, <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv0</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]));</td>
      </tr>
      <tr>
        <td id="L2432" class="blob-num js-line-number" data-line-number="2432"></td>
        <td id="LC2432" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out2 <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(out1, <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv1</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2433" class="blob-num js-line-number" data-line-number="2433"></td>
        <td id="LC2433" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> in3 <span class="pl-k">=</span> <span class="pl-en">relu</span>(<span class="pl-en">add</span>(out1, out2));</td>
      </tr>
      <tr>
        <td id="L2434" class="blob-num js-line-number" data-line-number="2434"></td>
        <td id="LC2434" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out3 <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(in3, <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv2</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2435" class="blob-num js-line-number" data-line-number="2435"></td>
        <td id="LC2435" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">relu</span>(<span class="pl-en">add</span>(out1, <span class="pl-en">add</span>(out2, out3)));</td>
      </tr>
      <tr>
        <td id="L2436" class="blob-num js-line-number" data-line-number="2436"></td>
        <td id="LC2436" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2437" class="blob-num js-line-number" data-line-number="2437"></td>
        <td id="LC2437" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2438" class="blob-num js-line-number" data-line-number="2438"></td>
        <td id="LC2438" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">denseBlock4</span>(<span class="pl-smi">x</span>, <span class="pl-smi">denseBlockParams</span>, <span class="pl-smi">isFirstLayer</span>, <span class="pl-smi">isScaleDown</span>) {</td>
      </tr>
      <tr>
        <td id="L2439" class="blob-num js-line-number" data-line-number="2439"></td>
        <td id="LC2439" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isFirstLayer <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isFirstLayer <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L2440" class="blob-num js-line-number" data-line-number="2440"></td>
        <td id="LC2440" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isScaleDown <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isScaleDown <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L2441" class="blob-num js-line-number" data-line-number="2441"></td>
        <td id="LC2441" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2442" class="blob-num js-line-number" data-line-number="2442"></td>
        <td id="LC2442" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out1 <span class="pl-k">=</span> <span class="pl-en">relu</span>(isFirstLayer</td>
      </tr>
      <tr>
        <td id="L2443" class="blob-num js-line-number" data-line-number="2443"></td>
        <td id="LC2443" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-en">add</span>(<span class="pl-en">conv2d</span>(x, <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv0</span>.<span class="pl-smi">filters</span>, isScaleDown <span class="pl-k">?</span> [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>] <span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>), <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv0</span>.<span class="pl-smi">bias</span>)</td>
      </tr>
      <tr>
        <td id="L2444" class="blob-num js-line-number" data-line-number="2444"></td>
        <td id="LC2444" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> <span class="pl-en">depthwiseSeparableConv$1</span>(x, <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv0</span>, isScaleDown <span class="pl-k">?</span> [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>] <span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]));</td>
      </tr>
      <tr>
        <td id="L2445" class="blob-num js-line-number" data-line-number="2445"></td>
        <td id="LC2445" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out2 <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(out1, <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv1</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2446" class="blob-num js-line-number" data-line-number="2446"></td>
        <td id="LC2446" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> in3 <span class="pl-k">=</span> <span class="pl-en">relu</span>(<span class="pl-en">add</span>(out1, out2));</td>
      </tr>
      <tr>
        <td id="L2447" class="blob-num js-line-number" data-line-number="2447"></td>
        <td id="LC2447" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out3 <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(in3, <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv2</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2448" class="blob-num js-line-number" data-line-number="2448"></td>
        <td id="LC2448" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> in4 <span class="pl-k">=</span> <span class="pl-en">relu</span>(<span class="pl-en">add</span>(out1, <span class="pl-en">add</span>(out2, out3)));</td>
      </tr>
      <tr>
        <td id="L2449" class="blob-num js-line-number" data-line-number="2449"></td>
        <td id="LC2449" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out4 <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(in4, <span class="pl-smi">denseBlockParams</span>.<span class="pl-smi">conv3</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2450" class="blob-num js-line-number" data-line-number="2450"></td>
        <td id="LC2450" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">relu</span>(<span class="pl-en">add</span>(out1, <span class="pl-en">add</span>(out2, <span class="pl-en">add</span>(out3, out4))));</td>
      </tr>
      <tr>
        <td id="L2451" class="blob-num js-line-number" data-line-number="2451"></td>
        <td id="LC2451" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2452" class="blob-num js-line-number" data-line-number="2452"></td>
        <td id="LC2452" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2453" class="blob-num js-line-number" data-line-number="2453"></td>
        <td id="LC2453" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2454" class="blob-num js-line-number" data-line-number="2454"></td>
        <td id="LC2454" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory$2</span>(<span class="pl-smi">extractWeights</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L2455" class="blob-num js-line-number" data-line-number="2455"></td>
        <td id="LC2455" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractConvParams <span class="pl-k">=</span> <span class="pl-en">extractConvParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L2456" class="blob-num js-line-number" data-line-number="2456"></td>
        <td id="LC2456" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L2457" class="blob-num js-line-number" data-line-number="2457"></td>
        <td id="LC2457" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractDenseBlock3Params</span>(<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">mappedPrefix</span>, <span class="pl-smi">isFirstLayer</span>) {</td>
      </tr>
      <tr>
        <td id="L2458" class="blob-num js-line-number" data-line-number="2458"></td>
        <td id="LC2458" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isFirstLayer <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isFirstLayer <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L2459" class="blob-num js-line-number" data-line-number="2459"></td>
        <td id="LC2459" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv0 <span class="pl-k">=</span> isFirstLayer</td>
      </tr>
      <tr>
        <td id="L2460" class="blob-num js-line-number" data-line-number="2460"></td>
        <td id="LC2460" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-en">extractConvParams</span>(channelsIn, channelsOut, <span class="pl-c1">3</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv0<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2461" class="blob-num js-line-number" data-line-number="2461"></td>
        <td id="LC2461" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(channelsIn, channelsOut, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2462" class="blob-num js-line-number" data-line-number="2462"></td>
        <td id="LC2462" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv1 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(channelsOut, channelsOut, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2463" class="blob-num js-line-number" data-line-number="2463"></td>
        <td id="LC2463" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv2 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(channelsOut, channelsOut, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv2<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2464" class="blob-num js-line-number" data-line-number="2464"></td>
        <td id="LC2464" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv0<span class="pl-k">:</span> conv0, conv1<span class="pl-k">:</span> conv1, conv2<span class="pl-k">:</span> conv2 };</td>
      </tr>
      <tr>
        <td id="L2465" class="blob-num js-line-number" data-line-number="2465"></td>
        <td id="LC2465" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2466" class="blob-num js-line-number" data-line-number="2466"></td>
        <td id="LC2466" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">mappedPrefix</span>, <span class="pl-smi">isFirstLayer</span>) {</td>
      </tr>
      <tr>
        <td id="L2467" class="blob-num js-line-number" data-line-number="2467"></td>
        <td id="LC2467" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isFirstLayer <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isFirstLayer <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L2468" class="blob-num js-line-number" data-line-number="2468"></td>
        <td id="LC2468" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractDenseBlock3Params</span>(channelsIn, channelsOut, mappedPrefix, isFirstLayer), conv0 <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">conv0</span>, conv1 <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">conv1</span>, conv2 <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">conv2</span>;</td>
      </tr>
      <tr>
        <td id="L2469" class="blob-num js-line-number" data-line-number="2469"></td>
        <td id="LC2469" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv3 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(channelsOut, channelsOut, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv3<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2470" class="blob-num js-line-number" data-line-number="2470"></td>
        <td id="LC2470" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv0<span class="pl-k">:</span> conv0, conv1<span class="pl-k">:</span> conv1, conv2<span class="pl-k">:</span> conv2, conv3<span class="pl-k">:</span> conv3 };</td>
      </tr>
      <tr>
        <td id="L2471" class="blob-num js-line-number" data-line-number="2471"></td>
        <td id="LC2471" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2472" class="blob-num js-line-number" data-line-number="2472"></td>
        <td id="LC2472" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L2473" class="blob-num js-line-number" data-line-number="2473"></td>
        <td id="LC2473" class="blob-code blob-code-inner js-file-line">            extractDenseBlock3Params<span class="pl-k">:</span> extractDenseBlock3Params,</td>
      </tr>
      <tr>
        <td id="L2474" class="blob-num js-line-number" data-line-number="2474"></td>
        <td id="LC2474" class="blob-code blob-code-inner js-file-line">            extractDenseBlock4Params<span class="pl-k">:</span> extractDenseBlock4Params</td>
      </tr>
      <tr>
        <td id="L2475" class="blob-num js-line-number" data-line-number="2475"></td>
        <td id="LC2475" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2476" class="blob-num js-line-number" data-line-number="2476"></td>
        <td id="LC2476" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2477" class="blob-num js-line-number" data-line-number="2477"></td>
        <td id="LC2477" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2478" class="blob-num js-line-number" data-line-number="2478"></td>
        <td id="LC2478" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParams$1</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L2479" class="blob-num js-line-number" data-line-number="2479"></td>
        <td id="LC2479" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2480" class="blob-num js-line-number" data-line-number="2480"></td>
        <td id="LC2480" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractWeightsFactory</span>(weights), extractWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractWeights</span>, getRemainingWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">getRemainingWeights</span>;</td>
      </tr>
      <tr>
        <td id="L2481" class="blob-num js-line-number" data-line-number="2481"></td>
        <td id="LC2481" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractDenseBlock4Params <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$2</span>(extractWeights, paramMappings).<span class="pl-smi">extractDenseBlock4Params</span>;</td>
      </tr>
      <tr>
        <td id="L2482" class="blob-num js-line-number" data-line-number="2482"></td>
        <td id="LC2482" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dense0 <span class="pl-k">=</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-c1">3</span>, <span class="pl-c1">32</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>dense0<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2483" class="blob-num js-line-number" data-line-number="2483"></td>
        <td id="LC2483" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dense1 <span class="pl-k">=</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-c1">32</span>, <span class="pl-c1">64</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>dense1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2484" class="blob-num js-line-number" data-line-number="2484"></td>
        <td id="LC2484" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dense2 <span class="pl-k">=</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-c1">64</span>, <span class="pl-c1">128</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>dense2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2485" class="blob-num js-line-number" data-line-number="2485"></td>
        <td id="LC2485" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dense3 <span class="pl-k">=</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-c1">128</span>, <span class="pl-c1">256</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>dense3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2486" class="blob-num js-line-number" data-line-number="2486"></td>
        <td id="LC2486" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2487" class="blob-num js-line-number" data-line-number="2487"></td>
        <td id="LC2487" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>weights remaing after extract: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L2488" class="blob-num js-line-number" data-line-number="2488"></td>
        <td id="LC2488" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2489" class="blob-num js-line-number" data-line-number="2489"></td>
        <td id="LC2489" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L2490" class="blob-num js-line-number" data-line-number="2490"></td>
        <td id="LC2490" class="blob-code blob-code-inner js-file-line">            paramMappings<span class="pl-k">:</span> paramMappings,</td>
      </tr>
      <tr>
        <td id="L2491" class="blob-num js-line-number" data-line-number="2491"></td>
        <td id="LC2491" class="blob-code blob-code-inner js-file-line">            params<span class="pl-k">:</span> { dense0<span class="pl-k">:</span> dense0, dense1<span class="pl-k">:</span> dense1, dense2<span class="pl-k">:</span> dense2, dense3<span class="pl-k">:</span> dense3 }</td>
      </tr>
      <tr>
        <td id="L2492" class="blob-num js-line-number" data-line-number="2492"></td>
        <td id="LC2492" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2493" class="blob-num js-line-number" data-line-number="2493"></td>
        <td id="LC2493" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2494" class="blob-num js-line-number" data-line-number="2494"></td>
        <td id="LC2494" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2495" class="blob-num js-line-number" data-line-number="2495"></td>
        <td id="LC2495" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">loadConvParamsFactory</span>(<span class="pl-smi">extractWeightEntry</span>) {</td>
      </tr>
      <tr>
        <td id="L2496" class="blob-num js-line-number" data-line-number="2496"></td>
        <td id="LC2496" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span> (<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L2497" class="blob-num js-line-number" data-line-number="2497"></td>
        <td id="LC2497" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L2498" class="blob-num js-line-number" data-line-number="2498"></td>
        <td id="LC2498" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2499" class="blob-num js-line-number" data-line-number="2499"></td>
        <td id="LC2499" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { filters<span class="pl-k">:</span> filters, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L2500" class="blob-num js-line-number" data-line-number="2500"></td>
        <td id="LC2500" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2501" class="blob-num js-line-number" data-line-number="2501"></td>
        <td id="LC2501" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2502" class="blob-num js-line-number" data-line-number="2502"></td>
        <td id="LC2502" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2503" class="blob-num js-line-number" data-line-number="2503"></td>
        <td id="LC2503" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">loadParamsFactory</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L2504" class="blob-num js-line-number" data-line-number="2504"></td>
        <td id="LC2504" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractWeightEntry <span class="pl-k">=</span> <span class="pl-en">extractWeightEntryFactory</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L2505" class="blob-num js-line-number" data-line-number="2505"></td>
        <td id="LC2505" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractConvParams <span class="pl-k">=</span> <span class="pl-en">loadConvParamsFactory</span>(extractWeightEntry);</td>
      </tr>
      <tr>
        <td id="L2506" class="blob-num js-line-number" data-line-number="2506"></td>
        <td id="LC2506" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-en">loadSeparableConvParamsFactory</span>(extractWeightEntry);</td>
      </tr>
      <tr>
        <td id="L2507" class="blob-num js-line-number" data-line-number="2507"></td>
        <td id="LC2507" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractDenseBlock3Params</span>(<span class="pl-smi">prefix</span>, <span class="pl-smi">isFirstLayer</span>) {</td>
      </tr>
      <tr>
        <td id="L2508" class="blob-num js-line-number" data-line-number="2508"></td>
        <td id="LC2508" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isFirstLayer <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isFirstLayer <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L2509" class="blob-num js-line-number" data-line-number="2509"></td>
        <td id="LC2509" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv0 <span class="pl-k">=</span> isFirstLayer</td>
      </tr>
      <tr>
        <td id="L2510" class="blob-num js-line-number" data-line-number="2510"></td>
        <td id="LC2510" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-en">extractConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv0<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2511" class="blob-num js-line-number" data-line-number="2511"></td>
        <td id="LC2511" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2512" class="blob-num js-line-number" data-line-number="2512"></td>
        <td id="LC2512" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv1 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2513" class="blob-num js-line-number" data-line-number="2513"></td>
        <td id="LC2513" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv2 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv2<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2514" class="blob-num js-line-number" data-line-number="2514"></td>
        <td id="LC2514" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv0<span class="pl-k">:</span> conv0, conv1<span class="pl-k">:</span> conv1, conv2<span class="pl-k">:</span> conv2 };</td>
      </tr>
      <tr>
        <td id="L2515" class="blob-num js-line-number" data-line-number="2515"></td>
        <td id="LC2515" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2516" class="blob-num js-line-number" data-line-number="2516"></td>
        <td id="LC2516" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-smi">prefix</span>, <span class="pl-smi">isFirstLayer</span>) {</td>
      </tr>
      <tr>
        <td id="L2517" class="blob-num js-line-number" data-line-number="2517"></td>
        <td id="LC2517" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isFirstLayer <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isFirstLayer <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L2518" class="blob-num js-line-number" data-line-number="2518"></td>
        <td id="LC2518" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv0 <span class="pl-k">=</span> isFirstLayer</td>
      </tr>
      <tr>
        <td id="L2519" class="blob-num js-line-number" data-line-number="2519"></td>
        <td id="LC2519" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-en">extractConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv0<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2520" class="blob-num js-line-number" data-line-number="2520"></td>
        <td id="LC2520" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> <span class="pl-en">extractSeparableConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2521" class="blob-num js-line-number" data-line-number="2521"></td>
        <td id="LC2521" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv1 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2522" class="blob-num js-line-number" data-line-number="2522"></td>
        <td id="LC2522" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv2 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv2<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2523" class="blob-num js-line-number" data-line-number="2523"></td>
        <td id="LC2523" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv3 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv3<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2524" class="blob-num js-line-number" data-line-number="2524"></td>
        <td id="LC2524" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv0<span class="pl-k">:</span> conv0, conv1<span class="pl-k">:</span> conv1, conv2<span class="pl-k">:</span> conv2, conv3<span class="pl-k">:</span> conv3 };</td>
      </tr>
      <tr>
        <td id="L2525" class="blob-num js-line-number" data-line-number="2525"></td>
        <td id="LC2525" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2526" class="blob-num js-line-number" data-line-number="2526"></td>
        <td id="LC2526" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L2527" class="blob-num js-line-number" data-line-number="2527"></td>
        <td id="LC2527" class="blob-code blob-code-inner js-file-line">            extractDenseBlock3Params<span class="pl-k">:</span> extractDenseBlock3Params,</td>
      </tr>
      <tr>
        <td id="L2528" class="blob-num js-line-number" data-line-number="2528"></td>
        <td id="LC2528" class="blob-code blob-code-inner js-file-line">            extractDenseBlock4Params<span class="pl-k">:</span> extractDenseBlock4Params</td>
      </tr>
      <tr>
        <td id="L2529" class="blob-num js-line-number" data-line-number="2529"></td>
        <td id="LC2529" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2530" class="blob-num js-line-number" data-line-number="2530"></td>
        <td id="LC2530" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2531" class="blob-num js-line-number" data-line-number="2531"></td>
        <td id="LC2531" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2532" class="blob-num js-line-number" data-line-number="2532"></td>
        <td id="LC2532" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsFromWeigthMap$1</span>(<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L2533" class="blob-num js-line-number" data-line-number="2533"></td>
        <td id="LC2533" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2534" class="blob-num js-line-number" data-line-number="2534"></td>
        <td id="LC2534" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractDenseBlock4Params <span class="pl-k">=</span> <span class="pl-en">loadParamsFactory</span>(weightMap, paramMappings).<span class="pl-smi">extractDenseBlock4Params</span>;</td>
      </tr>
      <tr>
        <td id="L2535" class="blob-num js-line-number" data-line-number="2535"></td>
        <td id="LC2535" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> params <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2536" class="blob-num js-line-number" data-line-number="2536"></td>
        <td id="LC2536" class="blob-code blob-code-inner js-file-line">            dense0<span class="pl-k">:</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>dense0<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>),</td>
      </tr>
      <tr>
        <td id="L2537" class="blob-num js-line-number" data-line-number="2537"></td>
        <td id="LC2537" class="blob-code blob-code-inner js-file-line">            dense1<span class="pl-k">:</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>dense1<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2538" class="blob-num js-line-number" data-line-number="2538"></td>
        <td id="LC2538" class="blob-code blob-code-inner js-file-line">            dense2<span class="pl-k">:</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>dense2<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2539" class="blob-num js-line-number" data-line-number="2539"></td>
        <td id="LC2539" class="blob-code blob-code-inner js-file-line">            dense3<span class="pl-k">:</span> <span class="pl-en">extractDenseBlock4Params</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>dense3<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2540" class="blob-num js-line-number" data-line-number="2540"></td>
        <td id="LC2540" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2541" class="blob-num js-line-number" data-line-number="2541"></td>
        <td id="LC2541" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">disposeUnusedWeightTensors</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L2542" class="blob-num js-line-number" data-line-number="2542"></td>
        <td id="LC2542" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> params, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L2543" class="blob-num js-line-number" data-line-number="2543"></td>
        <td id="LC2543" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2544" class="blob-num js-line-number" data-line-number="2544"></td>
        <td id="LC2544" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2545" class="blob-num js-line-number" data-line-number="2545"></td>
        <td id="LC2545" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceFeatureExtractor <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L2546" class="blob-num js-line-number" data-line-number="2546"></td>
        <td id="LC2546" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceFeatureExtractor, _super);</td>
      </tr>
      <tr>
        <td id="L2547" class="blob-num js-line-number" data-line-number="2547"></td>
        <td id="LC2547" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceFeatureExtractor</span>() {</td>
      </tr>
      <tr>
        <td id="L2548" class="blob-num js-line-number" data-line-number="2548"></td>
        <td id="LC2548" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>FaceFeatureExtractor<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2549" class="blob-num js-line-number" data-line-number="2549"></td>
        <td id="LC2549" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2550" class="blob-num js-line-number" data-line-number="2550"></td>
        <td id="LC2550" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L2551" class="blob-num js-line-number" data-line-number="2551"></td>
        <td id="LC2551" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> params <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L2552" class="blob-num js-line-number" data-line-number="2552"></td>
        <td id="LC2552" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>params) {</td>
      </tr>
      <tr>
        <td id="L2553" class="blob-num js-line-number" data-line-number="2553"></td>
        <td id="LC2553" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>FaceFeatureExtractor - load model before inference<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2554" class="blob-num js-line-number" data-line-number="2554"></td>
        <td id="LC2554" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2555" class="blob-num js-line-number" data-line-number="2555"></td>
        <td id="LC2555" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2556" class="blob-num js-line-number" data-line-number="2556"></td>
        <td id="LC2556" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> batchTensor <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-en">toBatchTensor</span>(<span class="pl-c1">112</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2557" class="blob-num js-line-number" data-line-number="2557"></td>
        <td id="LC2557" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> meanRgb <span class="pl-k">=</span> [<span class="pl-c1">122.782</span>, <span class="pl-c1">117.001</span>, <span class="pl-c1">104.298</span>];</td>
      </tr>
      <tr>
        <td id="L2558" class="blob-num js-line-number" data-line-number="2558"></td>
        <td id="LC2558" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> normalized <span class="pl-k">=</span> <span class="pl-en">normalize</span>(batchTensor, meanRgb).<span class="pl-en">div</span>(<span class="pl-en">scalar</span>(<span class="pl-c1">255</span>));</td>
      </tr>
      <tr>
        <td id="L2559" class="blob-num js-line-number" data-line-number="2559"></td>
        <td id="LC2559" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">denseBlock4</span>(normalized, <span class="pl-smi">params</span>.<span class="pl-smi">dense0</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2560" class="blob-num js-line-number" data-line-number="2560"></td>
        <td id="LC2560" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">denseBlock4</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">dense1</span>);</td>
      </tr>
      <tr>
        <td id="L2561" class="blob-num js-line-number" data-line-number="2561"></td>
        <td id="LC2561" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">denseBlock4</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">dense2</span>);</td>
      </tr>
      <tr>
        <td id="L2562" class="blob-num js-line-number" data-line-number="2562"></td>
        <td id="LC2562" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">denseBlock4</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">dense3</span>);</td>
      </tr>
      <tr>
        <td id="L2563" class="blob-num js-line-number" data-line-number="2563"></td>
        <td id="LC2563" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">avgPool</span>(out, [<span class="pl-c1">7</span>, <span class="pl-c1">7</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2564" class="blob-num js-line-number" data-line-number="2564"></td>
        <td id="LC2564" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L2565" class="blob-num js-line-number" data-line-number="2565"></td>
        <td id="LC2565" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2566" class="blob-num js-line-number" data-line-number="2566"></td>
        <td id="LC2566" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2567" class="blob-num js-line-number" data-line-number="2567"></td>
        <td id="LC2567" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L2568" class="blob-num js-line-number" data-line-number="2568"></td>
        <td id="LC2568" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2569" class="blob-num js-line-number" data-line-number="2569"></td>
        <td id="LC2569" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L2570" class="blob-num js-line-number" data-line-number="2570"></td>
        <td id="LC2570" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L2571" class="blob-num js-line-number" data-line-number="2571"></td>
        <td id="LC2571" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L2572" class="blob-num js-line-number" data-line-number="2572"></td>
        <td id="LC2572" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L2573" class="blob-num js-line-number" data-line-number="2573"></td>
        <td id="LC2573" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L2574" class="blob-num js-line-number" data-line-number="2574"></td>
        <td id="LC2574" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L2575" class="blob-num js-line-number" data-line-number="2575"></td>
        <td id="LC2575" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()])];</td>
      </tr>
      <tr>
        <td id="L2576" class="blob-num js-line-number" data-line-number="2576"></td>
        <td id="LC2576" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2577" class="blob-num js-line-number" data-line-number="2577"></td>
        <td id="LC2577" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L2578" class="blob-num js-line-number" data-line-number="2578"></td>
        <td id="LC2578" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2579" class="blob-num js-line-number" data-line-number="2579"></td>
        <td id="LC2579" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2580" class="blob-num js-line-number" data-line-number="2580"></td>
        <td id="LC2580" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2581" class="blob-num js-line-number" data-line-number="2581"></td>
        <td id="LC2581" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>face_feature_extractor_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2582" class="blob-num js-line-number" data-line-number="2582"></td>
        <td id="LC2582" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2583" class="blob-num js-line-number" data-line-number="2583"></td>
        <td id="LC2583" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L2584" class="blob-num js-line-number" data-line-number="2584"></td>
        <td id="LC2584" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsFromWeigthMap$1</span>(weightMap);</td>
      </tr>
      <tr>
        <td id="L2585" class="blob-num js-line-number" data-line-number="2585"></td>
        <td id="LC2585" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2586" class="blob-num js-line-number" data-line-number="2586"></td>
        <td id="LC2586" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L2587" class="blob-num js-line-number" data-line-number="2587"></td>
        <td id="LC2587" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParams$1</span>(weights);</td>
      </tr>
      <tr>
        <td id="L2588" class="blob-num js-line-number" data-line-number="2588"></td>
        <td id="LC2588" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2589" class="blob-num js-line-number" data-line-number="2589"></td>
        <td id="LC2589" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceFeatureExtractor;</td>
      </tr>
      <tr>
        <td id="L2590" class="blob-num js-line-number" data-line-number="2590"></td>
        <td id="LC2590" class="blob-code blob-code-inner js-file-line">    }(NeuralNetwork));</td>
      </tr>
      <tr>
        <td id="L2591" class="blob-num js-line-number" data-line-number="2591"></td>
        <td id="LC2591" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2592" class="blob-num js-line-number" data-line-number="2592"></td>
        <td id="LC2592" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">fullyConnectedLayer</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L2593" class="blob-num js-line-number" data-line-number="2593"></td>
        <td id="LC2593" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2594" class="blob-num js-line-number" data-line-number="2594"></td>
        <td id="LC2594" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">add</span>(<span class="pl-en">matMul</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">weights</span>), <span class="pl-smi">params</span>.<span class="pl-smi">bias</span>);</td>
      </tr>
      <tr>
        <td id="L2595" class="blob-num js-line-number" data-line-number="2595"></td>
        <td id="LC2595" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2596" class="blob-num js-line-number" data-line-number="2596"></td>
        <td id="LC2596" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2597" class="blob-num js-line-number" data-line-number="2597"></td>
        <td id="LC2597" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2598" class="blob-num js-line-number" data-line-number="2598"></td>
        <td id="LC2598" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParams$2</span>(<span class="pl-smi">weights</span>, <span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>) {</td>
      </tr>
      <tr>
        <td id="L2599" class="blob-num js-line-number" data-line-number="2599"></td>
        <td id="LC2599" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2600" class="blob-num js-line-number" data-line-number="2600"></td>
        <td id="LC2600" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractWeightsFactory</span>(weights), extractWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractWeights</span>, getRemainingWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">getRemainingWeights</span>;</td>
      </tr>
      <tr>
        <td id="L2601" class="blob-num js-line-number" data-line-number="2601"></td>
        <td id="LC2601" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractFCParams <span class="pl-k">=</span> <span class="pl-en">extractFCParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L2602" class="blob-num js-line-number" data-line-number="2602"></td>
        <td id="LC2602" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> fc <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(channelsIn, channelsOut, <span class="pl-s"><span class="pl-pds">&#39;</span>fc<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2603" class="blob-num js-line-number" data-line-number="2603"></td>
        <td id="LC2603" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2604" class="blob-num js-line-number" data-line-number="2604"></td>
        <td id="LC2604" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>weights remaing after extract: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L2605" class="blob-num js-line-number" data-line-number="2605"></td>
        <td id="LC2605" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2606" class="blob-num js-line-number" data-line-number="2606"></td>
        <td id="LC2606" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L2607" class="blob-num js-line-number" data-line-number="2607"></td>
        <td id="LC2607" class="blob-code blob-code-inner js-file-line">            paramMappings<span class="pl-k">:</span> paramMappings,</td>
      </tr>
      <tr>
        <td id="L2608" class="blob-num js-line-number" data-line-number="2608"></td>
        <td id="LC2608" class="blob-code blob-code-inner js-file-line">            params<span class="pl-k">:</span> { fc<span class="pl-k">:</span> fc }</td>
      </tr>
      <tr>
        <td id="L2609" class="blob-num js-line-number" data-line-number="2609"></td>
        <td id="LC2609" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2610" class="blob-num js-line-number" data-line-number="2610"></td>
        <td id="LC2610" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2611" class="blob-num js-line-number" data-line-number="2611"></td>
        <td id="LC2611" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2612" class="blob-num js-line-number" data-line-number="2612"></td>
        <td id="LC2612" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsFromWeigthMap$2</span>(<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L2613" class="blob-num js-line-number" data-line-number="2613"></td>
        <td id="LC2613" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2614" class="blob-num js-line-number" data-line-number="2614"></td>
        <td id="LC2614" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractWeightEntry <span class="pl-k">=</span> <span class="pl-en">extractWeightEntryFactory</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L2615" class="blob-num js-line-number" data-line-number="2615"></td>
        <td id="LC2615" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractFcParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L2616" class="blob-num js-line-number" data-line-number="2616"></td>
        <td id="LC2616" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> weights <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/weights<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2617" class="blob-num js-line-number" data-line-number="2617"></td>
        <td id="LC2617" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2618" class="blob-num js-line-number" data-line-number="2618"></td>
        <td id="LC2618" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { weights<span class="pl-k">:</span> weights, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L2619" class="blob-num js-line-number" data-line-number="2619"></td>
        <td id="LC2619" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2620" class="blob-num js-line-number" data-line-number="2620"></td>
        <td id="LC2620" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> params <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2621" class="blob-num js-line-number" data-line-number="2621"></td>
        <td id="LC2621" class="blob-code blob-code-inner js-file-line">            fc<span class="pl-k">:</span> <span class="pl-en">extractFcParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>fc<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2622" class="blob-num js-line-number" data-line-number="2622"></td>
        <td id="LC2622" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2623" class="blob-num js-line-number" data-line-number="2623"></td>
        <td id="LC2623" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">disposeUnusedWeightTensors</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L2624" class="blob-num js-line-number" data-line-number="2624"></td>
        <td id="LC2624" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> params, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L2625" class="blob-num js-line-number" data-line-number="2625"></td>
        <td id="LC2625" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2626" class="blob-num js-line-number" data-line-number="2626"></td>
        <td id="LC2626" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2627" class="blob-num js-line-number" data-line-number="2627"></td>
        <td id="LC2627" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">seperateWeightMaps</span>(<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L2628" class="blob-num js-line-number" data-line-number="2628"></td>
        <td id="LC2628" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> featureExtractorMap <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2629" class="blob-num js-line-number" data-line-number="2629"></td>
        <td id="LC2629" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> classifierMap <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2630" class="blob-num js-line-number" data-line-number="2630"></td>
        <td id="LC2630" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-c1">keys</span>(weightMap).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L2631" class="blob-num js-line-number" data-line-number="2631"></td>
        <td id="LC2631" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> map <span class="pl-k">=</span> <span class="pl-smi">key</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>fc<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> classifierMap <span class="pl-k">:</span> featureExtractorMap;</td>
      </tr>
      <tr>
        <td id="L2632" class="blob-num js-line-number" data-line-number="2632"></td>
        <td id="LC2632" class="blob-code blob-code-inner js-file-line">            map[key] <span class="pl-k">=</span> weightMap[key];</td>
      </tr>
      <tr>
        <td id="L2633" class="blob-num js-line-number" data-line-number="2633"></td>
        <td id="LC2633" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2634" class="blob-num js-line-number" data-line-number="2634"></td>
        <td id="LC2634" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { featureExtractorMap<span class="pl-k">:</span> featureExtractorMap, classifierMap<span class="pl-k">:</span> classifierMap };</td>
      </tr>
      <tr>
        <td id="L2635" class="blob-num js-line-number" data-line-number="2635"></td>
        <td id="LC2635" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2636" class="blob-num js-line-number" data-line-number="2636"></td>
        <td id="LC2636" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2637" class="blob-num js-line-number" data-line-number="2637"></td>
        <td id="LC2637" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceProcessor <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L2638" class="blob-num js-line-number" data-line-number="2638"></td>
        <td id="LC2638" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceProcessor, _super);</td>
      </tr>
      <tr>
        <td id="L2639" class="blob-num js-line-number" data-line-number="2639"></td>
        <td id="LC2639" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceProcessor</span>(<span class="pl-smi">_name</span>, <span class="pl-smi">faceFeatureExtractor</span>) {</td>
      </tr>
      <tr>
        <td id="L2640" class="blob-num js-line-number" data-line-number="2640"></td>
        <td id="LC2640" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, _name) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2641" class="blob-num js-line-number" data-line-number="2641"></td>
        <td id="LC2641" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">_faceFeatureExtractor</span> <span class="pl-k">=</span> faceFeatureExtractor;</td>
      </tr>
      <tr>
        <td id="L2642" class="blob-num js-line-number" data-line-number="2642"></td>
        <td id="LC2642" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L2643" class="blob-num js-line-number" data-line-number="2643"></td>
        <td id="LC2643" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2644" class="blob-num js-line-number" data-line-number="2644"></td>
        <td id="LC2644" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceProcessor</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>faceFeatureExtractor<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2645" class="blob-num js-line-number" data-line-number="2645"></td>
        <td id="LC2645" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2646" class="blob-num js-line-number" data-line-number="2646"></td>
        <td id="LC2646" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_faceFeatureExtractor</span>;</td>
      </tr>
      <tr>
        <td id="L2647" class="blob-num js-line-number" data-line-number="2647"></td>
        <td id="LC2647" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2648" class="blob-num js-line-number" data-line-number="2648"></td>
        <td id="LC2648" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2649" class="blob-num js-line-number" data-line-number="2649"></td>
        <td id="LC2649" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2650" class="blob-num js-line-number" data-line-number="2650"></td>
        <td id="LC2650" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2651" class="blob-num js-line-number" data-line-number="2651"></td>
        <td id="LC2651" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceProcessor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">runNet</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L2652" class="blob-num js-line-number" data-line-number="2652"></td>
        <td id="LC2652" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2653" class="blob-num js-line-number" data-line-number="2653"></td>
        <td id="LC2653" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> params <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L2654" class="blob-num js-line-number" data-line-number="2654"></td>
        <td id="LC2654" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>params) {</td>
      </tr>
      <tr>
        <td id="L2655" class="blob-num js-line-number" data-line-number="2655"></td>
        <td id="LC2655" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - load model before inference<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2656" class="blob-num js-line-number" data-line-number="2656"></td>
        <td id="LC2656" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2657" class="blob-num js-line-number" data-line-number="2657"></td>
        <td id="LC2657" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2658" class="blob-num js-line-number" data-line-number="2658"></td>
        <td id="LC2658" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> bottleneckFeatures <span class="pl-k">=</span> input <span class="pl-k">instanceof</span> NetInput</td>
      </tr>
      <tr>
        <td id="L2659" class="blob-num js-line-number" data-line-number="2659"></td>
        <td id="LC2659" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">?</span> <span class="pl-smi">_this</span>.<span class="pl-smi">faceFeatureExtractor</span>.<span class="pl-en">forwardInput</span>(input)</td>
      </tr>
      <tr>
        <td id="L2660" class="blob-num js-line-number" data-line-number="2660"></td>
        <td id="LC2660" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">:</span> input;</td>
      </tr>
      <tr>
        <td id="L2661" class="blob-num js-line-number" data-line-number="2661"></td>
        <td id="LC2661" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">fullyConnectedLayer</span>(<span class="pl-smi">bottleneckFeatures</span>.<span class="pl-en">as2D</span>(<span class="pl-smi">bottleneckFeatures</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>], <span class="pl-k">-</span><span class="pl-c1">1</span>), <span class="pl-smi">params</span>.<span class="pl-smi">fc</span>);</td>
      </tr>
      <tr>
        <td id="L2662" class="blob-num js-line-number" data-line-number="2662"></td>
        <td id="LC2662" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2663" class="blob-num js-line-number" data-line-number="2663"></td>
        <td id="LC2663" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2664" class="blob-num js-line-number" data-line-number="2664"></td>
        <td id="LC2664" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceProcessor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">dispose</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">throwOnRedispose</span>) {</td>
      </tr>
      <tr>
        <td id="L2665" class="blob-num js-line-number" data-line-number="2665"></td>
        <td id="LC2665" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (throwOnRedispose <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { throwOnRedispose <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L2666" class="blob-num js-line-number" data-line-number="2666"></td>
        <td id="LC2666" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">faceFeatureExtractor</span>.<span class="pl-en">dispose</span>(throwOnRedispose);</td>
      </tr>
      <tr>
        <td id="L2667" class="blob-num js-line-number" data-line-number="2667"></td>
        <td id="LC2667" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_super</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">dispose</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, throwOnRedispose);</td>
      </tr>
      <tr>
        <td id="L2668" class="blob-num js-line-number" data-line-number="2668"></td>
        <td id="LC2668" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2669" class="blob-num js-line-number" data-line-number="2669"></td>
        <td id="LC2669" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceProcessor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">loadClassifierParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L2670" class="blob-num js-line-number" data-line-number="2670"></td>
        <td id="LC2670" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">extractClassifierParams</span>(weights), params <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">params</span>, paramMappings <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">paramMappings</span>;</td>
      </tr>
      <tr>
        <td id="L2671" class="blob-num js-line-number" data-line-number="2671"></td>
        <td id="LC2671" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_params</span> <span class="pl-k">=</span> params;</td>
      </tr>
      <tr>
        <td id="L2672" class="blob-num js-line-number" data-line-number="2672"></td>
        <td id="LC2672" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_paramMappings</span> <span class="pl-k">=</span> paramMappings;</td>
      </tr>
      <tr>
        <td id="L2673" class="blob-num js-line-number" data-line-number="2673"></td>
        <td id="LC2673" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2674" class="blob-num js-line-number" data-line-number="2674"></td>
        <td id="LC2674" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceProcessor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractClassifierParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L2675" class="blob-num js-line-number" data-line-number="2675"></td>
        <td id="LC2675" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParams$2</span>(weights, <span class="pl-c1">this</span>.<span class="pl-en">getClassifierChannelsIn</span>(), <span class="pl-c1">this</span>.<span class="pl-en">getClassifierChannelsOut</span>());</td>
      </tr>
      <tr>
        <td id="L2676" class="blob-num js-line-number" data-line-number="2676"></td>
        <td id="LC2676" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2677" class="blob-num js-line-number" data-line-number="2677"></td>
        <td id="LC2677" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceProcessor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L2678" class="blob-num js-line-number" data-line-number="2678"></td>
        <td id="LC2678" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">seperateWeightMaps</span>(weightMap), featureExtractorMap <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">featureExtractorMap</span>, classifierMap <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">classifierMap</span>;</td>
      </tr>
      <tr>
        <td id="L2679" class="blob-num js-line-number" data-line-number="2679"></td>
        <td id="LC2679" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">faceFeatureExtractor</span>.<span class="pl-en">loadFromWeightMap</span>(featureExtractorMap);</td>
      </tr>
      <tr>
        <td id="L2680" class="blob-num js-line-number" data-line-number="2680"></td>
        <td id="LC2680" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsFromWeigthMap$2</span>(classifierMap);</td>
      </tr>
      <tr>
        <td id="L2681" class="blob-num js-line-number" data-line-number="2681"></td>
        <td id="LC2681" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2682" class="blob-num js-line-number" data-line-number="2682"></td>
        <td id="LC2682" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceProcessor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L2683" class="blob-num js-line-number" data-line-number="2683"></td>
        <td id="LC2683" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> cIn <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">getClassifierChannelsIn</span>();</td>
      </tr>
      <tr>
        <td id="L2684" class="blob-num js-line-number" data-line-number="2684"></td>
        <td id="LC2684" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> cOut <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">getClassifierChannelsOut</span>();</td>
      </tr>
      <tr>
        <td id="L2685" class="blob-num js-line-number" data-line-number="2685"></td>
        <td id="LC2685" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> classifierWeightSize <span class="pl-k">=</span> (cOut <span class="pl-k">*</span> cIn) <span class="pl-k">+</span> cOut;</td>
      </tr>
      <tr>
        <td id="L2686" class="blob-num js-line-number" data-line-number="2686"></td>
        <td id="LC2686" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> featureExtractorWeights <span class="pl-k">=</span> <span class="pl-smi">weights</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, <span class="pl-smi">weights</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> classifierWeightSize);</td>
      </tr>
      <tr>
        <td id="L2687" class="blob-num js-line-number" data-line-number="2687"></td>
        <td id="LC2687" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> classifierWeights <span class="pl-k">=</span> <span class="pl-smi">weights</span>.<span class="pl-c1">slice</span>(<span class="pl-smi">weights</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> classifierWeightSize);</td>
      </tr>
      <tr>
        <td id="L2688" class="blob-num js-line-number" data-line-number="2688"></td>
        <td id="LC2688" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">faceFeatureExtractor</span>.<span class="pl-en">extractWeights</span>(featureExtractorWeights);</td>
      </tr>
      <tr>
        <td id="L2689" class="blob-num js-line-number" data-line-number="2689"></td>
        <td id="LC2689" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">extractClassifierParams</span>(classifierWeights);</td>
      </tr>
      <tr>
        <td id="L2690" class="blob-num js-line-number" data-line-number="2690"></td>
        <td id="LC2690" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2691" class="blob-num js-line-number" data-line-number="2691"></td>
        <td id="LC2691" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceProcessor;</td>
      </tr>
      <tr>
        <td id="L2692" class="blob-num js-line-number" data-line-number="2692"></td>
        <td id="LC2692" class="blob-code blob-code-inner js-file-line">    }(NeuralNetwork));</td>
      </tr>
      <tr>
        <td id="L2693" class="blob-num js-line-number" data-line-number="2693"></td>
        <td id="LC2693" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2694" class="blob-num js-line-number" data-line-number="2694"></td>
        <td id="LC2694" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">FACE_EXPRESSION_LABELS</span> <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>neutral<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>happy<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>sad<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>angry<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>fearful<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>disgusted<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>surprised<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L2695" class="blob-num js-line-number" data-line-number="2695"></td>
        <td id="LC2695" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceExpressions <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2696" class="blob-num js-line-number" data-line-number="2696"></td>
        <td id="LC2696" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceExpressions</span>(<span class="pl-smi">probabilities</span>) {</td>
      </tr>
      <tr>
        <td id="L2697" class="blob-num js-line-number" data-line-number="2697"></td>
        <td id="LC2697" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2698" class="blob-num js-line-number" data-line-number="2698"></td>
        <td id="LC2698" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">probabilities</span>.<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">7</span>) {</td>
      </tr>
      <tr>
        <td id="L2699" class="blob-num js-line-number" data-line-number="2699"></td>
        <td id="LC2699" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FaceExpressions.constructor - expected probabilities.length to be 7, have: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">probabilities</span>.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L2700" class="blob-num js-line-number" data-line-number="2700"></td>
        <td id="LC2700" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2701" class="blob-num js-line-number" data-line-number="2701"></td>
        <td id="LC2701" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">FACE_EXPRESSION_LABELS</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">expression</span>, <span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L2702" class="blob-num js-line-number" data-line-number="2702"></td>
        <td id="LC2702" class="blob-code blob-code-inner js-file-line">                _this[expression] <span class="pl-k">=</span> probabilities[idx];</td>
      </tr>
      <tr>
        <td id="L2703" class="blob-num js-line-number" data-line-number="2703"></td>
        <td id="LC2703" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2704" class="blob-num js-line-number" data-line-number="2704"></td>
        <td id="LC2704" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2705" class="blob-num js-line-number" data-line-number="2705"></td>
        <td id="LC2705" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceExpressions</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">asSortedArray</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2706" class="blob-num js-line-number" data-line-number="2706"></td>
        <td id="LC2706" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2707" class="blob-num js-line-number" data-line-number="2707"></td>
        <td id="LC2707" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">FACE_EXPRESSION_LABELS</span></td>
      </tr>
      <tr>
        <td id="L2708" class="blob-num js-line-number" data-line-number="2708"></td>
        <td id="LC2708" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">expression</span>) { <span class="pl-k">return</span> ({ expression<span class="pl-k">:</span> expression, probability<span class="pl-k">:</span> _this[expression] }); })</td>
      </tr>
      <tr>
        <td id="L2709" class="blob-num js-line-number" data-line-number="2709"></td>
        <td id="LC2709" class="blob-code blob-code-inner js-file-line">                .<span class="pl-c1">sort</span>(<span class="pl-k">function</span> (<span class="pl-smi">e0</span>, <span class="pl-smi">e1</span>) { <span class="pl-k">return</span> <span class="pl-smi">e1</span>.<span class="pl-smi">probability</span> <span class="pl-k">-</span> <span class="pl-smi">e0</span>.<span class="pl-smi">probability</span>; });</td>
      </tr>
      <tr>
        <td id="L2710" class="blob-num js-line-number" data-line-number="2710"></td>
        <td id="LC2710" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2711" class="blob-num js-line-number" data-line-number="2711"></td>
        <td id="LC2711" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceExpressions;</td>
      </tr>
      <tr>
        <td id="L2712" class="blob-num js-line-number" data-line-number="2712"></td>
        <td id="LC2712" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L2713" class="blob-num js-line-number" data-line-number="2713"></td>
        <td id="LC2713" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2714" class="blob-num js-line-number" data-line-number="2714"></td>
        <td id="LC2714" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceExpressionNet <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L2715" class="blob-num js-line-number" data-line-number="2715"></td>
        <td id="LC2715" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceExpressionNet, _super);</td>
      </tr>
      <tr>
        <td id="L2716" class="blob-num js-line-number" data-line-number="2716"></td>
        <td id="LC2716" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceExpressionNet</span>(<span class="pl-smi">faceFeatureExtractor</span>) {</td>
      </tr>
      <tr>
        <td id="L2717" class="blob-num js-line-number" data-line-number="2717"></td>
        <td id="LC2717" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (faceFeatureExtractor <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { faceFeatureExtractor <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">FaceFeatureExtractor</span>(); }</td>
      </tr>
      <tr>
        <td id="L2718" class="blob-num js-line-number" data-line-number="2718"></td>
        <td id="LC2718" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>FaceExpressionNet<span class="pl-pds">&#39;</span></span>, faceFeatureExtractor) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2719" class="blob-num js-line-number" data-line-number="2719"></td>
        <td id="LC2719" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2720" class="blob-num js-line-number" data-line-number="2720"></td>
        <td id="LC2720" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceExpressionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L2721" class="blob-num js-line-number" data-line-number="2721"></td>
        <td id="LC2721" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2722" class="blob-num js-line-number" data-line-number="2722"></td>
        <td id="LC2722" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">softmax</span>(<span class="pl-smi">_this</span>.<span class="pl-en">runNet</span>(input)); });</td>
      </tr>
      <tr>
        <td id="L2723" class="blob-num js-line-number" data-line-number="2723"></td>
        <td id="LC2723" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2724" class="blob-num js-line-number" data-line-number="2724"></td>
        <td id="LC2724" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceExpressionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L2725" class="blob-num js-line-number" data-line-number="2725"></td>
        <td id="LC2725" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2726" class="blob-num js-line-number" data-line-number="2726"></td>
        <td id="LC2726" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L2727" class="blob-num js-line-number" data-line-number="2727"></td>
        <td id="LC2727" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L2728" class="blob-num js-line-number" data-line-number="2728"></td>
        <td id="LC2728" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L2729" class="blob-num js-line-number" data-line-number="2729"></td>
        <td id="LC2729" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L2730" class="blob-num js-line-number" data-line-number="2730"></td>
        <td id="LC2730" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L2731" class="blob-num js-line-number" data-line-number="2731"></td>
        <td id="LC2731" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L2732" class="blob-num js-line-number" data-line-number="2732"></td>
        <td id="LC2732" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()])];</td>
      </tr>
      <tr>
        <td id="L2733" class="blob-num js-line-number" data-line-number="2733"></td>
        <td id="LC2733" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2734" class="blob-num js-line-number" data-line-number="2734"></td>
        <td id="LC2734" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L2735" class="blob-num js-line-number" data-line-number="2735"></td>
        <td id="LC2735" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2736" class="blob-num js-line-number" data-line-number="2736"></td>
        <td id="LC2736" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2737" class="blob-num js-line-number" data-line-number="2737"></td>
        <td id="LC2737" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceExpressionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">predictExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L2738" class="blob-num js-line-number" data-line-number="2738"></td>
        <td id="LC2738" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2739" class="blob-num js-line-number" data-line-number="2739"></td>
        <td id="LC2739" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> netInput, out, probabilitesByBatch, predictionsByBatch;</td>
      </tr>
      <tr>
        <td id="L2740" class="blob-num js-line-number" data-line-number="2740"></td>
        <td id="LC2740" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2741" class="blob-num js-line-number" data-line-number="2741"></td>
        <td id="LC2741" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L2742" class="blob-num js-line-number" data-line-number="2742"></td>
        <td id="LC2742" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L2743" class="blob-num js-line-number" data-line-number="2743"></td>
        <td id="LC2743" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L2744" class="blob-num js-line-number" data-line-number="2744"></td>
        <td id="LC2744" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L2745" class="blob-num js-line-number" data-line-number="2745"></td>
        <td id="LC2745" class="blob-code blob-code-inner js-file-line">                            netInput <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2746" class="blob-num js-line-number" data-line-number="2746"></td>
        <td id="LC2746" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">forwardInput</span>(netInput)];</td>
      </tr>
      <tr>
        <td id="L2747" class="blob-num js-line-number" data-line-number="2747"></td>
        <td id="LC2747" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L2748" class="blob-num js-line-number" data-line-number="2748"></td>
        <td id="LC2748" class="blob-code blob-code-inner js-file-line">                            out <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2749" class="blob-num js-line-number" data-line-number="2749"></td>
        <td id="LC2749" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-en">unstack</span>(out).<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">t</span>) { <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(_this, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2750" class="blob-num js-line-number" data-line-number="2750"></td>
        <td id="LC2750" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">var</span> data;</td>
      </tr>
      <tr>
        <td id="L2751" class="blob-num js-line-number" data-line-number="2751"></td>
        <td id="LC2751" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L2752" class="blob-num js-line-number" data-line-number="2752"></td>
        <td id="LC2752" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L2753" class="blob-num js-line-number" data-line-number="2753"></td>
        <td id="LC2753" class="blob-code blob-code-inner js-file-line">                                            <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">t</span>.<span class="pl-c1">data</span>()];</td>
      </tr>
      <tr>
        <td id="L2754" class="blob-num js-line-number" data-line-number="2754"></td>
        <td id="LC2754" class="blob-code blob-code-inner js-file-line">                                            <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L2755" class="blob-num js-line-number" data-line-number="2755"></td>
        <td id="LC2755" class="blob-code blob-code-inner js-file-line">                                                data <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2756" class="blob-num js-line-number" data-line-number="2756"></td>
        <td id="LC2756" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-smi">t</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L2757" class="blob-num js-line-number" data-line-number="2757"></td>
        <td id="LC2757" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, data];</td>
      </tr>
      <tr>
        <td id="L2758" class="blob-num js-line-number" data-line-number="2758"></td>
        <td id="LC2758" class="blob-code blob-code-inner js-file-line">                                        }</td>
      </tr>
      <tr>
        <td id="L2759" class="blob-num js-line-number" data-line-number="2759"></td>
        <td id="LC2759" class="blob-code blob-code-inner js-file-line">                                    });</td>
      </tr>
      <tr>
        <td id="L2760" class="blob-num js-line-number" data-line-number="2760"></td>
        <td id="LC2760" class="blob-code blob-code-inner js-file-line">                                }); }))];</td>
      </tr>
      <tr>
        <td id="L2761" class="blob-num js-line-number" data-line-number="2761"></td>
        <td id="LC2761" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">3</span>:</td>
      </tr>
      <tr>
        <td id="L2762" class="blob-num js-line-number" data-line-number="2762"></td>
        <td id="LC2762" class="blob-code blob-code-inner js-file-line">                            probabilitesByBatch <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L2763" class="blob-num js-line-number" data-line-number="2763"></td>
        <td id="LC2763" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">out</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L2764" class="blob-num js-line-number" data-line-number="2764"></td>
        <td id="LC2764" class="blob-code blob-code-inner js-file-line">                            predictionsByBatch <span class="pl-k">=</span> probabilitesByBatch</td>
      </tr>
      <tr>
        <td id="L2765" class="blob-num js-line-number" data-line-number="2765"></td>
        <td id="LC2765" class="blob-code blob-code-inner js-file-line">                                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">probabilites</span>) { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FaceExpressions</span>(probabilites); });</td>
      </tr>
      <tr>
        <td id="L2766" class="blob-num js-line-number" data-line-number="2766"></td>
        <td id="LC2766" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">netInput</span>.<span class="pl-smi">isBatchInput</span></td>
      </tr>
      <tr>
        <td id="L2767" class="blob-num js-line-number" data-line-number="2767"></td>
        <td id="LC2767" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">?</span> predictionsByBatch</td>
      </tr>
      <tr>
        <td id="L2768" class="blob-num js-line-number" data-line-number="2768"></td>
        <td id="LC2768" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">:</span> predictionsByBatch[<span class="pl-c1">0</span>]];</td>
      </tr>
      <tr>
        <td id="L2769" class="blob-num js-line-number" data-line-number="2769"></td>
        <td id="LC2769" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2770" class="blob-num js-line-number" data-line-number="2770"></td>
        <td id="LC2770" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L2771" class="blob-num js-line-number" data-line-number="2771"></td>
        <td id="LC2771" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2772" class="blob-num js-line-number" data-line-number="2772"></td>
        <td id="LC2772" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2773" class="blob-num js-line-number" data-line-number="2773"></td>
        <td id="LC2773" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceExpressionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2774" class="blob-num js-line-number" data-line-number="2774"></td>
        <td id="LC2774" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>face_expression_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2775" class="blob-num js-line-number" data-line-number="2775"></td>
        <td id="LC2775" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2776" class="blob-num js-line-number" data-line-number="2776"></td>
        <td id="LC2776" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceExpressionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getClassifierChannelsIn</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2777" class="blob-num js-line-number" data-line-number="2777"></td>
        <td id="LC2777" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">256</span>;</td>
      </tr>
      <tr>
        <td id="L2778" class="blob-num js-line-number" data-line-number="2778"></td>
        <td id="LC2778" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2779" class="blob-num js-line-number" data-line-number="2779"></td>
        <td id="LC2779" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceExpressionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getClassifierChannelsOut</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2780" class="blob-num js-line-number" data-line-number="2780"></td>
        <td id="LC2780" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">7</span>;</td>
      </tr>
      <tr>
        <td id="L2781" class="blob-num js-line-number" data-line-number="2781"></td>
        <td id="LC2781" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2782" class="blob-num js-line-number" data-line-number="2782"></td>
        <td id="LC2782" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceExpressionNet;</td>
      </tr>
      <tr>
        <td id="L2783" class="blob-num js-line-number" data-line-number="2783"></td>
        <td id="LC2783" class="blob-code blob-code-inner js-file-line">    }(FaceProcessor));</td>
      </tr>
      <tr>
        <td id="L2784" class="blob-num js-line-number" data-line-number="2784"></td>
        <td id="LC2784" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2785" class="blob-num js-line-number" data-line-number="2785"></td>
        <td id="LC2785" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isWithFaceExpressions</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L2786" class="blob-num js-line-number" data-line-number="2786"></td>
        <td id="LC2786" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> obj[<span class="pl-s"><span class="pl-pds">&#39;</span>expressions<span class="pl-pds">&#39;</span></span>] <span class="pl-k">instanceof</span> FaceExpressions;</td>
      </tr>
      <tr>
        <td id="L2787" class="blob-num js-line-number" data-line-number="2787"></td>
        <td id="LC2787" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2788" class="blob-num js-line-number" data-line-number="2788"></td>
        <td id="LC2788" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extendWithFaceExpressions</span>(<span class="pl-smi">sourceObj</span>, <span class="pl-smi">expressions</span>) {</td>
      </tr>
      <tr>
        <td id="L2789" class="blob-num js-line-number" data-line-number="2789"></td>
        <td id="LC2789" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extension <span class="pl-k">=</span> { expressions<span class="pl-k">:</span> expressions };</td>
      </tr>
      <tr>
        <td id="L2790" class="blob-num js-line-number" data-line-number="2790"></td>
        <td id="LC2790" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({}, sourceObj, extension);</td>
      </tr>
      <tr>
        <td id="L2791" class="blob-num js-line-number" data-line-number="2791"></td>
        <td id="LC2791" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2792" class="blob-num js-line-number" data-line-number="2792"></td>
        <td id="LC2792" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2793" class="blob-num js-line-number" data-line-number="2793"></td>
        <td id="LC2793" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">drawFaceExpressions</span>(<span class="pl-smi">canvasArg</span>, <span class="pl-smi">faceExpressions</span>, <span class="pl-smi">minConfidence</span>, <span class="pl-smi">textFieldAnchor</span>) {</td>
      </tr>
      <tr>
        <td id="L2794" class="blob-num js-line-number" data-line-number="2794"></td>
        <td id="LC2794" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (minConfidence <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { minConfidence <span class="pl-k">=</span> <span class="pl-c1">0.1</span>; }</td>
      </tr>
      <tr>
        <td id="L2795" class="blob-num js-line-number" data-line-number="2795"></td>
        <td id="LC2795" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> faceExpressionsArray <span class="pl-k">=</span> <span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(faceExpressions) <span class="pl-k">?</span> faceExpressions <span class="pl-k">:</span> [faceExpressions];</td>
      </tr>
      <tr>
        <td id="L2796" class="blob-num js-line-number" data-line-number="2796"></td>
        <td id="LC2796" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">faceExpressionsArray</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L2797" class="blob-num js-line-number" data-line-number="2797"></td>
        <td id="LC2797" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> expr <span class="pl-k">=</span> e <span class="pl-k">instanceof</span> FaceExpressions</td>
      </tr>
      <tr>
        <td id="L2798" class="blob-num js-line-number" data-line-number="2798"></td>
        <td id="LC2798" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> e</td>
      </tr>
      <tr>
        <td id="L2799" class="blob-num js-line-number" data-line-number="2799"></td>
        <td id="LC2799" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> (<span class="pl-en">isWithFaceExpressions</span>(e) <span class="pl-k">?</span> <span class="pl-smi">e</span>.<span class="pl-smi">expressions</span> <span class="pl-k">:</span> <span class="pl-c1">undefined</span>);</td>
      </tr>
      <tr>
        <td id="L2800" class="blob-num js-line-number" data-line-number="2800"></td>
        <td id="LC2800" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>expr) {</td>
      </tr>
      <tr>
        <td id="L2801" class="blob-num js-line-number" data-line-number="2801"></td>
        <td id="LC2801" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions&lt;{}&gt; or array thereof<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2802" class="blob-num js-line-number" data-line-number="2802"></td>
        <td id="LC2802" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2803" class="blob-num js-line-number" data-line-number="2803"></td>
        <td id="LC2803" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sorted <span class="pl-k">=</span> <span class="pl-smi">expr</span>.<span class="pl-en">asSortedArray</span>();</td>
      </tr>
      <tr>
        <td id="L2804" class="blob-num js-line-number" data-line-number="2804"></td>
        <td id="LC2804" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> resultsToDisplay <span class="pl-k">=</span> <span class="pl-smi">sorted</span>.<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">expr</span>) { <span class="pl-k">return</span> <span class="pl-smi">expr</span>.<span class="pl-smi">probability</span> <span class="pl-k">&gt;</span> minConfidence; });</td>
      </tr>
      <tr>
        <td id="L2805" class="blob-num js-line-number" data-line-number="2805"></td>
        <td id="LC2805" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> anchor <span class="pl-k">=</span> <span class="pl-en">isWithFaceDetection</span>(e)</td>
      </tr>
      <tr>
        <td id="L2806" class="blob-num js-line-number" data-line-number="2806"></td>
        <td id="LC2806" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> <span class="pl-smi">e</span>.<span class="pl-smi">detection</span>.<span class="pl-smi">box</span>.<span class="pl-smi">bottomLeft</span></td>
      </tr>
      <tr>
        <td id="L2807" class="blob-num js-line-number" data-line-number="2807"></td>
        <td id="LC2807" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> (textFieldAnchor <span class="pl-k">||</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>));</td>
      </tr>
      <tr>
        <td id="L2808" class="blob-num js-line-number" data-line-number="2808"></td>
        <td id="LC2808" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> drawTextField <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">DrawTextField</span>(<span class="pl-smi">resultsToDisplay</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">expr</span>) { <span class="pl-k">return</span> <span class="pl-smi">expr</span>.<span class="pl-smi">expression</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">round$1</span>(<span class="pl-smi">expr</span>.<span class="pl-smi">probability</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>; }), anchor);</td>
      </tr>
      <tr>
        <td id="L2809" class="blob-num js-line-number" data-line-number="2809"></td>
        <td id="LC2809" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">drawTextField</span>.<span class="pl-en">draw</span>(canvasArg);</td>
      </tr>
      <tr>
        <td id="L2810" class="blob-num js-line-number" data-line-number="2810"></td>
        <td id="LC2810" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2811" class="blob-num js-line-number" data-line-number="2811"></td>
        <td id="LC2811" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2812" class="blob-num js-line-number" data-line-number="2812"></td>
        <td id="LC2812" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2813" class="blob-num js-line-number" data-line-number="2813"></td>
        <td id="LC2813" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">minBbox</span>(<span class="pl-smi">pts</span>) {</td>
      </tr>
      <tr>
        <td id="L2814" class="blob-num js-line-number" data-line-number="2814"></td>
        <td id="LC2814" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> xs <span class="pl-k">=</span> <span class="pl-smi">pts</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">pt</span>) { <span class="pl-k">return</span> <span class="pl-smi">pt</span>.<span class="pl-c1">x</span>; });</td>
      </tr>
      <tr>
        <td id="L2815" class="blob-num js-line-number" data-line-number="2815"></td>
        <td id="LC2815" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ys <span class="pl-k">=</span> <span class="pl-smi">pts</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">pt</span>) { <span class="pl-k">return</span> <span class="pl-smi">pt</span>.<span class="pl-c1">y</span>; });</td>
      </tr>
      <tr>
        <td id="L2816" class="blob-num js-line-number" data-line-number="2816"></td>
        <td id="LC2816" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> minX <span class="pl-k">=</span> <span class="pl-smi">xs</span>.<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">min</span>, <span class="pl-smi">x</span>) { <span class="pl-k">return</span> x <span class="pl-k">&lt;</span> min <span class="pl-k">?</span> x <span class="pl-k">:</span> min; }, <span class="pl-c1">Infinity</span>);</td>
      </tr>
      <tr>
        <td id="L2817" class="blob-num js-line-number" data-line-number="2817"></td>
        <td id="LC2817" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> minY <span class="pl-k">=</span> <span class="pl-smi">ys</span>.<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">min</span>, <span class="pl-smi">y</span>) { <span class="pl-k">return</span> y <span class="pl-k">&lt;</span> min <span class="pl-k">?</span> y <span class="pl-k">:</span> min; }, <span class="pl-c1">Infinity</span>);</td>
      </tr>
      <tr>
        <td id="L2818" class="blob-num js-line-number" data-line-number="2818"></td>
        <td id="LC2818" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> maxX <span class="pl-k">=</span> <span class="pl-smi">xs</span>.<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">max</span>, <span class="pl-smi">x</span>) { <span class="pl-k">return</span> max <span class="pl-k">&lt;</span> x <span class="pl-k">?</span> x <span class="pl-k">:</span> max; }, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2819" class="blob-num js-line-number" data-line-number="2819"></td>
        <td id="LC2819" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> maxY <span class="pl-k">=</span> <span class="pl-smi">ys</span>.<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">max</span>, <span class="pl-smi">y</span>) { <span class="pl-k">return</span> max <span class="pl-k">&lt;</span> y <span class="pl-k">?</span> y <span class="pl-k">:</span> max; }, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2820" class="blob-num js-line-number" data-line-number="2820"></td>
        <td id="LC2820" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">BoundingBox</span>(minX, minY, maxX, maxY);</td>
      </tr>
      <tr>
        <td id="L2821" class="blob-num js-line-number" data-line-number="2821"></td>
        <td id="LC2821" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2822" class="blob-num js-line-number" data-line-number="2822"></td>
        <td id="LC2822" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2823" class="blob-num js-line-number" data-line-number="2823"></td>
        <td id="LC2823" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> face alignment constants</span></td>
      </tr>
      <tr>
        <td id="L2824" class="blob-num js-line-number" data-line-number="2824"></td>
        <td id="LC2824" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> relX <span class="pl-k">=</span> <span class="pl-c1">0.5</span>;</td>
      </tr>
      <tr>
        <td id="L2825" class="blob-num js-line-number" data-line-number="2825"></td>
        <td id="LC2825" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> relY <span class="pl-k">=</span> <span class="pl-c1">0.43</span>;</td>
      </tr>
      <tr>
        <td id="L2826" class="blob-num js-line-number" data-line-number="2826"></td>
        <td id="LC2826" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> relScale <span class="pl-k">=</span> <span class="pl-c1">0.45</span>;</td>
      </tr>
      <tr>
        <td id="L2827" class="blob-num js-line-number" data-line-number="2827"></td>
        <td id="LC2827" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceLandmarks <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2828" class="blob-num js-line-number" data-line-number="2828"></td>
        <td id="LC2828" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceLandmarks</span>(<span class="pl-smi">relativeFaceLandmarkPositions</span>, <span class="pl-smi">imgDims</span>, <span class="pl-smi">shift</span>) {</td>
      </tr>
      <tr>
        <td id="L2829" class="blob-num js-line-number" data-line-number="2829"></td>
        <td id="LC2829" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (shift <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { shift <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>); }</td>
      </tr>
      <tr>
        <td id="L2830" class="blob-num js-line-number" data-line-number="2830"></td>
        <td id="LC2830" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> width <span class="pl-k">=</span> <span class="pl-smi">imgDims</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">imgDims</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L2831" class="blob-num js-line-number" data-line-number="2831"></td>
        <td id="LC2831" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_imgDims</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Dimensions</span>(width, height);</td>
      </tr>
      <tr>
        <td id="L2832" class="blob-num js-line-number" data-line-number="2832"></td>
        <td id="LC2832" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_shift</span> <span class="pl-k">=</span> shift;</td>
      </tr>
      <tr>
        <td id="L2833" class="blob-num js-line-number" data-line-number="2833"></td>
        <td id="LC2833" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_positions</span> <span class="pl-k">=</span> <span class="pl-smi">relativeFaceLandmarkPositions</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">pt</span>) { <span class="pl-k">return</span> <span class="pl-smi">pt</span>.<span class="pl-en">mul</span>(<span class="pl-k">new</span> <span class="pl-en">Point</span>(width, height)).<span class="pl-c1">add</span>(shift); });</td>
      </tr>
      <tr>
        <td id="L2834" class="blob-num js-line-number" data-line-number="2834"></td>
        <td id="LC2834" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2835" class="blob-num js-line-number" data-line-number="2835"></td>
        <td id="LC2835" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>shift<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2836" class="blob-num js-line-number" data-line-number="2836"></td>
        <td id="LC2836" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_shift</span>.<span class="pl-c1">x</span>, <span class="pl-c1">this</span>.<span class="pl-smi">_shift</span>.<span class="pl-c1">y</span>); },</td>
      </tr>
      <tr>
        <td id="L2837" class="blob-num js-line-number" data-line-number="2837"></td>
        <td id="LC2837" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2838" class="blob-num js-line-number" data-line-number="2838"></td>
        <td id="LC2838" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2839" class="blob-num js-line-number" data-line-number="2839"></td>
        <td id="LC2839" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2840" class="blob-num js-line-number" data-line-number="2840"></td>
        <td id="LC2840" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>imageWidth<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2841" class="blob-num js-line-number" data-line-number="2841"></td>
        <td id="LC2841" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_imgDims</span>.<span class="pl-c1">width</span>; },</td>
      </tr>
      <tr>
        <td id="L2842" class="blob-num js-line-number" data-line-number="2842"></td>
        <td id="LC2842" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2843" class="blob-num js-line-number" data-line-number="2843"></td>
        <td id="LC2843" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2844" class="blob-num js-line-number" data-line-number="2844"></td>
        <td id="LC2844" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2845" class="blob-num js-line-number" data-line-number="2845"></td>
        <td id="LC2845" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>imageHeight<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2846" class="blob-num js-line-number" data-line-number="2846"></td>
        <td id="LC2846" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_imgDims</span>.<span class="pl-c1">height</span>; },</td>
      </tr>
      <tr>
        <td id="L2847" class="blob-num js-line-number" data-line-number="2847"></td>
        <td id="LC2847" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2848" class="blob-num js-line-number" data-line-number="2848"></td>
        <td id="LC2848" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2849" class="blob-num js-line-number" data-line-number="2849"></td>
        <td id="LC2849" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2850" class="blob-num js-line-number" data-line-number="2850"></td>
        <td id="LC2850" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>positions<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2851" class="blob-num js-line-number" data-line-number="2851"></td>
        <td id="LC2851" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>; },</td>
      </tr>
      <tr>
        <td id="L2852" class="blob-num js-line-number" data-line-number="2852"></td>
        <td id="LC2852" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2853" class="blob-num js-line-number" data-line-number="2853"></td>
        <td id="LC2853" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2854" class="blob-num js-line-number" data-line-number="2854"></td>
        <td id="LC2854" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2855" class="blob-num js-line-number" data-line-number="2855"></td>
        <td id="LC2855" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>relativePositions<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2856" class="blob-num js-line-number" data-line-number="2856"></td>
        <td id="LC2856" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2857" class="blob-num js-line-number" data-line-number="2857"></td>
        <td id="LC2857" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2858" class="blob-num js-line-number" data-line-number="2858"></td>
        <td id="LC2858" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">pt</span>) { <span class="pl-k">return</span> <span class="pl-smi">pt</span>.<span class="pl-c1">sub</span>(<span class="pl-smi">_this</span>.<span class="pl-smi">_shift</span>).<span class="pl-en">div</span>(<span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-smi">_this</span>.<span class="pl-smi">imageWidth</span>, <span class="pl-smi">_this</span>.<span class="pl-smi">imageHeight</span>)); });</td>
      </tr>
      <tr>
        <td id="L2859" class="blob-num js-line-number" data-line-number="2859"></td>
        <td id="LC2859" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2860" class="blob-num js-line-number" data-line-number="2860"></td>
        <td id="LC2860" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2861" class="blob-num js-line-number" data-line-number="2861"></td>
        <td id="LC2861" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2862" class="blob-num js-line-number" data-line-number="2862"></td>
        <td id="LC2862" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2863" class="blob-num js-line-number" data-line-number="2863"></td>
        <td id="LC2863" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forSize</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">width</span>, <span class="pl-smi">height</span>) {</td>
      </tr>
      <tr>
        <td id="L2864" class="blob-num js-line-number" data-line-number="2864"></td>
        <td id="LC2864" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">relativePositions</span>, { width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L2865" class="blob-num js-line-number" data-line-number="2865"></td>
        <td id="LC2865" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2866" class="blob-num js-line-number" data-line-number="2866"></td>
        <td id="LC2866" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">shiftBy</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L2867" class="blob-num js-line-number" data-line-number="2867"></td>
        <td id="LC2867" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">relativePositions</span>, <span class="pl-c1">this</span>.<span class="pl-smi">_imgDims</span>, <span class="pl-k">new</span> <span class="pl-en">Point</span>(x, y));</td>
      </tr>
      <tr>
        <td id="L2868" class="blob-num js-line-number" data-line-number="2868"></td>
        <td id="LC2868" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2869" class="blob-num js-line-number" data-line-number="2869"></td>
        <td id="LC2869" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">shiftByPoint</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">pt</span>) {</td>
      </tr>
      <tr>
        <td id="L2870" class="blob-num js-line-number" data-line-number="2870"></td>
        <td id="LC2870" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">shiftBy</span>(<span class="pl-smi">pt</span>.<span class="pl-c1">x</span>, <span class="pl-smi">pt</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L2871" class="blob-num js-line-number" data-line-number="2871"></td>
        <td id="LC2871" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2872" class="blob-num js-line-number" data-line-number="2872"></td>
        <td id="LC2872" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2873" class="blob-num js-line-number" data-line-number="2873"></td>
        <td id="LC2873" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Aligns the face landmarks after face detection from the relative positions of the faces</span></td>
      </tr>
      <tr>
        <td id="L2874" class="blob-num js-line-number" data-line-number="2874"></td>
        <td id="LC2874" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * bounding box, or it&#39;s current shift. This function should be used to align the face images</span></td>
      </tr>
      <tr>
        <td id="L2875" class="blob-num js-line-number" data-line-number="2875"></td>
        <td id="LC2875" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * after face detection has been performed, before they are passed to the face recognition net.</span></td>
      </tr>
      <tr>
        <td id="L2876" class="blob-num js-line-number" data-line-number="2876"></td>
        <td id="LC2876" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * This will make the computed face descriptor more accurate.</span></td>
      </tr>
      <tr>
        <td id="L2877" class="blob-num js-line-number" data-line-number="2877"></td>
        <td id="LC2877" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         *</span></td>
      </tr>
      <tr>
        <td id="L2878" class="blob-num js-line-number" data-line-number="2878"></td>
        <td id="LC2878" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@param</span> <span class="pl-smi">detection</span> (optional) The bounding box of the face or the face detection result. If</span></td>
      </tr>
      <tr>
        <td id="L2879" class="blob-num js-line-number" data-line-number="2879"></td>
        <td id="LC2879" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * no argument was passed the position of the face landmarks are assumed to be relative to</span></td>
      </tr>
      <tr>
        <td id="L2880" class="blob-num js-line-number" data-line-number="2880"></td>
        <td id="LC2880" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * it&#39;s current shift.</span></td>
      </tr>
      <tr>
        <td id="L2881" class="blob-num js-line-number" data-line-number="2881"></td>
        <td id="LC2881" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@returns</span> The bounding box of the aligned face.</span></td>
      </tr>
      <tr>
        <td id="L2882" class="blob-num js-line-number" data-line-number="2882"></td>
        <td id="LC2882" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2883" class="blob-num js-line-number" data-line-number="2883"></td>
        <td id="LC2883" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">align</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">detection</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L2884" class="blob-num js-line-number" data-line-number="2884"></td>
        <td id="LC2884" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L2885" class="blob-num js-line-number" data-line-number="2885"></td>
        <td id="LC2885" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (detection) {</td>
      </tr>
      <tr>
        <td id="L2886" class="blob-num js-line-number" data-line-number="2886"></td>
        <td id="LC2886" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> box <span class="pl-k">=</span> detection <span class="pl-k">instanceof</span> FaceDetection</td>
      </tr>
      <tr>
        <td id="L2887" class="blob-num js-line-number" data-line-number="2887"></td>
        <td id="LC2887" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">?</span> <span class="pl-smi">detection</span>.<span class="pl-smi">box</span>.<span class="pl-en">floor</span>()</td>
      </tr>
      <tr>
        <td id="L2888" class="blob-num js-line-number" data-line-number="2888"></td>
        <td id="LC2888" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">Box</span>(detection);</td>
      </tr>
      <tr>
        <td id="L2889" class="blob-num js-line-number" data-line-number="2889"></td>
        <td id="LC2889" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">shiftBy</span>(<span class="pl-smi">box</span>.<span class="pl-c1">x</span>, <span class="pl-smi">box</span>.<span class="pl-c1">y</span>).<span class="pl-c1">align</span>(<span class="pl-c1">null</span>, options);</td>
      </tr>
      <tr>
        <td id="L2890" class="blob-num js-line-number" data-line-number="2890"></td>
        <td id="LC2890" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2891" class="blob-num js-line-number" data-line-number="2891"></td>
        <td id="LC2891" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({}, { useDlibAlignment<span class="pl-k">:</span> <span class="pl-c1">false</span>, minBoxPadding<span class="pl-k">:</span> <span class="pl-c1">0.2</span> }, options), useDlibAlignment <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">useDlibAlignment</span>, minBoxPadding <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">minBoxPadding</span>;</td>
      </tr>
      <tr>
        <td id="L2892" class="blob-num js-line-number" data-line-number="2892"></td>
        <td id="LC2892" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (useDlibAlignment) {</td>
      </tr>
      <tr>
        <td id="L2893" class="blob-num js-line-number" data-line-number="2893"></td>
        <td id="LC2893" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">alignDlib</span>();</td>
      </tr>
      <tr>
        <td id="L2894" class="blob-num js-line-number" data-line-number="2894"></td>
        <td id="LC2894" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2895" class="blob-num js-line-number" data-line-number="2895"></td>
        <td id="LC2895" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">alignMinBbox</span>(minBoxPadding);</td>
      </tr>
      <tr>
        <td id="L2896" class="blob-num js-line-number" data-line-number="2896"></td>
        <td id="LC2896" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2897" class="blob-num js-line-number" data-line-number="2897"></td>
        <td id="LC2897" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">alignDlib</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2898" class="blob-num js-line-number" data-line-number="2898"></td>
        <td id="LC2898" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> centers <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">getRefPointsForAlignment</span>();</td>
      </tr>
      <tr>
        <td id="L2899" class="blob-num js-line-number" data-line-number="2899"></td>
        <td id="LC2899" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> leftEyeCenter <span class="pl-k">=</span> centers[<span class="pl-c1">0</span>], rightEyeCenter <span class="pl-k">=</span> centers[<span class="pl-c1">1</span>], mouthCenter <span class="pl-k">=</span> centers[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L2900" class="blob-num js-line-number" data-line-number="2900"></td>
        <td id="LC2900" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> <span class="pl-en">distToMouth</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">pt</span>) { <span class="pl-k">return</span> <span class="pl-smi">mouthCenter</span>.<span class="pl-c1">sub</span>(pt).<span class="pl-en">magnitude</span>(); };</td>
      </tr>
      <tr>
        <td id="L2901" class="blob-num js-line-number" data-line-number="2901"></td>
        <td id="LC2901" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> eyeToMouthDist <span class="pl-k">=</span> (<span class="pl-en">distToMouth</span>(leftEyeCenter) <span class="pl-k">+</span> <span class="pl-en">distToMouth</span>(rightEyeCenter)) <span class="pl-k">/</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L2902" class="blob-num js-line-number" data-line-number="2902"></td>
        <td id="LC2902" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> size <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(eyeToMouthDist <span class="pl-k">/</span> relScale);</td>
      </tr>
      <tr>
        <td id="L2903" class="blob-num js-line-number" data-line-number="2903"></td>
        <td id="LC2903" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> refPoint <span class="pl-k">=</span> <span class="pl-en">getCenterPoint</span>(centers);</td>
      </tr>
      <tr>
        <td id="L2904" class="blob-num js-line-number" data-line-number="2904"></td>
        <td id="LC2904" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> TODO: pad in case rectangle is out of image bounds</span></td>
      </tr>
      <tr>
        <td id="L2905" class="blob-num js-line-number" data-line-number="2905"></td>
        <td id="LC2905" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> x <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-smi">refPoint</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> (relX <span class="pl-k">*</span> size)));</td>
      </tr>
      <tr>
        <td id="L2906" class="blob-num js-line-number" data-line-number="2906"></td>
        <td id="LC2906" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> y <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-smi">refPoint</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> (relY <span class="pl-k">*</span> size)));</td>
      </tr>
      <tr>
        <td id="L2907" class="blob-num js-line-number" data-line-number="2907"></td>
        <td id="LC2907" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Rect</span>(x, y, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(size, <span class="pl-c1">this</span>.<span class="pl-smi">imageWidth</span> <span class="pl-k">+</span> x), <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(size, <span class="pl-c1">this</span>.<span class="pl-smi">imageHeight</span> <span class="pl-k">+</span> y));</td>
      </tr>
      <tr>
        <td id="L2908" class="blob-num js-line-number" data-line-number="2908"></td>
        <td id="LC2908" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2909" class="blob-num js-line-number" data-line-number="2909"></td>
        <td id="LC2909" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">alignMinBbox</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">padding</span>) {</td>
      </tr>
      <tr>
        <td id="L2910" class="blob-num js-line-number" data-line-number="2910"></td>
        <td id="LC2910" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box <span class="pl-k">=</span> <span class="pl-en">minBbox</span>(<span class="pl-c1">this</span>.<span class="pl-smi">positions</span>);</td>
      </tr>
      <tr>
        <td id="L2911" class="blob-num js-line-number" data-line-number="2911"></td>
        <td id="LC2911" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">box</span>.<span class="pl-en">pad</span>(<span class="pl-smi">box</span>.<span class="pl-c1">width</span> <span class="pl-k">*</span> padding, <span class="pl-smi">box</span>.<span class="pl-c1">height</span> <span class="pl-k">*</span> padding);</td>
      </tr>
      <tr>
        <td id="L2912" class="blob-num js-line-number" data-line-number="2912"></td>
        <td id="LC2912" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2913" class="blob-num js-line-number" data-line-number="2913"></td>
        <td id="LC2913" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRefPointsForAlignment</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2914" class="blob-num js-line-number" data-line-number="2914"></td>
        <td id="LC2914" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>getRefPointsForAlignment not implemented by base class<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2915" class="blob-num js-line-number" data-line-number="2915"></td>
        <td id="LC2915" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2916" class="blob-num js-line-number" data-line-number="2916"></td>
        <td id="LC2916" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceLandmarks;</td>
      </tr>
      <tr>
        <td id="L2917" class="blob-num js-line-number" data-line-number="2917"></td>
        <td id="LC2917" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L2918" class="blob-num js-line-number" data-line-number="2918"></td>
        <td id="LC2918" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2919" class="blob-num js-line-number" data-line-number="2919"></td>
        <td id="LC2919" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceLandmarks68 <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L2920" class="blob-num js-line-number" data-line-number="2920"></td>
        <td id="LC2920" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceLandmarks68, _super);</td>
      </tr>
      <tr>
        <td id="L2921" class="blob-num js-line-number" data-line-number="2921"></td>
        <td id="LC2921" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceLandmarks68</span>() {</td>
      </tr>
      <tr>
        <td id="L2922" class="blob-num js-line-number" data-line-number="2922"></td>
        <td id="LC2922" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L2923" class="blob-num js-line-number" data-line-number="2923"></td>
        <td id="LC2923" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2924" class="blob-num js-line-number" data-line-number="2924"></td>
        <td id="LC2924" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks68</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getJawOutline</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2925" class="blob-num js-line-number" data-line-number="2925"></td>
        <td id="LC2925" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">positions</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, <span class="pl-c1">17</span>);</td>
      </tr>
      <tr>
        <td id="L2926" class="blob-num js-line-number" data-line-number="2926"></td>
        <td id="LC2926" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2927" class="blob-num js-line-number" data-line-number="2927"></td>
        <td id="LC2927" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks68</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getLeftEyeBrow</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2928" class="blob-num js-line-number" data-line-number="2928"></td>
        <td id="LC2928" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">positions</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">17</span>, <span class="pl-c1">22</span>);</td>
      </tr>
      <tr>
        <td id="L2929" class="blob-num js-line-number" data-line-number="2929"></td>
        <td id="LC2929" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2930" class="blob-num js-line-number" data-line-number="2930"></td>
        <td id="LC2930" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks68</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRightEyeBrow</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2931" class="blob-num js-line-number" data-line-number="2931"></td>
        <td id="LC2931" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">positions</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">22</span>, <span class="pl-c1">27</span>);</td>
      </tr>
      <tr>
        <td id="L2932" class="blob-num js-line-number" data-line-number="2932"></td>
        <td id="LC2932" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2933" class="blob-num js-line-number" data-line-number="2933"></td>
        <td id="LC2933" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks68</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getNose</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2934" class="blob-num js-line-number" data-line-number="2934"></td>
        <td id="LC2934" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">positions</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">27</span>, <span class="pl-c1">36</span>);</td>
      </tr>
      <tr>
        <td id="L2935" class="blob-num js-line-number" data-line-number="2935"></td>
        <td id="LC2935" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2936" class="blob-num js-line-number" data-line-number="2936"></td>
        <td id="LC2936" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks68</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getLeftEye</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2937" class="blob-num js-line-number" data-line-number="2937"></td>
        <td id="LC2937" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">positions</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">36</span>, <span class="pl-c1">42</span>);</td>
      </tr>
      <tr>
        <td id="L2938" class="blob-num js-line-number" data-line-number="2938"></td>
        <td id="LC2938" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2939" class="blob-num js-line-number" data-line-number="2939"></td>
        <td id="LC2939" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks68</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRightEye</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2940" class="blob-num js-line-number" data-line-number="2940"></td>
        <td id="LC2940" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">positions</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">42</span>, <span class="pl-c1">48</span>);</td>
      </tr>
      <tr>
        <td id="L2941" class="blob-num js-line-number" data-line-number="2941"></td>
        <td id="LC2941" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2942" class="blob-num js-line-number" data-line-number="2942"></td>
        <td id="LC2942" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks68</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getMouth</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2943" class="blob-num js-line-number" data-line-number="2943"></td>
        <td id="LC2943" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">positions</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">48</span>, <span class="pl-c1">68</span>);</td>
      </tr>
      <tr>
        <td id="L2944" class="blob-num js-line-number" data-line-number="2944"></td>
        <td id="LC2944" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2945" class="blob-num js-line-number" data-line-number="2945"></td>
        <td id="LC2945" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks68</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRefPointsForAlignment</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2946" class="blob-num js-line-number" data-line-number="2946"></td>
        <td id="LC2946" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> [</td>
      </tr>
      <tr>
        <td id="L2947" class="blob-num js-line-number" data-line-number="2947"></td>
        <td id="LC2947" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-en">getLeftEye</span>(),</td>
      </tr>
      <tr>
        <td id="L2948" class="blob-num js-line-number" data-line-number="2948"></td>
        <td id="LC2948" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-en">getRightEye</span>(),</td>
      </tr>
      <tr>
        <td id="L2949" class="blob-num js-line-number" data-line-number="2949"></td>
        <td id="LC2949" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-en">getMouth</span>()</td>
      </tr>
      <tr>
        <td id="L2950" class="blob-num js-line-number" data-line-number="2950"></td>
        <td id="LC2950" class="blob-code blob-code-inner js-file-line">            ].<span class="pl-en">map</span>(getCenterPoint);</td>
      </tr>
      <tr>
        <td id="L2951" class="blob-num js-line-number" data-line-number="2951"></td>
        <td id="LC2951" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2952" class="blob-num js-line-number" data-line-number="2952"></td>
        <td id="LC2952" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceLandmarks68;</td>
      </tr>
      <tr>
        <td id="L2953" class="blob-num js-line-number" data-line-number="2953"></td>
        <td id="LC2953" class="blob-code blob-code-inner js-file-line">    }(FaceLandmarks));</td>
      </tr>
      <tr>
        <td id="L2954" class="blob-num js-line-number" data-line-number="2954"></td>
        <td id="LC2954" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2955" class="blob-num js-line-number" data-line-number="2955"></td>
        <td id="LC2955" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">isWithFaceLandmarks</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L2956" class="blob-num js-line-number" data-line-number="2956"></td>
        <td id="LC2956" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">isWithFaceDetection</span>(obj)</td>
      </tr>
      <tr>
        <td id="L2957" class="blob-num js-line-number" data-line-number="2957"></td>
        <td id="LC2957" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> obj[<span class="pl-s"><span class="pl-pds">&#39;</span>landmarks<span class="pl-pds">&#39;</span></span>] <span class="pl-k">instanceof</span> FaceLandmarks</td>
      </tr>
      <tr>
        <td id="L2958" class="blob-num js-line-number" data-line-number="2958"></td>
        <td id="LC2958" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> obj[<span class="pl-s"><span class="pl-pds">&#39;</span>unshiftedLandmarks<span class="pl-pds">&#39;</span></span>] <span class="pl-k">instanceof</span> FaceLandmarks</td>
      </tr>
      <tr>
        <td id="L2959" class="blob-num js-line-number" data-line-number="2959"></td>
        <td id="LC2959" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">&amp;&amp;</span> obj[<span class="pl-s"><span class="pl-pds">&#39;</span>alignedRect<span class="pl-pds">&#39;</span></span>] <span class="pl-k">instanceof</span> FaceDetection;</td>
      </tr>
      <tr>
        <td id="L2960" class="blob-num js-line-number" data-line-number="2960"></td>
        <td id="LC2960" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2961" class="blob-num js-line-number" data-line-number="2961"></td>
        <td id="LC2961" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extendWithFaceLandmarks</span>(<span class="pl-smi">sourceObj</span>, <span class="pl-smi">unshiftedLandmarks</span>) {</td>
      </tr>
      <tr>
        <td id="L2962" class="blob-num js-line-number" data-line-number="2962"></td>
        <td id="LC2962" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> shift <span class="pl-k">=</span> <span class="pl-smi">sourceObj</span>.<span class="pl-smi">detection</span>.<span class="pl-smi">box</span>;</td>
      </tr>
      <tr>
        <td id="L2963" class="blob-num js-line-number" data-line-number="2963"></td>
        <td id="LC2963" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> landmarks <span class="pl-k">=</span> <span class="pl-smi">unshiftedLandmarks</span>.<span class="pl-en">shiftBy</span>(<span class="pl-smi">shift</span>.<span class="pl-c1">x</span>, <span class="pl-smi">shift</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L2964" class="blob-num js-line-number" data-line-number="2964"></td>
        <td id="LC2964" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> rect <span class="pl-k">=</span> <span class="pl-smi">landmarks</span>.<span class="pl-c1">align</span>();</td>
      </tr>
      <tr>
        <td id="L2965" class="blob-num js-line-number" data-line-number="2965"></td>
        <td id="LC2965" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> imageDims <span class="pl-k">=</span> <span class="pl-smi">sourceObj</span>.<span class="pl-smi">detection</span>.<span class="pl-smi">imageDims</span>;</td>
      </tr>
      <tr>
        <td id="L2966" class="blob-num js-line-number" data-line-number="2966"></td>
        <td id="LC2966" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> alignedRect <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">FaceDetection</span>(<span class="pl-smi">sourceObj</span>.<span class="pl-smi">detection</span>.<span class="pl-smi">score</span>, <span class="pl-smi">rect</span>.<span class="pl-en">rescale</span>(<span class="pl-smi">imageDims</span>.<span class="pl-c1">reverse</span>()), imageDims);</td>
      </tr>
      <tr>
        <td id="L2967" class="blob-num js-line-number" data-line-number="2967"></td>
        <td id="LC2967" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extension <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2968" class="blob-num js-line-number" data-line-number="2968"></td>
        <td id="LC2968" class="blob-code blob-code-inner js-file-line">            landmarks<span class="pl-k">:</span> landmarks,</td>
      </tr>
      <tr>
        <td id="L2969" class="blob-num js-line-number" data-line-number="2969"></td>
        <td id="LC2969" class="blob-code blob-code-inner js-file-line">            unshiftedLandmarks<span class="pl-k">:</span> unshiftedLandmarks,</td>
      </tr>
      <tr>
        <td id="L2970" class="blob-num js-line-number" data-line-number="2970"></td>
        <td id="LC2970" class="blob-code blob-code-inner js-file-line">            alignedRect<span class="pl-k">:</span> alignedRect</td>
      </tr>
      <tr>
        <td id="L2971" class="blob-num js-line-number" data-line-number="2971"></td>
        <td id="LC2971" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2972" class="blob-num js-line-number" data-line-number="2972"></td>
        <td id="LC2972" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({}, sourceObj, extension);</td>
      </tr>
      <tr>
        <td id="L2973" class="blob-num js-line-number" data-line-number="2973"></td>
        <td id="LC2973" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2974" class="blob-num js-line-number" data-line-number="2974"></td>
        <td id="LC2974" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2975" class="blob-num js-line-number" data-line-number="2975"></td>
        <td id="LC2975" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DrawFaceLandmarksOptions <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2976" class="blob-num js-line-number" data-line-number="2976"></td>
        <td id="LC2976" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DrawFaceLandmarksOptions</span>(<span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L2977" class="blob-num js-line-number" data-line-number="2977"></td>
        <td id="LC2977" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L2978" class="blob-num js-line-number" data-line-number="2978"></td>
        <td id="LC2978" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">drawLines</span>, drawLines <span class="pl-k">=</span> _a <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">true</span> <span class="pl-k">:</span> _a, _b <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">drawPoints</span>, drawPoints <span class="pl-k">=</span> _b <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">true</span> <span class="pl-k">:</span> _b, lineWidth <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">lineWidth</span>, lineColor <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">lineColor</span>, pointSize <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">pointSize</span>, pointColor <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">pointColor</span>;</td>
      </tr>
      <tr>
        <td id="L2979" class="blob-num js-line-number" data-line-number="2979"></td>
        <td id="LC2979" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">drawLines</span> <span class="pl-k">=</span> drawLines;</td>
      </tr>
      <tr>
        <td id="L2980" class="blob-num js-line-number" data-line-number="2980"></td>
        <td id="LC2980" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">drawPoints</span> <span class="pl-k">=</span> drawPoints;</td>
      </tr>
      <tr>
        <td id="L2981" class="blob-num js-line-number" data-line-number="2981"></td>
        <td id="LC2981" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">lineWidth</span> <span class="pl-k">=</span> lineWidth <span class="pl-k">||</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2982" class="blob-num js-line-number" data-line-number="2982"></td>
        <td id="LC2982" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">pointSize</span> <span class="pl-k">=</span> pointSize <span class="pl-k">||</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L2983" class="blob-num js-line-number" data-line-number="2983"></td>
        <td id="LC2983" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">lineColor</span> <span class="pl-k">=</span> lineColor <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>rgba(0, 255, 255, 1)<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2984" class="blob-num js-line-number" data-line-number="2984"></td>
        <td id="LC2984" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">pointColor</span> <span class="pl-k">=</span> pointColor <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>rgba(255, 0, 255, 1)<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2985" class="blob-num js-line-number" data-line-number="2985"></td>
        <td id="LC2985" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2986" class="blob-num js-line-number" data-line-number="2986"></td>
        <td id="LC2986" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DrawFaceLandmarksOptions;</td>
      </tr>
      <tr>
        <td id="L2987" class="blob-num js-line-number" data-line-number="2987"></td>
        <td id="LC2987" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L2988" class="blob-num js-line-number" data-line-number="2988"></td>
        <td id="LC2988" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DrawFaceLandmarks <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2989" class="blob-num js-line-number" data-line-number="2989"></td>
        <td id="LC2989" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DrawFaceLandmarks</span>(<span class="pl-smi">faceLandmarks</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L2990" class="blob-num js-line-number" data-line-number="2990"></td>
        <td id="LC2990" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L2991" class="blob-num js-line-number" data-line-number="2991"></td>
        <td id="LC2991" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span> <span class="pl-k">=</span> faceLandmarks;</td>
      </tr>
      <tr>
        <td id="L2992" class="blob-num js-line-number" data-line-number="2992"></td>
        <td id="LC2992" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-c1">options</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">DrawFaceLandmarksOptions</span>(options);</td>
      </tr>
      <tr>
        <td id="L2993" class="blob-num js-line-number" data-line-number="2993"></td>
        <td id="LC2993" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2994" class="blob-num js-line-number" data-line-number="2994"></td>
        <td id="LC2994" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DrawFaceLandmarks</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">canvasArg</span>) {</td>
      </tr>
      <tr>
        <td id="L2995" class="blob-num js-line-number" data-line-number="2995"></td>
        <td id="LC2995" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-en">getContext2dOrThrow</span>(canvasArg);</td>
      </tr>
      <tr>
        <td id="L2996" class="blob-num js-line-number" data-line-number="2996"></td>
        <td id="LC2996" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">options</span>, drawLines <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">drawLines</span>, drawPoints <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">drawPoints</span>, lineWidth <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">lineWidth</span>, lineColor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">lineColor</span>, pointSize <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">pointSize</span>, pointColor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">pointColor</span>;</td>
      </tr>
      <tr>
        <td id="L2997" class="blob-num js-line-number" data-line-number="2997"></td>
        <td id="LC2997" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (drawLines <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span> <span class="pl-k">instanceof</span> FaceLandmarks68) {</td>
      </tr>
      <tr>
        <td id="L2998" class="blob-num js-line-number" data-line-number="2998"></td>
        <td id="LC2998" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">ctx</span>.<span class="pl-smi">strokeStyle</span> <span class="pl-k">=</span> lineColor;</td>
      </tr>
      <tr>
        <td id="L2999" class="blob-num js-line-number" data-line-number="2999"></td>
        <td id="LC2999" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">ctx</span>.<span class="pl-smi">lineWidth</span> <span class="pl-k">=</span> lineWidth;</td>
      </tr>
      <tr>
        <td id="L3000" class="blob-num js-line-number" data-line-number="3000"></td>
        <td id="LC3000" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">drawContour</span>(ctx, <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span>.<span class="pl-en">getJawOutline</span>());</td>
      </tr>
      <tr>
        <td id="L3001" class="blob-num js-line-number" data-line-number="3001"></td>
        <td id="LC3001" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">drawContour</span>(ctx, <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span>.<span class="pl-en">getLeftEyeBrow</span>());</td>
      </tr>
      <tr>
        <td id="L3002" class="blob-num js-line-number" data-line-number="3002"></td>
        <td id="LC3002" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">drawContour</span>(ctx, <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span>.<span class="pl-en">getRightEyeBrow</span>());</td>
      </tr>
      <tr>
        <td id="L3003" class="blob-num js-line-number" data-line-number="3003"></td>
        <td id="LC3003" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">drawContour</span>(ctx, <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span>.<span class="pl-en">getNose</span>());</td>
      </tr>
      <tr>
        <td id="L3004" class="blob-num js-line-number" data-line-number="3004"></td>
        <td id="LC3004" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">drawContour</span>(ctx, <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span>.<span class="pl-en">getLeftEye</span>(), <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3005" class="blob-num js-line-number" data-line-number="3005"></td>
        <td id="LC3005" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">drawContour</span>(ctx, <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span>.<span class="pl-en">getRightEye</span>(), <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3006" class="blob-num js-line-number" data-line-number="3006"></td>
        <td id="LC3006" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">drawContour</span>(ctx, <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span>.<span class="pl-en">getMouth</span>(), <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3007" class="blob-num js-line-number" data-line-number="3007"></td>
        <td id="LC3007" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3008" class="blob-num js-line-number" data-line-number="3008"></td>
        <td id="LC3008" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (drawPoints) {</td>
      </tr>
      <tr>
        <td id="L3009" class="blob-num js-line-number" data-line-number="3009"></td>
        <td id="LC3009" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">ctx</span>.<span class="pl-smi">strokeStyle</span> <span class="pl-k">=</span> pointColor;</td>
      </tr>
      <tr>
        <td id="L3010" class="blob-num js-line-number" data-line-number="3010"></td>
        <td id="LC3010" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">ctx</span>.<span class="pl-smi">fillStyle</span> <span class="pl-k">=</span> pointColor;</td>
      </tr>
      <tr>
        <td id="L3011" class="blob-num js-line-number" data-line-number="3011"></td>
        <td id="LC3011" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> <span class="pl-en">drawPoint</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">pt</span>) {</td>
      </tr>
      <tr>
        <td id="L3012" class="blob-num js-line-number" data-line-number="3012"></td>
        <td id="LC3012" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">ctx</span>.<span class="pl-en">beginPath</span>();</td>
      </tr>
      <tr>
        <td id="L3013" class="blob-num js-line-number" data-line-number="3013"></td>
        <td id="LC3013" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">ctx</span>.<span class="pl-en">arc</span>(<span class="pl-smi">pt</span>.<span class="pl-c1">x</span>, <span class="pl-smi">pt</span>.<span class="pl-c1">y</span>, pointSize, <span class="pl-c1">0</span>, <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>);</td>
      </tr>
      <tr>
        <td id="L3014" class="blob-num js-line-number" data-line-number="3014"></td>
        <td id="LC3014" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">ctx</span>.<span class="pl-en">fill</span>();</td>
      </tr>
      <tr>
        <td id="L3015" class="blob-num js-line-number" data-line-number="3015"></td>
        <td id="LC3015" class="blob-code blob-code-inner js-file-line">                };</td>
      </tr>
      <tr>
        <td id="L3016" class="blob-num js-line-number" data-line-number="3016"></td>
        <td id="LC3016" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-smi">faceLandmarks</span>.<span class="pl-smi">positions</span>.<span class="pl-c1">forEach</span>(drawPoint);</td>
      </tr>
      <tr>
        <td id="L3017" class="blob-num js-line-number" data-line-number="3017"></td>
        <td id="LC3017" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3018" class="blob-num js-line-number" data-line-number="3018"></td>
        <td id="LC3018" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3019" class="blob-num js-line-number" data-line-number="3019"></td>
        <td id="LC3019" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DrawFaceLandmarks;</td>
      </tr>
      <tr>
        <td id="L3020" class="blob-num js-line-number" data-line-number="3020"></td>
        <td id="LC3020" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L3021" class="blob-num js-line-number" data-line-number="3021"></td>
        <td id="LC3021" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">drawFaceLandmarks</span>(<span class="pl-smi">canvasArg</span>, <span class="pl-smi">faceLandmarks</span>) {</td>
      </tr>
      <tr>
        <td id="L3022" class="blob-num js-line-number" data-line-number="3022"></td>
        <td id="LC3022" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> faceLandmarksArray <span class="pl-k">=</span> <span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(faceLandmarks) <span class="pl-k">?</span> faceLandmarks <span class="pl-k">:</span> [faceLandmarks];</td>
      </tr>
      <tr>
        <td id="L3023" class="blob-num js-line-number" data-line-number="3023"></td>
        <td id="LC3023" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">faceLandmarksArray</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L3024" class="blob-num js-line-number" data-line-number="3024"></td>
        <td id="LC3024" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> landmarks <span class="pl-k">=</span> f <span class="pl-k">instanceof</span> FaceLandmarks</td>
      </tr>
      <tr>
        <td id="L3025" class="blob-num js-line-number" data-line-number="3025"></td>
        <td id="LC3025" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> f</td>
      </tr>
      <tr>
        <td id="L3026" class="blob-num js-line-number" data-line-number="3026"></td>
        <td id="LC3026" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> (<span class="pl-en">isWithFaceLandmarks</span>(f) <span class="pl-k">?</span> <span class="pl-smi">f</span>.<span class="pl-smi">landmarks</span> <span class="pl-k">:</span> <span class="pl-c1">undefined</span>);</td>
      </tr>
      <tr>
        <td id="L3027" class="blob-num js-line-number" data-line-number="3027"></td>
        <td id="LC3027" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>landmarks) {</td>
      </tr>
      <tr>
        <td id="L3028" class="blob-num js-line-number" data-line-number="3028"></td>
        <td id="LC3028" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks&lt;WithFaceDetection&lt;{}&gt;&gt; or array thereof<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3029" class="blob-num js-line-number" data-line-number="3029"></td>
        <td id="LC3029" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3030" class="blob-num js-line-number" data-line-number="3030"></td>
        <td id="LC3030" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">new</span> <span class="pl-en">DrawFaceLandmarks</span>(landmarks).<span class="pl-en">draw</span>(canvasArg);</td>
      </tr>
      <tr>
        <td id="L3031" class="blob-num js-line-number" data-line-number="3031"></td>
        <td id="LC3031" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3032" class="blob-num js-line-number" data-line-number="3032"></td>
        <td id="LC3032" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3033" class="blob-num js-line-number" data-line-number="3033"></td>
        <td id="LC3033" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3034" class="blob-num js-line-number" data-line-number="3034"></td>
        <td id="LC3034" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3035" class="blob-num js-line-number" data-line-number="3035"></td>
        <td id="LC3035" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3036" class="blob-num js-line-number" data-line-number="3036"></td>
        <td id="LC3036" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> drawExtended <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/*</span>#__PURE__<span class="pl-c">*/</span></span><span class="pl-c1">Object</span>.<span class="pl-en">freeze</span>({</td>
      </tr>
      <tr>
        <td id="L3037" class="blob-num js-line-number" data-line-number="3037"></td>
        <td id="LC3037" class="blob-code blob-code-inner js-file-line">        drawContour<span class="pl-k">:</span> drawContour,</td>
      </tr>
      <tr>
        <td id="L3038" class="blob-num js-line-number" data-line-number="3038"></td>
        <td id="LC3038" class="blob-code blob-code-inner js-file-line">        drawDetections<span class="pl-k">:</span> drawDetections,</td>
      </tr>
      <tr>
        <td id="L3039" class="blob-num js-line-number" data-line-number="3039"></td>
        <td id="LC3039" class="blob-code blob-code-inner js-file-line">        drawFaceExpressions<span class="pl-k">:</span> drawFaceExpressions,</td>
      </tr>
      <tr>
        <td id="L3040" class="blob-num js-line-number" data-line-number="3040"></td>
        <td id="LC3040" class="blob-code blob-code-inner js-file-line">        DrawFaceLandmarksOptions<span class="pl-k">:</span> DrawFaceLandmarksOptions,</td>
      </tr>
      <tr>
        <td id="L3041" class="blob-num js-line-number" data-line-number="3041"></td>
        <td id="LC3041" class="blob-code blob-code-inner js-file-line">        DrawFaceLandmarks<span class="pl-k">:</span> DrawFaceLandmarks,</td>
      </tr>
      <tr>
        <td id="L3042" class="blob-num js-line-number" data-line-number="3042"></td>
        <td id="LC3042" class="blob-code blob-code-inner js-file-line">        drawFaceLandmarks<span class="pl-k">:</span> drawFaceLandmarks</td>
      </tr>
      <tr>
        <td id="L3043" class="blob-num js-line-number" data-line-number="3043"></td>
        <td id="LC3043" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L3044" class="blob-num js-line-number" data-line-number="3044"></td>
        <td id="LC3044" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3045" class="blob-num js-line-number" data-line-number="3045"></td>
        <td id="LC3045" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory$3</span>(<span class="pl-smi">extractWeights</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L3046" class="blob-num js-line-number" data-line-number="3046"></td>
        <td id="LC3046" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractConvParams <span class="pl-k">=</span> <span class="pl-en">extractConvParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3047" class="blob-num js-line-number" data-line-number="3047"></td>
        <td id="LC3047" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3048" class="blob-num js-line-number" data-line-number="3048"></td>
        <td id="LC3048" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractReductionBlockParams</span>(<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3049" class="blob-num js-line-number" data-line-number="3049"></td>
        <td id="LC3049" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv0 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(channelsIn, channelsOut, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3050" class="blob-num js-line-number" data-line-number="3050"></td>
        <td id="LC3050" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv1 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(channelsOut, channelsOut, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3051" class="blob-num js-line-number" data-line-number="3051"></td>
        <td id="LC3051" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> expansion_conv <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(channelsIn, channelsOut, <span class="pl-c1">1</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/expansion_conv<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3052" class="blob-num js-line-number" data-line-number="3052"></td>
        <td id="LC3052" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { separable_conv0<span class="pl-k">:</span> separable_conv0, separable_conv1<span class="pl-k">:</span> separable_conv1, expansion_conv<span class="pl-k">:</span> expansion_conv };</td>
      </tr>
      <tr>
        <td id="L3053" class="blob-num js-line-number" data-line-number="3053"></td>
        <td id="LC3053" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3054" class="blob-num js-line-number" data-line-number="3054"></td>
        <td id="LC3054" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractMainBlockParams</span>(<span class="pl-smi">channels</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3055" class="blob-num js-line-number" data-line-number="3055"></td>
        <td id="LC3055" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv0 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(channels, channels, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3056" class="blob-num js-line-number" data-line-number="3056"></td>
        <td id="LC3056" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv1 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(channels, channels, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3057" class="blob-num js-line-number" data-line-number="3057"></td>
        <td id="LC3057" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv2 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(channels, channels, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv2<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3058" class="blob-num js-line-number" data-line-number="3058"></td>
        <td id="LC3058" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { separable_conv0<span class="pl-k">:</span> separable_conv0, separable_conv1<span class="pl-k">:</span> separable_conv1, separable_conv2<span class="pl-k">:</span> separable_conv2 };</td>
      </tr>
      <tr>
        <td id="L3059" class="blob-num js-line-number" data-line-number="3059"></td>
        <td id="LC3059" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3060" class="blob-num js-line-number" data-line-number="3060"></td>
        <td id="LC3060" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3061" class="blob-num js-line-number" data-line-number="3061"></td>
        <td id="LC3061" class="blob-code blob-code-inner js-file-line">            extractConvParams<span class="pl-k">:</span> extractConvParams,</td>
      </tr>
      <tr>
        <td id="L3062" class="blob-num js-line-number" data-line-number="3062"></td>
        <td id="LC3062" class="blob-code blob-code-inner js-file-line">            extractSeparableConvParams<span class="pl-k">:</span> extractSeparableConvParams,</td>
      </tr>
      <tr>
        <td id="L3063" class="blob-num js-line-number" data-line-number="3063"></td>
        <td id="LC3063" class="blob-code blob-code-inner js-file-line">            extractReductionBlockParams<span class="pl-k">:</span> extractReductionBlockParams,</td>
      </tr>
      <tr>
        <td id="L3064" class="blob-num js-line-number" data-line-number="3064"></td>
        <td id="LC3064" class="blob-code blob-code-inner js-file-line">            extractMainBlockParams<span class="pl-k">:</span> extractMainBlockParams</td>
      </tr>
      <tr>
        <td id="L3065" class="blob-num js-line-number" data-line-number="3065"></td>
        <td id="LC3065" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3066" class="blob-num js-line-number" data-line-number="3066"></td>
        <td id="LC3066" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3067" class="blob-num js-line-number" data-line-number="3067"></td>
        <td id="LC3067" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParams$3</span>(<span class="pl-smi">weights</span>, <span class="pl-smi">numMainBlocks</span>) {</td>
      </tr>
      <tr>
        <td id="L3068" class="blob-num js-line-number" data-line-number="3068"></td>
        <td id="LC3068" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3069" class="blob-num js-line-number" data-line-number="3069"></td>
        <td id="LC3069" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractWeightsFactory</span>(weights), extractWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractWeights</span>, getRemainingWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">getRemainingWeights</span>;</td>
      </tr>
      <tr>
        <td id="L3070" class="blob-num js-line-number" data-line-number="3070"></td>
        <td id="LC3070" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _b <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$3</span>(extractWeights, paramMappings), extractConvParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractConvParams</span>, extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractSeparableConvParams</span>, extractReductionBlockParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractReductionBlockParams</span>, extractMainBlockParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractMainBlockParams</span>;</td>
      </tr>
      <tr>
        <td id="L3071" class="blob-num js-line-number" data-line-number="3071"></td>
        <td id="LC3071" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entry_flow_conv_in <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">3</span>, <span class="pl-c1">32</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>entry_flow/conv_in<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3072" class="blob-num js-line-number" data-line-number="3072"></td>
        <td id="LC3072" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entry_flow_reduction_block_0 <span class="pl-k">=</span> <span class="pl-en">extractReductionBlockParams</span>(<span class="pl-c1">32</span>, <span class="pl-c1">64</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>entry_flow/reduction_block_0<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3073" class="blob-num js-line-number" data-line-number="3073"></td>
        <td id="LC3073" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entry_flow_reduction_block_1 <span class="pl-k">=</span> <span class="pl-en">extractReductionBlockParams</span>(<span class="pl-c1">64</span>, <span class="pl-c1">128</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>entry_flow/reduction_block_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3074" class="blob-num js-line-number" data-line-number="3074"></td>
        <td id="LC3074" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entry_flow <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3075" class="blob-num js-line-number" data-line-number="3075"></td>
        <td id="LC3075" class="blob-code blob-code-inner js-file-line">            conv_in<span class="pl-k">:</span> entry_flow_conv_in,</td>
      </tr>
      <tr>
        <td id="L3076" class="blob-num js-line-number" data-line-number="3076"></td>
        <td id="LC3076" class="blob-code blob-code-inner js-file-line">            reduction_block_0<span class="pl-k">:</span> entry_flow_reduction_block_0,</td>
      </tr>
      <tr>
        <td id="L3077" class="blob-num js-line-number" data-line-number="3077"></td>
        <td id="LC3077" class="blob-code blob-code-inner js-file-line">            reduction_block_1<span class="pl-k">:</span> entry_flow_reduction_block_1</td>
      </tr>
      <tr>
        <td id="L3078" class="blob-num js-line-number" data-line-number="3078"></td>
        <td id="LC3078" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3079" class="blob-num js-line-number" data-line-number="3079"></td>
        <td id="LC3079" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> middle_flow <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3080" class="blob-num js-line-number" data-line-number="3080"></td>
        <td id="LC3080" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">range$1</span>(numMainBlocks, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L3081" class="blob-num js-line-number" data-line-number="3081"></td>
        <td id="LC3081" class="blob-code blob-code-inner js-file-line">            middle_flow[<span class="pl-s"><span class="pl-pds">&quot;</span>main_block_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx] <span class="pl-k">=</span> <span class="pl-en">extractMainBlockParams</span>(<span class="pl-c1">128</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>middle_flow/main_block_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx);</td>
      </tr>
      <tr>
        <td id="L3082" class="blob-num js-line-number" data-line-number="3082"></td>
        <td id="LC3082" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3083" class="blob-num js-line-number" data-line-number="3083"></td>
        <td id="LC3083" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> exit_flow_reduction_block <span class="pl-k">=</span> <span class="pl-en">extractReductionBlockParams</span>(<span class="pl-c1">128</span>, <span class="pl-c1">256</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>exit_flow/reduction_block<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3084" class="blob-num js-line-number" data-line-number="3084"></td>
        <td id="LC3084" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> exit_flow_separable_conv <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">512</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>exit_flow/separable_conv<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3085" class="blob-num js-line-number" data-line-number="3085"></td>
        <td id="LC3085" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> exit_flow <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3086" class="blob-num js-line-number" data-line-number="3086"></td>
        <td id="LC3086" class="blob-code blob-code-inner js-file-line">            reduction_block<span class="pl-k">:</span> exit_flow_reduction_block,</td>
      </tr>
      <tr>
        <td id="L3087" class="blob-num js-line-number" data-line-number="3087"></td>
        <td id="LC3087" class="blob-code blob-code-inner js-file-line">            separable_conv<span class="pl-k">:</span> exit_flow_separable_conv</td>
      </tr>
      <tr>
        <td id="L3088" class="blob-num js-line-number" data-line-number="3088"></td>
        <td id="LC3088" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3089" class="blob-num js-line-number" data-line-number="3089"></td>
        <td id="LC3089" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3090" class="blob-num js-line-number" data-line-number="3090"></td>
        <td id="LC3090" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>weights remaing after extract: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L3091" class="blob-num js-line-number" data-line-number="3091"></td>
        <td id="LC3091" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3092" class="blob-num js-line-number" data-line-number="3092"></td>
        <td id="LC3092" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3093" class="blob-num js-line-number" data-line-number="3093"></td>
        <td id="LC3093" class="blob-code blob-code-inner js-file-line">            paramMappings<span class="pl-k">:</span> paramMappings,</td>
      </tr>
      <tr>
        <td id="L3094" class="blob-num js-line-number" data-line-number="3094"></td>
        <td id="LC3094" class="blob-code blob-code-inner js-file-line">            params<span class="pl-k">:</span> { entry_flow<span class="pl-k">:</span> entry_flow, middle_flow<span class="pl-k">:</span> middle_flow, exit_flow<span class="pl-k">:</span> exit_flow }</td>
      </tr>
      <tr>
        <td id="L3095" class="blob-num js-line-number" data-line-number="3095"></td>
        <td id="LC3095" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3096" class="blob-num js-line-number" data-line-number="3096"></td>
        <td id="LC3096" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3097" class="blob-num js-line-number" data-line-number="3097"></td>
        <td id="LC3097" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3098" class="blob-num js-line-number" data-line-number="3098"></td>
        <td id="LC3098" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">loadParamsFactory$1</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L3099" class="blob-num js-line-number" data-line-number="3099"></td>
        <td id="LC3099" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractWeightEntry <span class="pl-k">=</span> <span class="pl-en">extractWeightEntryFactory</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3100" class="blob-num js-line-number" data-line-number="3100"></td>
        <td id="LC3100" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractConvParams <span class="pl-k">=</span> <span class="pl-en">loadConvParamsFactory</span>(extractWeightEntry);</td>
      </tr>
      <tr>
        <td id="L3101" class="blob-num js-line-number" data-line-number="3101"></td>
        <td id="LC3101" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-en">loadSeparableConvParamsFactory</span>(extractWeightEntry);</td>
      </tr>
      <tr>
        <td id="L3102" class="blob-num js-line-number" data-line-number="3102"></td>
        <td id="LC3102" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractReductionBlockParams</span>(<span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3103" class="blob-num js-line-number" data-line-number="3103"></td>
        <td id="LC3103" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv0 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3104" class="blob-num js-line-number" data-line-number="3104"></td>
        <td id="LC3104" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv1 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3105" class="blob-num js-line-number" data-line-number="3105"></td>
        <td id="LC3105" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> expansion_conv <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/expansion_conv<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3106" class="blob-num js-line-number" data-line-number="3106"></td>
        <td id="LC3106" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { separable_conv0<span class="pl-k">:</span> separable_conv0, separable_conv1<span class="pl-k">:</span> separable_conv1, expansion_conv<span class="pl-k">:</span> expansion_conv };</td>
      </tr>
      <tr>
        <td id="L3107" class="blob-num js-line-number" data-line-number="3107"></td>
        <td id="LC3107" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3108" class="blob-num js-line-number" data-line-number="3108"></td>
        <td id="LC3108" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractMainBlockParams</span>(<span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3109" class="blob-num js-line-number" data-line-number="3109"></td>
        <td id="LC3109" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv0 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3110" class="blob-num js-line-number" data-line-number="3110"></td>
        <td id="LC3110" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv1 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3111" class="blob-num js-line-number" data-line-number="3111"></td>
        <td id="LC3111" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> separable_conv2 <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/separable_conv2<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3112" class="blob-num js-line-number" data-line-number="3112"></td>
        <td id="LC3112" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { separable_conv0<span class="pl-k">:</span> separable_conv0, separable_conv1<span class="pl-k">:</span> separable_conv1, separable_conv2<span class="pl-k">:</span> separable_conv2 };</td>
      </tr>
      <tr>
        <td id="L3113" class="blob-num js-line-number" data-line-number="3113"></td>
        <td id="LC3113" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3114" class="blob-num js-line-number" data-line-number="3114"></td>
        <td id="LC3114" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3115" class="blob-num js-line-number" data-line-number="3115"></td>
        <td id="LC3115" class="blob-code blob-code-inner js-file-line">            extractConvParams<span class="pl-k">:</span> extractConvParams,</td>
      </tr>
      <tr>
        <td id="L3116" class="blob-num js-line-number" data-line-number="3116"></td>
        <td id="LC3116" class="blob-code blob-code-inner js-file-line">            extractSeparableConvParams<span class="pl-k">:</span> extractSeparableConvParams,</td>
      </tr>
      <tr>
        <td id="L3117" class="blob-num js-line-number" data-line-number="3117"></td>
        <td id="LC3117" class="blob-code blob-code-inner js-file-line">            extractReductionBlockParams<span class="pl-k">:</span> extractReductionBlockParams,</td>
      </tr>
      <tr>
        <td id="L3118" class="blob-num js-line-number" data-line-number="3118"></td>
        <td id="LC3118" class="blob-code blob-code-inner js-file-line">            extractMainBlockParams<span class="pl-k">:</span> extractMainBlockParams</td>
      </tr>
      <tr>
        <td id="L3119" class="blob-num js-line-number" data-line-number="3119"></td>
        <td id="LC3119" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3120" class="blob-num js-line-number" data-line-number="3120"></td>
        <td id="LC3120" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3121" class="blob-num js-line-number" data-line-number="3121"></td>
        <td id="LC3121" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsFromWeigthMap$3</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">numMainBlocks</span>) {</td>
      </tr>
      <tr>
        <td id="L3122" class="blob-num js-line-number" data-line-number="3122"></td>
        <td id="LC3122" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3123" class="blob-num js-line-number" data-line-number="3123"></td>
        <td id="LC3123" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">loadParamsFactory$1</span>(weightMap, paramMappings), extractConvParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractConvParams</span>, extractSeparableConvParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractSeparableConvParams</span>, extractReductionBlockParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractReductionBlockParams</span>, extractMainBlockParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractMainBlockParams</span>;</td>
      </tr>
      <tr>
        <td id="L3124" class="blob-num js-line-number" data-line-number="3124"></td>
        <td id="LC3124" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entry_flow_conv_in <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>entry_flow/conv_in<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3125" class="blob-num js-line-number" data-line-number="3125"></td>
        <td id="LC3125" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entry_flow_reduction_block_0 <span class="pl-k">=</span> <span class="pl-en">extractReductionBlockParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>entry_flow/reduction_block_0<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3126" class="blob-num js-line-number" data-line-number="3126"></td>
        <td id="LC3126" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entry_flow_reduction_block_1 <span class="pl-k">=</span> <span class="pl-en">extractReductionBlockParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>entry_flow/reduction_block_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3127" class="blob-num js-line-number" data-line-number="3127"></td>
        <td id="LC3127" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entry_flow <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3128" class="blob-num js-line-number" data-line-number="3128"></td>
        <td id="LC3128" class="blob-code blob-code-inner js-file-line">            conv_in<span class="pl-k">:</span> entry_flow_conv_in,</td>
      </tr>
      <tr>
        <td id="L3129" class="blob-num js-line-number" data-line-number="3129"></td>
        <td id="LC3129" class="blob-code blob-code-inner js-file-line">            reduction_block_0<span class="pl-k">:</span> entry_flow_reduction_block_0,</td>
      </tr>
      <tr>
        <td id="L3130" class="blob-num js-line-number" data-line-number="3130"></td>
        <td id="LC3130" class="blob-code blob-code-inner js-file-line">            reduction_block_1<span class="pl-k">:</span> entry_flow_reduction_block_1</td>
      </tr>
      <tr>
        <td id="L3131" class="blob-num js-line-number" data-line-number="3131"></td>
        <td id="LC3131" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3132" class="blob-num js-line-number" data-line-number="3132"></td>
        <td id="LC3132" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> middle_flow <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3133" class="blob-num js-line-number" data-line-number="3133"></td>
        <td id="LC3133" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">range$1</span>(numMainBlocks, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L3134" class="blob-num js-line-number" data-line-number="3134"></td>
        <td id="LC3134" class="blob-code blob-code-inner js-file-line">            middle_flow[<span class="pl-s"><span class="pl-pds">&quot;</span>main_block_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx] <span class="pl-k">=</span> <span class="pl-en">extractMainBlockParams</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>middle_flow/main_block_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx);</td>
      </tr>
      <tr>
        <td id="L3135" class="blob-num js-line-number" data-line-number="3135"></td>
        <td id="LC3135" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3136" class="blob-num js-line-number" data-line-number="3136"></td>
        <td id="LC3136" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> exit_flow_reduction_block <span class="pl-k">=</span> <span class="pl-en">extractReductionBlockParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>exit_flow/reduction_block<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3137" class="blob-num js-line-number" data-line-number="3137"></td>
        <td id="LC3137" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> exit_flow_separable_conv <span class="pl-k">=</span> <span class="pl-en">extractSeparableConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>exit_flow/separable_conv<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3138" class="blob-num js-line-number" data-line-number="3138"></td>
        <td id="LC3138" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> exit_flow <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3139" class="blob-num js-line-number" data-line-number="3139"></td>
        <td id="LC3139" class="blob-code blob-code-inner js-file-line">            reduction_block<span class="pl-k">:</span> exit_flow_reduction_block,</td>
      </tr>
      <tr>
        <td id="L3140" class="blob-num js-line-number" data-line-number="3140"></td>
        <td id="LC3140" class="blob-code blob-code-inner js-file-line">            separable_conv<span class="pl-k">:</span> exit_flow_separable_conv</td>
      </tr>
      <tr>
        <td id="L3141" class="blob-num js-line-number" data-line-number="3141"></td>
        <td id="LC3141" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3142" class="blob-num js-line-number" data-line-number="3142"></td>
        <td id="LC3142" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">disposeUnusedWeightTensors</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3143" class="blob-num js-line-number" data-line-number="3143"></td>
        <td id="LC3143" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> { entry_flow<span class="pl-k">:</span> entry_flow, middle_flow<span class="pl-k">:</span> middle_flow, exit_flow<span class="pl-k">:</span> exit_flow }, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L3144" class="blob-num js-line-number" data-line-number="3144"></td>
        <td id="LC3144" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3145" class="blob-num js-line-number" data-line-number="3145"></td>
        <td id="LC3145" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3146" class="blob-num js-line-number" data-line-number="3146"></td>
        <td id="LC3146" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">conv</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>, <span class="pl-smi">stride</span>) {</td>
      </tr>
      <tr>
        <td id="L3147" class="blob-num js-line-number" data-line-number="3147"></td>
        <td id="LC3147" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">add</span>(<span class="pl-en">conv2d</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">filters</span>, stride, <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>), <span class="pl-smi">params</span>.<span class="pl-smi">bias</span>);</td>
      </tr>
      <tr>
        <td id="L3148" class="blob-num js-line-number" data-line-number="3148"></td>
        <td id="LC3148" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3149" class="blob-num js-line-number" data-line-number="3149"></td>
        <td id="LC3149" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">reductionBlock</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>, <span class="pl-smi">isActivateInput</span>) {</td>
      </tr>
      <tr>
        <td id="L3150" class="blob-num js-line-number" data-line-number="3150"></td>
        <td id="LC3150" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isActivateInput <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isActivateInput <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L3151" class="blob-num js-line-number" data-line-number="3151"></td>
        <td id="LC3151" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> out <span class="pl-k">=</span> isActivateInput <span class="pl-k">?</span> <span class="pl-en">relu</span>(x) <span class="pl-k">:</span> x;</td>
      </tr>
      <tr>
        <td id="L3152" class="blob-num js-line-number" data-line-number="3152"></td>
        <td id="LC3152" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">separable_conv0</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3153" class="blob-num js-line-number" data-line-number="3153"></td>
        <td id="LC3153" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(<span class="pl-en">relu</span>(out), <span class="pl-smi">params</span>.<span class="pl-smi">separable_conv1</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3154" class="blob-num js-line-number" data-line-number="3154"></td>
        <td id="LC3154" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">3</span>, <span class="pl-c1">3</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3155" class="blob-num js-line-number" data-line-number="3155"></td>
        <td id="LC3155" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">add</span>(out, <span class="pl-en">conv</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">expansion_conv</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]));</td>
      </tr>
      <tr>
        <td id="L3156" class="blob-num js-line-number" data-line-number="3156"></td>
        <td id="LC3156" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L3157" class="blob-num js-line-number" data-line-number="3157"></td>
        <td id="LC3157" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3158" class="blob-num js-line-number" data-line-number="3158"></td>
        <td id="LC3158" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">mainBlock</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L3159" class="blob-num js-line-number" data-line-number="3159"></td>
        <td id="LC3159" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(<span class="pl-en">relu</span>(x), <span class="pl-smi">params</span>.<span class="pl-smi">separable_conv0</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3160" class="blob-num js-line-number" data-line-number="3160"></td>
        <td id="LC3160" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(<span class="pl-en">relu</span>(out), <span class="pl-smi">params</span>.<span class="pl-smi">separable_conv1</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3161" class="blob-num js-line-number" data-line-number="3161"></td>
        <td id="LC3161" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">depthwiseSeparableConv$1</span>(<span class="pl-en">relu</span>(out), <span class="pl-smi">params</span>.<span class="pl-smi">separable_conv2</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3162" class="blob-num js-line-number" data-line-number="3162"></td>
        <td id="LC3162" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">add</span>(out, x);</td>
      </tr>
      <tr>
        <td id="L3163" class="blob-num js-line-number" data-line-number="3163"></td>
        <td id="LC3163" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L3164" class="blob-num js-line-number" data-line-number="3164"></td>
        <td id="LC3164" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3165" class="blob-num js-line-number" data-line-number="3165"></td>
        <td id="LC3165" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> TinyXception <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L3166" class="blob-num js-line-number" data-line-number="3166"></td>
        <td id="LC3166" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(TinyXception, _super);</td>
      </tr>
      <tr>
        <td id="L3167" class="blob-num js-line-number" data-line-number="3167"></td>
        <td id="LC3167" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">TinyXception</span>(<span class="pl-smi">numMainBlocks</span>) {</td>
      </tr>
      <tr>
        <td id="L3168" class="blob-num js-line-number" data-line-number="3168"></td>
        <td id="LC3168" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>TinyXception<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3169" class="blob-num js-line-number" data-line-number="3169"></td>
        <td id="LC3169" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">_numMainBlocks</span> <span class="pl-k">=</span> numMainBlocks;</td>
      </tr>
      <tr>
        <td id="L3170" class="blob-num js-line-number" data-line-number="3170"></td>
        <td id="LC3170" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L3171" class="blob-num js-line-number" data-line-number="3171"></td>
        <td id="LC3171" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3172" class="blob-num js-line-number" data-line-number="3172"></td>
        <td id="LC3172" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyXception</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3173" class="blob-num js-line-number" data-line-number="3173"></td>
        <td id="LC3173" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3174" class="blob-num js-line-number" data-line-number="3174"></td>
        <td id="LC3174" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> params <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L3175" class="blob-num js-line-number" data-line-number="3175"></td>
        <td id="LC3175" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>params) {</td>
      </tr>
      <tr>
        <td id="L3176" class="blob-num js-line-number" data-line-number="3176"></td>
        <td id="LC3176" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>TinyXception - load model before inference<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3177" class="blob-num js-line-number" data-line-number="3177"></td>
        <td id="LC3177" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3178" class="blob-num js-line-number" data-line-number="3178"></td>
        <td id="LC3178" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3179" class="blob-num js-line-number" data-line-number="3179"></td>
        <td id="LC3179" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> batchTensor <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-en">toBatchTensor</span>(<span class="pl-c1">112</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3180" class="blob-num js-line-number" data-line-number="3180"></td>
        <td id="LC3180" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> meanRgb <span class="pl-k">=</span> [<span class="pl-c1">122.782</span>, <span class="pl-c1">117.001</span>, <span class="pl-c1">104.298</span>];</td>
      </tr>
      <tr>
        <td id="L3181" class="blob-num js-line-number" data-line-number="3181"></td>
        <td id="LC3181" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> normalized <span class="pl-k">=</span> <span class="pl-en">normalize</span>(batchTensor, meanRgb).<span class="pl-en">div</span>(<span class="pl-en">scalar</span>(<span class="pl-c1">256</span>));</td>
      </tr>
      <tr>
        <td id="L3182" class="blob-num js-line-number" data-line-number="3182"></td>
        <td id="LC3182" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">relu</span>(<span class="pl-en">conv</span>(normalized, <span class="pl-smi">params</span>.<span class="pl-smi">entry_flow</span>.<span class="pl-smi">conv_in</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]));</td>
      </tr>
      <tr>
        <td id="L3183" class="blob-num js-line-number" data-line-number="3183"></td>
        <td id="LC3183" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">reductionBlock</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">entry_flow</span>.<span class="pl-smi">reduction_block_0</span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L3184" class="blob-num js-line-number" data-line-number="3184"></td>
        <td id="LC3184" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">reductionBlock</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">entry_flow</span>.<span class="pl-smi">reduction_block_1</span>);</td>
      </tr>
      <tr>
        <td id="L3185" class="blob-num js-line-number" data-line-number="3185"></td>
        <td id="LC3185" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">range$1</span>(<span class="pl-smi">_this</span>.<span class="pl-smi">_numMainBlocks</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L3186" class="blob-num js-line-number" data-line-number="3186"></td>
        <td id="LC3186" class="blob-code blob-code-inner js-file-line">                    out <span class="pl-k">=</span> <span class="pl-en">mainBlock</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">middle_flow</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>main_block_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx]);</td>
      </tr>
      <tr>
        <td id="L3187" class="blob-num js-line-number" data-line-number="3187"></td>
        <td id="LC3187" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L3188" class="blob-num js-line-number" data-line-number="3188"></td>
        <td id="LC3188" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">reductionBlock</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">exit_flow</span>.<span class="pl-smi">reduction_block</span>);</td>
      </tr>
      <tr>
        <td id="L3189" class="blob-num js-line-number" data-line-number="3189"></td>
        <td id="LC3189" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">relu</span>(<span class="pl-en">depthwiseSeparableConv$1</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">exit_flow</span>.<span class="pl-smi">separable_conv</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]));</td>
      </tr>
      <tr>
        <td id="L3190" class="blob-num js-line-number" data-line-number="3190"></td>
        <td id="LC3190" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L3191" class="blob-num js-line-number" data-line-number="3191"></td>
        <td id="LC3191" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3192" class="blob-num js-line-number" data-line-number="3192"></td>
        <td id="LC3192" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3193" class="blob-num js-line-number" data-line-number="3193"></td>
        <td id="LC3193" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyXception</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3194" class="blob-num js-line-number" data-line-number="3194"></td>
        <td id="LC3194" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3195" class="blob-num js-line-number" data-line-number="3195"></td>
        <td id="LC3195" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L3196" class="blob-num js-line-number" data-line-number="3196"></td>
        <td id="LC3196" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L3197" class="blob-num js-line-number" data-line-number="3197"></td>
        <td id="LC3197" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L3198" class="blob-num js-line-number" data-line-number="3198"></td>
        <td id="LC3198" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L3199" class="blob-num js-line-number" data-line-number="3199"></td>
        <td id="LC3199" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L3200" class="blob-num js-line-number" data-line-number="3200"></td>
        <td id="LC3200" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L3201" class="blob-num js-line-number" data-line-number="3201"></td>
        <td id="LC3201" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()])];</td>
      </tr>
      <tr>
        <td id="L3202" class="blob-num js-line-number" data-line-number="3202"></td>
        <td id="LC3202" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3203" class="blob-num js-line-number" data-line-number="3203"></td>
        <td id="LC3203" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L3204" class="blob-num js-line-number" data-line-number="3204"></td>
        <td id="LC3204" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3205" class="blob-num js-line-number" data-line-number="3205"></td>
        <td id="LC3205" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3206" class="blob-num js-line-number" data-line-number="3206"></td>
        <td id="LC3206" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyXception</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3207" class="blob-num js-line-number" data-line-number="3207"></td>
        <td id="LC3207" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>tiny_xception_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3208" class="blob-num js-line-number" data-line-number="3208"></td>
        <td id="LC3208" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3209" class="blob-num js-line-number" data-line-number="3209"></td>
        <td id="LC3209" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyXception</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L3210" class="blob-num js-line-number" data-line-number="3210"></td>
        <td id="LC3210" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsFromWeigthMap$3</span>(weightMap, <span class="pl-c1">this</span>.<span class="pl-smi">_numMainBlocks</span>);</td>
      </tr>
      <tr>
        <td id="L3211" class="blob-num js-line-number" data-line-number="3211"></td>
        <td id="LC3211" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3212" class="blob-num js-line-number" data-line-number="3212"></td>
        <td id="LC3212" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyXception</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L3213" class="blob-num js-line-number" data-line-number="3213"></td>
        <td id="LC3213" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParams$3</span>(weights, <span class="pl-c1">this</span>.<span class="pl-smi">_numMainBlocks</span>);</td>
      </tr>
      <tr>
        <td id="L3214" class="blob-num js-line-number" data-line-number="3214"></td>
        <td id="LC3214" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3215" class="blob-num js-line-number" data-line-number="3215"></td>
        <td id="LC3215" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> TinyXception;</td>
      </tr>
      <tr>
        <td id="L3216" class="blob-num js-line-number" data-line-number="3216"></td>
        <td id="LC3216" class="blob-code blob-code-inner js-file-line">    }(NeuralNetwork));</td>
      </tr>
      <tr>
        <td id="L3217" class="blob-num js-line-number" data-line-number="3217"></td>
        <td id="LC3217" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3218" class="blob-num js-line-number" data-line-number="3218"></td>
        <td id="LC3218" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParams$4</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L3219" class="blob-num js-line-number" data-line-number="3219"></td>
        <td id="LC3219" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3220" class="blob-num js-line-number" data-line-number="3220"></td>
        <td id="LC3220" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractWeightsFactory</span>(weights), extractWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractWeights</span>, getRemainingWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">getRemainingWeights</span>;</td>
      </tr>
      <tr>
        <td id="L3221" class="blob-num js-line-number" data-line-number="3221"></td>
        <td id="LC3221" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractFCParams <span class="pl-k">=</span> <span class="pl-en">extractFCParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3222" class="blob-num js-line-number" data-line-number="3222"></td>
        <td id="LC3222" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> age <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>fc/age<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3223" class="blob-num js-line-number" data-line-number="3223"></td>
        <td id="LC3223" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> gender <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>fc/gender<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3224" class="blob-num js-line-number" data-line-number="3224"></td>
        <td id="LC3224" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3225" class="blob-num js-line-number" data-line-number="3225"></td>
        <td id="LC3225" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>weights remaing after extract: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L3226" class="blob-num js-line-number" data-line-number="3226"></td>
        <td id="LC3226" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3227" class="blob-num js-line-number" data-line-number="3227"></td>
        <td id="LC3227" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3228" class="blob-num js-line-number" data-line-number="3228"></td>
        <td id="LC3228" class="blob-code blob-code-inner js-file-line">            paramMappings<span class="pl-k">:</span> paramMappings,</td>
      </tr>
      <tr>
        <td id="L3229" class="blob-num js-line-number" data-line-number="3229"></td>
        <td id="LC3229" class="blob-code blob-code-inner js-file-line">            params<span class="pl-k">:</span> { fc<span class="pl-k">:</span> { age<span class="pl-k">:</span> age, gender<span class="pl-k">:</span> gender } }</td>
      </tr>
      <tr>
        <td id="L3230" class="blob-num js-line-number" data-line-number="3230"></td>
        <td id="LC3230" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3231" class="blob-num js-line-number" data-line-number="3231"></td>
        <td id="LC3231" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3232" class="blob-num js-line-number" data-line-number="3232"></td>
        <td id="LC3232" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3233" class="blob-num js-line-number" data-line-number="3233"></td>
        <td id="LC3233" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsFromWeigthMap$4</span>(<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L3234" class="blob-num js-line-number" data-line-number="3234"></td>
        <td id="LC3234" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3235" class="blob-num js-line-number" data-line-number="3235"></td>
        <td id="LC3235" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractWeightEntry <span class="pl-k">=</span> <span class="pl-en">extractWeightEntryFactory</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3236" class="blob-num js-line-number" data-line-number="3236"></td>
        <td id="LC3236" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractFcParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3237" class="blob-num js-line-number" data-line-number="3237"></td>
        <td id="LC3237" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> weights <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/weights<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L3238" class="blob-num js-line-number" data-line-number="3238"></td>
        <td id="LC3238" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3239" class="blob-num js-line-number" data-line-number="3239"></td>
        <td id="LC3239" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { weights<span class="pl-k">:</span> weights, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L3240" class="blob-num js-line-number" data-line-number="3240"></td>
        <td id="LC3240" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3241" class="blob-num js-line-number" data-line-number="3241"></td>
        <td id="LC3241" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> params <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3242" class="blob-num js-line-number" data-line-number="3242"></td>
        <td id="LC3242" class="blob-code blob-code-inner js-file-line">            fc<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L3243" class="blob-num js-line-number" data-line-number="3243"></td>
        <td id="LC3243" class="blob-code blob-code-inner js-file-line">                age<span class="pl-k">:</span> <span class="pl-en">extractFcParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>fc/age<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3244" class="blob-num js-line-number" data-line-number="3244"></td>
        <td id="LC3244" class="blob-code blob-code-inner js-file-line">                gender<span class="pl-k">:</span> <span class="pl-en">extractFcParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>fc/gender<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L3245" class="blob-num js-line-number" data-line-number="3245"></td>
        <td id="LC3245" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3246" class="blob-num js-line-number" data-line-number="3246"></td>
        <td id="LC3246" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3247" class="blob-num js-line-number" data-line-number="3247"></td>
        <td id="LC3247" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">disposeUnusedWeightTensors</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3248" class="blob-num js-line-number" data-line-number="3248"></td>
        <td id="LC3248" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> params, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L3249" class="blob-num js-line-number" data-line-number="3249"></td>
        <td id="LC3249" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3250" class="blob-num js-line-number" data-line-number="3250"></td>
        <td id="LC3250" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3251" class="blob-num js-line-number" data-line-number="3251"></td>
        <td id="LC3251" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span> (<span class="pl-smi">Gender</span>) {</td>
      </tr>
      <tr>
        <td id="L3252" class="blob-num js-line-number" data-line-number="3252"></td>
        <td id="LC3252" class="blob-code blob-code-inner js-file-line">        Gender[<span class="pl-s"><span class="pl-pds">&quot;</span>FEMALE<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>female<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3253" class="blob-num js-line-number" data-line-number="3253"></td>
        <td id="LC3253" class="blob-code blob-code-inner js-file-line">        Gender[<span class="pl-s"><span class="pl-pds">&quot;</span>MALE<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>male<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3254" class="blob-num js-line-number" data-line-number="3254"></td>
        <td id="LC3254" class="blob-code blob-code-inner js-file-line">    })(<span class="pl-c1">exports</span>.<span class="pl-smi">Gender</span> <span class="pl-k">||</span> (<span class="pl-c1">exports</span>.<span class="pl-smi">Gender</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L3255" class="blob-num js-line-number" data-line-number="3255"></td>
        <td id="LC3255" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3256" class="blob-num js-line-number" data-line-number="3256"></td>
        <td id="LC3256" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> AgeGenderNet <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L3257" class="blob-num js-line-number" data-line-number="3257"></td>
        <td id="LC3257" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(AgeGenderNet, _super);</td>
      </tr>
      <tr>
        <td id="L3258" class="blob-num js-line-number" data-line-number="3258"></td>
        <td id="LC3258" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">AgeGenderNet</span>(<span class="pl-smi">faceFeatureExtractor</span>) {</td>
      </tr>
      <tr>
        <td id="L3259" class="blob-num js-line-number" data-line-number="3259"></td>
        <td id="LC3259" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (faceFeatureExtractor <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { faceFeatureExtractor <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">TinyXception</span>(<span class="pl-c1">2</span>); }</td>
      </tr>
      <tr>
        <td id="L3260" class="blob-num js-line-number" data-line-number="3260"></td>
        <td id="LC3260" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>AgeGenderNet<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3261" class="blob-num js-line-number" data-line-number="3261"></td>
        <td id="LC3261" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">_faceFeatureExtractor</span> <span class="pl-k">=</span> faceFeatureExtractor;</td>
      </tr>
      <tr>
        <td id="L3262" class="blob-num js-line-number" data-line-number="3262"></td>
        <td id="LC3262" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L3263" class="blob-num js-line-number" data-line-number="3263"></td>
        <td id="LC3263" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3264" class="blob-num js-line-number" data-line-number="3264"></td>
        <td id="LC3264" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>faceFeatureExtractor<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3265" class="blob-num js-line-number" data-line-number="3265"></td>
        <td id="LC3265" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3266" class="blob-num js-line-number" data-line-number="3266"></td>
        <td id="LC3266" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_faceFeatureExtractor</span>;</td>
      </tr>
      <tr>
        <td id="L3267" class="blob-num js-line-number" data-line-number="3267"></td>
        <td id="LC3267" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L3268" class="blob-num js-line-number" data-line-number="3268"></td>
        <td id="LC3268" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L3269" class="blob-num js-line-number" data-line-number="3269"></td>
        <td id="LC3269" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L3270" class="blob-num js-line-number" data-line-number="3270"></td>
        <td id="LC3270" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3271" class="blob-num js-line-number" data-line-number="3271"></td>
        <td id="LC3271" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">runNet</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3272" class="blob-num js-line-number" data-line-number="3272"></td>
        <td id="LC3272" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3273" class="blob-num js-line-number" data-line-number="3273"></td>
        <td id="LC3273" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> params <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L3274" class="blob-num js-line-number" data-line-number="3274"></td>
        <td id="LC3274" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>params) {</td>
      </tr>
      <tr>
        <td id="L3275" class="blob-num js-line-number" data-line-number="3275"></td>
        <td id="LC3275" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - load model before inference<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3276" class="blob-num js-line-number" data-line-number="3276"></td>
        <td id="LC3276" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3277" class="blob-num js-line-number" data-line-number="3277"></td>
        <td id="LC3277" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3278" class="blob-num js-line-number" data-line-number="3278"></td>
        <td id="LC3278" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> bottleneckFeatures <span class="pl-k">=</span> input <span class="pl-k">instanceof</span> NetInput</td>
      </tr>
      <tr>
        <td id="L3279" class="blob-num js-line-number" data-line-number="3279"></td>
        <td id="LC3279" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">?</span> <span class="pl-smi">_this</span>.<span class="pl-smi">faceFeatureExtractor</span>.<span class="pl-en">forwardInput</span>(input)</td>
      </tr>
      <tr>
        <td id="L3280" class="blob-num js-line-number" data-line-number="3280"></td>
        <td id="LC3280" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">:</span> input;</td>
      </tr>
      <tr>
        <td id="L3281" class="blob-num js-line-number" data-line-number="3281"></td>
        <td id="LC3281" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> pooled <span class="pl-k">=</span> <span class="pl-en">avgPool</span>(bottleneckFeatures, [<span class="pl-c1">7</span>, <span class="pl-c1">7</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>).<span class="pl-en">as2D</span>(<span class="pl-smi">bottleneckFeatures</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>], <span class="pl-k">-</span><span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3282" class="blob-num js-line-number" data-line-number="3282"></td>
        <td id="LC3282" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> age <span class="pl-k">=</span> <span class="pl-en">fullyConnectedLayer</span>(pooled, <span class="pl-smi">params</span>.<span class="pl-smi">fc</span>.<span class="pl-smi">age</span>).<span class="pl-en">as1D</span>();</td>
      </tr>
      <tr>
        <td id="L3283" class="blob-num js-line-number" data-line-number="3283"></td>
        <td id="LC3283" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> gender <span class="pl-k">=</span> <span class="pl-en">fullyConnectedLayer</span>(pooled, <span class="pl-smi">params</span>.<span class="pl-smi">fc</span>.<span class="pl-smi">gender</span>);</td>
      </tr>
      <tr>
        <td id="L3284" class="blob-num js-line-number" data-line-number="3284"></td>
        <td id="LC3284" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> { age<span class="pl-k">:</span> age, gender<span class="pl-k">:</span> gender };</td>
      </tr>
      <tr>
        <td id="L3285" class="blob-num js-line-number" data-line-number="3285"></td>
        <td id="LC3285" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3286" class="blob-num js-line-number" data-line-number="3286"></td>
        <td id="LC3286" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3287" class="blob-num js-line-number" data-line-number="3287"></td>
        <td id="LC3287" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3288" class="blob-num js-line-number" data-line-number="3288"></td>
        <td id="LC3288" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3289" class="blob-num js-line-number" data-line-number="3289"></td>
        <td id="LC3289" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3290" class="blob-num js-line-number" data-line-number="3290"></td>
        <td id="LC3290" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">_this</span>.<span class="pl-en">runNet</span>(input), age <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">age</span>, gender <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">gender</span>;</td>
      </tr>
      <tr>
        <td id="L3291" class="blob-num js-line-number" data-line-number="3291"></td>
        <td id="LC3291" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> { age<span class="pl-k">:</span> age, gender<span class="pl-k">:</span> <span class="pl-en">softmax</span>(gender) };</td>
      </tr>
      <tr>
        <td id="L3292" class="blob-num js-line-number" data-line-number="3292"></td>
        <td id="LC3292" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3293" class="blob-num js-line-number" data-line-number="3293"></td>
        <td id="LC3293" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3294" class="blob-num js-line-number" data-line-number="3294"></td>
        <td id="LC3294" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3295" class="blob-num js-line-number" data-line-number="3295"></td>
        <td id="LC3295" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3296" class="blob-num js-line-number" data-line-number="3296"></td>
        <td id="LC3296" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L3297" class="blob-num js-line-number" data-line-number="3297"></td>
        <td id="LC3297" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L3298" class="blob-num js-line-number" data-line-number="3298"></td>
        <td id="LC3298" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L3299" class="blob-num js-line-number" data-line-number="3299"></td>
        <td id="LC3299" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L3300" class="blob-num js-line-number" data-line-number="3300"></td>
        <td id="LC3300" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L3301" class="blob-num js-line-number" data-line-number="3301"></td>
        <td id="LC3301" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L3302" class="blob-num js-line-number" data-line-number="3302"></td>
        <td id="LC3302" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()])];</td>
      </tr>
      <tr>
        <td id="L3303" class="blob-num js-line-number" data-line-number="3303"></td>
        <td id="LC3303" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3304" class="blob-num js-line-number" data-line-number="3304"></td>
        <td id="LC3304" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L3305" class="blob-num js-line-number" data-line-number="3305"></td>
        <td id="LC3305" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3306" class="blob-num js-line-number" data-line-number="3306"></td>
        <td id="LC3306" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3307" class="blob-num js-line-number" data-line-number="3307"></td>
        <td id="LC3307" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">predictAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3308" class="blob-num js-line-number" data-line-number="3308"></td>
        <td id="LC3308" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3309" class="blob-num js-line-number" data-line-number="3309"></td>
        <td id="LC3309" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> netInput, out, ages, genders, ageAndGenderTensors, predictionsByBatch;</td>
      </tr>
      <tr>
        <td id="L3310" class="blob-num js-line-number" data-line-number="3310"></td>
        <td id="LC3310" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3311" class="blob-num js-line-number" data-line-number="3311"></td>
        <td id="LC3311" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L3312" class="blob-num js-line-number" data-line-number="3312"></td>
        <td id="LC3312" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L3313" class="blob-num js-line-number" data-line-number="3313"></td>
        <td id="LC3313" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L3314" class="blob-num js-line-number" data-line-number="3314"></td>
        <td id="LC3314" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L3315" class="blob-num js-line-number" data-line-number="3315"></td>
        <td id="LC3315" class="blob-code blob-code-inner js-file-line">                            netInput <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L3316" class="blob-num js-line-number" data-line-number="3316"></td>
        <td id="LC3316" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">forwardInput</span>(netInput)];</td>
      </tr>
      <tr>
        <td id="L3317" class="blob-num js-line-number" data-line-number="3317"></td>
        <td id="LC3317" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L3318" class="blob-num js-line-number" data-line-number="3318"></td>
        <td id="LC3318" class="blob-code blob-code-inner js-file-line">                            out <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L3319" class="blob-num js-line-number" data-line-number="3319"></td>
        <td id="LC3319" class="blob-code blob-code-inner js-file-line">                            ages <span class="pl-k">=</span> <span class="pl-en">unstack</span>(<span class="pl-smi">out</span>.<span class="pl-smi">age</span>);</td>
      </tr>
      <tr>
        <td id="L3320" class="blob-num js-line-number" data-line-number="3320"></td>
        <td id="LC3320" class="blob-code blob-code-inner js-file-line">                            genders <span class="pl-k">=</span> <span class="pl-en">unstack</span>(<span class="pl-smi">out</span>.<span class="pl-smi">gender</span>);</td>
      </tr>
      <tr>
        <td id="L3321" class="blob-num js-line-number" data-line-number="3321"></td>
        <td id="LC3321" class="blob-code blob-code-inner js-file-line">                            ageAndGenderTensors <span class="pl-k">=</span> <span class="pl-smi">ages</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">ageTensor</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> ({</td>
      </tr>
      <tr>
        <td id="L3322" class="blob-num js-line-number" data-line-number="3322"></td>
        <td id="LC3322" class="blob-code blob-code-inner js-file-line">                                ageTensor<span class="pl-k">:</span> ageTensor,</td>
      </tr>
      <tr>
        <td id="L3323" class="blob-num js-line-number" data-line-number="3323"></td>
        <td id="LC3323" class="blob-code blob-code-inner js-file-line">                                genderTensor<span class="pl-k">:</span> genders[i]</td>
      </tr>
      <tr>
        <td id="L3324" class="blob-num js-line-number" data-line-number="3324"></td>
        <td id="LC3324" class="blob-code blob-code-inner js-file-line">                            }); });</td>
      </tr>
      <tr>
        <td id="L3325" class="blob-num js-line-number" data-line-number="3325"></td>
        <td id="LC3325" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">ageAndGenderTensors</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L3326" class="blob-num js-line-number" data-line-number="3326"></td>
        <td id="LC3326" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">var</span> ageTensor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">ageTensor</span>, genderTensor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">genderTensor</span>;</td>
      </tr>
      <tr>
        <td id="L3327" class="blob-num js-line-number" data-line-number="3327"></td>
        <td id="LC3327" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(_this, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3328" class="blob-num js-line-number" data-line-number="3328"></td>
        <td id="LC3328" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">var</span> age, probMale, isMale, gender, genderProbability;</td>
      </tr>
      <tr>
        <td id="L3329" class="blob-num js-line-number" data-line-number="3329"></td>
        <td id="LC3329" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L3330" class="blob-num js-line-number" data-line-number="3330"></td>
        <td id="LC3330" class="blob-code blob-code-inner js-file-line">                                            <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L3331" class="blob-num js-line-number" data-line-number="3331"></td>
        <td id="LC3331" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">ageTensor</span>.<span class="pl-c1">data</span>()];</td>
      </tr>
      <tr>
        <td id="L3332" class="blob-num js-line-number" data-line-number="3332"></td>
        <td id="LC3332" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L3333" class="blob-num js-line-number" data-line-number="3333"></td>
        <td id="LC3333" class="blob-code blob-code-inner js-file-line">                                                    age <span class="pl-k">=</span> (<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>())[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3334" class="blob-num js-line-number" data-line-number="3334"></td>
        <td id="LC3334" class="blob-code blob-code-inner js-file-line">                                                    <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">genderTensor</span>.<span class="pl-c1">data</span>()];</td>
      </tr>
      <tr>
        <td id="L3335" class="blob-num js-line-number" data-line-number="3335"></td>
        <td id="LC3335" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L3336" class="blob-num js-line-number" data-line-number="3336"></td>
        <td id="LC3336" class="blob-code blob-code-inner js-file-line">                                                    probMale <span class="pl-k">=</span> (<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>())[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3337" class="blob-num js-line-number" data-line-number="3337"></td>
        <td id="LC3337" class="blob-code blob-code-inner js-file-line">                                                    isMale <span class="pl-k">=</span> probMale <span class="pl-k">&gt;</span> <span class="pl-c1">0.5</span>;</td>
      </tr>
      <tr>
        <td id="L3338" class="blob-num js-line-number" data-line-number="3338"></td>
        <td id="LC3338" class="blob-code blob-code-inner js-file-line">                                                    gender <span class="pl-k">=</span> isMale <span class="pl-k">?</span> <span class="pl-c1">exports</span>.<span class="pl-smi">Gender</span>.<span class="pl-c1">MALE</span> <span class="pl-k">:</span> <span class="pl-c1">exports</span>.<span class="pl-smi">Gender</span>.<span class="pl-c1">FEMALE</span>;</td>
      </tr>
      <tr>
        <td id="L3339" class="blob-num js-line-number" data-line-number="3339"></td>
        <td id="LC3339" class="blob-code blob-code-inner js-file-line">                                                    genderProbability <span class="pl-k">=</span> isMale <span class="pl-k">?</span> probMale <span class="pl-k">:</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> probMale);</td>
      </tr>
      <tr>
        <td id="L3340" class="blob-num js-line-number" data-line-number="3340"></td>
        <td id="LC3340" class="blob-code blob-code-inner js-file-line">                                                    <span class="pl-smi">ageTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L3341" class="blob-num js-line-number" data-line-number="3341"></td>
        <td id="LC3341" class="blob-code blob-code-inner js-file-line">                                                    <span class="pl-smi">genderTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L3342" class="blob-num js-line-number" data-line-number="3342"></td>
        <td id="LC3342" class="blob-code blob-code-inner js-file-line">                                                    <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, { age<span class="pl-k">:</span> age, gender<span class="pl-k">:</span> gender, genderProbability<span class="pl-k">:</span> genderProbability }];</td>
      </tr>
      <tr>
        <td id="L3343" class="blob-num js-line-number" data-line-number="3343"></td>
        <td id="LC3343" class="blob-code blob-code-inner js-file-line">                                            }</td>
      </tr>
      <tr>
        <td id="L3344" class="blob-num js-line-number" data-line-number="3344"></td>
        <td id="LC3344" class="blob-code blob-code-inner js-file-line">                                        });</td>
      </tr>
      <tr>
        <td id="L3345" class="blob-num js-line-number" data-line-number="3345"></td>
        <td id="LC3345" class="blob-code blob-code-inner js-file-line">                                    });</td>
      </tr>
      <tr>
        <td id="L3346" class="blob-num js-line-number" data-line-number="3346"></td>
        <td id="LC3346" class="blob-code blob-code-inner js-file-line">                                }))];</td>
      </tr>
      <tr>
        <td id="L3347" class="blob-num js-line-number" data-line-number="3347"></td>
        <td id="LC3347" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">3</span>:</td>
      </tr>
      <tr>
        <td id="L3348" class="blob-num js-line-number" data-line-number="3348"></td>
        <td id="LC3348" class="blob-code blob-code-inner js-file-line">                            predictionsByBatch <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L3349" class="blob-num js-line-number" data-line-number="3349"></td>
        <td id="LC3349" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">out</span>.<span class="pl-smi">age</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L3350" class="blob-num js-line-number" data-line-number="3350"></td>
        <td id="LC3350" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">out</span>.<span class="pl-smi">gender</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L3351" class="blob-num js-line-number" data-line-number="3351"></td>
        <td id="LC3351" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">netInput</span>.<span class="pl-smi">isBatchInput</span></td>
      </tr>
      <tr>
        <td id="L3352" class="blob-num js-line-number" data-line-number="3352"></td>
        <td id="LC3352" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">?</span> predictionsByBatch</td>
      </tr>
      <tr>
        <td id="L3353" class="blob-num js-line-number" data-line-number="3353"></td>
        <td id="LC3353" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">:</span> predictionsByBatch[<span class="pl-c1">0</span>]];</td>
      </tr>
      <tr>
        <td id="L3354" class="blob-num js-line-number" data-line-number="3354"></td>
        <td id="LC3354" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3355" class="blob-num js-line-number" data-line-number="3355"></td>
        <td id="LC3355" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L3356" class="blob-num js-line-number" data-line-number="3356"></td>
        <td id="LC3356" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3357" class="blob-num js-line-number" data-line-number="3357"></td>
        <td id="LC3357" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3358" class="blob-num js-line-number" data-line-number="3358"></td>
        <td id="LC3358" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3359" class="blob-num js-line-number" data-line-number="3359"></td>
        <td id="LC3359" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>age_gender_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3360" class="blob-num js-line-number" data-line-number="3360"></td>
        <td id="LC3360" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3361" class="blob-num js-line-number" data-line-number="3361"></td>
        <td id="LC3361" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">dispose</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">throwOnRedispose</span>) {</td>
      </tr>
      <tr>
        <td id="L3362" class="blob-num js-line-number" data-line-number="3362"></td>
        <td id="LC3362" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (throwOnRedispose <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { throwOnRedispose <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L3363" class="blob-num js-line-number" data-line-number="3363"></td>
        <td id="LC3363" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">faceFeatureExtractor</span>.<span class="pl-en">dispose</span>(throwOnRedispose);</td>
      </tr>
      <tr>
        <td id="L3364" class="blob-num js-line-number" data-line-number="3364"></td>
        <td id="LC3364" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_super</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">dispose</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, throwOnRedispose);</td>
      </tr>
      <tr>
        <td id="L3365" class="blob-num js-line-number" data-line-number="3365"></td>
        <td id="LC3365" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3366" class="blob-num js-line-number" data-line-number="3366"></td>
        <td id="LC3366" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">loadClassifierParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L3367" class="blob-num js-line-number" data-line-number="3367"></td>
        <td id="LC3367" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">extractClassifierParams</span>(weights), params <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">params</span>, paramMappings <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">paramMappings</span>;</td>
      </tr>
      <tr>
        <td id="L3368" class="blob-num js-line-number" data-line-number="3368"></td>
        <td id="LC3368" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_params</span> <span class="pl-k">=</span> params;</td>
      </tr>
      <tr>
        <td id="L3369" class="blob-num js-line-number" data-line-number="3369"></td>
        <td id="LC3369" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_paramMappings</span> <span class="pl-k">=</span> paramMappings;</td>
      </tr>
      <tr>
        <td id="L3370" class="blob-num js-line-number" data-line-number="3370"></td>
        <td id="LC3370" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3371" class="blob-num js-line-number" data-line-number="3371"></td>
        <td id="LC3371" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractClassifierParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L3372" class="blob-num js-line-number" data-line-number="3372"></td>
        <td id="LC3372" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParams$4</span>(weights);</td>
      </tr>
      <tr>
        <td id="L3373" class="blob-num js-line-number" data-line-number="3373"></td>
        <td id="LC3373" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3374" class="blob-num js-line-number" data-line-number="3374"></td>
        <td id="LC3374" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L3375" class="blob-num js-line-number" data-line-number="3375"></td>
        <td id="LC3375" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">seperateWeightMaps</span>(weightMap), featureExtractorMap <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">featureExtractorMap</span>, classifierMap <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">classifierMap</span>;</td>
      </tr>
      <tr>
        <td id="L3376" class="blob-num js-line-number" data-line-number="3376"></td>
        <td id="LC3376" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">faceFeatureExtractor</span>.<span class="pl-en">loadFromWeightMap</span>(featureExtractorMap);</td>
      </tr>
      <tr>
        <td id="L3377" class="blob-num js-line-number" data-line-number="3377"></td>
        <td id="LC3377" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsFromWeigthMap$4</span>(classifierMap);</td>
      </tr>
      <tr>
        <td id="L3378" class="blob-num js-line-number" data-line-number="3378"></td>
        <td id="LC3378" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3379" class="blob-num js-line-number" data-line-number="3379"></td>
        <td id="LC3379" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">AgeGenderNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L3380" class="blob-num js-line-number" data-line-number="3380"></td>
        <td id="LC3380" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> classifierWeightSize <span class="pl-k">=</span> (<span class="pl-c1">512</span> <span class="pl-k">*</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">+</span> (<span class="pl-c1">512</span> <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L3381" class="blob-num js-line-number" data-line-number="3381"></td>
        <td id="LC3381" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> featureExtractorWeights <span class="pl-k">=</span> <span class="pl-smi">weights</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, <span class="pl-smi">weights</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> classifierWeightSize);</td>
      </tr>
      <tr>
        <td id="L3382" class="blob-num js-line-number" data-line-number="3382"></td>
        <td id="LC3382" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> classifierWeights <span class="pl-k">=</span> <span class="pl-smi">weights</span>.<span class="pl-c1">slice</span>(<span class="pl-smi">weights</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> classifierWeightSize);</td>
      </tr>
      <tr>
        <td id="L3383" class="blob-num js-line-number" data-line-number="3383"></td>
        <td id="LC3383" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">faceFeatureExtractor</span>.<span class="pl-en">extractWeights</span>(featureExtractorWeights);</td>
      </tr>
      <tr>
        <td id="L3384" class="blob-num js-line-number" data-line-number="3384"></td>
        <td id="LC3384" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">extractClassifierParams</span>(classifierWeights);</td>
      </tr>
      <tr>
        <td id="L3385" class="blob-num js-line-number" data-line-number="3385"></td>
        <td id="LC3385" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3386" class="blob-num js-line-number" data-line-number="3386"></td>
        <td id="LC3386" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> AgeGenderNet;</td>
      </tr>
      <tr>
        <td id="L3387" class="blob-num js-line-number" data-line-number="3387"></td>
        <td id="LC3387" class="blob-code blob-code-inner js-file-line">    }(NeuralNetwork));</td>
      </tr>
      <tr>
        <td id="L3388" class="blob-num js-line-number" data-line-number="3388"></td>
        <td id="LC3388" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3389" class="blob-num js-line-number" data-line-number="3389"></td>
        <td id="LC3389" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceLandmarks5 <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L3390" class="blob-num js-line-number" data-line-number="3390"></td>
        <td id="LC3390" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceLandmarks5, _super);</td>
      </tr>
      <tr>
        <td id="L3391" class="blob-num js-line-number" data-line-number="3391"></td>
        <td id="LC3391" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceLandmarks5</span>() {</td>
      </tr>
      <tr>
        <td id="L3392" class="blob-num js-line-number" data-line-number="3392"></td>
        <td id="LC3392" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3393" class="blob-num js-line-number" data-line-number="3393"></td>
        <td id="LC3393" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3394" class="blob-num js-line-number" data-line-number="3394"></td>
        <td id="LC3394" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmarks5</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRefPointsForAlignment</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3395" class="blob-num js-line-number" data-line-number="3395"></td>
        <td id="LC3395" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> pts <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">positions</span>;</td>
      </tr>
      <tr>
        <td id="L3396" class="blob-num js-line-number" data-line-number="3396"></td>
        <td id="LC3396" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> [</td>
      </tr>
      <tr>
        <td id="L3397" class="blob-num js-line-number" data-line-number="3397"></td>
        <td id="LC3397" class="blob-code blob-code-inner js-file-line">                pts[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L3398" class="blob-num js-line-number" data-line-number="3398"></td>
        <td id="LC3398" class="blob-code blob-code-inner js-file-line">                pts[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L3399" class="blob-num js-line-number" data-line-number="3399"></td>
        <td id="LC3399" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">getCenterPoint</span>([pts[<span class="pl-c1">3</span>], pts[<span class="pl-c1">4</span>]])</td>
      </tr>
      <tr>
        <td id="L3400" class="blob-num js-line-number" data-line-number="3400"></td>
        <td id="LC3400" class="blob-code blob-code-inner js-file-line">            ];</td>
      </tr>
      <tr>
        <td id="L3401" class="blob-num js-line-number" data-line-number="3401"></td>
        <td id="LC3401" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3402" class="blob-num js-line-number" data-line-number="3402"></td>
        <td id="LC3402" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceLandmarks5;</td>
      </tr>
      <tr>
        <td id="L3403" class="blob-num js-line-number" data-line-number="3403"></td>
        <td id="LC3403" class="blob-code blob-code-inner js-file-line">    }(FaceLandmarks));</td>
      </tr>
      <tr>
        <td id="L3404" class="blob-num js-line-number" data-line-number="3404"></td>
        <td id="LC3404" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3405" class="blob-num js-line-number" data-line-number="3405"></td>
        <td id="LC3405" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceMatch <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3406" class="blob-num js-line-number" data-line-number="3406"></td>
        <td id="LC3406" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceMatch</span>(<span class="pl-smi">label</span>, <span class="pl-smi">distance</span>) {</td>
      </tr>
      <tr>
        <td id="L3407" class="blob-num js-line-number" data-line-number="3407"></td>
        <td id="LC3407" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_label</span> <span class="pl-k">=</span> label;</td>
      </tr>
      <tr>
        <td id="L3408" class="blob-num js-line-number" data-line-number="3408"></td>
        <td id="LC3408" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_distance</span> <span class="pl-k">=</span> distance;</td>
      </tr>
      <tr>
        <td id="L3409" class="blob-num js-line-number" data-line-number="3409"></td>
        <td id="LC3409" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3410" class="blob-num js-line-number" data-line-number="3410"></td>
        <td id="LC3410" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceMatch</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>label<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3411" class="blob-num js-line-number" data-line-number="3411"></td>
        <td id="LC3411" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_label</span>; },</td>
      </tr>
      <tr>
        <td id="L3412" class="blob-num js-line-number" data-line-number="3412"></td>
        <td id="LC3412" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L3413" class="blob-num js-line-number" data-line-number="3413"></td>
        <td id="LC3413" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L3414" class="blob-num js-line-number" data-line-number="3414"></td>
        <td id="LC3414" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3415" class="blob-num js-line-number" data-line-number="3415"></td>
        <td id="LC3415" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceMatch</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>distance<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3416" class="blob-num js-line-number" data-line-number="3416"></td>
        <td id="LC3416" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_distance</span>; },</td>
      </tr>
      <tr>
        <td id="L3417" class="blob-num js-line-number" data-line-number="3417"></td>
        <td id="LC3417" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L3418" class="blob-num js-line-number" data-line-number="3418"></td>
        <td id="LC3418" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L3419" class="blob-num js-line-number" data-line-number="3419"></td>
        <td id="LC3419" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3420" class="blob-num js-line-number" data-line-number="3420"></td>
        <td id="LC3420" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceMatch</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">withDistance</span>) {</td>
      </tr>
      <tr>
        <td id="L3421" class="blob-num js-line-number" data-line-number="3421"></td>
        <td id="LC3421" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (withDistance <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { withDistance <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L3422" class="blob-num js-line-number" data-line-number="3422"></td>
        <td id="LC3422" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">this</span>.<span class="pl-c1">label</span> <span class="pl-k">+</span> (withDistance <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span> (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">round$1</span>(<span class="pl-c1">this</span>.<span class="pl-smi">distance</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3423" class="blob-num js-line-number" data-line-number="3423"></td>
        <td id="LC3423" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3424" class="blob-num js-line-number" data-line-number="3424"></td>
        <td id="LC3424" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceMatch;</td>
      </tr>
      <tr>
        <td id="L3425" class="blob-num js-line-number" data-line-number="3425"></td>
        <td id="LC3425" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L3426" class="blob-num js-line-number" data-line-number="3426"></td>
        <td id="LC3426" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3427" class="blob-num js-line-number" data-line-number="3427"></td>
        <td id="LC3427" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> LabeledFaceDescriptors <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3428" class="blob-num js-line-number" data-line-number="3428"></td>
        <td id="LC3428" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">LabeledFaceDescriptors</span>(<span class="pl-smi">label</span>, <span class="pl-smi">descriptors</span>) {</td>
      </tr>
      <tr>
        <td id="L3429" class="blob-num js-line-number" data-line-number="3429"></td>
        <td id="LC3429" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-k">typeof</span> label <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L3430" class="blob-num js-line-number" data-line-number="3430"></td>
        <td id="LC3430" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>LabeledFaceDescriptors - constructor expected label to be a string<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3431" class="blob-num js-line-number" data-line-number="3431"></td>
        <td id="LC3431" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3432" class="blob-num js-line-number" data-line-number="3432"></td>
        <td id="LC3432" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(descriptors) <span class="pl-k">||</span> <span class="pl-smi">descriptors</span>.<span class="pl-en">some</span>(<span class="pl-k">function</span> (<span class="pl-smi">desc</span>) { <span class="pl-k">return</span> <span class="pl-k">!</span>(desc <span class="pl-k">instanceof</span> <span class="pl-c1">Float32Array</span>); })) {</td>
      </tr>
      <tr>
        <td id="L3433" class="blob-num js-line-number" data-line-number="3433"></td>
        <td id="LC3433" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3434" class="blob-num js-line-number" data-line-number="3434"></td>
        <td id="LC3434" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3435" class="blob-num js-line-number" data-line-number="3435"></td>
        <td id="LC3435" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_label</span> <span class="pl-k">=</span> label;</td>
      </tr>
      <tr>
        <td id="L3436" class="blob-num js-line-number" data-line-number="3436"></td>
        <td id="LC3436" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_descriptors</span> <span class="pl-k">=</span> descriptors;</td>
      </tr>
      <tr>
        <td id="L3437" class="blob-num js-line-number" data-line-number="3437"></td>
        <td id="LC3437" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3438" class="blob-num js-line-number" data-line-number="3438"></td>
        <td id="LC3438" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">LabeledFaceDescriptors</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>label<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3439" class="blob-num js-line-number" data-line-number="3439"></td>
        <td id="LC3439" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_label</span>; },</td>
      </tr>
      <tr>
        <td id="L3440" class="blob-num js-line-number" data-line-number="3440"></td>
        <td id="LC3440" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L3441" class="blob-num js-line-number" data-line-number="3441"></td>
        <td id="LC3441" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L3442" class="blob-num js-line-number" data-line-number="3442"></td>
        <td id="LC3442" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3443" class="blob-num js-line-number" data-line-number="3443"></td>
        <td id="LC3443" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">LabeledFaceDescriptors</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>descriptors<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3444" class="blob-num js-line-number" data-line-number="3444"></td>
        <td id="LC3444" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_descriptors</span>; },</td>
      </tr>
      <tr>
        <td id="L3445" class="blob-num js-line-number" data-line-number="3445"></td>
        <td id="LC3445" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L3446" class="blob-num js-line-number" data-line-number="3446"></td>
        <td id="LC3446" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L3447" class="blob-num js-line-number" data-line-number="3447"></td>
        <td id="LC3447" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3448" class="blob-num js-line-number" data-line-number="3448"></td>
        <td id="LC3448" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> LabeledFaceDescriptors;</td>
      </tr>
      <tr>
        <td id="L3449" class="blob-num js-line-number" data-line-number="3449"></td>
        <td id="LC3449" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L3450" class="blob-num js-line-number" data-line-number="3450"></td>
        <td id="LC3450" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3451" class="blob-num js-line-number" data-line-number="3451"></td>
        <td id="LC3451" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3452" class="blob-num js-line-number" data-line-number="3452"></td>
        <td id="LC3452" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Extracts the image regions containing the detected faces.</span></td>
      </tr>
      <tr>
        <td id="L3453" class="blob-num js-line-number" data-line-number="3453"></td>
        <td id="LC3453" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3454" class="blob-num js-line-number" data-line-number="3454"></td>
        <td id="LC3454" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">input</span> The image that face detection has been performed on.</span></td>
      </tr>
      <tr>
        <td id="L3455" class="blob-num js-line-number" data-line-number="3455"></td>
        <td id="LC3455" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">detections</span> The face detection results or face bounding boxes for that image.</span></td>
      </tr>
      <tr>
        <td id="L3456" class="blob-num js-line-number" data-line-number="3456"></td>
        <td id="LC3456" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> The Canvases of the corresponding image region for each detected face.</span></td>
      </tr>
      <tr>
        <td id="L3457" class="blob-num js-line-number" data-line-number="3457"></td>
        <td id="LC3457" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3458" class="blob-num js-line-number" data-line-number="3458"></td>
        <td id="LC3458" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractFaces</span>(<span class="pl-smi">input</span>, <span class="pl-smi">detections</span>) {</td>
      </tr>
      <tr>
        <td id="L3459" class="blob-num js-line-number" data-line-number="3459"></td>
        <td id="LC3459" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3460" class="blob-num js-line-number" data-line-number="3460"></td>
        <td id="LC3460" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> Canvas, canvas, netInput, tensorOrCanvas, _a, ctx, boxes;</td>
      </tr>
      <tr>
        <td id="L3461" class="blob-num js-line-number" data-line-number="3461"></td>
        <td id="LC3461" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L3462" class="blob-num js-line-number" data-line-number="3462"></td>
        <td id="LC3462" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L3463" class="blob-num js-line-number" data-line-number="3463"></td>
        <td id="LC3463" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L3464" class="blob-num js-line-number" data-line-number="3464"></td>
        <td id="LC3464" class="blob-code blob-code-inner js-file-line">                        Canvas <span class="pl-k">=</span> <span class="pl-smi">env</span>.<span class="pl-en">getEnv</span>().<span class="pl-smi">Canvas</span>;</td>
      </tr>
      <tr>
        <td id="L3465" class="blob-num js-line-number" data-line-number="3465"></td>
        <td id="LC3465" class="blob-code blob-code-inner js-file-line">                        canvas <span class="pl-k">=</span> input;</td>
      </tr>
      <tr>
        <td id="L3466" class="blob-num js-line-number" data-line-number="3466"></td>
        <td id="LC3466" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-k">!!</span>(input <span class="pl-k">instanceof</span> Canvas)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">5</span>];</td>
      </tr>
      <tr>
        <td id="L3467" class="blob-num js-line-number" data-line-number="3467"></td>
        <td id="LC3467" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L3468" class="blob-num js-line-number" data-line-number="3468"></td>
        <td id="LC3468" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L3469" class="blob-num js-line-number" data-line-number="3469"></td>
        <td id="LC3469" class="blob-code blob-code-inner js-file-line">                        netInput <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L3470" class="blob-num js-line-number" data-line-number="3470"></td>
        <td id="LC3470" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-smi">netInput</span>.<span class="pl-smi">batchSize</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3471" class="blob-num js-line-number" data-line-number="3471"></td>
        <td id="LC3471" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>extractFaces - batchSize &gt; 1 not supported<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3472" class="blob-num js-line-number" data-line-number="3472"></td>
        <td id="LC3472" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3473" class="blob-num js-line-number" data-line-number="3473"></td>
        <td id="LC3473" class="blob-code blob-code-inner js-file-line">                        tensorOrCanvas <span class="pl-k">=</span> <span class="pl-smi">netInput</span>.<span class="pl-en">getInput</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3474" class="blob-num js-line-number" data-line-number="3474"></td>
        <td id="LC3474" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-k">!</span>(tensorOrCanvas <span class="pl-k">instanceof</span> Canvas)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L3475" class="blob-num js-line-number" data-line-number="3475"></td>
        <td id="LC3475" class="blob-code blob-code-inner js-file-line">                        _a <span class="pl-k">=</span> tensorOrCanvas;</td>
      </tr>
      <tr>
        <td id="L3476" class="blob-num js-line-number" data-line-number="3476"></td>
        <td id="LC3476" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">4</span>];</td>
      </tr>
      <tr>
        <td id="L3477" class="blob-num js-line-number" data-line-number="3477"></td>
        <td id="LC3477" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">2</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">imageTensorToCanvas</span>(tensorOrCanvas)];</td>
      </tr>
      <tr>
        <td id="L3478" class="blob-num js-line-number" data-line-number="3478"></td>
        <td id="LC3478" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">3</span>:</td>
      </tr>
      <tr>
        <td id="L3479" class="blob-num js-line-number" data-line-number="3479"></td>
        <td id="LC3479" class="blob-code blob-code-inner js-file-line">                        _a <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L3480" class="blob-num js-line-number" data-line-number="3480"></td>
        <td id="LC3480" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">_b</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L3481" class="blob-num js-line-number" data-line-number="3481"></td>
        <td id="LC3481" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">4</span>:</td>
      </tr>
      <tr>
        <td id="L3482" class="blob-num js-line-number" data-line-number="3482"></td>
        <td id="LC3482" class="blob-code blob-code-inner js-file-line">                        canvas <span class="pl-k">=</span> _a;</td>
      </tr>
      <tr>
        <td id="L3483" class="blob-num js-line-number" data-line-number="3483"></td>
        <td id="LC3483" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">_b</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L3484" class="blob-num js-line-number" data-line-number="3484"></td>
        <td id="LC3484" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">5</span>:</td>
      </tr>
      <tr>
        <td id="L3485" class="blob-num js-line-number" data-line-number="3485"></td>
        <td id="LC3485" class="blob-code blob-code-inner js-file-line">                        ctx <span class="pl-k">=</span> <span class="pl-en">getContext2dOrThrow</span>(canvas);</td>
      </tr>
      <tr>
        <td id="L3486" class="blob-num js-line-number" data-line-number="3486"></td>
        <td id="LC3486" class="blob-code blob-code-inner js-file-line">                        boxes <span class="pl-k">=</span> <span class="pl-smi">detections</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">det</span>) { <span class="pl-k">return</span> det <span class="pl-k">instanceof</span> FaceDetection</td>
      </tr>
      <tr>
        <td id="L3487" class="blob-num js-line-number" data-line-number="3487"></td>
        <td id="LC3487" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">?</span> <span class="pl-smi">det</span>.<span class="pl-en">forSize</span>(<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span>, <span class="pl-smi">canvas</span>.<span class="pl-c1">height</span>).<span class="pl-smi">box</span>.<span class="pl-en">floor</span>()</td>
      </tr>
      <tr>
        <td id="L3488" class="blob-num js-line-number" data-line-number="3488"></td>
        <td id="LC3488" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">:</span> det; })</td>
      </tr>
      <tr>
        <td id="L3489" class="blob-num js-line-number" data-line-number="3489"></td>
        <td id="LC3489" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">box</span>) { <span class="pl-k">return</span> <span class="pl-smi">box</span>.<span class="pl-en">clipAtImageBorders</span>(<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span>, <span class="pl-smi">canvas</span>.<span class="pl-c1">height</span>); });</td>
      </tr>
      <tr>
        <td id="L3490" class="blob-num js-line-number" data-line-number="3490"></td>
        <td id="LC3490" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">boxes</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L3491" class="blob-num js-line-number" data-line-number="3491"></td>
        <td id="LC3491" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> x <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">x</span>, y <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">y</span>, width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L3492" class="blob-num js-line-number" data-line-number="3492"></td>
        <td id="LC3492" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> faceImg <span class="pl-k">=</span> <span class="pl-en">createCanvas</span>({ width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L3493" class="blob-num js-line-number" data-line-number="3493"></td>
        <td id="LC3493" class="blob-code blob-code-inner js-file-line">                                <span class="pl-en">getContext2dOrThrow</span>(faceImg)</td>
      </tr>
      <tr>
        <td id="L3494" class="blob-num js-line-number" data-line-number="3494"></td>
        <td id="LC3494" class="blob-code blob-code-inner js-file-line">                                    .<span class="pl-en">putImageData</span>(<span class="pl-smi">ctx</span>.<span class="pl-en">getImageData</span>(x, y, width, height), <span class="pl-c1">0</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3495" class="blob-num js-line-number" data-line-number="3495"></td>
        <td id="LC3495" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> faceImg;</td>
      </tr>
      <tr>
        <td id="L3496" class="blob-num js-line-number" data-line-number="3496"></td>
        <td id="LC3496" class="blob-code blob-code-inner js-file-line">                            })];</td>
      </tr>
      <tr>
        <td id="L3497" class="blob-num js-line-number" data-line-number="3497"></td>
        <td id="LC3497" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3498" class="blob-num js-line-number" data-line-number="3498"></td>
        <td id="LC3498" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3499" class="blob-num js-line-number" data-line-number="3499"></td>
        <td id="LC3499" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3500" class="blob-num js-line-number" data-line-number="3500"></td>
        <td id="LC3500" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3501" class="blob-num js-line-number" data-line-number="3501"></td>
        <td id="LC3501" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3502" class="blob-num js-line-number" data-line-number="3502"></td>
        <td id="LC3502" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3503" class="blob-num js-line-number" data-line-number="3503"></td>
        <td id="LC3503" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Extracts the tensors of the image regions containing the detected faces.</span></td>
      </tr>
      <tr>
        <td id="L3504" class="blob-num js-line-number" data-line-number="3504"></td>
        <td id="LC3504" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Useful if you want to compute the face descriptors for the face images.</span></td>
      </tr>
      <tr>
        <td id="L3505" class="blob-num js-line-number" data-line-number="3505"></td>
        <td id="LC3505" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Using this method is faster then extracting a canvas for each face and</span></td>
      </tr>
      <tr>
        <td id="L3506" class="blob-num js-line-number" data-line-number="3506"></td>
        <td id="LC3506" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * converting them to tensors individually.</span></td>
      </tr>
      <tr>
        <td id="L3507" class="blob-num js-line-number" data-line-number="3507"></td>
        <td id="LC3507" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3508" class="blob-num js-line-number" data-line-number="3508"></td>
        <td id="LC3508" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">imageTensor</span> The image tensor that face detection has been performed on.</span></td>
      </tr>
      <tr>
        <td id="L3509" class="blob-num js-line-number" data-line-number="3509"></td>
        <td id="LC3509" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">detections</span> The face detection results or face bounding boxes for that image.</span></td>
      </tr>
      <tr>
        <td id="L3510" class="blob-num js-line-number" data-line-number="3510"></td>
        <td id="LC3510" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> Tensors of the corresponding image region for each detected face.</span></td>
      </tr>
      <tr>
        <td id="L3511" class="blob-num js-line-number" data-line-number="3511"></td>
        <td id="LC3511" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3512" class="blob-num js-line-number" data-line-number="3512"></td>
        <td id="LC3512" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractFaceTensors</span>(<span class="pl-smi">imageTensor</span>, <span class="pl-smi">detections</span>) {</td>
      </tr>
      <tr>
        <td id="L3513" class="blob-num js-line-number" data-line-number="3513"></td>
        <td id="LC3513" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3514" class="blob-num js-line-number" data-line-number="3514"></td>
        <td id="LC3514" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L3515" class="blob-num js-line-number" data-line-number="3515"></td>
        <td id="LC3515" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isTensor3D</span>(imageTensor) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">isTensor4D</span>(imageTensor)) {</td>
      </tr>
      <tr>
        <td id="L3516" class="blob-num js-line-number" data-line-number="3516"></td>
        <td id="LC3516" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>extractFaceTensors - expected image tensor to be 3D or 4D<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3517" class="blob-num js-line-number" data-line-number="3517"></td>
        <td id="LC3517" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3518" class="blob-num js-line-number" data-line-number="3518"></td>
        <td id="LC3518" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">isTensor4D</span>(imageTensor) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">imageTensor</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>] <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3519" class="blob-num js-line-number" data-line-number="3519"></td>
        <td id="LC3519" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>extractFaceTensors - batchSize &gt; 1 not supported<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3520" class="blob-num js-line-number" data-line-number="3520"></td>
        <td id="LC3520" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3521" class="blob-num js-line-number" data-line-number="3521"></td>
        <td id="LC3521" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3522" class="blob-num js-line-number" data-line-number="3522"></td>
        <td id="LC3522" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">imageTensor</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>(<span class="pl-en">isTensor4D</span>(imageTensor) <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>), imgHeight <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], imgWidth <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>], numChannels <span class="pl-k">=</span> _a[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L3523" class="blob-num js-line-number" data-line-number="3523"></td>
        <td id="LC3523" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> boxes <span class="pl-k">=</span> <span class="pl-smi">detections</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">det</span>) { <span class="pl-k">return</span> det <span class="pl-k">instanceof</span> FaceDetection</td>
      </tr>
      <tr>
        <td id="L3524" class="blob-num js-line-number" data-line-number="3524"></td>
        <td id="LC3524" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">?</span> <span class="pl-smi">det</span>.<span class="pl-en">forSize</span>(imgWidth, imgHeight).<span class="pl-smi">box</span></td>
      </tr>
      <tr>
        <td id="L3525" class="blob-num js-line-number" data-line-number="3525"></td>
        <td id="LC3525" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">:</span> det; })</td>
      </tr>
      <tr>
        <td id="L3526" class="blob-num js-line-number" data-line-number="3526"></td>
        <td id="LC3526" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">box</span>) { <span class="pl-k">return</span> <span class="pl-smi">box</span>.<span class="pl-en">clipAtImageBorders</span>(imgWidth, imgHeight); });</td>
      </tr>
      <tr>
        <td id="L3527" class="blob-num js-line-number" data-line-number="3527"></td>
        <td id="LC3527" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> faceTensors <span class="pl-k">=</span> <span class="pl-smi">boxes</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L3528" class="blob-num js-line-number" data-line-number="3528"></td>
        <td id="LC3528" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> x <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">x</span>, y <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">y</span>, width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L3529" class="blob-num js-line-number" data-line-number="3529"></td>
        <td id="LC3529" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> <span class="pl-en">slice3d</span>(<span class="pl-smi">imageTensor</span>.<span class="pl-en">as3D</span>(imgHeight, imgWidth, numChannels), [y, x, <span class="pl-c1">0</span>], [height, width, numChannels]);</td>
      </tr>
      <tr>
        <td id="L3530" class="blob-num js-line-number" data-line-number="3530"></td>
        <td id="LC3530" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L3531" class="blob-num js-line-number" data-line-number="3531"></td>
        <td id="LC3531" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> faceTensors;</td>
      </tr>
      <tr>
        <td id="L3532" class="blob-num js-line-number" data-line-number="3532"></td>
        <td id="LC3532" class="blob-code blob-code-inner js-file-line">                    })];</td>
      </tr>
      <tr>
        <td id="L3533" class="blob-num js-line-number" data-line-number="3533"></td>
        <td id="LC3533" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3534" class="blob-num js-line-number" data-line-number="3534"></td>
        <td id="LC3534" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3535" class="blob-num js-line-number" data-line-number="3535"></td>
        <td id="LC3535" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3536" class="blob-num js-line-number" data-line-number="3536"></td>
        <td id="LC3536" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3537" class="blob-num js-line-number" data-line-number="3537"></td>
        <td id="LC3537" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceLandmark68NetBase <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L3538" class="blob-num js-line-number" data-line-number="3538"></td>
        <td id="LC3538" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceLandmark68NetBase, _super);</td>
      </tr>
      <tr>
        <td id="L3539" class="blob-num js-line-number" data-line-number="3539"></td>
        <td id="LC3539" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceLandmark68NetBase</span>() {</td>
      </tr>
      <tr>
        <td id="L3540" class="blob-num js-line-number" data-line-number="3540"></td>
        <td id="LC3540" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3541" class="blob-num js-line-number" data-line-number="3541"></td>
        <td id="LC3541" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3542" class="blob-num js-line-number" data-line-number="3542"></td>
        <td id="LC3542" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmark68NetBase</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">postProcess</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">output</span>, <span class="pl-smi">inputSize</span>, <span class="pl-smi">originalDimensions</span>) {</td>
      </tr>
      <tr>
        <td id="L3543" class="blob-num js-line-number" data-line-number="3543"></td>
        <td id="LC3543" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> inputDimensions <span class="pl-k">=</span> <span class="pl-smi">originalDimensions</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L3544" class="blob-num js-line-number" data-line-number="3544"></td>
        <td id="LC3544" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L3545" class="blob-num js-line-number" data-line-number="3545"></td>
        <td id="LC3545" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> scale <span class="pl-k">=</span> inputSize <span class="pl-k">/</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(height, width);</td>
      </tr>
      <tr>
        <td id="L3546" class="blob-num js-line-number" data-line-number="3546"></td>
        <td id="LC3546" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3547" class="blob-num js-line-number" data-line-number="3547"></td>
        <td id="LC3547" class="blob-code blob-code-inner js-file-line">                    width<span class="pl-k">:</span> width <span class="pl-k">*</span> scale,</td>
      </tr>
      <tr>
        <td id="L3548" class="blob-num js-line-number" data-line-number="3548"></td>
        <td id="LC3548" class="blob-code blob-code-inner js-file-line">                    height<span class="pl-k">:</span> height <span class="pl-k">*</span> scale</td>
      </tr>
      <tr>
        <td id="L3549" class="blob-num js-line-number" data-line-number="3549"></td>
        <td id="LC3549" class="blob-code blob-code-inner js-file-line">                };</td>
      </tr>
      <tr>
        <td id="L3550" class="blob-num js-line-number" data-line-number="3550"></td>
        <td id="LC3550" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3551" class="blob-num js-line-number" data-line-number="3551"></td>
        <td id="LC3551" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batchSize <span class="pl-k">=</span> <span class="pl-smi">inputDimensions</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L3552" class="blob-num js-line-number" data-line-number="3552"></td>
        <td id="LC3552" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3553" class="blob-num js-line-number" data-line-number="3553"></td>
        <td id="LC3553" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> <span class="pl-en">createInterleavedTensor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">fillX</span>, <span class="pl-smi">fillY</span>) {</td>
      </tr>
      <tr>
        <td id="L3554" class="blob-num js-line-number" data-line-number="3554"></td>
        <td id="LC3554" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-en">stack</span>([</td>
      </tr>
      <tr>
        <td id="L3555" class="blob-num js-line-number" data-line-number="3555"></td>
        <td id="LC3555" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">fill</span>([<span class="pl-c1">68</span>], fillX),</td>
      </tr>
      <tr>
        <td id="L3556" class="blob-num js-line-number" data-line-number="3556"></td>
        <td id="LC3556" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">fill</span>([<span class="pl-c1">68</span>], fillY)</td>
      </tr>
      <tr>
        <td id="L3557" class="blob-num js-line-number" data-line-number="3557"></td>
        <td id="LC3557" class="blob-code blob-code-inner js-file-line">                    ], <span class="pl-c1">1</span>).<span class="pl-en">as2D</span>(<span class="pl-c1">1</span>, <span class="pl-c1">136</span>).<span class="pl-en">as1D</span>();</td>
      </tr>
      <tr>
        <td id="L3558" class="blob-num js-line-number" data-line-number="3558"></td>
        <td id="LC3558" class="blob-code blob-code-inner js-file-line">                };</td>
      </tr>
      <tr>
        <td id="L3559" class="blob-num js-line-number" data-line-number="3559"></td>
        <td id="LC3559" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> <span class="pl-en">getPadding</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">batchIdx</span>, <span class="pl-smi">cond</span>) {</td>
      </tr>
      <tr>
        <td id="L3560" class="blob-num js-line-number" data-line-number="3560"></td>
        <td id="LC3560" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> _a <span class="pl-k">=</span> inputDimensions[batchIdx], width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L3561" class="blob-num js-line-number" data-line-number="3561"></td>
        <td id="LC3561" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-en">cond</span>(width, height) <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(width <span class="pl-k">-</span> height) <span class="pl-k">/</span> <span class="pl-c1">2</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3562" class="blob-num js-line-number" data-line-number="3562"></td>
        <td id="LC3562" class="blob-code blob-code-inner js-file-line">                };</td>
      </tr>
      <tr>
        <td id="L3563" class="blob-num js-line-number" data-line-number="3563"></td>
        <td id="LC3563" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> <span class="pl-en">getPaddingX</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">batchIdx</span>) { <span class="pl-k">return</span> <span class="pl-en">getPadding</span>(batchIdx, <span class="pl-k">function</span> (<span class="pl-smi">w</span>, <span class="pl-smi">h</span>) { <span class="pl-k">return</span> w <span class="pl-k">&lt;</span> h; }); };</td>
      </tr>
      <tr>
        <td id="L3564" class="blob-num js-line-number" data-line-number="3564"></td>
        <td id="LC3564" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> <span class="pl-en">getPaddingY</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">batchIdx</span>) { <span class="pl-k">return</span> <span class="pl-en">getPadding</span>(batchIdx, <span class="pl-k">function</span> (<span class="pl-smi">w</span>, <span class="pl-smi">h</span>) { <span class="pl-k">return</span> h <span class="pl-k">&lt;</span> w; }); };</td>
      </tr>
      <tr>
        <td id="L3565" class="blob-num js-line-number" data-line-number="3565"></td>
        <td id="LC3565" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> landmarkTensors <span class="pl-k">=</span> output</td>
      </tr>
      <tr>
        <td id="L3566" class="blob-num js-line-number" data-line-number="3566"></td>
        <td id="LC3566" class="blob-code blob-code-inner js-file-line">                    .<span class="pl-en">mul</span>(<span class="pl-en">fill</span>([batchSize, <span class="pl-c1">136</span>], inputSize))</td>
      </tr>
      <tr>
        <td id="L3567" class="blob-num js-line-number" data-line-number="3567"></td>
        <td id="LC3567" class="blob-code blob-code-inner js-file-line">                    .<span class="pl-c1">sub</span>(<span class="pl-en">stack</span>(<span class="pl-c1">Array</span>.<span class="pl-en">from</span>(<span class="pl-c1">Array</span>(batchSize), <span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">batchIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L3568" class="blob-num js-line-number" data-line-number="3568"></td>
        <td id="LC3568" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-en">createInterleavedTensor</span>(<span class="pl-en">getPaddingX</span>(batchIdx), <span class="pl-en">getPaddingY</span>(batchIdx));</td>
      </tr>
      <tr>
        <td id="L3569" class="blob-num js-line-number" data-line-number="3569"></td>
        <td id="LC3569" class="blob-code blob-code-inner js-file-line">                })))</td>
      </tr>
      <tr>
        <td id="L3570" class="blob-num js-line-number" data-line-number="3570"></td>
        <td id="LC3570" class="blob-code blob-code-inner js-file-line">                    .<span class="pl-en">div</span>(<span class="pl-en">stack</span>(<span class="pl-c1">Array</span>.<span class="pl-en">from</span>(<span class="pl-c1">Array</span>(batchSize), <span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">batchIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L3571" class="blob-num js-line-number" data-line-number="3571"></td>
        <td id="LC3571" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-en">createInterleavedTensor</span>(inputDimensions[batchIdx].<span class="pl-c1">width</span>, inputDimensions[batchIdx].<span class="pl-c1">height</span>);</td>
      </tr>
      <tr>
        <td id="L3572" class="blob-num js-line-number" data-line-number="3572"></td>
        <td id="LC3572" class="blob-code blob-code-inner js-file-line">                })));</td>
      </tr>
      <tr>
        <td id="L3573" class="blob-num js-line-number" data-line-number="3573"></td>
        <td id="LC3573" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> landmarkTensors;</td>
      </tr>
      <tr>
        <td id="L3574" class="blob-num js-line-number" data-line-number="3574"></td>
        <td id="LC3574" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3575" class="blob-num js-line-number" data-line-number="3575"></td>
        <td id="LC3575" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3576" class="blob-num js-line-number" data-line-number="3576"></td>
        <td id="LC3576" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmark68NetBase</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3577" class="blob-num js-line-number" data-line-number="3577"></td>
        <td id="LC3577" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3578" class="blob-num js-line-number" data-line-number="3578"></td>
        <td id="LC3578" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3579" class="blob-num js-line-number" data-line-number="3579"></td>
        <td id="LC3579" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-smi">_this</span>.<span class="pl-en">runNet</span>(input);</td>
      </tr>
      <tr>
        <td id="L3580" class="blob-num js-line-number" data-line-number="3580"></td>
        <td id="LC3580" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-smi">_this</span>.<span class="pl-en">postProcess</span>(out, <span class="pl-smi">input</span>.<span class="pl-smi">inputSize</span>, <span class="pl-smi">input</span>.<span class="pl-smi">inputDimensions</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L3581" class="blob-num js-line-number" data-line-number="3581"></td>
        <td id="LC3581" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> height <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], width <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3582" class="blob-num js-line-number" data-line-number="3582"></td>
        <td id="LC3582" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> ({ height<span class="pl-k">:</span> height, width<span class="pl-k">:</span> width });</td>
      </tr>
      <tr>
        <td id="L3583" class="blob-num js-line-number" data-line-number="3583"></td>
        <td id="LC3583" class="blob-code blob-code-inner js-file-line">                }));</td>
      </tr>
      <tr>
        <td id="L3584" class="blob-num js-line-number" data-line-number="3584"></td>
        <td id="LC3584" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3585" class="blob-num js-line-number" data-line-number="3585"></td>
        <td id="LC3585" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3586" class="blob-num js-line-number" data-line-number="3586"></td>
        <td id="LC3586" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmark68NetBase</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3587" class="blob-num js-line-number" data-line-number="3587"></td>
        <td id="LC3587" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3588" class="blob-num js-line-number" data-line-number="3588"></td>
        <td id="LC3588" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L3589" class="blob-num js-line-number" data-line-number="3589"></td>
        <td id="LC3589" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L3590" class="blob-num js-line-number" data-line-number="3590"></td>
        <td id="LC3590" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L3591" class="blob-num js-line-number" data-line-number="3591"></td>
        <td id="LC3591" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L3592" class="blob-num js-line-number" data-line-number="3592"></td>
        <td id="LC3592" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L3593" class="blob-num js-line-number" data-line-number="3593"></td>
        <td id="LC3593" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L3594" class="blob-num js-line-number" data-line-number="3594"></td>
        <td id="LC3594" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()])];</td>
      </tr>
      <tr>
        <td id="L3595" class="blob-num js-line-number" data-line-number="3595"></td>
        <td id="LC3595" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3596" class="blob-num js-line-number" data-line-number="3596"></td>
        <td id="LC3596" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L3597" class="blob-num js-line-number" data-line-number="3597"></td>
        <td id="LC3597" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3598" class="blob-num js-line-number" data-line-number="3598"></td>
        <td id="LC3598" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3599" class="blob-num js-line-number" data-line-number="3599"></td>
        <td id="LC3599" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmark68NetBase</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">detectLandmarks</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3600" class="blob-num js-line-number" data-line-number="3600"></td>
        <td id="LC3600" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3601" class="blob-num js-line-number" data-line-number="3601"></td>
        <td id="LC3601" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> netInput, landmarkTensors, landmarksForBatch;</td>
      </tr>
      <tr>
        <td id="L3602" class="blob-num js-line-number" data-line-number="3602"></td>
        <td id="LC3602" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3603" class="blob-num js-line-number" data-line-number="3603"></td>
        <td id="LC3603" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L3604" class="blob-num js-line-number" data-line-number="3604"></td>
        <td id="LC3604" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L3605" class="blob-num js-line-number" data-line-number="3605"></td>
        <td id="LC3605" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L3606" class="blob-num js-line-number" data-line-number="3606"></td>
        <td id="LC3606" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L3607" class="blob-num js-line-number" data-line-number="3607"></td>
        <td id="LC3607" class="blob-code blob-code-inner js-file-line">                            netInput <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L3608" class="blob-num js-line-number" data-line-number="3608"></td>
        <td id="LC3608" class="blob-code blob-code-inner js-file-line">                            landmarkTensors <span class="pl-k">=</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">unstack</span>(<span class="pl-smi">_this</span>.<span class="pl-en">forwardInput</span>(netInput)); });</td>
      </tr>
      <tr>
        <td id="L3609" class="blob-num js-line-number" data-line-number="3609"></td>
        <td id="LC3609" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">landmarkTensors</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">landmarkTensor</span>, <span class="pl-smi">batchIdx</span>) { <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(_this, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3610" class="blob-num js-line-number" data-line-number="3610"></td>
        <td id="LC3610" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">var</span> landmarksArray, _a, _b, xCoords, yCoords;</td>
      </tr>
      <tr>
        <td id="L3611" class="blob-num js-line-number" data-line-number="3611"></td>
        <td id="LC3611" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_c</span>) {</td>
      </tr>
      <tr>
        <td id="L3612" class="blob-num js-line-number" data-line-number="3612"></td>
        <td id="LC3612" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">switch</span> (<span class="pl-smi">_c</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L3613" class="blob-num js-line-number" data-line-number="3613"></td>
        <td id="LC3613" class="blob-code blob-code-inner js-file-line">                                            <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L3614" class="blob-num js-line-number" data-line-number="3614"></td>
        <td id="LC3614" class="blob-code blob-code-inner js-file-line">                                                _b <span class="pl-k">=</span> (_a <span class="pl-k">=</span> <span class="pl-c1">Array</span>).<span class="pl-smi">from</span>;</td>
      </tr>
      <tr>
        <td id="L3615" class="blob-num js-line-number" data-line-number="3615"></td>
        <td id="LC3615" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">landmarkTensor</span>.<span class="pl-c1">data</span>()];</td>
      </tr>
      <tr>
        <td id="L3616" class="blob-num js-line-number" data-line-number="3616"></td>
        <td id="LC3616" class="blob-code blob-code-inner js-file-line">                                            <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L3617" class="blob-num js-line-number" data-line-number="3617"></td>
        <td id="LC3617" class="blob-code blob-code-inner js-file-line">                                                landmarksArray <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-c1">apply</span>(_a, [<span class="pl-smi">_c</span>.<span class="pl-en">sent</span>()]);</td>
      </tr>
      <tr>
        <td id="L3618" class="blob-num js-line-number" data-line-number="3618"></td>
        <td id="LC3618" class="blob-code blob-code-inner js-file-line">                                                xCoords <span class="pl-k">=</span> <span class="pl-smi">landmarksArray</span>.<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> <span class="pl-en">isEven$1</span>(i); });</td>
      </tr>
      <tr>
        <td id="L3619" class="blob-num js-line-number" data-line-number="3619"></td>
        <td id="LC3619" class="blob-code blob-code-inner js-file-line">                                                yCoords <span class="pl-k">=</span> <span class="pl-smi">landmarksArray</span>.<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-en">isEven$1</span>(i); });</td>
      </tr>
      <tr>
        <td id="L3620" class="blob-num js-line-number" data-line-number="3620"></td>
        <td id="LC3620" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-k">new</span> <span class="pl-en">FaceLandmarks68</span>(<span class="pl-c1">Array</span>(<span class="pl-c1">68</span>).<span class="pl-en">fill</span>(<span class="pl-c1">0</span>).<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(xCoords[i], yCoords[i]); }), {</td>
      </tr>
      <tr>
        <td id="L3621" class="blob-num js-line-number" data-line-number="3621"></td>
        <td id="LC3621" class="blob-code blob-code-inner js-file-line">                                                        height<span class="pl-k">:</span> <span class="pl-smi">netInput</span>.<span class="pl-en">getInputHeight</span>(batchIdx),</td>
      </tr>
      <tr>
        <td id="L3622" class="blob-num js-line-number" data-line-number="3622"></td>
        <td id="LC3622" class="blob-code blob-code-inner js-file-line">                                                        width<span class="pl-k">:</span> <span class="pl-smi">netInput</span>.<span class="pl-en">getInputWidth</span>(batchIdx),</td>
      </tr>
      <tr>
        <td id="L3623" class="blob-num js-line-number" data-line-number="3623"></td>
        <td id="LC3623" class="blob-code blob-code-inner js-file-line">                                                    })];</td>
      </tr>
      <tr>
        <td id="L3624" class="blob-num js-line-number" data-line-number="3624"></td>
        <td id="LC3624" class="blob-code blob-code-inner js-file-line">                                        }</td>
      </tr>
      <tr>
        <td id="L3625" class="blob-num js-line-number" data-line-number="3625"></td>
        <td id="LC3625" class="blob-code blob-code-inner js-file-line">                                    });</td>
      </tr>
      <tr>
        <td id="L3626" class="blob-num js-line-number" data-line-number="3626"></td>
        <td id="LC3626" class="blob-code blob-code-inner js-file-line">                                }); }))];</td>
      </tr>
      <tr>
        <td id="L3627" class="blob-num js-line-number" data-line-number="3627"></td>
        <td id="LC3627" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L3628" class="blob-num js-line-number" data-line-number="3628"></td>
        <td id="LC3628" class="blob-code blob-code-inner js-file-line">                            landmarksForBatch <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L3629" class="blob-num js-line-number" data-line-number="3629"></td>
        <td id="LC3629" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">landmarkTensors</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">t</span>) { <span class="pl-k">return</span> <span class="pl-smi">t</span>.<span class="pl-en">dispose</span>(); });</td>
      </tr>
      <tr>
        <td id="L3630" class="blob-num js-line-number" data-line-number="3630"></td>
        <td id="LC3630" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">netInput</span>.<span class="pl-smi">isBatchInput</span></td>
      </tr>
      <tr>
        <td id="L3631" class="blob-num js-line-number" data-line-number="3631"></td>
        <td id="LC3631" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">?</span> landmarksForBatch</td>
      </tr>
      <tr>
        <td id="L3632" class="blob-num js-line-number" data-line-number="3632"></td>
        <td id="LC3632" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">:</span> landmarksForBatch[<span class="pl-c1">0</span>]];</td>
      </tr>
      <tr>
        <td id="L3633" class="blob-num js-line-number" data-line-number="3633"></td>
        <td id="LC3633" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3634" class="blob-num js-line-number" data-line-number="3634"></td>
        <td id="LC3634" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L3635" class="blob-num js-line-number" data-line-number="3635"></td>
        <td id="LC3635" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3636" class="blob-num js-line-number" data-line-number="3636"></td>
        <td id="LC3636" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3637" class="blob-num js-line-number" data-line-number="3637"></td>
        <td id="LC3637" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmark68NetBase</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getClassifierChannelsOut</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3638" class="blob-num js-line-number" data-line-number="3638"></td>
        <td id="LC3638" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">136</span>;</td>
      </tr>
      <tr>
        <td id="L3639" class="blob-num js-line-number" data-line-number="3639"></td>
        <td id="LC3639" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3640" class="blob-num js-line-number" data-line-number="3640"></td>
        <td id="LC3640" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceLandmark68NetBase;</td>
      </tr>
      <tr>
        <td id="L3641" class="blob-num js-line-number" data-line-number="3641"></td>
        <td id="LC3641" class="blob-code blob-code-inner js-file-line">    }(FaceProcessor));</td>
      </tr>
      <tr>
        <td id="L3642" class="blob-num js-line-number" data-line-number="3642"></td>
        <td id="LC3642" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3643" class="blob-num js-line-number" data-line-number="3643"></td>
        <td id="LC3643" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceLandmark68Net <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L3644" class="blob-num js-line-number" data-line-number="3644"></td>
        <td id="LC3644" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceLandmark68Net, _super);</td>
      </tr>
      <tr>
        <td id="L3645" class="blob-num js-line-number" data-line-number="3645"></td>
        <td id="LC3645" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceLandmark68Net</span>(<span class="pl-smi">faceFeatureExtractor</span>) {</td>
      </tr>
      <tr>
        <td id="L3646" class="blob-num js-line-number" data-line-number="3646"></td>
        <td id="LC3646" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (faceFeatureExtractor <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { faceFeatureExtractor <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">FaceFeatureExtractor</span>(); }</td>
      </tr>
      <tr>
        <td id="L3647" class="blob-num js-line-number" data-line-number="3647"></td>
        <td id="LC3647" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>FaceLandmark68Net<span class="pl-pds">&#39;</span></span>, faceFeatureExtractor) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3648" class="blob-num js-line-number" data-line-number="3648"></td>
        <td id="LC3648" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3649" class="blob-num js-line-number" data-line-number="3649"></td>
        <td id="LC3649" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmark68Net</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3650" class="blob-num js-line-number" data-line-number="3650"></td>
        <td id="LC3650" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>face_landmark_68_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3651" class="blob-num js-line-number" data-line-number="3651"></td>
        <td id="LC3651" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3652" class="blob-num js-line-number" data-line-number="3652"></td>
        <td id="LC3652" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmark68Net</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getClassifierChannelsIn</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3653" class="blob-num js-line-number" data-line-number="3653"></td>
        <td id="LC3653" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">256</span>;</td>
      </tr>
      <tr>
        <td id="L3654" class="blob-num js-line-number" data-line-number="3654"></td>
        <td id="LC3654" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3655" class="blob-num js-line-number" data-line-number="3655"></td>
        <td id="LC3655" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceLandmark68Net;</td>
      </tr>
      <tr>
        <td id="L3656" class="blob-num js-line-number" data-line-number="3656"></td>
        <td id="LC3656" class="blob-code blob-code-inner js-file-line">    }(FaceLandmark68NetBase));</td>
      </tr>
      <tr>
        <td id="L3657" class="blob-num js-line-number" data-line-number="3657"></td>
        <td id="LC3657" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3658" class="blob-num js-line-number" data-line-number="3658"></td>
        <td id="LC3658" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsFromWeigthMapTiny</span>(<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L3659" class="blob-num js-line-number" data-line-number="3659"></td>
        <td id="LC3659" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3660" class="blob-num js-line-number" data-line-number="3660"></td>
        <td id="LC3660" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractDenseBlock3Params <span class="pl-k">=</span> <span class="pl-en">loadParamsFactory</span>(weightMap, paramMappings).<span class="pl-smi">extractDenseBlock3Params</span>;</td>
      </tr>
      <tr>
        <td id="L3661" class="blob-num js-line-number" data-line-number="3661"></td>
        <td id="LC3661" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> params <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3662" class="blob-num js-line-number" data-line-number="3662"></td>
        <td id="LC3662" class="blob-code blob-code-inner js-file-line">            dense0<span class="pl-k">:</span> <span class="pl-en">extractDenseBlock3Params</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>dense0<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>),</td>
      </tr>
      <tr>
        <td id="L3663" class="blob-num js-line-number" data-line-number="3663"></td>
        <td id="LC3663" class="blob-code blob-code-inner js-file-line">            dense1<span class="pl-k">:</span> <span class="pl-en">extractDenseBlock3Params</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>dense1<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3664" class="blob-num js-line-number" data-line-number="3664"></td>
        <td id="LC3664" class="blob-code blob-code-inner js-file-line">            dense2<span class="pl-k">:</span> <span class="pl-en">extractDenseBlock3Params</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>dense2<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L3665" class="blob-num js-line-number" data-line-number="3665"></td>
        <td id="LC3665" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3666" class="blob-num js-line-number" data-line-number="3666"></td>
        <td id="LC3666" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">disposeUnusedWeightTensors</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3667" class="blob-num js-line-number" data-line-number="3667"></td>
        <td id="LC3667" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> params, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L3668" class="blob-num js-line-number" data-line-number="3668"></td>
        <td id="LC3668" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3669" class="blob-num js-line-number" data-line-number="3669"></td>
        <td id="LC3669" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3670" class="blob-num js-line-number" data-line-number="3670"></td>
        <td id="LC3670" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsTiny</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L3671" class="blob-num js-line-number" data-line-number="3671"></td>
        <td id="LC3671" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3672" class="blob-num js-line-number" data-line-number="3672"></td>
        <td id="LC3672" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractWeightsFactory</span>(weights), extractWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractWeights</span>, getRemainingWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">getRemainingWeights</span>;</td>
      </tr>
      <tr>
        <td id="L3673" class="blob-num js-line-number" data-line-number="3673"></td>
        <td id="LC3673" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractDenseBlock3Params <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$2</span>(extractWeights, paramMappings).<span class="pl-smi">extractDenseBlock3Params</span>;</td>
      </tr>
      <tr>
        <td id="L3674" class="blob-num js-line-number" data-line-number="3674"></td>
        <td id="LC3674" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dense0 <span class="pl-k">=</span> <span class="pl-en">extractDenseBlock3Params</span>(<span class="pl-c1">3</span>, <span class="pl-c1">32</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>dense0<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3675" class="blob-num js-line-number" data-line-number="3675"></td>
        <td id="LC3675" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dense1 <span class="pl-k">=</span> <span class="pl-en">extractDenseBlock3Params</span>(<span class="pl-c1">32</span>, <span class="pl-c1">64</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>dense1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3676" class="blob-num js-line-number" data-line-number="3676"></td>
        <td id="LC3676" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dense2 <span class="pl-k">=</span> <span class="pl-en">extractDenseBlock3Params</span>(<span class="pl-c1">64</span>, <span class="pl-c1">128</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>dense2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3677" class="blob-num js-line-number" data-line-number="3677"></td>
        <td id="LC3677" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3678" class="blob-num js-line-number" data-line-number="3678"></td>
        <td id="LC3678" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>weights remaing after extract: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L3679" class="blob-num js-line-number" data-line-number="3679"></td>
        <td id="LC3679" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3680" class="blob-num js-line-number" data-line-number="3680"></td>
        <td id="LC3680" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3681" class="blob-num js-line-number" data-line-number="3681"></td>
        <td id="LC3681" class="blob-code blob-code-inner js-file-line">            paramMappings<span class="pl-k">:</span> paramMappings,</td>
      </tr>
      <tr>
        <td id="L3682" class="blob-num js-line-number" data-line-number="3682"></td>
        <td id="LC3682" class="blob-code blob-code-inner js-file-line">            params<span class="pl-k">:</span> { dense0<span class="pl-k">:</span> dense0, dense1<span class="pl-k">:</span> dense1, dense2<span class="pl-k">:</span> dense2 }</td>
      </tr>
      <tr>
        <td id="L3683" class="blob-num js-line-number" data-line-number="3683"></td>
        <td id="LC3683" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3684" class="blob-num js-line-number" data-line-number="3684"></td>
        <td id="LC3684" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3685" class="blob-num js-line-number" data-line-number="3685"></td>
        <td id="LC3685" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3686" class="blob-num js-line-number" data-line-number="3686"></td>
        <td id="LC3686" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> TinyFaceFeatureExtractor <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L3687" class="blob-num js-line-number" data-line-number="3687"></td>
        <td id="LC3687" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(TinyFaceFeatureExtractor, _super);</td>
      </tr>
      <tr>
        <td id="L3688" class="blob-num js-line-number" data-line-number="3688"></td>
        <td id="LC3688" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">TinyFaceFeatureExtractor</span>() {</td>
      </tr>
      <tr>
        <td id="L3689" class="blob-num js-line-number" data-line-number="3689"></td>
        <td id="LC3689" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>TinyFaceFeatureExtractor<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3690" class="blob-num js-line-number" data-line-number="3690"></td>
        <td id="LC3690" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3691" class="blob-num js-line-number" data-line-number="3691"></td>
        <td id="LC3691" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyFaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3692" class="blob-num js-line-number" data-line-number="3692"></td>
        <td id="LC3692" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> params <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L3693" class="blob-num js-line-number" data-line-number="3693"></td>
        <td id="LC3693" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>params) {</td>
      </tr>
      <tr>
        <td id="L3694" class="blob-num js-line-number" data-line-number="3694"></td>
        <td id="LC3694" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>TinyFaceFeatureExtractor - load model before inference<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3695" class="blob-num js-line-number" data-line-number="3695"></td>
        <td id="LC3695" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3696" class="blob-num js-line-number" data-line-number="3696"></td>
        <td id="LC3696" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3697" class="blob-num js-line-number" data-line-number="3697"></td>
        <td id="LC3697" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> batchTensor <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-en">toBatchTensor</span>(<span class="pl-c1">112</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3698" class="blob-num js-line-number" data-line-number="3698"></td>
        <td id="LC3698" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> meanRgb <span class="pl-k">=</span> [<span class="pl-c1">122.782</span>, <span class="pl-c1">117.001</span>, <span class="pl-c1">104.298</span>];</td>
      </tr>
      <tr>
        <td id="L3699" class="blob-num js-line-number" data-line-number="3699"></td>
        <td id="LC3699" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> normalized <span class="pl-k">=</span> <span class="pl-en">normalize</span>(batchTensor, meanRgb).<span class="pl-en">div</span>(<span class="pl-en">scalar</span>(<span class="pl-c1">255</span>));</td>
      </tr>
      <tr>
        <td id="L3700" class="blob-num js-line-number" data-line-number="3700"></td>
        <td id="LC3700" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">denseBlock3</span>(normalized, <span class="pl-smi">params</span>.<span class="pl-smi">dense0</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3701" class="blob-num js-line-number" data-line-number="3701"></td>
        <td id="LC3701" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">denseBlock3</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">dense1</span>);</td>
      </tr>
      <tr>
        <td id="L3702" class="blob-num js-line-number" data-line-number="3702"></td>
        <td id="LC3702" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">denseBlock3</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">dense2</span>);</td>
      </tr>
      <tr>
        <td id="L3703" class="blob-num js-line-number" data-line-number="3703"></td>
        <td id="LC3703" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">avgPool</span>(out, [<span class="pl-c1">14</span>, <span class="pl-c1">14</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3704" class="blob-num js-line-number" data-line-number="3704"></td>
        <td id="LC3704" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L3705" class="blob-num js-line-number" data-line-number="3705"></td>
        <td id="LC3705" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3706" class="blob-num js-line-number" data-line-number="3706"></td>
        <td id="LC3706" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3707" class="blob-num js-line-number" data-line-number="3707"></td>
        <td id="LC3707" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyFaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3708" class="blob-num js-line-number" data-line-number="3708"></td>
        <td id="LC3708" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3709" class="blob-num js-line-number" data-line-number="3709"></td>
        <td id="LC3709" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L3710" class="blob-num js-line-number" data-line-number="3710"></td>
        <td id="LC3710" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L3711" class="blob-num js-line-number" data-line-number="3711"></td>
        <td id="LC3711" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L3712" class="blob-num js-line-number" data-line-number="3712"></td>
        <td id="LC3712" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L3713" class="blob-num js-line-number" data-line-number="3713"></td>
        <td id="LC3713" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L3714" class="blob-num js-line-number" data-line-number="3714"></td>
        <td id="LC3714" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L3715" class="blob-num js-line-number" data-line-number="3715"></td>
        <td id="LC3715" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()])];</td>
      </tr>
      <tr>
        <td id="L3716" class="blob-num js-line-number" data-line-number="3716"></td>
        <td id="LC3716" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3717" class="blob-num js-line-number" data-line-number="3717"></td>
        <td id="LC3717" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L3718" class="blob-num js-line-number" data-line-number="3718"></td>
        <td id="LC3718" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3719" class="blob-num js-line-number" data-line-number="3719"></td>
        <td id="LC3719" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3720" class="blob-num js-line-number" data-line-number="3720"></td>
        <td id="LC3720" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyFaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3721" class="blob-num js-line-number" data-line-number="3721"></td>
        <td id="LC3721" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>face_feature_extractor_tiny_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3722" class="blob-num js-line-number" data-line-number="3722"></td>
        <td id="LC3722" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3723" class="blob-num js-line-number" data-line-number="3723"></td>
        <td id="LC3723" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyFaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L3724" class="blob-num js-line-number" data-line-number="3724"></td>
        <td id="LC3724" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsFromWeigthMapTiny</span>(weightMap);</td>
      </tr>
      <tr>
        <td id="L3725" class="blob-num js-line-number" data-line-number="3725"></td>
        <td id="LC3725" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3726" class="blob-num js-line-number" data-line-number="3726"></td>
        <td id="LC3726" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyFaceFeatureExtractor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L3727" class="blob-num js-line-number" data-line-number="3727"></td>
        <td id="LC3727" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsTiny</span>(weights);</td>
      </tr>
      <tr>
        <td id="L3728" class="blob-num js-line-number" data-line-number="3728"></td>
        <td id="LC3728" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3729" class="blob-num js-line-number" data-line-number="3729"></td>
        <td id="LC3729" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> TinyFaceFeatureExtractor;</td>
      </tr>
      <tr>
        <td id="L3730" class="blob-num js-line-number" data-line-number="3730"></td>
        <td id="LC3730" class="blob-code blob-code-inner js-file-line">    }(NeuralNetwork));</td>
      </tr>
      <tr>
        <td id="L3731" class="blob-num js-line-number" data-line-number="3731"></td>
        <td id="LC3731" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3732" class="blob-num js-line-number" data-line-number="3732"></td>
        <td id="LC3732" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceLandmark68TinyNet <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L3733" class="blob-num js-line-number" data-line-number="3733"></td>
        <td id="LC3733" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceLandmark68TinyNet, _super);</td>
      </tr>
      <tr>
        <td id="L3734" class="blob-num js-line-number" data-line-number="3734"></td>
        <td id="LC3734" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceLandmark68TinyNet</span>(<span class="pl-smi">faceFeatureExtractor</span>) {</td>
      </tr>
      <tr>
        <td id="L3735" class="blob-num js-line-number" data-line-number="3735"></td>
        <td id="LC3735" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (faceFeatureExtractor <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { faceFeatureExtractor <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">TinyFaceFeatureExtractor</span>(); }</td>
      </tr>
      <tr>
        <td id="L3736" class="blob-num js-line-number" data-line-number="3736"></td>
        <td id="LC3736" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>FaceLandmark68TinyNet<span class="pl-pds">&#39;</span></span>, faceFeatureExtractor) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3737" class="blob-num js-line-number" data-line-number="3737"></td>
        <td id="LC3737" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3738" class="blob-num js-line-number" data-line-number="3738"></td>
        <td id="LC3738" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmark68TinyNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3739" class="blob-num js-line-number" data-line-number="3739"></td>
        <td id="LC3739" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>face_landmark_68_tiny_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3740" class="blob-num js-line-number" data-line-number="3740"></td>
        <td id="LC3740" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3741" class="blob-num js-line-number" data-line-number="3741"></td>
        <td id="LC3741" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceLandmark68TinyNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getClassifierChannelsIn</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3742" class="blob-num js-line-number" data-line-number="3742"></td>
        <td id="LC3742" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">128</span>;</td>
      </tr>
      <tr>
        <td id="L3743" class="blob-num js-line-number" data-line-number="3743"></td>
        <td id="LC3743" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3744" class="blob-num js-line-number" data-line-number="3744"></td>
        <td id="LC3744" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceLandmark68TinyNet;</td>
      </tr>
      <tr>
        <td id="L3745" class="blob-num js-line-number" data-line-number="3745"></td>
        <td id="LC3745" class="blob-code blob-code-inner js-file-line">    }(FaceLandmark68NetBase));</td>
      </tr>
      <tr>
        <td id="L3746" class="blob-num js-line-number" data-line-number="3746"></td>
        <td id="LC3746" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3747" class="blob-num js-line-number" data-line-number="3747"></td>
        <td id="LC3747" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceLandmarkNet <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L3748" class="blob-num js-line-number" data-line-number="3748"></td>
        <td id="LC3748" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceLandmarkNet, _super);</td>
      </tr>
      <tr>
        <td id="L3749" class="blob-num js-line-number" data-line-number="3749"></td>
        <td id="LC3749" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceLandmarkNet</span>() {</td>
      </tr>
      <tr>
        <td id="L3750" class="blob-num js-line-number" data-line-number="3750"></td>
        <td id="LC3750" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3751" class="blob-num js-line-number" data-line-number="3751"></td>
        <td id="LC3751" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3752" class="blob-num js-line-number" data-line-number="3752"></td>
        <td id="LC3752" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceLandmarkNet;</td>
      </tr>
      <tr>
        <td id="L3753" class="blob-num js-line-number" data-line-number="3753"></td>
        <td id="LC3753" class="blob-code blob-code-inner js-file-line">    }(FaceLandmark68Net));</td>
      </tr>
      <tr>
        <td id="L3754" class="blob-num js-line-number" data-line-number="3754"></td>
        <td id="LC3754" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3755" class="blob-num js-line-number" data-line-number="3755"></td>
        <td id="LC3755" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L3756" class="blob-num js-line-number" data-line-number="3756"></td>
        <td id="LC3756" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">add</span>(<span class="pl-en">mul</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">weights</span>), <span class="pl-smi">params</span>.<span class="pl-smi">biases</span>);</td>
      </tr>
      <tr>
        <td id="L3757" class="blob-num js-line-number" data-line-number="3757"></td>
        <td id="LC3757" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3758" class="blob-num js-line-number" data-line-number="3758"></td>
        <td id="LC3758" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3759" class="blob-num js-line-number" data-line-number="3759"></td>
        <td id="LC3759" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">convLayer$1</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>, <span class="pl-smi">strides</span>, <span class="pl-smi">withRelu</span>, <span class="pl-smi">padding</span>) {</td>
      </tr>
      <tr>
        <td id="L3760" class="blob-num js-line-number" data-line-number="3760"></td>
        <td id="LC3760" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (padding <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { padding <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>; }</td>
      </tr>
      <tr>
        <td id="L3761" class="blob-num js-line-number" data-line-number="3761"></td>
        <td id="LC3761" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-smi">params</span>.<span class="pl-smi">conv</span>, filters <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">filters</span>, bias <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">bias</span>;</td>
      </tr>
      <tr>
        <td id="L3762" class="blob-num js-line-number" data-line-number="3762"></td>
        <td id="LC3762" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">conv2d</span>(x, filters, strides, padding);</td>
      </tr>
      <tr>
        <td id="L3763" class="blob-num js-line-number" data-line-number="3763"></td>
        <td id="LC3763" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">add</span>(out, bias);</td>
      </tr>
      <tr>
        <td id="L3764" class="blob-num js-line-number" data-line-number="3764"></td>
        <td id="LC3764" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">scale</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">scale</span>);</td>
      </tr>
      <tr>
        <td id="L3765" class="blob-num js-line-number" data-line-number="3765"></td>
        <td id="LC3765" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> withRelu <span class="pl-k">?</span> <span class="pl-en">relu</span>(out) <span class="pl-k">:</span> out;</td>
      </tr>
      <tr>
        <td id="L3766" class="blob-num js-line-number" data-line-number="3766"></td>
        <td id="LC3766" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3767" class="blob-num js-line-number" data-line-number="3767"></td>
        <td id="LC3767" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">conv$1</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L3768" class="blob-num js-line-number" data-line-number="3768"></td>
        <td id="LC3768" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">convLayer$1</span>(x, params, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3769" class="blob-num js-line-number" data-line-number="3769"></td>
        <td id="LC3769" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3770" class="blob-num js-line-number" data-line-number="3770"></td>
        <td id="LC3770" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">convNoRelu</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L3771" class="blob-num js-line-number" data-line-number="3771"></td>
        <td id="LC3771" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">convLayer$1</span>(x, params, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L3772" class="blob-num js-line-number" data-line-number="3772"></td>
        <td id="LC3772" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3773" class="blob-num js-line-number" data-line-number="3773"></td>
        <td id="LC3773" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">convDown</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L3774" class="blob-num js-line-number" data-line-number="3774"></td>
        <td id="LC3774" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">convLayer$1</span>(x, params, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-c1">true</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3775" class="blob-num js-line-number" data-line-number="3775"></td>
        <td id="LC3775" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3776" class="blob-num js-line-number" data-line-number="3776"></td>
        <td id="LC3776" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3777" class="blob-num js-line-number" data-line-number="3777"></td>
        <td id="LC3777" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory$4</span>(<span class="pl-smi">extractWeights</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L3778" class="blob-num js-line-number" data-line-number="3778"></td>
        <td id="LC3778" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractFilterValues</span>(<span class="pl-smi">numFilterValues</span>, <span class="pl-smi">numFilters</span>, <span class="pl-smi">filterSize</span>) {</td>
      </tr>
      <tr>
        <td id="L3779" class="blob-num js-line-number" data-line-number="3779"></td>
        <td id="LC3779" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> weights <span class="pl-k">=</span> <span class="pl-en">extractWeights</span>(numFilterValues);</td>
      </tr>
      <tr>
        <td id="L3780" class="blob-num js-line-number" data-line-number="3780"></td>
        <td id="LC3780" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> depth <span class="pl-k">=</span> <span class="pl-smi">weights</span>.<span class="pl-c1">length</span> <span class="pl-k">/</span> (numFilters <span class="pl-k">*</span> filterSize <span class="pl-k">*</span> filterSize);</td>
      </tr>
      <tr>
        <td id="L3781" class="blob-num js-line-number" data-line-number="3781"></td>
        <td id="LC3781" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">isFloat</span>(depth)) {</td>
      </tr>
      <tr>
        <td id="L3782" class="blob-num js-line-number" data-line-number="3782"></td>
        <td id="LC3782" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>depth has to be an integer: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> depth <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, weights.length: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">weights</span>.<span class="pl-c1">length</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, numFilters: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> numFilters <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, filterSize: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> filterSize);</td>
      </tr>
      <tr>
        <td id="L3783" class="blob-num js-line-number" data-line-number="3783"></td>
        <td id="LC3783" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3784" class="blob-num js-line-number" data-line-number="3784"></td>
        <td id="LC3784" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">transpose</span>(<span class="pl-en">tensor4d</span>(weights, [numFilters, depth, filterSize, filterSize]), [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">1</span>, <span class="pl-c1">0</span>]); });</td>
      </tr>
      <tr>
        <td id="L3785" class="blob-num js-line-number" data-line-number="3785"></td>
        <td id="LC3785" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3786" class="blob-num js-line-number" data-line-number="3786"></td>
        <td id="LC3786" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvParams</span>(<span class="pl-smi">numFilterValues</span>, <span class="pl-smi">numFilters</span>, <span class="pl-smi">filterSize</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3787" class="blob-num js-line-number" data-line-number="3787"></td>
        <td id="LC3787" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">extractFilterValues</span>(numFilterValues, numFilters, filterSize);</td>
      </tr>
      <tr>
        <td id="L3788" class="blob-num js-line-number" data-line-number="3788"></td>
        <td id="LC3788" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(numFilters));</td>
      </tr>
      <tr>
        <td id="L3789" class="blob-num js-line-number" data-line-number="3789"></td>
        <td id="LC3789" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span> });</td>
      </tr>
      <tr>
        <td id="L3790" class="blob-num js-line-number" data-line-number="3790"></td>
        <td id="LC3790" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { filters<span class="pl-k">:</span> filters, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L3791" class="blob-num js-line-number" data-line-number="3791"></td>
        <td id="LC3791" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3792" class="blob-num js-line-number" data-line-number="3792"></td>
        <td id="LC3792" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractScaleLayerParams</span>(<span class="pl-smi">numWeights</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3793" class="blob-num js-line-number" data-line-number="3793"></td>
        <td id="LC3793" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> weights <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(numWeights));</td>
      </tr>
      <tr>
        <td id="L3794" class="blob-num js-line-number" data-line-number="3794"></td>
        <td id="LC3794" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> biases <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(numWeights));</td>
      </tr>
      <tr>
        <td id="L3795" class="blob-num js-line-number" data-line-number="3795"></td>
        <td id="LC3795" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/weights<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/biases<span class="pl-pds">&quot;</span></span> });</td>
      </tr>
      <tr>
        <td id="L3796" class="blob-num js-line-number" data-line-number="3796"></td>
        <td id="LC3796" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3797" class="blob-num js-line-number" data-line-number="3797"></td>
        <td id="LC3797" class="blob-code blob-code-inner js-file-line">                weights<span class="pl-k">:</span> weights,</td>
      </tr>
      <tr>
        <td id="L3798" class="blob-num js-line-number" data-line-number="3798"></td>
        <td id="LC3798" class="blob-code blob-code-inner js-file-line">                biases<span class="pl-k">:</span> biases</td>
      </tr>
      <tr>
        <td id="L3799" class="blob-num js-line-number" data-line-number="3799"></td>
        <td id="LC3799" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L3800" class="blob-num js-line-number" data-line-number="3800"></td>
        <td id="LC3800" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3801" class="blob-num js-line-number" data-line-number="3801"></td>
        <td id="LC3801" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvLayerParams</span>(<span class="pl-smi">numFilterValues</span>, <span class="pl-smi">numFilters</span>, <span class="pl-smi">filterSize</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3802" class="blob-num js-line-number" data-line-number="3802"></td>
        <td id="LC3802" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(numFilterValues, numFilters, filterSize, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3803" class="blob-num js-line-number" data-line-number="3803"></td>
        <td id="LC3803" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scale <span class="pl-k">=</span> <span class="pl-en">extractScaleLayerParams</span>(numFilters, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/scale<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3804" class="blob-num js-line-number" data-line-number="3804"></td>
        <td id="LC3804" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv<span class="pl-k">:</span> conv, scale<span class="pl-k">:</span> scale };</td>
      </tr>
      <tr>
        <td id="L3805" class="blob-num js-line-number" data-line-number="3805"></td>
        <td id="LC3805" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3806" class="blob-num js-line-number" data-line-number="3806"></td>
        <td id="LC3806" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-smi">numFilterValues</span>, <span class="pl-smi">numFilters</span>, <span class="pl-smi">filterSize</span>, <span class="pl-smi">mappedPrefix</span>, <span class="pl-smi">isDown</span>) {</td>
      </tr>
      <tr>
        <td id="L3807" class="blob-num js-line-number" data-line-number="3807"></td>
        <td id="LC3807" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isDown <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isDown <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L3808" class="blob-num js-line-number" data-line-number="3808"></td>
        <td id="LC3808" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv1 <span class="pl-k">=</span> <span class="pl-en">extractConvLayerParams</span>((isDown <span class="pl-k">?</span> <span class="pl-c1">0.5</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> numFilterValues, numFilters, filterSize, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3809" class="blob-num js-line-number" data-line-number="3809"></td>
        <td id="LC3809" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv2 <span class="pl-k">=</span> <span class="pl-en">extractConvLayerParams</span>(numFilterValues, numFilters, filterSize, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv2<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3810" class="blob-num js-line-number" data-line-number="3810"></td>
        <td id="LC3810" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv1<span class="pl-k">:</span> conv1, conv2<span class="pl-k">:</span> conv2 };</td>
      </tr>
      <tr>
        <td id="L3811" class="blob-num js-line-number" data-line-number="3811"></td>
        <td id="LC3811" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3812" class="blob-num js-line-number" data-line-number="3812"></td>
        <td id="LC3812" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3813" class="blob-num js-line-number" data-line-number="3813"></td>
        <td id="LC3813" class="blob-code blob-code-inner js-file-line">            extractConvLayerParams<span class="pl-k">:</span> extractConvLayerParams,</td>
      </tr>
      <tr>
        <td id="L3814" class="blob-num js-line-number" data-line-number="3814"></td>
        <td id="LC3814" class="blob-code blob-code-inner js-file-line">            extractResidualLayerParams<span class="pl-k">:</span> extractResidualLayerParams</td>
      </tr>
      <tr>
        <td id="L3815" class="blob-num js-line-number" data-line-number="3815"></td>
        <td id="LC3815" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3816" class="blob-num js-line-number" data-line-number="3816"></td>
        <td id="LC3816" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3817" class="blob-num js-line-number" data-line-number="3817"></td>
        <td id="LC3817" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParams$5</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L3818" class="blob-num js-line-number" data-line-number="3818"></td>
        <td id="LC3818" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractWeightsFactory</span>(weights), extractWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractWeights</span>, getRemainingWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">getRemainingWeights</span>;</td>
      </tr>
      <tr>
        <td id="L3819" class="blob-num js-line-number" data-line-number="3819"></td>
        <td id="LC3819" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3820" class="blob-num js-line-number" data-line-number="3820"></td>
        <td id="LC3820" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _b <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$4</span>(extractWeights, paramMappings), extractConvLayerParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractConvLayerParams</span>, extractResidualLayerParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractResidualLayerParams</span>;</td>
      </tr>
      <tr>
        <td id="L3821" class="blob-num js-line-number" data-line-number="3821"></td>
        <td id="LC3821" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv32_down <span class="pl-k">=</span> <span class="pl-en">extractConvLayerParams</span>(<span class="pl-c1">4704</span>, <span class="pl-c1">32</span>, <span class="pl-c1">7</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv32_down<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3822" class="blob-num js-line-number" data-line-number="3822"></td>
        <td id="LC3822" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv32_1 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">9216</span>, <span class="pl-c1">32</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv32_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3823" class="blob-num js-line-number" data-line-number="3823"></td>
        <td id="LC3823" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv32_2 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">9216</span>, <span class="pl-c1">32</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv32_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3824" class="blob-num js-line-number" data-line-number="3824"></td>
        <td id="LC3824" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv32_3 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">9216</span>, <span class="pl-c1">32</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv32_3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3825" class="blob-num js-line-number" data-line-number="3825"></td>
        <td id="LC3825" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv64_down <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">36864</span>, <span class="pl-c1">64</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv64_down<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3826" class="blob-num js-line-number" data-line-number="3826"></td>
        <td id="LC3826" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv64_1 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">36864</span>, <span class="pl-c1">64</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv64_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3827" class="blob-num js-line-number" data-line-number="3827"></td>
        <td id="LC3827" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv64_2 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">36864</span>, <span class="pl-c1">64</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv64_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3828" class="blob-num js-line-number" data-line-number="3828"></td>
        <td id="LC3828" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv64_3 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">36864</span>, <span class="pl-c1">64</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv64_3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3829" class="blob-num js-line-number" data-line-number="3829"></td>
        <td id="LC3829" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv128_down <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">147456</span>, <span class="pl-c1">128</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv128_down<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3830" class="blob-num js-line-number" data-line-number="3830"></td>
        <td id="LC3830" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv128_1 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">147456</span>, <span class="pl-c1">128</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv128_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3831" class="blob-num js-line-number" data-line-number="3831"></td>
        <td id="LC3831" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv128_2 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">147456</span>, <span class="pl-c1">128</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv128_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3832" class="blob-num js-line-number" data-line-number="3832"></td>
        <td id="LC3832" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv256_down <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">589824</span>, <span class="pl-c1">256</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv256_down<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3833" class="blob-num js-line-number" data-line-number="3833"></td>
        <td id="LC3833" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv256_1 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">589824</span>, <span class="pl-c1">256</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv256_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3834" class="blob-num js-line-number" data-line-number="3834"></td>
        <td id="LC3834" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv256_2 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">589824</span>, <span class="pl-c1">256</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv256_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3835" class="blob-num js-line-number" data-line-number="3835"></td>
        <td id="LC3835" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv256_down_out <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-c1">589824</span>, <span class="pl-c1">256</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>conv256_down_out<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3836" class="blob-num js-line-number" data-line-number="3836"></td>
        <td id="LC3836" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> fc <span class="pl-k">=</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">transpose</span>(<span class="pl-en">tensor2d</span>(<span class="pl-en">extractWeights</span>(<span class="pl-c1">256</span> <span class="pl-k">*</span> <span class="pl-c1">128</span>), [<span class="pl-c1">128</span>, <span class="pl-c1">256</span>]), [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>]); });</td>
      </tr>
      <tr>
        <td id="L3837" class="blob-num js-line-number" data-line-number="3837"></td>
        <td id="LC3837" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>fc<span class="pl-pds">&quot;</span></span> });</td>
      </tr>
      <tr>
        <td id="L3838" class="blob-num js-line-number" data-line-number="3838"></td>
        <td id="LC3838" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3839" class="blob-num js-line-number" data-line-number="3839"></td>
        <td id="LC3839" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>weights remaing after extract: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L3840" class="blob-num js-line-number" data-line-number="3840"></td>
        <td id="LC3840" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3841" class="blob-num js-line-number" data-line-number="3841"></td>
        <td id="LC3841" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> params <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3842" class="blob-num js-line-number" data-line-number="3842"></td>
        <td id="LC3842" class="blob-code blob-code-inner js-file-line">            conv32_down<span class="pl-k">:</span> conv32_down,</td>
      </tr>
      <tr>
        <td id="L3843" class="blob-num js-line-number" data-line-number="3843"></td>
        <td id="LC3843" class="blob-code blob-code-inner js-file-line">            conv32_1<span class="pl-k">:</span> conv32_1,</td>
      </tr>
      <tr>
        <td id="L3844" class="blob-num js-line-number" data-line-number="3844"></td>
        <td id="LC3844" class="blob-code blob-code-inner js-file-line">            conv32_2<span class="pl-k">:</span> conv32_2,</td>
      </tr>
      <tr>
        <td id="L3845" class="blob-num js-line-number" data-line-number="3845"></td>
        <td id="LC3845" class="blob-code blob-code-inner js-file-line">            conv32_3<span class="pl-k">:</span> conv32_3,</td>
      </tr>
      <tr>
        <td id="L3846" class="blob-num js-line-number" data-line-number="3846"></td>
        <td id="LC3846" class="blob-code blob-code-inner js-file-line">            conv64_down<span class="pl-k">:</span> conv64_down,</td>
      </tr>
      <tr>
        <td id="L3847" class="blob-num js-line-number" data-line-number="3847"></td>
        <td id="LC3847" class="blob-code blob-code-inner js-file-line">            conv64_1<span class="pl-k">:</span> conv64_1,</td>
      </tr>
      <tr>
        <td id="L3848" class="blob-num js-line-number" data-line-number="3848"></td>
        <td id="LC3848" class="blob-code blob-code-inner js-file-line">            conv64_2<span class="pl-k">:</span> conv64_2,</td>
      </tr>
      <tr>
        <td id="L3849" class="blob-num js-line-number" data-line-number="3849"></td>
        <td id="LC3849" class="blob-code blob-code-inner js-file-line">            conv64_3<span class="pl-k">:</span> conv64_3,</td>
      </tr>
      <tr>
        <td id="L3850" class="blob-num js-line-number" data-line-number="3850"></td>
        <td id="LC3850" class="blob-code blob-code-inner js-file-line">            conv128_down<span class="pl-k">:</span> conv128_down,</td>
      </tr>
      <tr>
        <td id="L3851" class="blob-num js-line-number" data-line-number="3851"></td>
        <td id="LC3851" class="blob-code blob-code-inner js-file-line">            conv128_1<span class="pl-k">:</span> conv128_1,</td>
      </tr>
      <tr>
        <td id="L3852" class="blob-num js-line-number" data-line-number="3852"></td>
        <td id="LC3852" class="blob-code blob-code-inner js-file-line">            conv128_2<span class="pl-k">:</span> conv128_2,</td>
      </tr>
      <tr>
        <td id="L3853" class="blob-num js-line-number" data-line-number="3853"></td>
        <td id="LC3853" class="blob-code blob-code-inner js-file-line">            conv256_down<span class="pl-k">:</span> conv256_down,</td>
      </tr>
      <tr>
        <td id="L3854" class="blob-num js-line-number" data-line-number="3854"></td>
        <td id="LC3854" class="blob-code blob-code-inner js-file-line">            conv256_1<span class="pl-k">:</span> conv256_1,</td>
      </tr>
      <tr>
        <td id="L3855" class="blob-num js-line-number" data-line-number="3855"></td>
        <td id="LC3855" class="blob-code blob-code-inner js-file-line">            conv256_2<span class="pl-k">:</span> conv256_2,</td>
      </tr>
      <tr>
        <td id="L3856" class="blob-num js-line-number" data-line-number="3856"></td>
        <td id="LC3856" class="blob-code blob-code-inner js-file-line">            conv256_down_out<span class="pl-k">:</span> conv256_down_out,</td>
      </tr>
      <tr>
        <td id="L3857" class="blob-num js-line-number" data-line-number="3857"></td>
        <td id="LC3857" class="blob-code blob-code-inner js-file-line">            fc<span class="pl-k">:</span> fc</td>
      </tr>
      <tr>
        <td id="L3858" class="blob-num js-line-number" data-line-number="3858"></td>
        <td id="LC3858" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3859" class="blob-num js-line-number" data-line-number="3859"></td>
        <td id="LC3859" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> params, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L3860" class="blob-num js-line-number" data-line-number="3860"></td>
        <td id="LC3860" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3861" class="blob-num js-line-number" data-line-number="3861"></td>
        <td id="LC3861" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3862" class="blob-num js-line-number" data-line-number="3862"></td>
        <td id="LC3862" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory$5</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L3863" class="blob-num js-line-number" data-line-number="3863"></td>
        <td id="LC3863" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractWeightEntry <span class="pl-k">=</span> <span class="pl-en">extractWeightEntryFactory</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3864" class="blob-num js-line-number" data-line-number="3864"></td>
        <td id="LC3864" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractScaleLayerParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3865" class="blob-num js-line-number" data-line-number="3865"></td>
        <td id="LC3865" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> weights <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/scale/weights<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3866" class="blob-num js-line-number" data-line-number="3866"></td>
        <td id="LC3866" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> biases <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/scale/biases<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3867" class="blob-num js-line-number" data-line-number="3867"></td>
        <td id="LC3867" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { weights<span class="pl-k">:</span> weights, biases<span class="pl-k">:</span> biases };</td>
      </tr>
      <tr>
        <td id="L3868" class="blob-num js-line-number" data-line-number="3868"></td>
        <td id="LC3868" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3869" class="blob-num js-line-number" data-line-number="3869"></td>
        <td id="LC3869" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvLayerParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3870" class="blob-num js-line-number" data-line-number="3870"></td>
        <td id="LC3870" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv/filters<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L3871" class="blob-num js-line-number" data-line-number="3871"></td>
        <td id="LC3871" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv/bias<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3872" class="blob-num js-line-number" data-line-number="3872"></td>
        <td id="LC3872" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scale <span class="pl-k">=</span> <span class="pl-en">extractScaleLayerParams</span>(prefix);</td>
      </tr>
      <tr>
        <td id="L3873" class="blob-num js-line-number" data-line-number="3873"></td>
        <td id="LC3873" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv<span class="pl-k">:</span> { filters<span class="pl-k">:</span> filters, bias<span class="pl-k">:</span> bias }, scale<span class="pl-k">:</span> scale };</td>
      </tr>
      <tr>
        <td id="L3874" class="blob-num js-line-number" data-line-number="3874"></td>
        <td id="LC3874" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3875" class="blob-num js-line-number" data-line-number="3875"></td>
        <td id="LC3875" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L3876" class="blob-num js-line-number" data-line-number="3876"></td>
        <td id="LC3876" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3877" class="blob-num js-line-number" data-line-number="3877"></td>
        <td id="LC3877" class="blob-code blob-code-inner js-file-line">                conv1<span class="pl-k">:</span> <span class="pl-en">extractConvLayerParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv1<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3878" class="blob-num js-line-number" data-line-number="3878"></td>
        <td id="LC3878" class="blob-code blob-code-inner js-file-line">                conv2<span class="pl-k">:</span> <span class="pl-en">extractConvLayerParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv2<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L3879" class="blob-num js-line-number" data-line-number="3879"></td>
        <td id="LC3879" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L3880" class="blob-num js-line-number" data-line-number="3880"></td>
        <td id="LC3880" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3881" class="blob-num js-line-number" data-line-number="3881"></td>
        <td id="LC3881" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3882" class="blob-num js-line-number" data-line-number="3882"></td>
        <td id="LC3882" class="blob-code blob-code-inner js-file-line">            extractConvLayerParams<span class="pl-k">:</span> extractConvLayerParams,</td>
      </tr>
      <tr>
        <td id="L3883" class="blob-num js-line-number" data-line-number="3883"></td>
        <td id="LC3883" class="blob-code blob-code-inner js-file-line">            extractResidualLayerParams<span class="pl-k">:</span> extractResidualLayerParams</td>
      </tr>
      <tr>
        <td id="L3884" class="blob-num js-line-number" data-line-number="3884"></td>
        <td id="LC3884" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3885" class="blob-num js-line-number" data-line-number="3885"></td>
        <td id="LC3885" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3886" class="blob-num js-line-number" data-line-number="3886"></td>
        <td id="LC3886" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsFromWeigthMap$5</span>(<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L3887" class="blob-num js-line-number" data-line-number="3887"></td>
        <td id="LC3887" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3888" class="blob-num js-line-number" data-line-number="3888"></td>
        <td id="LC3888" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$5</span>(weightMap, paramMappings), extractConvLayerParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractConvLayerParams</span>, extractResidualLayerParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractResidualLayerParams</span>;</td>
      </tr>
      <tr>
        <td id="L3889" class="blob-num js-line-number" data-line-number="3889"></td>
        <td id="LC3889" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv32_down <span class="pl-k">=</span> <span class="pl-en">extractConvLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv32_down<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3890" class="blob-num js-line-number" data-line-number="3890"></td>
        <td id="LC3890" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv32_1 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv32_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3891" class="blob-num js-line-number" data-line-number="3891"></td>
        <td id="LC3891" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv32_2 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv32_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3892" class="blob-num js-line-number" data-line-number="3892"></td>
        <td id="LC3892" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv32_3 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv32_3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3893" class="blob-num js-line-number" data-line-number="3893"></td>
        <td id="LC3893" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv64_down <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv64_down<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3894" class="blob-num js-line-number" data-line-number="3894"></td>
        <td id="LC3894" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv64_1 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv64_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3895" class="blob-num js-line-number" data-line-number="3895"></td>
        <td id="LC3895" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv64_2 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv64_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3896" class="blob-num js-line-number" data-line-number="3896"></td>
        <td id="LC3896" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv64_3 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv64_3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3897" class="blob-num js-line-number" data-line-number="3897"></td>
        <td id="LC3897" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv128_down <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv128_down<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3898" class="blob-num js-line-number" data-line-number="3898"></td>
        <td id="LC3898" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv128_1 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv128_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3899" class="blob-num js-line-number" data-line-number="3899"></td>
        <td id="LC3899" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv128_2 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv128_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3900" class="blob-num js-line-number" data-line-number="3900"></td>
        <td id="LC3900" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv256_down <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv256_down<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3901" class="blob-num js-line-number" data-line-number="3901"></td>
        <td id="LC3901" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv256_1 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv256_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3902" class="blob-num js-line-number" data-line-number="3902"></td>
        <td id="LC3902" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv256_2 <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv256_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3903" class="blob-num js-line-number" data-line-number="3903"></td>
        <td id="LC3903" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> conv256_down_out <span class="pl-k">=</span> <span class="pl-en">extractResidualLayerParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>conv256_down_out<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3904" class="blob-num js-line-number" data-line-number="3904"></td>
        <td id="LC3904" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> fc <span class="pl-k">=</span> weightMap[<span class="pl-s"><span class="pl-pds">&#39;</span>fc<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L3905" class="blob-num js-line-number" data-line-number="3905"></td>
        <td id="LC3905" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ originalPath<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>fc<span class="pl-pds">&#39;</span></span>, paramPath<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>fc<span class="pl-pds">&#39;</span></span> });</td>
      </tr>
      <tr>
        <td id="L3906" class="blob-num js-line-number" data-line-number="3906"></td>
        <td id="LC3906" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isTensor2D</span>(fc)) {</td>
      </tr>
      <tr>
        <td id="L3907" class="blob-num js-line-number" data-line-number="3907"></td>
        <td id="LC3907" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expected weightMap[fc] to be a Tensor2D, instead have <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> fc);</td>
      </tr>
      <tr>
        <td id="L3908" class="blob-num js-line-number" data-line-number="3908"></td>
        <td id="LC3908" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3909" class="blob-num js-line-number" data-line-number="3909"></td>
        <td id="LC3909" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> params <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3910" class="blob-num js-line-number" data-line-number="3910"></td>
        <td id="LC3910" class="blob-code blob-code-inner js-file-line">            conv32_down<span class="pl-k">:</span> conv32_down,</td>
      </tr>
      <tr>
        <td id="L3911" class="blob-num js-line-number" data-line-number="3911"></td>
        <td id="LC3911" class="blob-code blob-code-inner js-file-line">            conv32_1<span class="pl-k">:</span> conv32_1,</td>
      </tr>
      <tr>
        <td id="L3912" class="blob-num js-line-number" data-line-number="3912"></td>
        <td id="LC3912" class="blob-code blob-code-inner js-file-line">            conv32_2<span class="pl-k">:</span> conv32_2,</td>
      </tr>
      <tr>
        <td id="L3913" class="blob-num js-line-number" data-line-number="3913"></td>
        <td id="LC3913" class="blob-code blob-code-inner js-file-line">            conv32_3<span class="pl-k">:</span> conv32_3,</td>
      </tr>
      <tr>
        <td id="L3914" class="blob-num js-line-number" data-line-number="3914"></td>
        <td id="LC3914" class="blob-code blob-code-inner js-file-line">            conv64_down<span class="pl-k">:</span> conv64_down,</td>
      </tr>
      <tr>
        <td id="L3915" class="blob-num js-line-number" data-line-number="3915"></td>
        <td id="LC3915" class="blob-code blob-code-inner js-file-line">            conv64_1<span class="pl-k">:</span> conv64_1,</td>
      </tr>
      <tr>
        <td id="L3916" class="blob-num js-line-number" data-line-number="3916"></td>
        <td id="LC3916" class="blob-code blob-code-inner js-file-line">            conv64_2<span class="pl-k">:</span> conv64_2,</td>
      </tr>
      <tr>
        <td id="L3917" class="blob-num js-line-number" data-line-number="3917"></td>
        <td id="LC3917" class="blob-code blob-code-inner js-file-line">            conv64_3<span class="pl-k">:</span> conv64_3,</td>
      </tr>
      <tr>
        <td id="L3918" class="blob-num js-line-number" data-line-number="3918"></td>
        <td id="LC3918" class="blob-code blob-code-inner js-file-line">            conv128_down<span class="pl-k">:</span> conv128_down,</td>
      </tr>
      <tr>
        <td id="L3919" class="blob-num js-line-number" data-line-number="3919"></td>
        <td id="LC3919" class="blob-code blob-code-inner js-file-line">            conv128_1<span class="pl-k">:</span> conv128_1,</td>
      </tr>
      <tr>
        <td id="L3920" class="blob-num js-line-number" data-line-number="3920"></td>
        <td id="LC3920" class="blob-code blob-code-inner js-file-line">            conv128_2<span class="pl-k">:</span> conv128_2,</td>
      </tr>
      <tr>
        <td id="L3921" class="blob-num js-line-number" data-line-number="3921"></td>
        <td id="LC3921" class="blob-code blob-code-inner js-file-line">            conv256_down<span class="pl-k">:</span> conv256_down,</td>
      </tr>
      <tr>
        <td id="L3922" class="blob-num js-line-number" data-line-number="3922"></td>
        <td id="LC3922" class="blob-code blob-code-inner js-file-line">            conv256_1<span class="pl-k">:</span> conv256_1,</td>
      </tr>
      <tr>
        <td id="L3923" class="blob-num js-line-number" data-line-number="3923"></td>
        <td id="LC3923" class="blob-code blob-code-inner js-file-line">            conv256_2<span class="pl-k">:</span> conv256_2,</td>
      </tr>
      <tr>
        <td id="L3924" class="blob-num js-line-number" data-line-number="3924"></td>
        <td id="LC3924" class="blob-code blob-code-inner js-file-line">            conv256_down_out<span class="pl-k">:</span> conv256_down_out,</td>
      </tr>
      <tr>
        <td id="L3925" class="blob-num js-line-number" data-line-number="3925"></td>
        <td id="LC3925" class="blob-code blob-code-inner js-file-line">            fc<span class="pl-k">:</span> fc</td>
      </tr>
      <tr>
        <td id="L3926" class="blob-num js-line-number" data-line-number="3926"></td>
        <td id="LC3926" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3927" class="blob-num js-line-number" data-line-number="3927"></td>
        <td id="LC3927" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">disposeUnusedWeightTensors</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L3928" class="blob-num js-line-number" data-line-number="3928"></td>
        <td id="LC3928" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> params, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L3929" class="blob-num js-line-number" data-line-number="3929"></td>
        <td id="LC3929" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3930" class="blob-num js-line-number" data-line-number="3930"></td>
        <td id="LC3930" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3931" class="blob-num js-line-number" data-line-number="3931"></td>
        <td id="LC3931" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">residual</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L3932" class="blob-num js-line-number" data-line-number="3932"></td>
        <td id="LC3932" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">conv$1</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">conv1</span>);</td>
      </tr>
      <tr>
        <td id="L3933" class="blob-num js-line-number" data-line-number="3933"></td>
        <td id="LC3933" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">convNoRelu</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv2</span>);</td>
      </tr>
      <tr>
        <td id="L3934" class="blob-num js-line-number" data-line-number="3934"></td>
        <td id="LC3934" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">add</span>(out, x);</td>
      </tr>
      <tr>
        <td id="L3935" class="blob-num js-line-number" data-line-number="3935"></td>
        <td id="LC3935" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">relu</span>(out);</td>
      </tr>
      <tr>
        <td id="L3936" class="blob-num js-line-number" data-line-number="3936"></td>
        <td id="LC3936" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L3937" class="blob-num js-line-number" data-line-number="3937"></td>
        <td id="LC3937" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3938" class="blob-num js-line-number" data-line-number="3938"></td>
        <td id="LC3938" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">residualDown</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L3939" class="blob-num js-line-number" data-line-number="3939"></td>
        <td id="LC3939" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">convDown</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">conv1</span>);</td>
      </tr>
      <tr>
        <td id="L3940" class="blob-num js-line-number" data-line-number="3940"></td>
        <td id="LC3940" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">convNoRelu</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv2</span>);</td>
      </tr>
      <tr>
        <td id="L3941" class="blob-num js-line-number" data-line-number="3941"></td>
        <td id="LC3941" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> pooled <span class="pl-k">=</span> <span class="pl-en">avgPool</span>(x, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3942" class="blob-num js-line-number" data-line-number="3942"></td>
        <td id="LC3942" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> zeros$1 <span class="pl-k">=</span> <span class="pl-en">zeros</span>(<span class="pl-smi">pooled</span>.<span class="pl-c1">shape</span>);</td>
      </tr>
      <tr>
        <td id="L3943" class="blob-num js-line-number" data-line-number="3943"></td>
        <td id="LC3943" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> isPad <span class="pl-k">=</span> <span class="pl-smi">pooled</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">3</span>] <span class="pl-k">!==</span> <span class="pl-smi">out</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L3944" class="blob-num js-line-number" data-line-number="3944"></td>
        <td id="LC3944" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> isAdjustShape <span class="pl-k">=</span> <span class="pl-smi">pooled</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">1</span>] <span class="pl-k">!==</span> <span class="pl-smi">out</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">1</span>] <span class="pl-k">||</span> <span class="pl-smi">pooled</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">2</span>] <span class="pl-k">!==</span> <span class="pl-smi">out</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L3945" class="blob-num js-line-number" data-line-number="3945"></td>
        <td id="LC3945" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isAdjustShape) {</td>
      </tr>
      <tr>
        <td id="L3946" class="blob-num js-line-number" data-line-number="3946"></td>
        <td id="LC3946" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> padShapeX <span class="pl-k">=</span> <span class="pl-smi">out</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L3947" class="blob-num js-line-number" data-line-number="3947"></td>
        <td id="LC3947" class="blob-code blob-code-inner js-file-line">            padShapeX[<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3948" class="blob-num js-line-number" data-line-number="3948"></td>
        <td id="LC3948" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> zerosW <span class="pl-k">=</span> <span class="pl-en">zeros</span>(padShapeX);</td>
      </tr>
      <tr>
        <td id="L3949" class="blob-num js-line-number" data-line-number="3949"></td>
        <td id="LC3949" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">concat</span>([out, zerosW], <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3950" class="blob-num js-line-number" data-line-number="3950"></td>
        <td id="LC3950" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> padShapeY <span class="pl-k">=</span> <span class="pl-smi">out</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L3951" class="blob-num js-line-number" data-line-number="3951"></td>
        <td id="LC3951" class="blob-code blob-code-inner js-file-line">            padShapeY[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3952" class="blob-num js-line-number" data-line-number="3952"></td>
        <td id="LC3952" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> zerosH <span class="pl-k">=</span> <span class="pl-en">zeros</span>(padShapeY);</td>
      </tr>
      <tr>
        <td id="L3953" class="blob-num js-line-number" data-line-number="3953"></td>
        <td id="LC3953" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">concat</span>([out, zerosH], <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L3954" class="blob-num js-line-number" data-line-number="3954"></td>
        <td id="LC3954" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3955" class="blob-num js-line-number" data-line-number="3955"></td>
        <td id="LC3955" class="blob-code blob-code-inner js-file-line">        pooled <span class="pl-k">=</span> isPad <span class="pl-k">?</span> <span class="pl-en">concat</span>([pooled, zeros$1], <span class="pl-c1">3</span>) <span class="pl-k">:</span> pooled;</td>
      </tr>
      <tr>
        <td id="L3956" class="blob-num js-line-number" data-line-number="3956"></td>
        <td id="LC3956" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">add</span>(pooled, out);</td>
      </tr>
      <tr>
        <td id="L3957" class="blob-num js-line-number" data-line-number="3957"></td>
        <td id="LC3957" class="blob-code blob-code-inner js-file-line">        out <span class="pl-k">=</span> <span class="pl-en">relu</span>(out);</td>
      </tr>
      <tr>
        <td id="L3958" class="blob-num js-line-number" data-line-number="3958"></td>
        <td id="LC3958" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L3959" class="blob-num js-line-number" data-line-number="3959"></td>
        <td id="LC3959" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3960" class="blob-num js-line-number" data-line-number="3960"></td>
        <td id="LC3960" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3961" class="blob-num js-line-number" data-line-number="3961"></td>
        <td id="LC3961" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceRecognitionNet <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L3962" class="blob-num js-line-number" data-line-number="3962"></td>
        <td id="LC3962" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceRecognitionNet, _super);</td>
      </tr>
      <tr>
        <td id="L3963" class="blob-num js-line-number" data-line-number="3963"></td>
        <td id="LC3963" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceRecognitionNet</span>() {</td>
      </tr>
      <tr>
        <td id="L3964" class="blob-num js-line-number" data-line-number="3964"></td>
        <td id="LC3964" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>FaceRecognitionNet<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L3965" class="blob-num js-line-number" data-line-number="3965"></td>
        <td id="LC3965" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3966" class="blob-num js-line-number" data-line-number="3966"></td>
        <td id="LC3966" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceRecognitionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3967" class="blob-num js-line-number" data-line-number="3967"></td>
        <td id="LC3967" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> params <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L3968" class="blob-num js-line-number" data-line-number="3968"></td>
        <td id="LC3968" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>params) {</td>
      </tr>
      <tr>
        <td id="L3969" class="blob-num js-line-number" data-line-number="3969"></td>
        <td id="LC3969" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>FaceRecognitionNet - load model before inference<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3970" class="blob-num js-line-number" data-line-number="3970"></td>
        <td id="LC3970" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3971" class="blob-num js-line-number" data-line-number="3971"></td>
        <td id="LC3971" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3972" class="blob-num js-line-number" data-line-number="3972"></td>
        <td id="LC3972" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> batchTensor <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-en">toBatchTensor</span>(<span class="pl-c1">150</span>, <span class="pl-c1">true</span>).<span class="pl-en">toFloat</span>();</td>
      </tr>
      <tr>
        <td id="L3973" class="blob-num js-line-number" data-line-number="3973"></td>
        <td id="LC3973" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> meanRgb <span class="pl-k">=</span> [<span class="pl-c1">122.782</span>, <span class="pl-c1">117.001</span>, <span class="pl-c1">104.298</span>];</td>
      </tr>
      <tr>
        <td id="L3974" class="blob-num js-line-number" data-line-number="3974"></td>
        <td id="LC3974" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> normalized <span class="pl-k">=</span> <span class="pl-en">normalize</span>(batchTensor, meanRgb).<span class="pl-en">div</span>(<span class="pl-en">scalar</span>(<span class="pl-c1">256</span>));</td>
      </tr>
      <tr>
        <td id="L3975" class="blob-num js-line-number" data-line-number="3975"></td>
        <td id="LC3975" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">convDown</span>(normalized, <span class="pl-smi">params</span>.<span class="pl-smi">conv32_down</span>);</td>
      </tr>
      <tr>
        <td id="L3976" class="blob-num js-line-number" data-line-number="3976"></td>
        <td id="LC3976" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3977" class="blob-num js-line-number" data-line-number="3977"></td>
        <td id="LC3977" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv32_1</span>);</td>
      </tr>
      <tr>
        <td id="L3978" class="blob-num js-line-number" data-line-number="3978"></td>
        <td id="LC3978" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv32_2</span>);</td>
      </tr>
      <tr>
        <td id="L3979" class="blob-num js-line-number" data-line-number="3979"></td>
        <td id="LC3979" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv32_3</span>);</td>
      </tr>
      <tr>
        <td id="L3980" class="blob-num js-line-number" data-line-number="3980"></td>
        <td id="LC3980" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residualDown</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv64_down</span>);</td>
      </tr>
      <tr>
        <td id="L3981" class="blob-num js-line-number" data-line-number="3981"></td>
        <td id="LC3981" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv64_1</span>);</td>
      </tr>
      <tr>
        <td id="L3982" class="blob-num js-line-number" data-line-number="3982"></td>
        <td id="LC3982" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv64_2</span>);</td>
      </tr>
      <tr>
        <td id="L3983" class="blob-num js-line-number" data-line-number="3983"></td>
        <td id="LC3983" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv64_3</span>);</td>
      </tr>
      <tr>
        <td id="L3984" class="blob-num js-line-number" data-line-number="3984"></td>
        <td id="LC3984" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residualDown</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv128_down</span>);</td>
      </tr>
      <tr>
        <td id="L3985" class="blob-num js-line-number" data-line-number="3985"></td>
        <td id="LC3985" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv128_1</span>);</td>
      </tr>
      <tr>
        <td id="L3986" class="blob-num js-line-number" data-line-number="3986"></td>
        <td id="LC3986" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv128_2</span>);</td>
      </tr>
      <tr>
        <td id="L3987" class="blob-num js-line-number" data-line-number="3987"></td>
        <td id="LC3987" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residualDown</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv256_down</span>);</td>
      </tr>
      <tr>
        <td id="L3988" class="blob-num js-line-number" data-line-number="3988"></td>
        <td id="LC3988" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv256_1</span>);</td>
      </tr>
      <tr>
        <td id="L3989" class="blob-num js-line-number" data-line-number="3989"></td>
        <td id="LC3989" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residual</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv256_2</span>);</td>
      </tr>
      <tr>
        <td id="L3990" class="blob-num js-line-number" data-line-number="3990"></td>
        <td id="LC3990" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">residualDown</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv256_down_out</span>);</td>
      </tr>
      <tr>
        <td id="L3991" class="blob-num js-line-number" data-line-number="3991"></td>
        <td id="LC3991" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> globalAvg <span class="pl-k">=</span> <span class="pl-smi">out</span>.<span class="pl-en">mean</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L3992" class="blob-num js-line-number" data-line-number="3992"></td>
        <td id="LC3992" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> fullyConnected <span class="pl-k">=</span> <span class="pl-en">matMul</span>(globalAvg, <span class="pl-smi">params</span>.<span class="pl-smi">fc</span>);</td>
      </tr>
      <tr>
        <td id="L3993" class="blob-num js-line-number" data-line-number="3993"></td>
        <td id="LC3993" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> fullyConnected;</td>
      </tr>
      <tr>
        <td id="L3994" class="blob-num js-line-number" data-line-number="3994"></td>
        <td id="LC3994" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3995" class="blob-num js-line-number" data-line-number="3995"></td>
        <td id="LC3995" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3996" class="blob-num js-line-number" data-line-number="3996"></td>
        <td id="LC3996" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceRecognitionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L3997" class="blob-num js-line-number" data-line-number="3997"></td>
        <td id="LC3997" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3998" class="blob-num js-line-number" data-line-number="3998"></td>
        <td id="LC3998" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L3999" class="blob-num js-line-number" data-line-number="3999"></td>
        <td id="LC3999" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L4000" class="blob-num js-line-number" data-line-number="4000"></td>
        <td id="LC4000" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L4001" class="blob-num js-line-number" data-line-number="4001"></td>
        <td id="LC4001" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L4002" class="blob-num js-line-number" data-line-number="4002"></td>
        <td id="LC4002" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L4003" class="blob-num js-line-number" data-line-number="4003"></td>
        <td id="LC4003" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L4004" class="blob-num js-line-number" data-line-number="4004"></td>
        <td id="LC4004" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()])];</td>
      </tr>
      <tr>
        <td id="L4005" class="blob-num js-line-number" data-line-number="4005"></td>
        <td id="LC4005" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4006" class="blob-num js-line-number" data-line-number="4006"></td>
        <td id="LC4006" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L4007" class="blob-num js-line-number" data-line-number="4007"></td>
        <td id="LC4007" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4008" class="blob-num js-line-number" data-line-number="4008"></td>
        <td id="LC4008" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4009" class="blob-num js-line-number" data-line-number="4009"></td>
        <td id="LC4009" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceRecognitionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFaceDescriptor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L4010" class="blob-num js-line-number" data-line-number="4010"></td>
        <td id="LC4010" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4011" class="blob-num js-line-number" data-line-number="4011"></td>
        <td id="LC4011" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> netInput, faceDescriptorTensors, faceDescriptorsForBatch;</td>
      </tr>
      <tr>
        <td id="L4012" class="blob-num js-line-number" data-line-number="4012"></td>
        <td id="LC4012" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L4013" class="blob-num js-line-number" data-line-number="4013"></td>
        <td id="LC4013" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L4014" class="blob-num js-line-number" data-line-number="4014"></td>
        <td id="LC4014" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L4015" class="blob-num js-line-number" data-line-number="4015"></td>
        <td id="LC4015" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L4016" class="blob-num js-line-number" data-line-number="4016"></td>
        <td id="LC4016" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L4017" class="blob-num js-line-number" data-line-number="4017"></td>
        <td id="LC4017" class="blob-code blob-code-inner js-file-line">                            netInput <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L4018" class="blob-num js-line-number" data-line-number="4018"></td>
        <td id="LC4018" class="blob-code blob-code-inner js-file-line">                            faceDescriptorTensors <span class="pl-k">=</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">unstack</span>(<span class="pl-smi">_this</span>.<span class="pl-en">forwardInput</span>(netInput)); });</td>
      </tr>
      <tr>
        <td id="L4019" class="blob-num js-line-number" data-line-number="4019"></td>
        <td id="LC4019" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">faceDescriptorTensors</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">t</span>) { <span class="pl-k">return</span> <span class="pl-smi">t</span>.<span class="pl-c1">data</span>(); }))];</td>
      </tr>
      <tr>
        <td id="L4020" class="blob-num js-line-number" data-line-number="4020"></td>
        <td id="LC4020" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L4021" class="blob-num js-line-number" data-line-number="4021"></td>
        <td id="LC4021" class="blob-code blob-code-inner js-file-line">                            faceDescriptorsForBatch <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L4022" class="blob-num js-line-number" data-line-number="4022"></td>
        <td id="LC4022" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">faceDescriptorTensors</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">t</span>) { <span class="pl-k">return</span> <span class="pl-smi">t</span>.<span class="pl-en">dispose</span>(); });</td>
      </tr>
      <tr>
        <td id="L4023" class="blob-num js-line-number" data-line-number="4023"></td>
        <td id="LC4023" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">netInput</span>.<span class="pl-smi">isBatchInput</span></td>
      </tr>
      <tr>
        <td id="L4024" class="blob-num js-line-number" data-line-number="4024"></td>
        <td id="LC4024" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">?</span> faceDescriptorsForBatch</td>
      </tr>
      <tr>
        <td id="L4025" class="blob-num js-line-number" data-line-number="4025"></td>
        <td id="LC4025" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">:</span> faceDescriptorsForBatch[<span class="pl-c1">0</span>]];</td>
      </tr>
      <tr>
        <td id="L4026" class="blob-num js-line-number" data-line-number="4026"></td>
        <td id="LC4026" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4027" class="blob-num js-line-number" data-line-number="4027"></td>
        <td id="LC4027" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L4028" class="blob-num js-line-number" data-line-number="4028"></td>
        <td id="LC4028" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4029" class="blob-num js-line-number" data-line-number="4029"></td>
        <td id="LC4029" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4030" class="blob-num js-line-number" data-line-number="4030"></td>
        <td id="LC4030" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceRecognitionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4031" class="blob-num js-line-number" data-line-number="4031"></td>
        <td id="LC4031" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>face_recognition_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4032" class="blob-num js-line-number" data-line-number="4032"></td>
        <td id="LC4032" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4033" class="blob-num js-line-number" data-line-number="4033"></td>
        <td id="LC4033" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceRecognitionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L4034" class="blob-num js-line-number" data-line-number="4034"></td>
        <td id="LC4034" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsFromWeigthMap$5</span>(weightMap);</td>
      </tr>
      <tr>
        <td id="L4035" class="blob-num js-line-number" data-line-number="4035"></td>
        <td id="LC4035" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4036" class="blob-num js-line-number" data-line-number="4036"></td>
        <td id="LC4036" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceRecognitionNet</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L4037" class="blob-num js-line-number" data-line-number="4037"></td>
        <td id="LC4037" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParams$5</span>(weights);</td>
      </tr>
      <tr>
        <td id="L4038" class="blob-num js-line-number" data-line-number="4038"></td>
        <td id="LC4038" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4039" class="blob-num js-line-number" data-line-number="4039"></td>
        <td id="LC4039" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceRecognitionNet;</td>
      </tr>
      <tr>
        <td id="L4040" class="blob-num js-line-number" data-line-number="4040"></td>
        <td id="LC4040" class="blob-code blob-code-inner js-file-line">    }(NeuralNetwork));</td>
      </tr>
      <tr>
        <td id="L4041" class="blob-num js-line-number" data-line-number="4041"></td>
        <td id="LC4041" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4042" class="blob-num js-line-number" data-line-number="4042"></td>
        <td id="LC4042" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createFaceRecognitionNet</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L4043" class="blob-num js-line-number" data-line-number="4043"></td>
        <td id="LC4043" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> net <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">FaceRecognitionNet</span>();</td>
      </tr>
      <tr>
        <td id="L4044" class="blob-num js-line-number" data-line-number="4044"></td>
        <td id="LC4044" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">net</span>.<span class="pl-en">extractWeights</span>(weights);</td>
      </tr>
      <tr>
        <td id="L4045" class="blob-num js-line-number" data-line-number="4045"></td>
        <td id="LC4045" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> net;</td>
      </tr>
      <tr>
        <td id="L4046" class="blob-num js-line-number" data-line-number="4046"></td>
        <td id="LC4046" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4047" class="blob-num js-line-number" data-line-number="4047"></td>
        <td id="LC4047" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4048" class="blob-num js-line-number" data-line-number="4048"></td>
        <td id="LC4048" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extendWithFaceDescriptor</span>(<span class="pl-smi">sourceObj</span>, <span class="pl-smi">descriptor</span>) {</td>
      </tr>
      <tr>
        <td id="L4049" class="blob-num js-line-number" data-line-number="4049"></td>
        <td id="LC4049" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extension <span class="pl-k">=</span> { descriptor<span class="pl-k">:</span> descriptor };</td>
      </tr>
      <tr>
        <td id="L4050" class="blob-num js-line-number" data-line-number="4050"></td>
        <td id="LC4050" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({}, sourceObj, extension);</td>
      </tr>
      <tr>
        <td id="L4051" class="blob-num js-line-number" data-line-number="4051"></td>
        <td id="LC4051" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4052" class="blob-num js-line-number" data-line-number="4052"></td>
        <td id="LC4052" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4053" class="blob-num js-line-number" data-line-number="4053"></td>
        <td id="LC4053" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> MtcnnOptions <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4054" class="blob-num js-line-number" data-line-number="4054"></td>
        <td id="LC4054" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">MtcnnOptions</span>(<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L4055" class="blob-num js-line-number" data-line-number="4055"></td>
        <td id="LC4055" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _b <span class="pl-k">=</span> _a <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> {} <span class="pl-k">:</span> _a, minFaceSize <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">minFaceSize</span>, scaleFactor <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">scaleFactor</span>, maxNumScales <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">maxNumScales</span>, scoreThresholds <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">scoreThresholds</span>, scaleSteps <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">scaleSteps</span>;</td>
      </tr>
      <tr>
        <td id="L4056" class="blob-num js-line-number" data-line-number="4056"></td>
        <td id="LC4056" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>MtcnnOptions<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4057" class="blob-num js-line-number" data-line-number="4057"></td>
        <td id="LC4057" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_minFaceSize</span> <span class="pl-k">=</span> minFaceSize <span class="pl-k">||</span> <span class="pl-c1">20</span>;</td>
      </tr>
      <tr>
        <td id="L4058" class="blob-num js-line-number" data-line-number="4058"></td>
        <td id="LC4058" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_scaleFactor</span> <span class="pl-k">=</span> scaleFactor <span class="pl-k">||</span> <span class="pl-c1">0.709</span>;</td>
      </tr>
      <tr>
        <td id="L4059" class="blob-num js-line-number" data-line-number="4059"></td>
        <td id="LC4059" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_maxNumScales</span> <span class="pl-k">=</span> maxNumScales <span class="pl-k">||</span> <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="L4060" class="blob-num js-line-number" data-line-number="4060"></td>
        <td id="LC4060" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_scoreThresholds</span> <span class="pl-k">=</span> scoreThresholds <span class="pl-k">||</span> [<span class="pl-c1">0.6</span>, <span class="pl-c1">0.7</span>, <span class="pl-c1">0.7</span>];</td>
      </tr>
      <tr>
        <td id="L4061" class="blob-num js-line-number" data-line-number="4061"></td>
        <td id="LC4061" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_scaleSteps</span> <span class="pl-k">=</span> scaleSteps;</td>
      </tr>
      <tr>
        <td id="L4062" class="blob-num js-line-number" data-line-number="4062"></td>
        <td id="LC4062" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-smi">_minFaceSize</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_minFaceSize</span> <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4063" class="blob-num js-line-number" data-line-number="4063"></td>
        <td id="LC4063" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected minFaceSize to be a number &gt; 0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4064" class="blob-num js-line-number" data-line-number="4064"></td>
        <td id="LC4064" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4065" class="blob-num js-line-number" data-line-number="4065"></td>
        <td id="LC4065" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scaleFactor</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scaleFactor</span> <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scaleFactor</span> <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L4066" class="blob-num js-line-number" data-line-number="4066"></td>
        <td id="LC4066" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected scaleFactor to be a number between 0 and 1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4067" class="blob-num js-line-number" data-line-number="4067"></td>
        <td id="LC4067" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4068" class="blob-num js-line-number" data-line-number="4068"></td>
        <td id="LC4068" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-smi">_maxNumScales</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_maxNumScales</span> <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4069" class="blob-num js-line-number" data-line-number="4069"></td>
        <td id="LC4069" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected maxNumScales to be a number &gt; 0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4070" class="blob-num js-line-number" data-line-number="4070"></td>
        <td id="LC4070" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4071" class="blob-num js-line-number" data-line-number="4071"></td>
        <td id="LC4071" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_scoreThresholds</span>)</td>
      </tr>
      <tr>
        <td id="L4072" class="blob-num js-line-number" data-line-number="4072"></td>
        <td id="LC4072" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scoreThresholds</span>.<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">3</span></td>
      </tr>
      <tr>
        <td id="L4073" class="blob-num js-line-number" data-line-number="4073"></td>
        <td id="LC4073" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scoreThresholds</span>.<span class="pl-en">some</span>(<span class="pl-k">function</span> (<span class="pl-smi">th</span>) { <span class="pl-k">return</span> <span class="pl-k">typeof</span> th <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>; })) {</td>
      </tr>
      <tr>
        <td id="L4074" class="blob-num js-line-number" data-line-number="4074"></td>
        <td id="LC4074" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected scoreThresholds to be an array of numbers of length 3<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4075" class="blob-num js-line-number" data-line-number="4075"></td>
        <td id="LC4075" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4076" class="blob-num js-line-number" data-line-number="4076"></td>
        <td id="LC4076" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_scaleSteps</span></td>
      </tr>
      <tr>
        <td id="L4077" class="blob-num js-line-number" data-line-number="4077"></td>
        <td id="LC4077" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">&amp;&amp;</span> (<span class="pl-k">!</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_scaleSteps</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scaleSteps</span>.<span class="pl-en">some</span>(<span class="pl-k">function</span> (<span class="pl-smi">th</span>) { <span class="pl-k">return</span> <span class="pl-k">typeof</span> th <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>; }))) {</td>
      </tr>
      <tr>
        <td id="L4078" class="blob-num js-line-number" data-line-number="4078"></td>
        <td id="LC4078" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected scaleSteps to be an array of numbers<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4079" class="blob-num js-line-number" data-line-number="4079"></td>
        <td id="LC4079" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4080" class="blob-num js-line-number" data-line-number="4080"></td>
        <td id="LC4080" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4081" class="blob-num js-line-number" data-line-number="4081"></td>
        <td id="LC4081" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">MtcnnOptions</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>minFaceSize<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L4082" class="blob-num js-line-number" data-line-number="4082"></td>
        <td id="LC4082" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_minFaceSize</span>; },</td>
      </tr>
      <tr>
        <td id="L4083" class="blob-num js-line-number" data-line-number="4083"></td>
        <td id="LC4083" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4084" class="blob-num js-line-number" data-line-number="4084"></td>
        <td id="LC4084" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L4085" class="blob-num js-line-number" data-line-number="4085"></td>
        <td id="LC4085" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4086" class="blob-num js-line-number" data-line-number="4086"></td>
        <td id="LC4086" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">MtcnnOptions</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>scaleFactor<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L4087" class="blob-num js-line-number" data-line-number="4087"></td>
        <td id="LC4087" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scaleFactor</span>; },</td>
      </tr>
      <tr>
        <td id="L4088" class="blob-num js-line-number" data-line-number="4088"></td>
        <td id="LC4088" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4089" class="blob-num js-line-number" data-line-number="4089"></td>
        <td id="LC4089" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L4090" class="blob-num js-line-number" data-line-number="4090"></td>
        <td id="LC4090" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4091" class="blob-num js-line-number" data-line-number="4091"></td>
        <td id="LC4091" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">MtcnnOptions</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>maxNumScales<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L4092" class="blob-num js-line-number" data-line-number="4092"></td>
        <td id="LC4092" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_maxNumScales</span>; },</td>
      </tr>
      <tr>
        <td id="L4093" class="blob-num js-line-number" data-line-number="4093"></td>
        <td id="LC4093" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4094" class="blob-num js-line-number" data-line-number="4094"></td>
        <td id="LC4094" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L4095" class="blob-num js-line-number" data-line-number="4095"></td>
        <td id="LC4095" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4096" class="blob-num js-line-number" data-line-number="4096"></td>
        <td id="LC4096" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">MtcnnOptions</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>scoreThresholds<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L4097" class="blob-num js-line-number" data-line-number="4097"></td>
        <td id="LC4097" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scoreThresholds</span>; },</td>
      </tr>
      <tr>
        <td id="L4098" class="blob-num js-line-number" data-line-number="4098"></td>
        <td id="LC4098" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4099" class="blob-num js-line-number" data-line-number="4099"></td>
        <td id="LC4099" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L4100" class="blob-num js-line-number" data-line-number="4100"></td>
        <td id="LC4100" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4101" class="blob-num js-line-number" data-line-number="4101"></td>
        <td id="LC4101" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">MtcnnOptions</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>scaleSteps<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L4102" class="blob-num js-line-number" data-line-number="4102"></td>
        <td id="LC4102" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_scaleSteps</span>; },</td>
      </tr>
      <tr>
        <td id="L4103" class="blob-num js-line-number" data-line-number="4103"></td>
        <td id="LC4103" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4104" class="blob-num js-line-number" data-line-number="4104"></td>
        <td id="LC4104" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L4105" class="blob-num js-line-number" data-line-number="4105"></td>
        <td id="LC4105" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4106" class="blob-num js-line-number" data-line-number="4106"></td>
        <td id="LC4106" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> MtcnnOptions;</td>
      </tr>
      <tr>
        <td id="L4107" class="blob-num js-line-number" data-line-number="4107"></td>
        <td id="LC4107" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L4108" class="blob-num js-line-number" data-line-number="4108"></td>
        <td id="LC4108" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4109" class="blob-num js-line-number" data-line-number="4109"></td>
        <td id="LC4109" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory$6</span>(<span class="pl-smi">extractWeights</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L4110" class="blob-num js-line-number" data-line-number="4110"></td>
        <td id="LC4110" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractDepthwiseConvParams</span>(<span class="pl-smi">numChannels</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4111" class="blob-num js-line-number" data-line-number="4111"></td>
        <td id="LC4111" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">tensor4d</span>(<span class="pl-en">extractWeights</span>(<span class="pl-c1">3</span> <span class="pl-k">*</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> numChannels), [<span class="pl-c1">3</span>, <span class="pl-c1">3</span>, numChannels, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4112" class="blob-num js-line-number" data-line-number="4112"></td>
        <td id="LC4112" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batch_norm_scale <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(numChannels));</td>
      </tr>
      <tr>
        <td id="L4113" class="blob-num js-line-number" data-line-number="4113"></td>
        <td id="LC4113" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batch_norm_offset <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(numChannels));</td>
      </tr>
      <tr>
        <td id="L4114" class="blob-num js-line-number" data-line-number="4114"></td>
        <td id="LC4114" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batch_norm_mean <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(numChannels));</td>
      </tr>
      <tr>
        <td id="L4115" class="blob-num js-line-number" data-line-number="4115"></td>
        <td id="LC4115" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batch_norm_variance <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(numChannels));</td>
      </tr>
      <tr>
        <td id="L4116" class="blob-num js-line-number" data-line-number="4116"></td>
        <td id="LC4116" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/batch_norm_scale<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/batch_norm_offset<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/batch_norm_mean<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/batch_norm_variance<span class="pl-pds">&quot;</span></span> });</td>
      </tr>
      <tr>
        <td id="L4117" class="blob-num js-line-number" data-line-number="4117"></td>
        <td id="LC4117" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4118" class="blob-num js-line-number" data-line-number="4118"></td>
        <td id="LC4118" class="blob-code blob-code-inner js-file-line">                filters<span class="pl-k">:</span> filters,</td>
      </tr>
      <tr>
        <td id="L4119" class="blob-num js-line-number" data-line-number="4119"></td>
        <td id="LC4119" class="blob-code blob-code-inner js-file-line">                batch_norm_scale<span class="pl-k">:</span> batch_norm_scale,</td>
      </tr>
      <tr>
        <td id="L4120" class="blob-num js-line-number" data-line-number="4120"></td>
        <td id="LC4120" class="blob-code blob-code-inner js-file-line">                batch_norm_offset<span class="pl-k">:</span> batch_norm_offset,</td>
      </tr>
      <tr>
        <td id="L4121" class="blob-num js-line-number" data-line-number="4121"></td>
        <td id="LC4121" class="blob-code blob-code-inner js-file-line">                batch_norm_mean<span class="pl-k">:</span> batch_norm_mean,</td>
      </tr>
      <tr>
        <td id="L4122" class="blob-num js-line-number" data-line-number="4122"></td>
        <td id="LC4122" class="blob-code blob-code-inner js-file-line">                batch_norm_variance<span class="pl-k">:</span> batch_norm_variance</td>
      </tr>
      <tr>
        <td id="L4123" class="blob-num js-line-number" data-line-number="4123"></td>
        <td id="LC4123" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4124" class="blob-num js-line-number" data-line-number="4124"></td>
        <td id="LC4124" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4125" class="blob-num js-line-number" data-line-number="4125"></td>
        <td id="LC4125" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvParams</span>(<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">filterSize</span>, <span class="pl-smi">mappedPrefix</span>, <span class="pl-smi">isPointwiseConv</span>) {</td>
      </tr>
      <tr>
        <td id="L4126" class="blob-num js-line-number" data-line-number="4126"></td>
        <td id="LC4126" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">tensor4d</span>(<span class="pl-en">extractWeights</span>(channelsIn <span class="pl-k">*</span> channelsOut <span class="pl-k">*</span> filterSize <span class="pl-k">*</span> filterSize), [filterSize, filterSize, channelsIn, channelsOut]);</td>
      </tr>
      <tr>
        <td id="L4127" class="blob-num js-line-number" data-line-number="4127"></td>
        <td id="LC4127" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(channelsOut));</td>
      </tr>
      <tr>
        <td id="L4128" class="blob-num js-line-number" data-line-number="4128"></td>
        <td id="LC4128" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span> }, { paramPath<span class="pl-k">:</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (isPointwiseConv <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>batch_norm_offset<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>bias<span class="pl-pds">&#39;</span></span>) });</td>
      </tr>
      <tr>
        <td id="L4129" class="blob-num js-line-number" data-line-number="4129"></td>
        <td id="LC4129" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { filters<span class="pl-k">:</span> filters, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L4130" class="blob-num js-line-number" data-line-number="4130"></td>
        <td id="LC4130" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4131" class="blob-num js-line-number" data-line-number="4131"></td>
        <td id="LC4131" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">filterSize</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4132" class="blob-num js-line-number" data-line-number="4132"></td>
        <td id="LC4132" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(channelsIn, channelsOut, filterSize, mappedPrefix, <span class="pl-c1">true</span>), filters <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">filters</span>, bias <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">bias</span>;</td>
      </tr>
      <tr>
        <td id="L4133" class="blob-num js-line-number" data-line-number="4133"></td>
        <td id="LC4133" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4134" class="blob-num js-line-number" data-line-number="4134"></td>
        <td id="LC4134" class="blob-code blob-code-inner js-file-line">                filters<span class="pl-k">:</span> filters,</td>
      </tr>
      <tr>
        <td id="L4135" class="blob-num js-line-number" data-line-number="4135"></td>
        <td id="LC4135" class="blob-code blob-code-inner js-file-line">                batch_norm_offset<span class="pl-k">:</span> bias</td>
      </tr>
      <tr>
        <td id="L4136" class="blob-num js-line-number" data-line-number="4136"></td>
        <td id="LC4136" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4137" class="blob-num js-line-number" data-line-number="4137"></td>
        <td id="LC4137" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4138" class="blob-num js-line-number" data-line-number="4138"></td>
        <td id="LC4138" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-smi">channelsIn</span>, <span class="pl-smi">channelsOut</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4139" class="blob-num js-line-number" data-line-number="4139"></td>
        <td id="LC4139" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> depthwise_conv <span class="pl-k">=</span> <span class="pl-en">extractDepthwiseConvParams</span>(channelsIn, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/depthwise_conv<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4140" class="blob-num js-line-number" data-line-number="4140"></td>
        <td id="LC4140" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> pointwise_conv <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(channelsIn, channelsOut, <span class="pl-c1">1</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/pointwise_conv<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4141" class="blob-num js-line-number" data-line-number="4141"></td>
        <td id="LC4141" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { depthwise_conv<span class="pl-k">:</span> depthwise_conv, pointwise_conv<span class="pl-k">:</span> pointwise_conv };</td>
      </tr>
      <tr>
        <td id="L4142" class="blob-num js-line-number" data-line-number="4142"></td>
        <td id="LC4142" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4143" class="blob-num js-line-number" data-line-number="4143"></td>
        <td id="LC4143" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractMobilenetV1Params</span>() {</td>
      </tr>
      <tr>
        <td id="L4144" class="blob-num js-line-number" data-line-number="4144"></td>
        <td id="LC4144" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_0 <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-c1">3</span>, <span class="pl-c1">32</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_0<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4145" class="blob-num js-line-number" data-line-number="4145"></td>
        <td id="LC4145" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_1 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">32</span>, <span class="pl-c1">64</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4146" class="blob-num js-line-number" data-line-number="4146"></td>
        <td id="LC4146" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_2 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">64</span>, <span class="pl-c1">128</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4147" class="blob-num js-line-number" data-line-number="4147"></td>
        <td id="LC4147" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_3 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">128</span>, <span class="pl-c1">128</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4148" class="blob-num js-line-number" data-line-number="4148"></td>
        <td id="LC4148" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_4 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">128</span>, <span class="pl-c1">256</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_4<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4149" class="blob-num js-line-number" data-line-number="4149"></td>
        <td id="LC4149" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_5 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">256</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_5<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4150" class="blob-num js-line-number" data-line-number="4150"></td>
        <td id="LC4150" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_6 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">512</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_6<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4151" class="blob-num js-line-number" data-line-number="4151"></td>
        <td id="LC4151" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_7 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">512</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_7<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4152" class="blob-num js-line-number" data-line-number="4152"></td>
        <td id="LC4152" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_8 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">512</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_8<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4153" class="blob-num js-line-number" data-line-number="4153"></td>
        <td id="LC4153" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_9 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">512</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_9<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4154" class="blob-num js-line-number" data-line-number="4154"></td>
        <td id="LC4154" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_10 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">512</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_10<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4155" class="blob-num js-line-number" data-line-number="4155"></td>
        <td id="LC4155" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_11 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">512</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_11<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4156" class="blob-num js-line-number" data-line-number="4156"></td>
        <td id="LC4156" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_12 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">1024</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_12<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4157" class="blob-num js-line-number" data-line-number="4157"></td>
        <td id="LC4157" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_13 <span class="pl-k">=</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">1024</span>, <span class="pl-c1">1024</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_13<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4158" class="blob-num js-line-number" data-line-number="4158"></td>
        <td id="LC4158" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4159" class="blob-num js-line-number" data-line-number="4159"></td>
        <td id="LC4159" class="blob-code blob-code-inner js-file-line">                conv_0<span class="pl-k">:</span> conv_0,</td>
      </tr>
      <tr>
        <td id="L4160" class="blob-num js-line-number" data-line-number="4160"></td>
        <td id="LC4160" class="blob-code blob-code-inner js-file-line">                conv_1<span class="pl-k">:</span> conv_1,</td>
      </tr>
      <tr>
        <td id="L4161" class="blob-num js-line-number" data-line-number="4161"></td>
        <td id="LC4161" class="blob-code blob-code-inner js-file-line">                conv_2<span class="pl-k">:</span> conv_2,</td>
      </tr>
      <tr>
        <td id="L4162" class="blob-num js-line-number" data-line-number="4162"></td>
        <td id="LC4162" class="blob-code blob-code-inner js-file-line">                conv_3<span class="pl-k">:</span> conv_3,</td>
      </tr>
      <tr>
        <td id="L4163" class="blob-num js-line-number" data-line-number="4163"></td>
        <td id="LC4163" class="blob-code blob-code-inner js-file-line">                conv_4<span class="pl-k">:</span> conv_4,</td>
      </tr>
      <tr>
        <td id="L4164" class="blob-num js-line-number" data-line-number="4164"></td>
        <td id="LC4164" class="blob-code blob-code-inner js-file-line">                conv_5<span class="pl-k">:</span> conv_5,</td>
      </tr>
      <tr>
        <td id="L4165" class="blob-num js-line-number" data-line-number="4165"></td>
        <td id="LC4165" class="blob-code blob-code-inner js-file-line">                conv_6<span class="pl-k">:</span> conv_6,</td>
      </tr>
      <tr>
        <td id="L4166" class="blob-num js-line-number" data-line-number="4166"></td>
        <td id="LC4166" class="blob-code blob-code-inner js-file-line">                conv_7<span class="pl-k">:</span> conv_7,</td>
      </tr>
      <tr>
        <td id="L4167" class="blob-num js-line-number" data-line-number="4167"></td>
        <td id="LC4167" class="blob-code blob-code-inner js-file-line">                conv_8<span class="pl-k">:</span> conv_8,</td>
      </tr>
      <tr>
        <td id="L4168" class="blob-num js-line-number" data-line-number="4168"></td>
        <td id="LC4168" class="blob-code blob-code-inner js-file-line">                conv_9<span class="pl-k">:</span> conv_9,</td>
      </tr>
      <tr>
        <td id="L4169" class="blob-num js-line-number" data-line-number="4169"></td>
        <td id="LC4169" class="blob-code blob-code-inner js-file-line">                conv_10<span class="pl-k">:</span> conv_10,</td>
      </tr>
      <tr>
        <td id="L4170" class="blob-num js-line-number" data-line-number="4170"></td>
        <td id="LC4170" class="blob-code blob-code-inner js-file-line">                conv_11<span class="pl-k">:</span> conv_11,</td>
      </tr>
      <tr>
        <td id="L4171" class="blob-num js-line-number" data-line-number="4171"></td>
        <td id="LC4171" class="blob-code blob-code-inner js-file-line">                conv_12<span class="pl-k">:</span> conv_12,</td>
      </tr>
      <tr>
        <td id="L4172" class="blob-num js-line-number" data-line-number="4172"></td>
        <td id="LC4172" class="blob-code blob-code-inner js-file-line">                conv_13<span class="pl-k">:</span> conv_13</td>
      </tr>
      <tr>
        <td id="L4173" class="blob-num js-line-number" data-line-number="4173"></td>
        <td id="LC4173" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4174" class="blob-num js-line-number" data-line-number="4174"></td>
        <td id="LC4174" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4175" class="blob-num js-line-number" data-line-number="4175"></td>
        <td id="LC4175" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractPredictionLayerParams</span>() {</td>
      </tr>
      <tr>
        <td id="L4176" class="blob-num js-line-number" data-line-number="4176"></td>
        <td id="LC4176" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_0 <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-c1">1024</span>, <span class="pl-c1">256</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_0<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4177" class="blob-num js-line-number" data-line-number="4177"></td>
        <td id="LC4177" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_1 <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">512</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4178" class="blob-num js-line-number" data-line-number="4178"></td>
        <td id="LC4178" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_2 <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">128</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4179" class="blob-num js-line-number" data-line-number="4179"></td>
        <td id="LC4179" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_3 <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-c1">128</span>, <span class="pl-c1">256</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4180" class="blob-num js-line-number" data-line-number="4180"></td>
        <td id="LC4180" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_4 <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">128</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_4<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4181" class="blob-num js-line-number" data-line-number="4181"></td>
        <td id="LC4181" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_5 <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-c1">128</span>, <span class="pl-c1">256</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_5<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4182" class="blob-num js-line-number" data-line-number="4182"></td>
        <td id="LC4182" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_6 <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">64</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_6<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4183" class="blob-num js-line-number" data-line-number="4183"></td>
        <td id="LC4183" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv_7 <span class="pl-k">=</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-c1">64</span>, <span class="pl-c1">128</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_7<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4184" class="blob-num js-line-number" data-line-number="4184"></td>
        <td id="LC4184" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_encoding_0_predictor <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">12</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_0/box_encoding_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4185" class="blob-num js-line-number" data-line-number="4185"></td>
        <td id="LC4185" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> class_predictor_0 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">9</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_0/class_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4186" class="blob-num js-line-number" data-line-number="4186"></td>
        <td id="LC4186" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_encoding_1_predictor <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">1024</span>, <span class="pl-c1">24</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_1/box_encoding_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4187" class="blob-num js-line-number" data-line-number="4187"></td>
        <td id="LC4187" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> class_predictor_1 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">1024</span>, <span class="pl-c1">18</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_1/class_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4188" class="blob-num js-line-number" data-line-number="4188"></td>
        <td id="LC4188" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_encoding_2_predictor <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">24</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_2/box_encoding_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4189" class="blob-num js-line-number" data-line-number="4189"></td>
        <td id="LC4189" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> class_predictor_2 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">512</span>, <span class="pl-c1">18</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_2/class_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4190" class="blob-num js-line-number" data-line-number="4190"></td>
        <td id="LC4190" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_encoding_3_predictor <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">24</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_3/box_encoding_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4191" class="blob-num js-line-number" data-line-number="4191"></td>
        <td id="LC4191" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> class_predictor_3 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">18</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_3/class_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4192" class="blob-num js-line-number" data-line-number="4192"></td>
        <td id="LC4192" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_encoding_4_predictor <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">24</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_4/box_encoding_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4193" class="blob-num js-line-number" data-line-number="4193"></td>
        <td id="LC4193" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> class_predictor_4 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">18</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_4/class_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4194" class="blob-num js-line-number" data-line-number="4194"></td>
        <td id="LC4194" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_encoding_5_predictor <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">128</span>, <span class="pl-c1">24</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_5/box_encoding_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4195" class="blob-num js-line-number" data-line-number="4195"></td>
        <td id="LC4195" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> class_predictor_5 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">128</span>, <span class="pl-c1">18</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/box_predictor_5/class_predictor<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4196" class="blob-num js-line-number" data-line-number="4196"></td>
        <td id="LC4196" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_predictor_0 <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4197" class="blob-num js-line-number" data-line-number="4197"></td>
        <td id="LC4197" class="blob-code blob-code-inner js-file-line">                box_encoding_predictor<span class="pl-k">:</span> box_encoding_0_predictor,</td>
      </tr>
      <tr>
        <td id="L4198" class="blob-num js-line-number" data-line-number="4198"></td>
        <td id="LC4198" class="blob-code blob-code-inner js-file-line">                class_predictor<span class="pl-k">:</span> class_predictor_0</td>
      </tr>
      <tr>
        <td id="L4199" class="blob-num js-line-number" data-line-number="4199"></td>
        <td id="LC4199" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4200" class="blob-num js-line-number" data-line-number="4200"></td>
        <td id="LC4200" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_predictor_1 <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4201" class="blob-num js-line-number" data-line-number="4201"></td>
        <td id="LC4201" class="blob-code blob-code-inner js-file-line">                box_encoding_predictor<span class="pl-k">:</span> box_encoding_1_predictor,</td>
      </tr>
      <tr>
        <td id="L4202" class="blob-num js-line-number" data-line-number="4202"></td>
        <td id="LC4202" class="blob-code blob-code-inner js-file-line">                class_predictor<span class="pl-k">:</span> class_predictor_1</td>
      </tr>
      <tr>
        <td id="L4203" class="blob-num js-line-number" data-line-number="4203"></td>
        <td id="LC4203" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4204" class="blob-num js-line-number" data-line-number="4204"></td>
        <td id="LC4204" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_predictor_2 <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4205" class="blob-num js-line-number" data-line-number="4205"></td>
        <td id="LC4205" class="blob-code blob-code-inner js-file-line">                box_encoding_predictor<span class="pl-k">:</span> box_encoding_2_predictor,</td>
      </tr>
      <tr>
        <td id="L4206" class="blob-num js-line-number" data-line-number="4206"></td>
        <td id="LC4206" class="blob-code blob-code-inner js-file-line">                class_predictor<span class="pl-k">:</span> class_predictor_2</td>
      </tr>
      <tr>
        <td id="L4207" class="blob-num js-line-number" data-line-number="4207"></td>
        <td id="LC4207" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4208" class="blob-num js-line-number" data-line-number="4208"></td>
        <td id="LC4208" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_predictor_3 <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4209" class="blob-num js-line-number" data-line-number="4209"></td>
        <td id="LC4209" class="blob-code blob-code-inner js-file-line">                box_encoding_predictor<span class="pl-k">:</span> box_encoding_3_predictor,</td>
      </tr>
      <tr>
        <td id="L4210" class="blob-num js-line-number" data-line-number="4210"></td>
        <td id="LC4210" class="blob-code blob-code-inner js-file-line">                class_predictor<span class="pl-k">:</span> class_predictor_3</td>
      </tr>
      <tr>
        <td id="L4211" class="blob-num js-line-number" data-line-number="4211"></td>
        <td id="LC4211" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4212" class="blob-num js-line-number" data-line-number="4212"></td>
        <td id="LC4212" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_predictor_4 <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4213" class="blob-num js-line-number" data-line-number="4213"></td>
        <td id="LC4213" class="blob-code blob-code-inner js-file-line">                box_encoding_predictor<span class="pl-k">:</span> box_encoding_4_predictor,</td>
      </tr>
      <tr>
        <td id="L4214" class="blob-num js-line-number" data-line-number="4214"></td>
        <td id="LC4214" class="blob-code blob-code-inner js-file-line">                class_predictor<span class="pl-k">:</span> class_predictor_4</td>
      </tr>
      <tr>
        <td id="L4215" class="blob-num js-line-number" data-line-number="4215"></td>
        <td id="LC4215" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4216" class="blob-num js-line-number" data-line-number="4216"></td>
        <td id="LC4216" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_predictor_5 <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4217" class="blob-num js-line-number" data-line-number="4217"></td>
        <td id="LC4217" class="blob-code blob-code-inner js-file-line">                box_encoding_predictor<span class="pl-k">:</span> box_encoding_5_predictor,</td>
      </tr>
      <tr>
        <td id="L4218" class="blob-num js-line-number" data-line-number="4218"></td>
        <td id="LC4218" class="blob-code blob-code-inner js-file-line">                class_predictor<span class="pl-k">:</span> class_predictor_5</td>
      </tr>
      <tr>
        <td id="L4219" class="blob-num js-line-number" data-line-number="4219"></td>
        <td id="LC4219" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4220" class="blob-num js-line-number" data-line-number="4220"></td>
        <td id="LC4220" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4221" class="blob-num js-line-number" data-line-number="4221"></td>
        <td id="LC4221" class="blob-code blob-code-inner js-file-line">                conv_0<span class="pl-k">:</span> conv_0,</td>
      </tr>
      <tr>
        <td id="L4222" class="blob-num js-line-number" data-line-number="4222"></td>
        <td id="LC4222" class="blob-code blob-code-inner js-file-line">                conv_1<span class="pl-k">:</span> conv_1,</td>
      </tr>
      <tr>
        <td id="L4223" class="blob-num js-line-number" data-line-number="4223"></td>
        <td id="LC4223" class="blob-code blob-code-inner js-file-line">                conv_2<span class="pl-k">:</span> conv_2,</td>
      </tr>
      <tr>
        <td id="L4224" class="blob-num js-line-number" data-line-number="4224"></td>
        <td id="LC4224" class="blob-code blob-code-inner js-file-line">                conv_3<span class="pl-k">:</span> conv_3,</td>
      </tr>
      <tr>
        <td id="L4225" class="blob-num js-line-number" data-line-number="4225"></td>
        <td id="LC4225" class="blob-code blob-code-inner js-file-line">                conv_4<span class="pl-k">:</span> conv_4,</td>
      </tr>
      <tr>
        <td id="L4226" class="blob-num js-line-number" data-line-number="4226"></td>
        <td id="LC4226" class="blob-code blob-code-inner js-file-line">                conv_5<span class="pl-k">:</span> conv_5,</td>
      </tr>
      <tr>
        <td id="L4227" class="blob-num js-line-number" data-line-number="4227"></td>
        <td id="LC4227" class="blob-code blob-code-inner js-file-line">                conv_6<span class="pl-k">:</span> conv_6,</td>
      </tr>
      <tr>
        <td id="L4228" class="blob-num js-line-number" data-line-number="4228"></td>
        <td id="LC4228" class="blob-code blob-code-inner js-file-line">                conv_7<span class="pl-k">:</span> conv_7,</td>
      </tr>
      <tr>
        <td id="L4229" class="blob-num js-line-number" data-line-number="4229"></td>
        <td id="LC4229" class="blob-code blob-code-inner js-file-line">                box_predictor_0<span class="pl-k">:</span> box_predictor_0,</td>
      </tr>
      <tr>
        <td id="L4230" class="blob-num js-line-number" data-line-number="4230"></td>
        <td id="LC4230" class="blob-code blob-code-inner js-file-line">                box_predictor_1<span class="pl-k">:</span> box_predictor_1,</td>
      </tr>
      <tr>
        <td id="L4231" class="blob-num js-line-number" data-line-number="4231"></td>
        <td id="LC4231" class="blob-code blob-code-inner js-file-line">                box_predictor_2<span class="pl-k">:</span> box_predictor_2,</td>
      </tr>
      <tr>
        <td id="L4232" class="blob-num js-line-number" data-line-number="4232"></td>
        <td id="LC4232" class="blob-code blob-code-inner js-file-line">                box_predictor_3<span class="pl-k">:</span> box_predictor_3,</td>
      </tr>
      <tr>
        <td id="L4233" class="blob-num js-line-number" data-line-number="4233"></td>
        <td id="LC4233" class="blob-code blob-code-inner js-file-line">                box_predictor_4<span class="pl-k">:</span> box_predictor_4,</td>
      </tr>
      <tr>
        <td id="L4234" class="blob-num js-line-number" data-line-number="4234"></td>
        <td id="LC4234" class="blob-code blob-code-inner js-file-line">                box_predictor_5<span class="pl-k">:</span> box_predictor_5</td>
      </tr>
      <tr>
        <td id="L4235" class="blob-num js-line-number" data-line-number="4235"></td>
        <td id="LC4235" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4236" class="blob-num js-line-number" data-line-number="4236"></td>
        <td id="LC4236" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4237" class="blob-num js-line-number" data-line-number="4237"></td>
        <td id="LC4237" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4238" class="blob-num js-line-number" data-line-number="4238"></td>
        <td id="LC4238" class="blob-code blob-code-inner js-file-line">            extractMobilenetV1Params<span class="pl-k">:</span> extractMobilenetV1Params,</td>
      </tr>
      <tr>
        <td id="L4239" class="blob-num js-line-number" data-line-number="4239"></td>
        <td id="LC4239" class="blob-code blob-code-inner js-file-line">            extractPredictionLayerParams<span class="pl-k">:</span> extractPredictionLayerParams</td>
      </tr>
      <tr>
        <td id="L4240" class="blob-num js-line-number" data-line-number="4240"></td>
        <td id="LC4240" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4241" class="blob-num js-line-number" data-line-number="4241"></td>
        <td id="LC4241" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4242" class="blob-num js-line-number" data-line-number="4242"></td>
        <td id="LC4242" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParams$6</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L4243" class="blob-num js-line-number" data-line-number="4243"></td>
        <td id="LC4243" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4244" class="blob-num js-line-number" data-line-number="4244"></td>
        <td id="LC4244" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractWeightsFactory</span>(weights), extractWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractWeights</span>, getRemainingWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">getRemainingWeights</span>;</td>
      </tr>
      <tr>
        <td id="L4245" class="blob-num js-line-number" data-line-number="4245"></td>
        <td id="LC4245" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _b <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$6</span>(extractWeights, paramMappings), extractMobilenetV1Params <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractMobilenetV1Params</span>, extractPredictionLayerParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractPredictionLayerParams</span>;</td>
      </tr>
      <tr>
        <td id="L4246" class="blob-num js-line-number" data-line-number="4246"></td>
        <td id="LC4246" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> mobilenetv1 <span class="pl-k">=</span> <span class="pl-en">extractMobilenetV1Params</span>();</td>
      </tr>
      <tr>
        <td id="L4247" class="blob-num js-line-number" data-line-number="4247"></td>
        <td id="LC4247" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> prediction_layer <span class="pl-k">=</span> <span class="pl-en">extractPredictionLayerParams</span>();</td>
      </tr>
      <tr>
        <td id="L4248" class="blob-num js-line-number" data-line-number="4248"></td>
        <td id="LC4248" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extra_dim <span class="pl-k">=</span> <span class="pl-en">tensor3d</span>(<span class="pl-en">extractWeights</span>(<span class="pl-c1">5118</span> <span class="pl-k">*</span> <span class="pl-c1">4</span>), [<span class="pl-c1">1</span>, <span class="pl-c1">5118</span>, <span class="pl-c1">4</span>]);</td>
      </tr>
      <tr>
        <td id="L4249" class="blob-num js-line-number" data-line-number="4249"></td>
        <td id="LC4249" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> output_layer <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4250" class="blob-num js-line-number" data-line-number="4250"></td>
        <td id="LC4250" class="blob-code blob-code-inner js-file-line">            extra_dim<span class="pl-k">:</span> extra_dim</td>
      </tr>
      <tr>
        <td id="L4251" class="blob-num js-line-number" data-line-number="4251"></td>
        <td id="LC4251" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4252" class="blob-num js-line-number" data-line-number="4252"></td>
        <td id="LC4252" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>output_layer/extra_dim<span class="pl-pds">&#39;</span></span> });</td>
      </tr>
      <tr>
        <td id="L4253" class="blob-num js-line-number" data-line-number="4253"></td>
        <td id="LC4253" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4254" class="blob-num js-line-number" data-line-number="4254"></td>
        <td id="LC4254" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>weights remaing after extract: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L4255" class="blob-num js-line-number" data-line-number="4255"></td>
        <td id="LC4255" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4256" class="blob-num js-line-number" data-line-number="4256"></td>
        <td id="LC4256" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4257" class="blob-num js-line-number" data-line-number="4257"></td>
        <td id="LC4257" class="blob-code blob-code-inner js-file-line">            params<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L4258" class="blob-num js-line-number" data-line-number="4258"></td>
        <td id="LC4258" class="blob-code blob-code-inner js-file-line">                mobilenetv1<span class="pl-k">:</span> mobilenetv1,</td>
      </tr>
      <tr>
        <td id="L4259" class="blob-num js-line-number" data-line-number="4259"></td>
        <td id="LC4259" class="blob-code blob-code-inner js-file-line">                prediction_layer<span class="pl-k">:</span> prediction_layer,</td>
      </tr>
      <tr>
        <td id="L4260" class="blob-num js-line-number" data-line-number="4260"></td>
        <td id="LC4260" class="blob-code blob-code-inner js-file-line">                output_layer<span class="pl-k">:</span> output_layer</td>
      </tr>
      <tr>
        <td id="L4261" class="blob-num js-line-number" data-line-number="4261"></td>
        <td id="LC4261" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L4262" class="blob-num js-line-number" data-line-number="4262"></td>
        <td id="LC4262" class="blob-code blob-code-inner js-file-line">            paramMappings<span class="pl-k">:</span> paramMappings</td>
      </tr>
      <tr>
        <td id="L4263" class="blob-num js-line-number" data-line-number="4263"></td>
        <td id="LC4263" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4264" class="blob-num js-line-number" data-line-number="4264"></td>
        <td id="LC4264" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4265" class="blob-num js-line-number" data-line-number="4265"></td>
        <td id="LC4265" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4266" class="blob-num js-line-number" data-line-number="4266"></td>
        <td id="LC4266" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory$7</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L4267" class="blob-num js-line-number" data-line-number="4267"></td>
        <td id="LC4267" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractWeightEntry <span class="pl-k">=</span> <span class="pl-en">extractWeightEntryFactory</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L4268" class="blob-num js-line-number" data-line-number="4268"></td>
        <td id="LC4268" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-smi">prefix</span>, <span class="pl-smi">idx</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4269" class="blob-num js-line-number" data-line-number="4269"></td>
        <td id="LC4269" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/Conv2d_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>_pointwise/weights<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">4</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4270" class="blob-num js-line-number" data-line-number="4270"></td>
        <td id="LC4270" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batch_norm_offset <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/Conv2d_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>_pointwise/convolution_bn_offset<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/batch_norm_offset<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4271" class="blob-num js-line-number" data-line-number="4271"></td>
        <td id="LC4271" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { filters<span class="pl-k">:</span> filters, batch_norm_offset<span class="pl-k">:</span> batch_norm_offset };</td>
      </tr>
      <tr>
        <td id="L4272" class="blob-num js-line-number" data-line-number="4272"></td>
        <td id="LC4272" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4273" class="blob-num js-line-number" data-line-number="4273"></td>
        <td id="LC4273" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L4274" class="blob-num js-line-number" data-line-number="4274"></td>
        <td id="LC4274" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> mappedPrefix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mobilenetv1/conv_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx;</td>
      </tr>
      <tr>
        <td id="L4275" class="blob-num js-line-number" data-line-number="4275"></td>
        <td id="LC4275" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prefixDepthwiseConv <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>MobilenetV1/Conv2d_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>_depthwise<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4276" class="blob-num js-line-number" data-line-number="4276"></td>
        <td id="LC4276" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> mappedPrefixDepthwiseConv <span class="pl-k">=</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/depthwise_conv<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4277" class="blob-num js-line-number" data-line-number="4277"></td>
        <td id="LC4277" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> mappedPrefixPointwiseConv <span class="pl-k">=</span> mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/pointwise_conv<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4278" class="blob-num js-line-number" data-line-number="4278"></td>
        <td id="LC4278" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/depthwise_weights<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">4</span>, mappedPrefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4279" class="blob-num js-line-number" data-line-number="4279"></td>
        <td id="LC4279" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batch_norm_scale <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/BatchNorm/gamma<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>, mappedPrefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/batch_norm_scale<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4280" class="blob-num js-line-number" data-line-number="4280"></td>
        <td id="LC4280" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batch_norm_offset <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/BatchNorm/beta<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>, mappedPrefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/batch_norm_offset<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4281" class="blob-num js-line-number" data-line-number="4281"></td>
        <td id="LC4281" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batch_norm_mean <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/BatchNorm/moving_mean<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>, mappedPrefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/batch_norm_mean<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4282" class="blob-num js-line-number" data-line-number="4282"></td>
        <td id="LC4282" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batch_norm_variance <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/BatchNorm/moving_variance<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>, mappedPrefixDepthwiseConv <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/batch_norm_variance<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4283" class="blob-num js-line-number" data-line-number="4283"></td>
        <td id="LC4283" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4284" class="blob-num js-line-number" data-line-number="4284"></td>
        <td id="LC4284" class="blob-code blob-code-inner js-file-line">                depthwise_conv<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L4285" class="blob-num js-line-number" data-line-number="4285"></td>
        <td id="LC4285" class="blob-code blob-code-inner js-file-line">                    filters<span class="pl-k">:</span> filters,</td>
      </tr>
      <tr>
        <td id="L4286" class="blob-num js-line-number" data-line-number="4286"></td>
        <td id="LC4286" class="blob-code blob-code-inner js-file-line">                    batch_norm_scale<span class="pl-k">:</span> batch_norm_scale,</td>
      </tr>
      <tr>
        <td id="L4287" class="blob-num js-line-number" data-line-number="4287"></td>
        <td id="LC4287" class="blob-code blob-code-inner js-file-line">                    batch_norm_offset<span class="pl-k">:</span> batch_norm_offset,</td>
      </tr>
      <tr>
        <td id="L4288" class="blob-num js-line-number" data-line-number="4288"></td>
        <td id="LC4288" class="blob-code blob-code-inner js-file-line">                    batch_norm_mean<span class="pl-k">:</span> batch_norm_mean,</td>
      </tr>
      <tr>
        <td id="L4289" class="blob-num js-line-number" data-line-number="4289"></td>
        <td id="LC4289" class="blob-code blob-code-inner js-file-line">                    batch_norm_variance<span class="pl-k">:</span> batch_norm_variance</td>
      </tr>
      <tr>
        <td id="L4290" class="blob-num js-line-number" data-line-number="4290"></td>
        <td id="LC4290" class="blob-code blob-code-inner js-file-line">                },</td>
      </tr>
      <tr>
        <td id="L4291" class="blob-num js-line-number" data-line-number="4291"></td>
        <td id="LC4291" class="blob-code blob-code-inner js-file-line">                pointwise_conv<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>MobilenetV1<span class="pl-pds">&#39;</span></span>, idx, mappedPrefixPointwiseConv)</td>
      </tr>
      <tr>
        <td id="L4292" class="blob-num js-line-number" data-line-number="4292"></td>
        <td id="LC4292" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4293" class="blob-num js-line-number" data-line-number="4293"></td>
        <td id="LC4293" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4294" class="blob-num js-line-number" data-line-number="4294"></td>
        <td id="LC4294" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractMobilenetV1Params</span>() {</td>
      </tr>
      <tr>
        <td id="L4295" class="blob-num js-line-number" data-line-number="4295"></td>
        <td id="LC4295" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4296" class="blob-num js-line-number" data-line-number="4296"></td>
        <td id="LC4296" class="blob-code blob-code-inner js-file-line">                conv_0<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>MobilenetV1<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>mobilenetv1/conv_0<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4297" class="blob-num js-line-number" data-line-number="4297"></td>
        <td id="LC4297" class="blob-code blob-code-inner js-file-line">                conv_1<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L4298" class="blob-num js-line-number" data-line-number="4298"></td>
        <td id="LC4298" class="blob-code blob-code-inner js-file-line">                conv_2<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L4299" class="blob-num js-line-number" data-line-number="4299"></td>
        <td id="LC4299" class="blob-code blob-code-inner js-file-line">                conv_3<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">3</span>),</td>
      </tr>
      <tr>
        <td id="L4300" class="blob-num js-line-number" data-line-number="4300"></td>
        <td id="LC4300" class="blob-code blob-code-inner js-file-line">                conv_4<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">4</span>),</td>
      </tr>
      <tr>
        <td id="L4301" class="blob-num js-line-number" data-line-number="4301"></td>
        <td id="LC4301" class="blob-code blob-code-inner js-file-line">                conv_5<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">5</span>),</td>
      </tr>
      <tr>
        <td id="L4302" class="blob-num js-line-number" data-line-number="4302"></td>
        <td id="LC4302" class="blob-code blob-code-inner js-file-line">                conv_6<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">6</span>),</td>
      </tr>
      <tr>
        <td id="L4303" class="blob-num js-line-number" data-line-number="4303"></td>
        <td id="LC4303" class="blob-code blob-code-inner js-file-line">                conv_7<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">7</span>),</td>
      </tr>
      <tr>
        <td id="L4304" class="blob-num js-line-number" data-line-number="4304"></td>
        <td id="LC4304" class="blob-code blob-code-inner js-file-line">                conv_8<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">8</span>),</td>
      </tr>
      <tr>
        <td id="L4305" class="blob-num js-line-number" data-line-number="4305"></td>
        <td id="LC4305" class="blob-code blob-code-inner js-file-line">                conv_9<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">9</span>),</td>
      </tr>
      <tr>
        <td id="L4306" class="blob-num js-line-number" data-line-number="4306"></td>
        <td id="LC4306" class="blob-code blob-code-inner js-file-line">                conv_10<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4307" class="blob-num js-line-number" data-line-number="4307"></td>
        <td id="LC4307" class="blob-code blob-code-inner js-file-line">                conv_11<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">11</span>),</td>
      </tr>
      <tr>
        <td id="L4308" class="blob-num js-line-number" data-line-number="4308"></td>
        <td id="LC4308" class="blob-code blob-code-inner js-file-line">                conv_12<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">12</span>),</td>
      </tr>
      <tr>
        <td id="L4309" class="blob-num js-line-number" data-line-number="4309"></td>
        <td id="LC4309" class="blob-code blob-code-inner js-file-line">                conv_13<span class="pl-k">:</span> <span class="pl-en">extractConvPairParams</span>(<span class="pl-c1">13</span>)</td>
      </tr>
      <tr>
        <td id="L4310" class="blob-num js-line-number" data-line-number="4310"></td>
        <td id="LC4310" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4311" class="blob-num js-line-number" data-line-number="4311"></td>
        <td id="LC4311" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4312" class="blob-num js-line-number" data-line-number="4312"></td>
        <td id="LC4312" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvParams</span>(<span class="pl-smi">prefix</span>, <span class="pl-smi">mappedPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4313" class="blob-num js-line-number" data-line-number="4313"></td>
        <td id="LC4313" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/weights<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">4</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4314" class="blob-num js-line-number" data-line-number="4314"></td>
        <td id="LC4314" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/biases<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4315" class="blob-num js-line-number" data-line-number="4315"></td>
        <td id="LC4315" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { filters<span class="pl-k">:</span> filters, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L4316" class="blob-num js-line-number" data-line-number="4316"></td>
        <td id="LC4316" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4317" class="blob-num js-line-number" data-line-number="4317"></td>
        <td id="LC4317" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractBoxPredictorParams</span>(<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L4318" class="blob-num js-line-number" data-line-number="4318"></td>
        <td id="LC4318" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> box_encoding_predictor <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Prediction/BoxPredictor_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/BoxEncodingPredictor<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>prediction_layer/box_predictor_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/box_encoding_predictor<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4319" class="blob-num js-line-number" data-line-number="4319"></td>
        <td id="LC4319" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> class_predictor <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Prediction/BoxPredictor_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/ClassPredictor<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>prediction_layer/box_predictor_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> idx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/class_predictor<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4320" class="blob-num js-line-number" data-line-number="4320"></td>
        <td id="LC4320" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { box_encoding_predictor<span class="pl-k">:</span> box_encoding_predictor, class_predictor<span class="pl-k">:</span> class_predictor };</td>
      </tr>
      <tr>
        <td id="L4321" class="blob-num js-line-number" data-line-number="4321"></td>
        <td id="LC4321" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4322" class="blob-num js-line-number" data-line-number="4322"></td>
        <td id="LC4322" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractPredictionLayerParams</span>() {</td>
      </tr>
      <tr>
        <td id="L4323" class="blob-num js-line-number" data-line-number="4323"></td>
        <td id="LC4323" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4324" class="blob-num js-line-number" data-line-number="4324"></td>
        <td id="LC4324" class="blob-code blob-code-inner js-file-line">                conv_0<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Prediction<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_0<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4325" class="blob-num js-line-number" data-line-number="4325"></td>
        <td id="LC4325" class="blob-code blob-code-inner js-file-line">                conv_1<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Prediction<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_1<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4326" class="blob-num js-line-number" data-line-number="4326"></td>
        <td id="LC4326" class="blob-code blob-code-inner js-file-line">                conv_2<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Prediction<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_2<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4327" class="blob-num js-line-number" data-line-number="4327"></td>
        <td id="LC4327" class="blob-code blob-code-inner js-file-line">                conv_3<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Prediction<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_3<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4328" class="blob-num js-line-number" data-line-number="4328"></td>
        <td id="LC4328" class="blob-code blob-code-inner js-file-line">                conv_4<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Prediction<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">4</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_4<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4329" class="blob-num js-line-number" data-line-number="4329"></td>
        <td id="LC4329" class="blob-code blob-code-inner js-file-line">                conv_5<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Prediction<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">5</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_5<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4330" class="blob-num js-line-number" data-line-number="4330"></td>
        <td id="LC4330" class="blob-code blob-code-inner js-file-line">                conv_6<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Prediction<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">6</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_6<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4331" class="blob-num js-line-number" data-line-number="4331"></td>
        <td id="LC4331" class="blob-code blob-code-inner js-file-line">                conv_7<span class="pl-k">:</span> <span class="pl-en">extractPointwiseConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Prediction<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">7</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>prediction_layer/conv_7<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4332" class="blob-num js-line-number" data-line-number="4332"></td>
        <td id="LC4332" class="blob-code blob-code-inner js-file-line">                box_predictor_0<span class="pl-k">:</span> <span class="pl-en">extractBoxPredictorParams</span>(<span class="pl-c1">0</span>),</td>
      </tr>
      <tr>
        <td id="L4333" class="blob-num js-line-number" data-line-number="4333"></td>
        <td id="LC4333" class="blob-code blob-code-inner js-file-line">                box_predictor_1<span class="pl-k">:</span> <span class="pl-en">extractBoxPredictorParams</span>(<span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L4334" class="blob-num js-line-number" data-line-number="4334"></td>
        <td id="LC4334" class="blob-code blob-code-inner js-file-line">                box_predictor_2<span class="pl-k">:</span> <span class="pl-en">extractBoxPredictorParams</span>(<span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L4335" class="blob-num js-line-number" data-line-number="4335"></td>
        <td id="LC4335" class="blob-code blob-code-inner js-file-line">                box_predictor_3<span class="pl-k">:</span> <span class="pl-en">extractBoxPredictorParams</span>(<span class="pl-c1">3</span>),</td>
      </tr>
      <tr>
        <td id="L4336" class="blob-num js-line-number" data-line-number="4336"></td>
        <td id="LC4336" class="blob-code blob-code-inner js-file-line">                box_predictor_4<span class="pl-k">:</span> <span class="pl-en">extractBoxPredictorParams</span>(<span class="pl-c1">4</span>),</td>
      </tr>
      <tr>
        <td id="L4337" class="blob-num js-line-number" data-line-number="4337"></td>
        <td id="LC4337" class="blob-code blob-code-inner js-file-line">                box_predictor_5<span class="pl-k">:</span> <span class="pl-en">extractBoxPredictorParams</span>(<span class="pl-c1">5</span>)</td>
      </tr>
      <tr>
        <td id="L4338" class="blob-num js-line-number" data-line-number="4338"></td>
        <td id="LC4338" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4339" class="blob-num js-line-number" data-line-number="4339"></td>
        <td id="LC4339" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4340" class="blob-num js-line-number" data-line-number="4340"></td>
        <td id="LC4340" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4341" class="blob-num js-line-number" data-line-number="4341"></td>
        <td id="LC4341" class="blob-code blob-code-inner js-file-line">            extractMobilenetV1Params<span class="pl-k">:</span> extractMobilenetV1Params,</td>
      </tr>
      <tr>
        <td id="L4342" class="blob-num js-line-number" data-line-number="4342"></td>
        <td id="LC4342" class="blob-code blob-code-inner js-file-line">            extractPredictionLayerParams<span class="pl-k">:</span> extractPredictionLayerParams</td>
      </tr>
      <tr>
        <td id="L4343" class="blob-num js-line-number" data-line-number="4343"></td>
        <td id="LC4343" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4344" class="blob-num js-line-number" data-line-number="4344"></td>
        <td id="LC4344" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4345" class="blob-num js-line-number" data-line-number="4345"></td>
        <td id="LC4345" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsFromWeigthMap$6</span>(<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L4346" class="blob-num js-line-number" data-line-number="4346"></td>
        <td id="LC4346" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4347" class="blob-num js-line-number" data-line-number="4347"></td>
        <td id="LC4347" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$7</span>(weightMap, paramMappings), extractMobilenetV1Params <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractMobilenetV1Params</span>, extractPredictionLayerParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractPredictionLayerParams</span>;</td>
      </tr>
      <tr>
        <td id="L4348" class="blob-num js-line-number" data-line-number="4348"></td>
        <td id="LC4348" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extra_dim <span class="pl-k">=</span> weightMap[<span class="pl-s"><span class="pl-pds">&#39;</span>Output/extra_dim<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L4349" class="blob-num js-line-number" data-line-number="4349"></td>
        <td id="LC4349" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ originalPath<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Output/extra_dim<span class="pl-pds">&#39;</span></span>, paramPath<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>output_layer/extra_dim<span class="pl-pds">&#39;</span></span> });</td>
      </tr>
      <tr>
        <td id="L4350" class="blob-num js-line-number" data-line-number="4350"></td>
        <td id="LC4350" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isTensor3D</span>(extra_dim)) {</td>
      </tr>
      <tr>
        <td id="L4351" class="blob-num js-line-number" data-line-number="4351"></td>
        <td id="LC4351" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expected weightMap[&#39;Output/extra_dim&#39;] to be a Tensor3D, instead have <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> extra_dim);</td>
      </tr>
      <tr>
        <td id="L4352" class="blob-num js-line-number" data-line-number="4352"></td>
        <td id="LC4352" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4353" class="blob-num js-line-number" data-line-number="4353"></td>
        <td id="LC4353" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> params <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4354" class="blob-num js-line-number" data-line-number="4354"></td>
        <td id="LC4354" class="blob-code blob-code-inner js-file-line">            mobilenetv1<span class="pl-k">:</span> <span class="pl-en">extractMobilenetV1Params</span>(),</td>
      </tr>
      <tr>
        <td id="L4355" class="blob-num js-line-number" data-line-number="4355"></td>
        <td id="LC4355" class="blob-code blob-code-inner js-file-line">            prediction_layer<span class="pl-k">:</span> <span class="pl-en">extractPredictionLayerParams</span>(),</td>
      </tr>
      <tr>
        <td id="L4356" class="blob-num js-line-number" data-line-number="4356"></td>
        <td id="LC4356" class="blob-code blob-code-inner js-file-line">            output_layer<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L4357" class="blob-num js-line-number" data-line-number="4357"></td>
        <td id="LC4357" class="blob-code blob-code-inner js-file-line">                extra_dim<span class="pl-k">:</span> extra_dim</td>
      </tr>
      <tr>
        <td id="L4358" class="blob-num js-line-number" data-line-number="4358"></td>
        <td id="LC4358" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4359" class="blob-num js-line-number" data-line-number="4359"></td>
        <td id="LC4359" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4360" class="blob-num js-line-number" data-line-number="4360"></td>
        <td id="LC4360" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">disposeUnusedWeightTensors</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L4361" class="blob-num js-line-number" data-line-number="4361"></td>
        <td id="LC4361" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> params, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L4362" class="blob-num js-line-number" data-line-number="4362"></td>
        <td id="LC4362" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4363" class="blob-num js-line-number" data-line-number="4363"></td>
        <td id="LC4363" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4364" class="blob-num js-line-number" data-line-number="4364"></td>
        <td id="LC4364" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pointwiseConvLayer</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>, <span class="pl-smi">strides</span>) {</td>
      </tr>
      <tr>
        <td id="L4365" class="blob-num js-line-number" data-line-number="4365"></td>
        <td id="LC4365" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4366" class="blob-num js-line-number" data-line-number="4366"></td>
        <td id="LC4366" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">conv2d</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">filters</span>, strides, <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4367" class="blob-num js-line-number" data-line-number="4367"></td>
        <td id="LC4367" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">add</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">batch_norm_offset</span>);</td>
      </tr>
      <tr>
        <td id="L4368" class="blob-num js-line-number" data-line-number="4368"></td>
        <td id="LC4368" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">clipByValue</span>(out, <span class="pl-c1">0</span>, <span class="pl-c1">6</span>);</td>
      </tr>
      <tr>
        <td id="L4369" class="blob-num js-line-number" data-line-number="4369"></td>
        <td id="LC4369" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4370" class="blob-num js-line-number" data-line-number="4370"></td>
        <td id="LC4370" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4371" class="blob-num js-line-number" data-line-number="4371"></td>
        <td id="LC4371" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4372" class="blob-num js-line-number" data-line-number="4372"></td>
        <td id="LC4372" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> epsilon <span class="pl-k">=</span> <span class="pl-c1">0.0010000000474974513</span>;</td>
      </tr>
      <tr>
        <td id="L4373" class="blob-num js-line-number" data-line-number="4373"></td>
        <td id="LC4373" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">depthwiseConvLayer</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>, <span class="pl-smi">strides</span>) {</td>
      </tr>
      <tr>
        <td id="L4374" class="blob-num js-line-number" data-line-number="4374"></td>
        <td id="LC4374" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4375" class="blob-num js-line-number" data-line-number="4375"></td>
        <td id="LC4375" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">depthwiseConv2d</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">filters</span>, strides, <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4376" class="blob-num js-line-number" data-line-number="4376"></td>
        <td id="LC4376" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">batchNorm</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">batch_norm_mean</span>, <span class="pl-smi">params</span>.<span class="pl-smi">batch_norm_variance</span>, <span class="pl-smi">params</span>.<span class="pl-smi">batch_norm_offset</span>, <span class="pl-smi">params</span>.<span class="pl-smi">batch_norm_scale</span>, epsilon);</td>
      </tr>
      <tr>
        <td id="L4377" class="blob-num js-line-number" data-line-number="4377"></td>
        <td id="LC4377" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">clipByValue</span>(out, <span class="pl-c1">0</span>, <span class="pl-c1">6</span>);</td>
      </tr>
      <tr>
        <td id="L4378" class="blob-num js-line-number" data-line-number="4378"></td>
        <td id="LC4378" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4379" class="blob-num js-line-number" data-line-number="4379"></td>
        <td id="LC4379" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4380" class="blob-num js-line-number" data-line-number="4380"></td>
        <td id="LC4380" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getStridesForLayerIdx</span>(<span class="pl-smi">layerIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L4381" class="blob-num js-line-number" data-line-number="4381"></td>
        <td id="LC4381" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> [<span class="pl-c1">2</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>, <span class="pl-c1">12</span>].<span class="pl-en">some</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> idx <span class="pl-k">===</span> layerIdx; }) <span class="pl-k">?</span> [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>] <span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4382" class="blob-num js-line-number" data-line-number="4382"></td>
        <td id="LC4382" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4383" class="blob-num js-line-number" data-line-number="4383"></td>
        <td id="LC4383" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">mobileNetV1</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L4384" class="blob-num js-line-number" data-line-number="4384"></td>
        <td id="LC4384" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4385" class="blob-num js-line-number" data-line-number="4385"></td>
        <td id="LC4385" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv11 <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4386" class="blob-num js-line-number" data-line-number="4386"></td>
        <td id="LC4386" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">conv_0</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L4387" class="blob-num js-line-number" data-line-number="4387"></td>
        <td id="LC4387" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> convPairParams <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L4388" class="blob-num js-line-number" data-line-number="4388"></td>
        <td id="LC4388" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_1</span>,</td>
      </tr>
      <tr>
        <td id="L4389" class="blob-num js-line-number" data-line-number="4389"></td>
        <td id="LC4389" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_2</span>,</td>
      </tr>
      <tr>
        <td id="L4390" class="blob-num js-line-number" data-line-number="4390"></td>
        <td id="LC4390" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_3</span>,</td>
      </tr>
      <tr>
        <td id="L4391" class="blob-num js-line-number" data-line-number="4391"></td>
        <td id="LC4391" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_4</span>,</td>
      </tr>
      <tr>
        <td id="L4392" class="blob-num js-line-number" data-line-number="4392"></td>
        <td id="LC4392" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_5</span>,</td>
      </tr>
      <tr>
        <td id="L4393" class="blob-num js-line-number" data-line-number="4393"></td>
        <td id="LC4393" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_6</span>,</td>
      </tr>
      <tr>
        <td id="L4394" class="blob-num js-line-number" data-line-number="4394"></td>
        <td id="LC4394" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_7</span>,</td>
      </tr>
      <tr>
        <td id="L4395" class="blob-num js-line-number" data-line-number="4395"></td>
        <td id="LC4395" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_8</span>,</td>
      </tr>
      <tr>
        <td id="L4396" class="blob-num js-line-number" data-line-number="4396"></td>
        <td id="LC4396" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_9</span>,</td>
      </tr>
      <tr>
        <td id="L4397" class="blob-num js-line-number" data-line-number="4397"></td>
        <td id="LC4397" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_10</span>,</td>
      </tr>
      <tr>
        <td id="L4398" class="blob-num js-line-number" data-line-number="4398"></td>
        <td id="LC4398" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_11</span>,</td>
      </tr>
      <tr>
        <td id="L4399" class="blob-num js-line-number" data-line-number="4399"></td>
        <td id="LC4399" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_12</span>,</td>
      </tr>
      <tr>
        <td id="L4400" class="blob-num js-line-number" data-line-number="4400"></td>
        <td id="LC4400" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">params</span>.<span class="pl-smi">conv_13</span></td>
      </tr>
      <tr>
        <td id="L4401" class="blob-num js-line-number" data-line-number="4401"></td>
        <td id="LC4401" class="blob-code blob-code-inner js-file-line">            ];</td>
      </tr>
      <tr>
        <td id="L4402" class="blob-num js-line-number" data-line-number="4402"></td>
        <td id="LC4402" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">convPairParams</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">param</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L4403" class="blob-num js-line-number" data-line-number="4403"></td>
        <td id="LC4403" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> layerIdx <span class="pl-k">=</span> i <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L4404" class="blob-num js-line-number" data-line-number="4404"></td>
        <td id="LC4404" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> depthwiseConvStrides <span class="pl-k">=</span> <span class="pl-en">getStridesForLayerIdx</span>(layerIdx);</td>
      </tr>
      <tr>
        <td id="L4405" class="blob-num js-line-number" data-line-number="4405"></td>
        <td id="LC4405" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">depthwiseConvLayer</span>(out, <span class="pl-smi">param</span>.<span class="pl-smi">depthwise_conv</span>, depthwiseConvStrides);</td>
      </tr>
      <tr>
        <td id="L4406" class="blob-num js-line-number" data-line-number="4406"></td>
        <td id="LC4406" class="blob-code blob-code-inner js-file-line">                out <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(out, <span class="pl-smi">param</span>.<span class="pl-smi">pointwise_conv</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4407" class="blob-num js-line-number" data-line-number="4407"></td>
        <td id="LC4407" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (layerIdx <span class="pl-k">===</span> <span class="pl-c1">11</span>) {</td>
      </tr>
      <tr>
        <td id="L4408" class="blob-num js-line-number" data-line-number="4408"></td>
        <td id="LC4408" class="blob-code blob-code-inner js-file-line">                    conv11 <span class="pl-k">=</span> out;</td>
      </tr>
      <tr>
        <td id="L4409" class="blob-num js-line-number" data-line-number="4409"></td>
        <td id="LC4409" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4410" class="blob-num js-line-number" data-line-number="4410"></td>
        <td id="LC4410" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4411" class="blob-num js-line-number" data-line-number="4411"></td>
        <td id="LC4411" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (conv11 <span class="pl-k">===</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4412" class="blob-num js-line-number" data-line-number="4412"></td>
        <td id="LC4412" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>mobileNetV1 - output of conv layer 11 is null<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4413" class="blob-num js-line-number" data-line-number="4413"></td>
        <td id="LC4413" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4414" class="blob-num js-line-number" data-line-number="4414"></td>
        <td id="LC4414" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4415" class="blob-num js-line-number" data-line-number="4415"></td>
        <td id="LC4415" class="blob-code blob-code-inner js-file-line">                out<span class="pl-k">:</span> out,</td>
      </tr>
      <tr>
        <td id="L4416" class="blob-num js-line-number" data-line-number="4416"></td>
        <td id="LC4416" class="blob-code blob-code-inner js-file-line">                conv11<span class="pl-k">:</span> conv11</td>
      </tr>
      <tr>
        <td id="L4417" class="blob-num js-line-number" data-line-number="4417"></td>
        <td id="LC4417" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4418" class="blob-num js-line-number" data-line-number="4418"></td>
        <td id="LC4418" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4419" class="blob-num js-line-number" data-line-number="4419"></td>
        <td id="LC4419" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4420" class="blob-num js-line-number" data-line-number="4420"></td>
        <td id="LC4420" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4421" class="blob-num js-line-number" data-line-number="4421"></td>
        <td id="LC4421" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">nonMaxSuppression$2</span>(<span class="pl-smi">boxes</span>, <span class="pl-smi">scores</span>, <span class="pl-smi">maxOutputSize</span>, <span class="pl-smi">iouThreshold</span>, <span class="pl-smi">scoreThreshold</span>) {</td>
      </tr>
      <tr>
        <td id="L4422" class="blob-num js-line-number" data-line-number="4422"></td>
        <td id="LC4422" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> numBoxes <span class="pl-k">=</span> <span class="pl-smi">boxes</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4423" class="blob-num js-line-number" data-line-number="4423"></td>
        <td id="LC4423" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> outputSize <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(maxOutputSize, numBoxes);</td>
      </tr>
      <tr>
        <td id="L4424" class="blob-num js-line-number" data-line-number="4424"></td>
        <td id="LC4424" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> candidates <span class="pl-k">=</span> scores</td>
      </tr>
      <tr>
        <td id="L4425" class="blob-num js-line-number" data-line-number="4425"></td>
        <td id="LC4425" class="blob-code blob-code-inner js-file-line">            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">score</span>, <span class="pl-smi">boxIndex</span>) { <span class="pl-k">return</span> ({ score<span class="pl-k">:</span> score, boxIndex<span class="pl-k">:</span> boxIndex }); })</td>
      </tr>
      <tr>
        <td id="L4426" class="blob-num js-line-number" data-line-number="4426"></td>
        <td id="LC4426" class="blob-code blob-code-inner js-file-line">            .<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">c</span>) { <span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">score</span> <span class="pl-k">&gt;</span> scoreThreshold; })</td>
      </tr>
      <tr>
        <td id="L4427" class="blob-num js-line-number" data-line-number="4427"></td>
        <td id="LC4427" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">sort</span>(<span class="pl-k">function</span> (<span class="pl-smi">c1</span>, <span class="pl-smi">c2</span>) { <span class="pl-k">return</span> <span class="pl-smi">c2</span>.<span class="pl-smi">score</span> <span class="pl-k">-</span> <span class="pl-smi">c1</span>.<span class="pl-smi">score</span>; });</td>
      </tr>
      <tr>
        <td id="L4428" class="blob-num js-line-number" data-line-number="4428"></td>
        <td id="LC4428" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">suppressFunc</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">x</span>) { <span class="pl-k">return</span> x <span class="pl-k">&lt;=</span> iouThreshold <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>; };</td>
      </tr>
      <tr>
        <td id="L4429" class="blob-num js-line-number" data-line-number="4429"></td>
        <td id="LC4429" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> selected <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4430" class="blob-num js-line-number" data-line-number="4430"></td>
        <td id="LC4430" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">candidates</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">c</span>) {</td>
      </tr>
      <tr>
        <td id="L4431" class="blob-num js-line-number" data-line-number="4431"></td>
        <td id="LC4431" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">selected</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;=</span> outputSize) {</td>
      </tr>
      <tr>
        <td id="L4432" class="blob-num js-line-number" data-line-number="4432"></td>
        <td id="LC4432" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L4433" class="blob-num js-line-number" data-line-number="4433"></td>
        <td id="LC4433" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4434" class="blob-num js-line-number" data-line-number="4434"></td>
        <td id="LC4434" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> originalScore <span class="pl-k">=</span> <span class="pl-smi">c</span>.<span class="pl-smi">score</span>;</td>
      </tr>
      <tr>
        <td id="L4435" class="blob-num js-line-number" data-line-number="4435"></td>
        <td id="LC4435" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-smi">selected</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>; j <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; <span class="pl-k">--</span>j) {</td>
      </tr>
      <tr>
        <td id="L4436" class="blob-num js-line-number" data-line-number="4436"></td>
        <td id="LC4436" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> iou <span class="pl-k">=</span> <span class="pl-en">IOU</span>(boxes, <span class="pl-smi">c</span>.<span class="pl-smi">boxIndex</span>, selected[j]);</td>
      </tr>
      <tr>
        <td id="L4437" class="blob-num js-line-number" data-line-number="4437"></td>
        <td id="LC4437" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (iou <span class="pl-k">===</span> <span class="pl-c1">0.0</span>) {</td>
      </tr>
      <tr>
        <td id="L4438" class="blob-num js-line-number" data-line-number="4438"></td>
        <td id="LC4438" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L4439" class="blob-num js-line-number" data-line-number="4439"></td>
        <td id="LC4439" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4440" class="blob-num js-line-number" data-line-number="4440"></td>
        <td id="LC4440" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">c</span>.<span class="pl-smi">score</span> <span class="pl-k">*=</span> <span class="pl-en">suppressFunc</span>(iou);</td>
      </tr>
      <tr>
        <td id="L4441" class="blob-num js-line-number" data-line-number="4441"></td>
        <td id="LC4441" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">c</span>.<span class="pl-smi">score</span> <span class="pl-k">&lt;=</span> scoreThreshold) {</td>
      </tr>
      <tr>
        <td id="L4442" class="blob-num js-line-number" data-line-number="4442"></td>
        <td id="LC4442" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L4443" class="blob-num js-line-number" data-line-number="4443"></td>
        <td id="LC4443" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4444" class="blob-num js-line-number" data-line-number="4444"></td>
        <td id="LC4444" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4445" class="blob-num js-line-number" data-line-number="4445"></td>
        <td id="LC4445" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (originalScore <span class="pl-k">===</span> <span class="pl-smi">c</span>.<span class="pl-smi">score</span>) {</td>
      </tr>
      <tr>
        <td id="L4446" class="blob-num js-line-number" data-line-number="4446"></td>
        <td id="LC4446" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">selected</span>.<span class="pl-c1">push</span>(<span class="pl-smi">c</span>.<span class="pl-smi">boxIndex</span>);</td>
      </tr>
      <tr>
        <td id="L4447" class="blob-num js-line-number" data-line-number="4447"></td>
        <td id="LC4447" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4448" class="blob-num js-line-number" data-line-number="4448"></td>
        <td id="LC4448" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4449" class="blob-num js-line-number" data-line-number="4449"></td>
        <td id="LC4449" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> selected;</td>
      </tr>
      <tr>
        <td id="L4450" class="blob-num js-line-number" data-line-number="4450"></td>
        <td id="LC4450" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4451" class="blob-num js-line-number" data-line-number="4451"></td>
        <td id="LC4451" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">IOU</span>(<span class="pl-smi">boxes</span>, <span class="pl-smi">i</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L4452" class="blob-num js-line-number" data-line-number="4452"></td>
        <td id="LC4452" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> boxesData <span class="pl-k">=</span> <span class="pl-smi">boxes</span>.<span class="pl-en">arraySync</span>();</td>
      </tr>
      <tr>
        <td id="L4453" class="blob-num js-line-number" data-line-number="4453"></td>
        <td id="LC4453" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> yminI <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(boxesData[i][<span class="pl-c1">0</span>], boxesData[i][<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L4454" class="blob-num js-line-number" data-line-number="4454"></td>
        <td id="LC4454" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> xminI <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(boxesData[i][<span class="pl-c1">1</span>], boxesData[i][<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L4455" class="blob-num js-line-number" data-line-number="4455"></td>
        <td id="LC4455" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ymaxI <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(boxesData[i][<span class="pl-c1">0</span>], boxesData[i][<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L4456" class="blob-num js-line-number" data-line-number="4456"></td>
        <td id="LC4456" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> xmaxI <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(boxesData[i][<span class="pl-c1">1</span>], boxesData[i][<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L4457" class="blob-num js-line-number" data-line-number="4457"></td>
        <td id="LC4457" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> yminJ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(boxesData[j][<span class="pl-c1">0</span>], boxesData[j][<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L4458" class="blob-num js-line-number" data-line-number="4458"></td>
        <td id="LC4458" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> xminJ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(boxesData[j][<span class="pl-c1">1</span>], boxesData[j][<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L4459" class="blob-num js-line-number" data-line-number="4459"></td>
        <td id="LC4459" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ymaxJ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(boxesData[j][<span class="pl-c1">0</span>], boxesData[j][<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L4460" class="blob-num js-line-number" data-line-number="4460"></td>
        <td id="LC4460" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> xmaxJ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(boxesData[j][<span class="pl-c1">1</span>], boxesData[j][<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L4461" class="blob-num js-line-number" data-line-number="4461"></td>
        <td id="LC4461" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> areaI <span class="pl-k">=</span> (ymaxI <span class="pl-k">-</span> yminI) <span class="pl-k">*</span> (xmaxI <span class="pl-k">-</span> xminI);</td>
      </tr>
      <tr>
        <td id="L4462" class="blob-num js-line-number" data-line-number="4462"></td>
        <td id="LC4462" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> areaJ <span class="pl-k">=</span> (ymaxJ <span class="pl-k">-</span> yminJ) <span class="pl-k">*</span> (xmaxJ <span class="pl-k">-</span> xminJ);</td>
      </tr>
      <tr>
        <td id="L4463" class="blob-num js-line-number" data-line-number="4463"></td>
        <td id="LC4463" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (areaI <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> areaJ <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4464" class="blob-num js-line-number" data-line-number="4464"></td>
        <td id="LC4464" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">0.0</span>;</td>
      </tr>
      <tr>
        <td id="L4465" class="blob-num js-line-number" data-line-number="4465"></td>
        <td id="LC4465" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4466" class="blob-num js-line-number" data-line-number="4466"></td>
        <td id="LC4466" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> intersectionYmin <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(yminI, yminJ);</td>
      </tr>
      <tr>
        <td id="L4467" class="blob-num js-line-number" data-line-number="4467"></td>
        <td id="LC4467" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> intersectionXmin <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(xminI, xminJ);</td>
      </tr>
      <tr>
        <td id="L4468" class="blob-num js-line-number" data-line-number="4468"></td>
        <td id="LC4468" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> intersectionYmax <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(ymaxI, ymaxJ);</td>
      </tr>
      <tr>
        <td id="L4469" class="blob-num js-line-number" data-line-number="4469"></td>
        <td id="LC4469" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> intersectionXmax <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(xmaxI, xmaxJ);</td>
      </tr>
      <tr>
        <td id="L4470" class="blob-num js-line-number" data-line-number="4470"></td>
        <td id="LC4470" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> intersectionArea <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(intersectionYmax <span class="pl-k">-</span> intersectionYmin, <span class="pl-c1">0.0</span>) <span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L4471" class="blob-num js-line-number" data-line-number="4471"></td>
        <td id="LC4471" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(intersectionXmax <span class="pl-k">-</span> intersectionXmin, <span class="pl-c1">0.0</span>);</td>
      </tr>
      <tr>
        <td id="L4472" class="blob-num js-line-number" data-line-number="4472"></td>
        <td id="LC4472" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> intersectionArea <span class="pl-k">/</span> (areaI <span class="pl-k">+</span> areaJ <span class="pl-k">-</span> intersectionArea);</td>
      </tr>
      <tr>
        <td id="L4473" class="blob-num js-line-number" data-line-number="4473"></td>
        <td id="LC4473" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4474" class="blob-num js-line-number" data-line-number="4474"></td>
        <td id="LC4474" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4475" class="blob-num js-line-number" data-line-number="4475"></td>
        <td id="LC4475" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getCenterCoordinatesAndSizesLayer</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4476" class="blob-num js-line-number" data-line-number="4476"></td>
        <td id="LC4476" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> vec <span class="pl-k">=</span> <span class="pl-en">unstack</span>(<span class="pl-en">transpose</span>(x, [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>]));</td>
      </tr>
      <tr>
        <td id="L4477" class="blob-num js-line-number" data-line-number="4477"></td>
        <td id="LC4477" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> sizes <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L4478" class="blob-num js-line-number" data-line-number="4478"></td>
        <td id="LC4478" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">sub</span>(vec[<span class="pl-c1">2</span>], vec[<span class="pl-c1">0</span>]),</td>
      </tr>
      <tr>
        <td id="L4479" class="blob-num js-line-number" data-line-number="4479"></td>
        <td id="LC4479" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">sub</span>(vec[<span class="pl-c1">3</span>], vec[<span class="pl-c1">1</span>])</td>
      </tr>
      <tr>
        <td id="L4480" class="blob-num js-line-number" data-line-number="4480"></td>
        <td id="LC4480" class="blob-code blob-code-inner js-file-line">        ];</td>
      </tr>
      <tr>
        <td id="L4481" class="blob-num js-line-number" data-line-number="4481"></td>
        <td id="LC4481" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> centers <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L4482" class="blob-num js-line-number" data-line-number="4482"></td>
        <td id="LC4482" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">add</span>(vec[<span class="pl-c1">0</span>], <span class="pl-en">div</span>(sizes[<span class="pl-c1">0</span>], <span class="pl-en">scalar</span>(<span class="pl-c1">2</span>))),</td>
      </tr>
      <tr>
        <td id="L4483" class="blob-num js-line-number" data-line-number="4483"></td>
        <td id="LC4483" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">add</span>(vec[<span class="pl-c1">1</span>], <span class="pl-en">div</span>(sizes[<span class="pl-c1">1</span>], <span class="pl-en">scalar</span>(<span class="pl-c1">2</span>)))</td>
      </tr>
      <tr>
        <td id="L4484" class="blob-num js-line-number" data-line-number="4484"></td>
        <td id="LC4484" class="blob-code blob-code-inner js-file-line">        ];</td>
      </tr>
      <tr>
        <td id="L4485" class="blob-num js-line-number" data-line-number="4485"></td>
        <td id="LC4485" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4486" class="blob-num js-line-number" data-line-number="4486"></td>
        <td id="LC4486" class="blob-code blob-code-inner js-file-line">            sizes<span class="pl-k">:</span> sizes,</td>
      </tr>
      <tr>
        <td id="L4487" class="blob-num js-line-number" data-line-number="4487"></td>
        <td id="LC4487" class="blob-code blob-code-inner js-file-line">            centers<span class="pl-k">:</span> centers</td>
      </tr>
      <tr>
        <td id="L4488" class="blob-num js-line-number" data-line-number="4488"></td>
        <td id="LC4488" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4489" class="blob-num js-line-number" data-line-number="4489"></td>
        <td id="LC4489" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4490" class="blob-num js-line-number" data-line-number="4490"></td>
        <td id="LC4490" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">decodeBoxesLayer</span>(<span class="pl-smi">x0</span>, <span class="pl-smi">x1</span>) {</td>
      </tr>
      <tr>
        <td id="L4491" class="blob-num js-line-number" data-line-number="4491"></td>
        <td id="LC4491" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">getCenterCoordinatesAndSizesLayer</span>(x0), sizes <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">sizes</span>, centers <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">centers</span>;</td>
      </tr>
      <tr>
        <td id="L4492" class="blob-num js-line-number" data-line-number="4492"></td>
        <td id="LC4492" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> vec <span class="pl-k">=</span> <span class="pl-en">unstack</span>(<span class="pl-en">transpose</span>(x1, [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>]));</td>
      </tr>
      <tr>
        <td id="L4493" class="blob-num js-line-number" data-line-number="4493"></td>
        <td id="LC4493" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> div0_out <span class="pl-k">=</span> <span class="pl-en">div</span>(<span class="pl-en">mul</span>(<span class="pl-en">exp</span>(<span class="pl-en">div</span>(vec[<span class="pl-c1">2</span>], <span class="pl-en">scalar</span>(<span class="pl-c1">5</span>))), sizes[<span class="pl-c1">0</span>]), <span class="pl-en">scalar</span>(<span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L4494" class="blob-num js-line-number" data-line-number="4494"></td>
        <td id="LC4494" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> add0_out <span class="pl-k">=</span> <span class="pl-en">add</span>(<span class="pl-en">mul</span>(<span class="pl-en">div</span>(vec[<span class="pl-c1">0</span>], <span class="pl-en">scalar</span>(<span class="pl-c1">10</span>)), sizes[<span class="pl-c1">0</span>]), centers[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L4495" class="blob-num js-line-number" data-line-number="4495"></td>
        <td id="LC4495" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> div1_out <span class="pl-k">=</span> <span class="pl-en">div</span>(<span class="pl-en">mul</span>(<span class="pl-en">exp</span>(<span class="pl-en">div</span>(vec[<span class="pl-c1">3</span>], <span class="pl-en">scalar</span>(<span class="pl-c1">5</span>))), sizes[<span class="pl-c1">1</span>]), <span class="pl-en">scalar</span>(<span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L4496" class="blob-num js-line-number" data-line-number="4496"></td>
        <td id="LC4496" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> add1_out <span class="pl-k">=</span> <span class="pl-en">add</span>(<span class="pl-en">mul</span>(<span class="pl-en">div</span>(vec[<span class="pl-c1">1</span>], <span class="pl-en">scalar</span>(<span class="pl-c1">10</span>)), sizes[<span class="pl-c1">1</span>]), centers[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4497" class="blob-num js-line-number" data-line-number="4497"></td>
        <td id="LC4497" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">transpose</span>(<span class="pl-en">stack</span>([</td>
      </tr>
      <tr>
        <td id="L4498" class="blob-num js-line-number" data-line-number="4498"></td>
        <td id="LC4498" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">sub</span>(add0_out, div0_out),</td>
      </tr>
      <tr>
        <td id="L4499" class="blob-num js-line-number" data-line-number="4499"></td>
        <td id="LC4499" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">sub</span>(add1_out, div1_out),</td>
      </tr>
      <tr>
        <td id="L4500" class="blob-num js-line-number" data-line-number="4500"></td>
        <td id="LC4500" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">add</span>(add0_out, div0_out),</td>
      </tr>
      <tr>
        <td id="L4501" class="blob-num js-line-number" data-line-number="4501"></td>
        <td id="LC4501" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">add</span>(add1_out, div1_out)</td>
      </tr>
      <tr>
        <td id="L4502" class="blob-num js-line-number" data-line-number="4502"></td>
        <td id="LC4502" class="blob-code blob-code-inner js-file-line">        ]), [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L4503" class="blob-num js-line-number" data-line-number="4503"></td>
        <td id="LC4503" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4504" class="blob-num js-line-number" data-line-number="4504"></td>
        <td id="LC4504" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">outputLayer</span>(<span class="pl-smi">boxPredictions</span>, <span class="pl-smi">classPredictions</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L4505" class="blob-num js-line-number" data-line-number="4505"></td>
        <td id="LC4505" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4506" class="blob-num js-line-number" data-line-number="4506"></td>
        <td id="LC4506" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batchSize <span class="pl-k">=</span> <span class="pl-smi">boxPredictions</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4507" class="blob-num js-line-number" data-line-number="4507"></td>
        <td id="LC4507" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxes <span class="pl-k">=</span> <span class="pl-en">decodeBoxesLayer</span>(<span class="pl-en">reshape</span>(<span class="pl-en">tile</span>(<span class="pl-smi">params</span>.<span class="pl-smi">extra_dim</span>, [batchSize, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>]), [<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">4</span>]), <span class="pl-en">reshape</span>(boxPredictions, [<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">4</span>]));</td>
      </tr>
      <tr>
        <td id="L4508" class="blob-num js-line-number" data-line-number="4508"></td>
        <td id="LC4508" class="blob-code blob-code-inner js-file-line">            boxes <span class="pl-k">=</span> <span class="pl-en">reshape</span>(boxes, [batchSize, (<span class="pl-smi">boxes</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>] <span class="pl-k">/</span> batchSize), <span class="pl-c1">4</span>]);</td>
      </tr>
      <tr>
        <td id="L4509" class="blob-num js-line-number" data-line-number="4509"></td>
        <td id="LC4509" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scoresAndClasses <span class="pl-k">=</span> <span class="pl-en">sigmoid</span>(<span class="pl-en">slice</span>(classPredictions, [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>], [<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>]));</td>
      </tr>
      <tr>
        <td id="L4510" class="blob-num js-line-number" data-line-number="4510"></td>
        <td id="LC4510" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scores <span class="pl-k">=</span> <span class="pl-en">slice</span>(scoresAndClasses, [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>], [<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4511" class="blob-num js-line-number" data-line-number="4511"></td>
        <td id="LC4511" class="blob-code blob-code-inner js-file-line">            scores <span class="pl-k">=</span> <span class="pl-en">reshape</span>(scores, [batchSize, <span class="pl-smi">scores</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">1</span>]]);</td>
      </tr>
      <tr>
        <td id="L4512" class="blob-num js-line-number" data-line-number="4512"></td>
        <td id="LC4512" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxesByBatch <span class="pl-k">=</span> <span class="pl-en">unstack</span>(boxes);</td>
      </tr>
      <tr>
        <td id="L4513" class="blob-num js-line-number" data-line-number="4513"></td>
        <td id="LC4513" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scoresByBatch <span class="pl-k">=</span> <span class="pl-en">unstack</span>(scores);</td>
      </tr>
      <tr>
        <td id="L4514" class="blob-num js-line-number" data-line-number="4514"></td>
        <td id="LC4514" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4515" class="blob-num js-line-number" data-line-number="4515"></td>
        <td id="LC4515" class="blob-code blob-code-inner js-file-line">                boxes<span class="pl-k">:</span> boxesByBatch,</td>
      </tr>
      <tr>
        <td id="L4516" class="blob-num js-line-number" data-line-number="4516"></td>
        <td id="LC4516" class="blob-code blob-code-inner js-file-line">                scores<span class="pl-k">:</span> scoresByBatch</td>
      </tr>
      <tr>
        <td id="L4517" class="blob-num js-line-number" data-line-number="4517"></td>
        <td id="LC4517" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4518" class="blob-num js-line-number" data-line-number="4518"></td>
        <td id="LC4518" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4519" class="blob-num js-line-number" data-line-number="4519"></td>
        <td id="LC4519" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4520" class="blob-num js-line-number" data-line-number="4520"></td>
        <td id="LC4520" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4521" class="blob-num js-line-number" data-line-number="4521"></td>
        <td id="LC4521" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">boxPredictionLayer</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L4522" class="blob-num js-line-number" data-line-number="4522"></td>
        <td id="LC4522" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4523" class="blob-num js-line-number" data-line-number="4523"></td>
        <td id="LC4523" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> batchSize <span class="pl-k">=</span> <span class="pl-smi">x</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4524" class="blob-num js-line-number" data-line-number="4524"></td>
        <td id="LC4524" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxPredictionEncoding <span class="pl-k">=</span> <span class="pl-en">reshape</span>(<span class="pl-en">convLayer</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">box_encoding_predictor</span>), [batchSize, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">4</span>]);</td>
      </tr>
      <tr>
        <td id="L4525" class="blob-num js-line-number" data-line-number="4525"></td>
        <td id="LC4525" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> classPrediction <span class="pl-k">=</span> <span class="pl-en">reshape</span>(<span class="pl-en">convLayer</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">class_predictor</span>), [batchSize, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L4526" class="blob-num js-line-number" data-line-number="4526"></td>
        <td id="LC4526" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4527" class="blob-num js-line-number" data-line-number="4527"></td>
        <td id="LC4527" class="blob-code blob-code-inner js-file-line">                boxPredictionEncoding<span class="pl-k">:</span> boxPredictionEncoding,</td>
      </tr>
      <tr>
        <td id="L4528" class="blob-num js-line-number" data-line-number="4528"></td>
        <td id="LC4528" class="blob-code blob-code-inner js-file-line">                classPrediction<span class="pl-k">:</span> classPrediction</td>
      </tr>
      <tr>
        <td id="L4529" class="blob-num js-line-number" data-line-number="4529"></td>
        <td id="LC4529" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4530" class="blob-num js-line-number" data-line-number="4530"></td>
        <td id="LC4530" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4531" class="blob-num js-line-number" data-line-number="4531"></td>
        <td id="LC4531" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4532" class="blob-num js-line-number" data-line-number="4532"></td>
        <td id="LC4532" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4533" class="blob-num js-line-number" data-line-number="4533"></td>
        <td id="LC4533" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">predictionLayer</span>(<span class="pl-smi">x</span>, <span class="pl-smi">conv11</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L4534" class="blob-num js-line-number" data-line-number="4534"></td>
        <td id="LC4534" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4535" class="blob-num js-line-number" data-line-number="4535"></td>
        <td id="LC4535" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv0 <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">conv_0</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4536" class="blob-num js-line-number" data-line-number="4536"></td>
        <td id="LC4536" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv1 <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(conv0, <span class="pl-smi">params</span>.<span class="pl-smi">conv_1</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L4537" class="blob-num js-line-number" data-line-number="4537"></td>
        <td id="LC4537" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv2 <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(conv1, <span class="pl-smi">params</span>.<span class="pl-smi">conv_2</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4538" class="blob-num js-line-number" data-line-number="4538"></td>
        <td id="LC4538" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv3 <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(conv2, <span class="pl-smi">params</span>.<span class="pl-smi">conv_3</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L4539" class="blob-num js-line-number" data-line-number="4539"></td>
        <td id="LC4539" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv4 <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(conv3, <span class="pl-smi">params</span>.<span class="pl-smi">conv_4</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4540" class="blob-num js-line-number" data-line-number="4540"></td>
        <td id="LC4540" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv5 <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(conv4, <span class="pl-smi">params</span>.<span class="pl-smi">conv_5</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L4541" class="blob-num js-line-number" data-line-number="4541"></td>
        <td id="LC4541" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv6 <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(conv5, <span class="pl-smi">params</span>.<span class="pl-smi">conv_6</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4542" class="blob-num js-line-number" data-line-number="4542"></td>
        <td id="LC4542" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv7 <span class="pl-k">=</span> <span class="pl-en">pointwiseConvLayer</span>(conv6, <span class="pl-smi">params</span>.<span class="pl-smi">conv_7</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L4543" class="blob-num js-line-number" data-line-number="4543"></td>
        <td id="LC4543" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxPrediction0 <span class="pl-k">=</span> <span class="pl-en">boxPredictionLayer</span>(conv11, <span class="pl-smi">params</span>.<span class="pl-smi">box_predictor_0</span>);</td>
      </tr>
      <tr>
        <td id="L4544" class="blob-num js-line-number" data-line-number="4544"></td>
        <td id="LC4544" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxPrediction1 <span class="pl-k">=</span> <span class="pl-en">boxPredictionLayer</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">box_predictor_1</span>);</td>
      </tr>
      <tr>
        <td id="L4545" class="blob-num js-line-number" data-line-number="4545"></td>
        <td id="LC4545" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxPrediction2 <span class="pl-k">=</span> <span class="pl-en">boxPredictionLayer</span>(conv1, <span class="pl-smi">params</span>.<span class="pl-smi">box_predictor_2</span>);</td>
      </tr>
      <tr>
        <td id="L4546" class="blob-num js-line-number" data-line-number="4546"></td>
        <td id="LC4546" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxPrediction3 <span class="pl-k">=</span> <span class="pl-en">boxPredictionLayer</span>(conv3, <span class="pl-smi">params</span>.<span class="pl-smi">box_predictor_3</span>);</td>
      </tr>
      <tr>
        <td id="L4547" class="blob-num js-line-number" data-line-number="4547"></td>
        <td id="LC4547" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxPrediction4 <span class="pl-k">=</span> <span class="pl-en">boxPredictionLayer</span>(conv5, <span class="pl-smi">params</span>.<span class="pl-smi">box_predictor_4</span>);</td>
      </tr>
      <tr>
        <td id="L4548" class="blob-num js-line-number" data-line-number="4548"></td>
        <td id="LC4548" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxPrediction5 <span class="pl-k">=</span> <span class="pl-en">boxPredictionLayer</span>(conv7, <span class="pl-smi">params</span>.<span class="pl-smi">box_predictor_5</span>);</td>
      </tr>
      <tr>
        <td id="L4549" class="blob-num js-line-number" data-line-number="4549"></td>
        <td id="LC4549" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boxPredictions <span class="pl-k">=</span> <span class="pl-en">concat</span>([</td>
      </tr>
      <tr>
        <td id="L4550" class="blob-num js-line-number" data-line-number="4550"></td>
        <td id="LC4550" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction0</span>.<span class="pl-smi">boxPredictionEncoding</span>,</td>
      </tr>
      <tr>
        <td id="L4551" class="blob-num js-line-number" data-line-number="4551"></td>
        <td id="LC4551" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction1</span>.<span class="pl-smi">boxPredictionEncoding</span>,</td>
      </tr>
      <tr>
        <td id="L4552" class="blob-num js-line-number" data-line-number="4552"></td>
        <td id="LC4552" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction2</span>.<span class="pl-smi">boxPredictionEncoding</span>,</td>
      </tr>
      <tr>
        <td id="L4553" class="blob-num js-line-number" data-line-number="4553"></td>
        <td id="LC4553" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction3</span>.<span class="pl-smi">boxPredictionEncoding</span>,</td>
      </tr>
      <tr>
        <td id="L4554" class="blob-num js-line-number" data-line-number="4554"></td>
        <td id="LC4554" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction4</span>.<span class="pl-smi">boxPredictionEncoding</span>,</td>
      </tr>
      <tr>
        <td id="L4555" class="blob-num js-line-number" data-line-number="4555"></td>
        <td id="LC4555" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction5</span>.<span class="pl-smi">boxPredictionEncoding</span></td>
      </tr>
      <tr>
        <td id="L4556" class="blob-num js-line-number" data-line-number="4556"></td>
        <td id="LC4556" class="blob-code blob-code-inner js-file-line">            ], <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L4557" class="blob-num js-line-number" data-line-number="4557"></td>
        <td id="LC4557" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> classPredictions <span class="pl-k">=</span> <span class="pl-en">concat</span>([</td>
      </tr>
      <tr>
        <td id="L4558" class="blob-num js-line-number" data-line-number="4558"></td>
        <td id="LC4558" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction0</span>.<span class="pl-smi">classPrediction</span>,</td>
      </tr>
      <tr>
        <td id="L4559" class="blob-num js-line-number" data-line-number="4559"></td>
        <td id="LC4559" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction1</span>.<span class="pl-smi">classPrediction</span>,</td>
      </tr>
      <tr>
        <td id="L4560" class="blob-num js-line-number" data-line-number="4560"></td>
        <td id="LC4560" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction2</span>.<span class="pl-smi">classPrediction</span>,</td>
      </tr>
      <tr>
        <td id="L4561" class="blob-num js-line-number" data-line-number="4561"></td>
        <td id="LC4561" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction3</span>.<span class="pl-smi">classPrediction</span>,</td>
      </tr>
      <tr>
        <td id="L4562" class="blob-num js-line-number" data-line-number="4562"></td>
        <td id="LC4562" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction4</span>.<span class="pl-smi">classPrediction</span>,</td>
      </tr>
      <tr>
        <td id="L4563" class="blob-num js-line-number" data-line-number="4563"></td>
        <td id="LC4563" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">boxPrediction5</span>.<span class="pl-smi">classPrediction</span></td>
      </tr>
      <tr>
        <td id="L4564" class="blob-num js-line-number" data-line-number="4564"></td>
        <td id="LC4564" class="blob-code blob-code-inner js-file-line">            ], <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L4565" class="blob-num js-line-number" data-line-number="4565"></td>
        <td id="LC4565" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4566" class="blob-num js-line-number" data-line-number="4566"></td>
        <td id="LC4566" class="blob-code blob-code-inner js-file-line">                boxPredictions<span class="pl-k">:</span> boxPredictions,</td>
      </tr>
      <tr>
        <td id="L4567" class="blob-num js-line-number" data-line-number="4567"></td>
        <td id="LC4567" class="blob-code blob-code-inner js-file-line">                classPredictions<span class="pl-k">:</span> classPredictions</td>
      </tr>
      <tr>
        <td id="L4568" class="blob-num js-line-number" data-line-number="4568"></td>
        <td id="LC4568" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4569" class="blob-num js-line-number" data-line-number="4569"></td>
        <td id="LC4569" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4570" class="blob-num js-line-number" data-line-number="4570"></td>
        <td id="LC4570" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4571" class="blob-num js-line-number" data-line-number="4571"></td>
        <td id="LC4571" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4572" class="blob-num js-line-number" data-line-number="4572"></td>
        <td id="LC4572" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> SsdMobilenetv1Options <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4573" class="blob-num js-line-number" data-line-number="4573"></td>
        <td id="LC4573" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">SsdMobilenetv1Options</span>(<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L4574" class="blob-num js-line-number" data-line-number="4574"></td>
        <td id="LC4574" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _b <span class="pl-k">=</span> _a <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> {} <span class="pl-k">:</span> _a, minConfidence <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">minConfidence</span>, maxResults <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">maxResults</span>;</td>
      </tr>
      <tr>
        <td id="L4575" class="blob-num js-line-number" data-line-number="4575"></td>
        <td id="LC4575" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>SsdMobilenetv1Options<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4576" class="blob-num js-line-number" data-line-number="4576"></td>
        <td id="LC4576" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_minConfidence</span> <span class="pl-k">=</span> minConfidence <span class="pl-k">||</span> <span class="pl-c1">0.5</span>;</td>
      </tr>
      <tr>
        <td id="L4577" class="blob-num js-line-number" data-line-number="4577"></td>
        <td id="LC4577" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_maxResults</span> <span class="pl-k">=</span> maxResults <span class="pl-k">||</span> <span class="pl-c1">100</span>;</td>
      </tr>
      <tr>
        <td id="L4578" class="blob-num js-line-number" data-line-number="4578"></td>
        <td id="LC4578" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-smi">_minConfidence</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_minConfidence</span> <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> <span class="pl-c1">this</span>.<span class="pl-smi">_minConfidence</span> <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L4579" class="blob-num js-line-number" data-line-number="4579"></td>
        <td id="LC4579" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected minConfidence to be a number between 0 and 1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4580" class="blob-num js-line-number" data-line-number="4580"></td>
        <td id="LC4580" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4581" class="blob-num js-line-number" data-line-number="4581"></td>
        <td id="LC4581" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-smi">_maxResults</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4582" class="blob-num js-line-number" data-line-number="4582"></td>
        <td id="LC4582" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> - expected maxResults to be a number<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4583" class="blob-num js-line-number" data-line-number="4583"></td>
        <td id="LC4583" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4584" class="blob-num js-line-number" data-line-number="4584"></td>
        <td id="LC4584" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4585" class="blob-num js-line-number" data-line-number="4585"></td>
        <td id="LC4585" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">SsdMobilenetv1Options</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>minConfidence<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L4586" class="blob-num js-line-number" data-line-number="4586"></td>
        <td id="LC4586" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_minConfidence</span>; },</td>
      </tr>
      <tr>
        <td id="L4587" class="blob-num js-line-number" data-line-number="4587"></td>
        <td id="LC4587" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4588" class="blob-num js-line-number" data-line-number="4588"></td>
        <td id="LC4588" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L4589" class="blob-num js-line-number" data-line-number="4589"></td>
        <td id="LC4589" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4590" class="blob-num js-line-number" data-line-number="4590"></td>
        <td id="LC4590" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">SsdMobilenetv1Options</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>maxResults<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L4591" class="blob-num js-line-number" data-line-number="4591"></td>
        <td id="LC4591" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_maxResults</span>; },</td>
      </tr>
      <tr>
        <td id="L4592" class="blob-num js-line-number" data-line-number="4592"></td>
        <td id="LC4592" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4593" class="blob-num js-line-number" data-line-number="4593"></td>
        <td id="LC4593" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L4594" class="blob-num js-line-number" data-line-number="4594"></td>
        <td id="LC4594" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4595" class="blob-num js-line-number" data-line-number="4595"></td>
        <td id="LC4595" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> SsdMobilenetv1Options;</td>
      </tr>
      <tr>
        <td id="L4596" class="blob-num js-line-number" data-line-number="4596"></td>
        <td id="LC4596" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L4597" class="blob-num js-line-number" data-line-number="4597"></td>
        <td id="LC4597" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4598" class="blob-num js-line-number" data-line-number="4598"></td>
        <td id="LC4598" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> SsdMobilenetv1 <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L4599" class="blob-num js-line-number" data-line-number="4599"></td>
        <td id="LC4599" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(SsdMobilenetv1, _super);</td>
      </tr>
      <tr>
        <td id="L4600" class="blob-num js-line-number" data-line-number="4600"></td>
        <td id="LC4600" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">SsdMobilenetv1</span>() {</td>
      </tr>
      <tr>
        <td id="L4601" class="blob-num js-line-number" data-line-number="4601"></td>
        <td id="LC4601" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>SsdMobilenetv1<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L4602" class="blob-num js-line-number" data-line-number="4602"></td>
        <td id="LC4602" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4603" class="blob-num js-line-number" data-line-number="4603"></td>
        <td id="LC4603" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">SsdMobilenetv1</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L4604" class="blob-num js-line-number" data-line-number="4604"></td>
        <td id="LC4604" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> params <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L4605" class="blob-num js-line-number" data-line-number="4605"></td>
        <td id="LC4605" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>params) {</td>
      </tr>
      <tr>
        <td id="L4606" class="blob-num js-line-number" data-line-number="4606"></td>
        <td id="LC4606" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>SsdMobilenetv1 - load model before inference<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4607" class="blob-num js-line-number" data-line-number="4607"></td>
        <td id="LC4607" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4608" class="blob-num js-line-number" data-line-number="4608"></td>
        <td id="LC4608" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4609" class="blob-num js-line-number" data-line-number="4609"></td>
        <td id="LC4609" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> batchTensor <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-en">toBatchTensor</span>(<span class="pl-c1">512</span>, <span class="pl-c1">false</span>).<span class="pl-en">toFloat</span>();</td>
      </tr>
      <tr>
        <td id="L4610" class="blob-num js-line-number" data-line-number="4610"></td>
        <td id="LC4610" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> x <span class="pl-k">=</span> <span class="pl-en">sub</span>(<span class="pl-en">mul</span>(batchTensor, <span class="pl-en">scalar</span>(<span class="pl-c1">0.007843137718737125</span>)), <span class="pl-en">scalar</span>(<span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L4611" class="blob-num js-line-number" data-line-number="4611"></td>
        <td id="LC4611" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> features <span class="pl-k">=</span> <span class="pl-en">mobileNetV1</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">mobilenetv1</span>);</td>
      </tr>
      <tr>
        <td id="L4612" class="blob-num js-line-number" data-line-number="4612"></td>
        <td id="LC4612" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">predictionLayer</span>(<span class="pl-smi">features</span>.<span class="pl-smi">out</span>, <span class="pl-smi">features</span>.<span class="pl-smi">conv11</span>, <span class="pl-smi">params</span>.<span class="pl-smi">prediction_layer</span>), boxPredictions <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">boxPredictions</span>, classPredictions <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">classPredictions</span>;</td>
      </tr>
      <tr>
        <td id="L4613" class="blob-num js-line-number" data-line-number="4613"></td>
        <td id="LC4613" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">outputLayer</span>(boxPredictions, classPredictions, <span class="pl-smi">params</span>.<span class="pl-smi">output_layer</span>);</td>
      </tr>
      <tr>
        <td id="L4614" class="blob-num js-line-number" data-line-number="4614"></td>
        <td id="LC4614" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4615" class="blob-num js-line-number" data-line-number="4615"></td>
        <td id="LC4615" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4616" class="blob-num js-line-number" data-line-number="4616"></td>
        <td id="LC4616" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">SsdMobilenetv1</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L4617" class="blob-num js-line-number" data-line-number="4617"></td>
        <td id="LC4617" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4618" class="blob-num js-line-number" data-line-number="4618"></td>
        <td id="LC4618" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L4619" class="blob-num js-line-number" data-line-number="4619"></td>
        <td id="LC4619" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L4620" class="blob-num js-line-number" data-line-number="4620"></td>
        <td id="LC4620" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L4621" class="blob-num js-line-number" data-line-number="4621"></td>
        <td id="LC4621" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L4622" class="blob-num js-line-number" data-line-number="4622"></td>
        <td id="LC4622" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L4623" class="blob-num js-line-number" data-line-number="4623"></td>
        <td id="LC4623" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L4624" class="blob-num js-line-number" data-line-number="4624"></td>
        <td id="LC4624" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()])];</td>
      </tr>
      <tr>
        <td id="L4625" class="blob-num js-line-number" data-line-number="4625"></td>
        <td id="LC4625" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4626" class="blob-num js-line-number" data-line-number="4626"></td>
        <td id="LC4626" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L4627" class="blob-num js-line-number" data-line-number="4627"></td>
        <td id="LC4627" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4628" class="blob-num js-line-number" data-line-number="4628"></td>
        <td id="LC4628" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4629" class="blob-num js-line-number" data-line-number="4629"></td>
        <td id="LC4629" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">SsdMobilenetv1</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">locateFaces</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L4630" class="blob-num js-line-number" data-line-number="4630"></td>
        <td id="LC4630" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L4631" class="blob-num js-line-number" data-line-number="4631"></td>
        <td id="LC4631" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4632" class="blob-num js-line-number" data-line-number="4632"></td>
        <td id="LC4632" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a, maxResults, minConfidence, netInput, _b, _boxes, _scores, boxes, scores, i, scoresData, _c, _d, iouThreshold, indices, reshapedDims, inputSize, padX, padY, boxesData, results;</td>
      </tr>
      <tr>
        <td id="L4633" class="blob-num js-line-number" data-line-number="4633"></td>
        <td id="LC4633" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_e</span>) {</td>
      </tr>
      <tr>
        <td id="L4634" class="blob-num js-line-number" data-line-number="4634"></td>
        <td id="LC4634" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_e</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L4635" class="blob-num js-line-number" data-line-number="4635"></td>
        <td id="LC4635" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L4636" class="blob-num js-line-number" data-line-number="4636"></td>
        <td id="LC4636" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">SsdMobilenetv1Options</span>(options), maxResults <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">maxResults</span>, minConfidence <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">minConfidence</span>;</td>
      </tr>
      <tr>
        <td id="L4637" class="blob-num js-line-number" data-line-number="4637"></td>
        <td id="LC4637" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L4638" class="blob-num js-line-number" data-line-number="4638"></td>
        <td id="LC4638" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L4639" class="blob-num js-line-number" data-line-number="4639"></td>
        <td id="LC4639" class="blob-code blob-code-inner js-file-line">                            netInput <span class="pl-k">=</span> <span class="pl-smi">_e</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L4640" class="blob-num js-line-number" data-line-number="4640"></td>
        <td id="LC4640" class="blob-code blob-code-inner js-file-line">                            _b <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">forwardInput</span>(netInput), _boxes <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">boxes</span>, _scores <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">scores</span>;</td>
      </tr>
      <tr>
        <td id="L4641" class="blob-num js-line-number" data-line-number="4641"></td>
        <td id="LC4641" class="blob-code blob-code-inner js-file-line">                            boxes <span class="pl-k">=</span> _boxes[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4642" class="blob-num js-line-number" data-line-number="4642"></td>
        <td id="LC4642" class="blob-code blob-code-inner js-file-line">                            scores <span class="pl-k">=</span> _scores[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4643" class="blob-num js-line-number" data-line-number="4643"></td>
        <td id="LC4643" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">1</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">_boxes</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L4644" class="blob-num js-line-number" data-line-number="4644"></td>
        <td id="LC4644" class="blob-code blob-code-inner js-file-line">                                _boxes[i].<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L4645" class="blob-num js-line-number" data-line-number="4645"></td>
        <td id="LC4645" class="blob-code blob-code-inner js-file-line">                                _scores[i].<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L4646" class="blob-num js-line-number" data-line-number="4646"></td>
        <td id="LC4646" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L4647" class="blob-num js-line-number" data-line-number="4647"></td>
        <td id="LC4647" class="blob-code blob-code-inner js-file-line">                            _d <span class="pl-k">=</span> (_c <span class="pl-k">=</span> <span class="pl-c1">Array</span>).<span class="pl-smi">from</span>;</td>
      </tr>
      <tr>
        <td id="L4648" class="blob-num js-line-number" data-line-number="4648"></td>
        <td id="LC4648" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">scores</span>.<span class="pl-c1">data</span>()];</td>
      </tr>
      <tr>
        <td id="L4649" class="blob-num js-line-number" data-line-number="4649"></td>
        <td id="LC4649" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L4650" class="blob-num js-line-number" data-line-number="4650"></td>
        <td id="LC4650" class="blob-code blob-code-inner js-file-line">                            scoresData <span class="pl-k">=</span> <span class="pl-smi">_d</span>.<span class="pl-c1">apply</span>(_c, [<span class="pl-smi">_e</span>.<span class="pl-en">sent</span>()]);</td>
      </tr>
      <tr>
        <td id="L4651" class="blob-num js-line-number" data-line-number="4651"></td>
        <td id="LC4651" class="blob-code blob-code-inner js-file-line">                            iouThreshold <span class="pl-k">=</span> <span class="pl-c1">0.5</span>;</td>
      </tr>
      <tr>
        <td id="L4652" class="blob-num js-line-number" data-line-number="4652"></td>
        <td id="LC4652" class="blob-code blob-code-inner js-file-line">                            indices <span class="pl-k">=</span> <span class="pl-en">nonMaxSuppression$2</span>(boxes, scoresData, maxResults, iouThreshold, minConfidence);</td>
      </tr>
      <tr>
        <td id="L4653" class="blob-num js-line-number" data-line-number="4653"></td>
        <td id="LC4653" class="blob-code blob-code-inner js-file-line">                            reshapedDims <span class="pl-k">=</span> <span class="pl-smi">netInput</span>.<span class="pl-en">getReshapedInputDimensions</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L4654" class="blob-num js-line-number" data-line-number="4654"></td>
        <td id="LC4654" class="blob-code blob-code-inner js-file-line">                            inputSize <span class="pl-k">=</span> <span class="pl-smi">netInput</span>.<span class="pl-smi">inputSize</span>;</td>
      </tr>
      <tr>
        <td id="L4655" class="blob-num js-line-number" data-line-number="4655"></td>
        <td id="LC4655" class="blob-code blob-code-inner js-file-line">                            padX <span class="pl-k">=</span> inputSize <span class="pl-k">/</span> <span class="pl-smi">reshapedDims</span>.<span class="pl-c1">width</span>;</td>
      </tr>
      <tr>
        <td id="L4656" class="blob-num js-line-number" data-line-number="4656"></td>
        <td id="LC4656" class="blob-code blob-code-inner js-file-line">                            padY <span class="pl-k">=</span> inputSize <span class="pl-k">/</span> <span class="pl-smi">reshapedDims</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L4657" class="blob-num js-line-number" data-line-number="4657"></td>
        <td id="LC4657" class="blob-code blob-code-inner js-file-line">                            boxesData <span class="pl-k">=</span> <span class="pl-smi">boxes</span>.<span class="pl-en">arraySync</span>();</td>
      </tr>
      <tr>
        <td id="L4658" class="blob-num js-line-number" data-line-number="4658"></td>
        <td id="LC4658" class="blob-code blob-code-inner js-file-line">                            results <span class="pl-k">=</span> indices</td>
      </tr>
      <tr>
        <td id="L4659" class="blob-num js-line-number" data-line-number="4659"></td>
        <td id="LC4659" class="blob-code blob-code-inner js-file-line">                                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L4660" class="blob-num js-line-number" data-line-number="4660"></td>
        <td id="LC4660" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> _a <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L4661" class="blob-num js-line-number" data-line-number="4661"></td>
        <td id="LC4661" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, boxesData[idx][<span class="pl-c1">0</span>]),</td>
      </tr>
      <tr>
        <td id="L4662" class="blob-num js-line-number" data-line-number="4662"></td>
        <td id="LC4662" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">1.0</span>, boxesData[idx][<span class="pl-c1">2</span>])</td>
      </tr>
      <tr>
        <td id="L4663" class="blob-num js-line-number" data-line-number="4663"></td>
        <td id="LC4663" class="blob-code blob-code-inner js-file-line">                                ].<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">val</span>) { <span class="pl-k">return</span> val <span class="pl-k">*</span> padY; }), top <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], bottom <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4664" class="blob-num js-line-number" data-line-number="4664"></td>
        <td id="LC4664" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> _b <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L4665" class="blob-num js-line-number" data-line-number="4665"></td>
        <td id="LC4665" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, boxesData[idx][<span class="pl-c1">1</span>]),</td>
      </tr>
      <tr>
        <td id="L4666" class="blob-num js-line-number" data-line-number="4666"></td>
        <td id="LC4666" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">1.0</span>, boxesData[idx][<span class="pl-c1">3</span>])</td>
      </tr>
      <tr>
        <td id="L4667" class="blob-num js-line-number" data-line-number="4667"></td>
        <td id="LC4667" class="blob-code blob-code-inner js-file-line">                                ].<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">val</span>) { <span class="pl-k">return</span> val <span class="pl-k">*</span> padX; }), left <span class="pl-k">=</span> _b[<span class="pl-c1">0</span>], right <span class="pl-k">=</span> _b[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4668" class="blob-num js-line-number" data-line-number="4668"></td>
        <td id="LC4668" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FaceDetection</span>(scoresData[idx], <span class="pl-k">new</span> <span class="pl-en">Rect</span>(left, top, right <span class="pl-k">-</span> left, bottom <span class="pl-k">-</span> top), {</td>
      </tr>
      <tr>
        <td id="L4669" class="blob-num js-line-number" data-line-number="4669"></td>
        <td id="LC4669" class="blob-code blob-code-inner js-file-line">                                    height<span class="pl-k">:</span> <span class="pl-smi">netInput</span>.<span class="pl-en">getInputHeight</span>(<span class="pl-c1">0</span>),</td>
      </tr>
      <tr>
        <td id="L4670" class="blob-num js-line-number" data-line-number="4670"></td>
        <td id="LC4670" class="blob-code blob-code-inner js-file-line">                                    width<span class="pl-k">:</span> <span class="pl-smi">netInput</span>.<span class="pl-en">getInputWidth</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L4671" class="blob-num js-line-number" data-line-number="4671"></td>
        <td id="LC4671" class="blob-code blob-code-inner js-file-line">                                });</td>
      </tr>
      <tr>
        <td id="L4672" class="blob-num js-line-number" data-line-number="4672"></td>
        <td id="LC4672" class="blob-code blob-code-inner js-file-line">                            });</td>
      </tr>
      <tr>
        <td id="L4673" class="blob-num js-line-number" data-line-number="4673"></td>
        <td id="LC4673" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">boxes</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L4674" class="blob-num js-line-number" data-line-number="4674"></td>
        <td id="LC4674" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">scores</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L4675" class="blob-num js-line-number" data-line-number="4675"></td>
        <td id="LC4675" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, results];</td>
      </tr>
      <tr>
        <td id="L4676" class="blob-num js-line-number" data-line-number="4676"></td>
        <td id="LC4676" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4677" class="blob-num js-line-number" data-line-number="4677"></td>
        <td id="LC4677" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L4678" class="blob-num js-line-number" data-line-number="4678"></td>
        <td id="LC4678" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4679" class="blob-num js-line-number" data-line-number="4679"></td>
        <td id="LC4679" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4680" class="blob-num js-line-number" data-line-number="4680"></td>
        <td id="LC4680" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">SsdMobilenetv1</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4681" class="blob-num js-line-number" data-line-number="4681"></td>
        <td id="LC4681" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ssd_mobilenetv1_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4682" class="blob-num js-line-number" data-line-number="4682"></td>
        <td id="LC4682" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4683" class="blob-num js-line-number" data-line-number="4683"></td>
        <td id="LC4683" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">SsdMobilenetv1</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L4684" class="blob-num js-line-number" data-line-number="4684"></td>
        <td id="LC4684" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsFromWeigthMap$6</span>(weightMap);</td>
      </tr>
      <tr>
        <td id="L4685" class="blob-num js-line-number" data-line-number="4685"></td>
        <td id="LC4685" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4686" class="blob-num js-line-number" data-line-number="4686"></td>
        <td id="LC4686" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">SsdMobilenetv1</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L4687" class="blob-num js-line-number" data-line-number="4687"></td>
        <td id="LC4687" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParams$6</span>(weights);</td>
      </tr>
      <tr>
        <td id="L4688" class="blob-num js-line-number" data-line-number="4688"></td>
        <td id="LC4688" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4689" class="blob-num js-line-number" data-line-number="4689"></td>
        <td id="LC4689" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> SsdMobilenetv1;</td>
      </tr>
      <tr>
        <td id="L4690" class="blob-num js-line-number" data-line-number="4690"></td>
        <td id="LC4690" class="blob-code blob-code-inner js-file-line">    }(NeuralNetwork));</td>
      </tr>
      <tr>
        <td id="L4691" class="blob-num js-line-number" data-line-number="4691"></td>
        <td id="LC4691" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4692" class="blob-num js-line-number" data-line-number="4692"></td>
        <td id="LC4692" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createSsdMobilenetv1</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L4693" class="blob-num js-line-number" data-line-number="4693"></td>
        <td id="LC4693" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> net <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">SsdMobilenetv1</span>();</td>
      </tr>
      <tr>
        <td id="L4694" class="blob-num js-line-number" data-line-number="4694"></td>
        <td id="LC4694" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">net</span>.<span class="pl-en">extractWeights</span>(weights);</td>
      </tr>
      <tr>
        <td id="L4695" class="blob-num js-line-number" data-line-number="4695"></td>
        <td id="LC4695" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> net;</td>
      </tr>
      <tr>
        <td id="L4696" class="blob-num js-line-number" data-line-number="4696"></td>
        <td id="LC4696" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4697" class="blob-num js-line-number" data-line-number="4697"></td>
        <td id="LC4697" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createFaceDetectionNet</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L4698" class="blob-num js-line-number" data-line-number="4698"></td>
        <td id="LC4698" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">createSsdMobilenetv1</span>(weights);</td>
      </tr>
      <tr>
        <td id="L4699" class="blob-num js-line-number" data-line-number="4699"></td>
        <td id="LC4699" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4700" class="blob-num js-line-number" data-line-number="4700"></td>
        <td id="LC4700" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> alias for backward compatibily</span></td>
      </tr>
      <tr>
        <td id="L4701" class="blob-num js-line-number" data-line-number="4701"></td>
        <td id="LC4701" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceDetectionNet <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L4702" class="blob-num js-line-number" data-line-number="4702"></td>
        <td id="LC4702" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(FaceDetectionNet, _super);</td>
      </tr>
      <tr>
        <td id="L4703" class="blob-num js-line-number" data-line-number="4703"></td>
        <td id="LC4703" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceDetectionNet</span>() {</td>
      </tr>
      <tr>
        <td id="L4704" class="blob-num js-line-number" data-line-number="4704"></td>
        <td id="LC4704" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L4705" class="blob-num js-line-number" data-line-number="4705"></td>
        <td id="LC4705" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4706" class="blob-num js-line-number" data-line-number="4706"></td>
        <td id="LC4706" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceDetectionNet;</td>
      </tr>
      <tr>
        <td id="L4707" class="blob-num js-line-number" data-line-number="4707"></td>
        <td id="LC4707" class="blob-code blob-code-inner js-file-line">    }(SsdMobilenetv1));</td>
      </tr>
      <tr>
        <td id="L4708" class="blob-num js-line-number" data-line-number="4708"></td>
        <td id="LC4708" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4709" class="blob-num js-line-number" data-line-number="4709"></td>
        <td id="LC4709" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> TinyFaceDetectorOptions <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L4710" class="blob-num js-line-number" data-line-number="4710"></td>
        <td id="LC4710" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(TinyFaceDetectorOptions, _super);</td>
      </tr>
      <tr>
        <td id="L4711" class="blob-num js-line-number" data-line-number="4711"></td>
        <td id="LC4711" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">TinyFaceDetectorOptions</span>() {</td>
      </tr>
      <tr>
        <td id="L4712" class="blob-num js-line-number" data-line-number="4712"></td>
        <td id="LC4712" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L4713" class="blob-num js-line-number" data-line-number="4713"></td>
        <td id="LC4713" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">_name</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>TinyFaceDetectorOptions<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4714" class="blob-num js-line-number" data-line-number="4714"></td>
        <td id="LC4714" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L4715" class="blob-num js-line-number" data-line-number="4715"></td>
        <td id="LC4715" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4716" class="blob-num js-line-number" data-line-number="4716"></td>
        <td id="LC4716" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> TinyFaceDetectorOptions;</td>
      </tr>
      <tr>
        <td id="L4717" class="blob-num js-line-number" data-line-number="4717"></td>
        <td id="LC4717" class="blob-code blob-code-inner js-file-line">    }(TinyYolov2Options));</td>
      </tr>
      <tr>
        <td id="L4718" class="blob-num js-line-number" data-line-number="4718"></td>
        <td id="LC4718" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4719" class="blob-num js-line-number" data-line-number="4719"></td>
        <td id="LC4719" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ComposableTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4720" class="blob-num js-line-number" data-line-number="4720"></td>
        <td id="LC4720" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">ComposableTask</span>() {</td>
      </tr>
      <tr>
        <td id="L4721" class="blob-num js-line-number" data-line-number="4721"></td>
        <td id="LC4721" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4722" class="blob-num js-line-number" data-line-number="4722"></td>
        <td id="LC4722" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ComposableTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">then</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">onfulfilled</span>) {</td>
      </tr>
      <tr>
        <td id="L4723" class="blob-num js-line-number" data-line-number="4723"></td>
        <td id="LC4723" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4724" class="blob-num js-line-number" data-line-number="4724"></td>
        <td id="LC4724" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L4725" class="blob-num js-line-number" data-line-number="4725"></td>
        <td id="LC4725" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L4726" class="blob-num js-line-number" data-line-number="4726"></td>
        <td id="LC4726" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L4727" class="blob-num js-line-number" data-line-number="4727"></td>
        <td id="LC4727" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L4728" class="blob-num js-line-number" data-line-number="4728"></td>
        <td id="LC4728" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> onfulfilled;</td>
      </tr>
      <tr>
        <td id="L4729" class="blob-num js-line-number" data-line-number="4729"></td>
        <td id="LC4729" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">run</span>()];</td>
      </tr>
      <tr>
        <td id="L4730" class="blob-num js-line-number" data-line-number="4730"></td>
        <td id="LC4730" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()])];</td>
      </tr>
      <tr>
        <td id="L4731" class="blob-num js-line-number" data-line-number="4731"></td>
        <td id="LC4731" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4732" class="blob-num js-line-number" data-line-number="4732"></td>
        <td id="LC4732" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L4733" class="blob-num js-line-number" data-line-number="4733"></td>
        <td id="LC4733" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4734" class="blob-num js-line-number" data-line-number="4734"></td>
        <td id="LC4734" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4735" class="blob-num js-line-number" data-line-number="4735"></td>
        <td id="LC4735" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ComposableTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4736" class="blob-num js-line-number" data-line-number="4736"></td>
        <td id="LC4736" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4737" class="blob-num js-line-number" data-line-number="4737"></td>
        <td id="LC4737" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L4738" class="blob-num js-line-number" data-line-number="4738"></td>
        <td id="LC4738" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>ComposableTask - run is not implemented<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4739" class="blob-num js-line-number" data-line-number="4739"></td>
        <td id="LC4739" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L4740" class="blob-num js-line-number" data-line-number="4740"></td>
        <td id="LC4740" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4741" class="blob-num js-line-number" data-line-number="4741"></td>
        <td id="LC4741" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4742" class="blob-num js-line-number" data-line-number="4742"></td>
        <td id="LC4742" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ComposableTask;</td>
      </tr>
      <tr>
        <td id="L4743" class="blob-num js-line-number" data-line-number="4743"></td>
        <td id="LC4743" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L4744" class="blob-num js-line-number" data-line-number="4744"></td>
        <td id="LC4744" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4745" class="blob-num js-line-number" data-line-number="4745"></td>
        <td id="LC4745" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractAllFacesAndComputeResults</span>(<span class="pl-smi">parentResults</span>, <span class="pl-smi">input</span>, <span class="pl-smi">computeResults</span>, <span class="pl-smi">extractedFaces</span>, <span class="pl-smi">getRectForAlignment</span>) {</td>
      </tr>
      <tr>
        <td id="L4746" class="blob-num js-line-number" data-line-number="4746"></td>
        <td id="LC4746" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (getRectForAlignment <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { <span class="pl-en">getRectForAlignment</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L4747" class="blob-num js-line-number" data-line-number="4747"></td>
        <td id="LC4747" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> alignedRect <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">alignedRect</span>;</td>
      </tr>
      <tr>
        <td id="L4748" class="blob-num js-line-number" data-line-number="4748"></td>
        <td id="LC4748" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> alignedRect;</td>
      </tr>
      <tr>
        <td id="L4749" class="blob-num js-line-number" data-line-number="4749"></td>
        <td id="LC4749" class="blob-code blob-code-inner js-file-line">        }; }</td>
      </tr>
      <tr>
        <td id="L4750" class="blob-num js-line-number" data-line-number="4750"></td>
        <td id="LC4750" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4751" class="blob-num js-line-number" data-line-number="4751"></td>
        <td id="LC4751" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> faceBoxes, faces, _a, _b, results;</td>
      </tr>
      <tr>
        <td id="L4752" class="blob-num js-line-number" data-line-number="4752"></td>
        <td id="LC4752" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_c</span>) {</td>
      </tr>
      <tr>
        <td id="L4753" class="blob-num js-line-number" data-line-number="4753"></td>
        <td id="LC4753" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_c</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L4754" class="blob-num js-line-number" data-line-number="4754"></td>
        <td id="LC4754" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L4755" class="blob-num js-line-number" data-line-number="4755"></td>
        <td id="LC4755" class="blob-code blob-code-inner js-file-line">                        faceBoxes <span class="pl-k">=</span> <span class="pl-smi">parentResults</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">parentResult</span>) {</td>
      </tr>
      <tr>
        <td id="L4756" class="blob-num js-line-number" data-line-number="4756"></td>
        <td id="LC4756" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> <span class="pl-en">isWithFaceLandmarks</span>(parentResult)</td>
      </tr>
      <tr>
        <td id="L4757" class="blob-num js-line-number" data-line-number="4757"></td>
        <td id="LC4757" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">?</span> <span class="pl-en">getRectForAlignment</span>(parentResult)</td>
      </tr>
      <tr>
        <td id="L4758" class="blob-num js-line-number" data-line-number="4758"></td>
        <td id="LC4758" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">:</span> <span class="pl-smi">parentResult</span>.<span class="pl-smi">detection</span>;</td>
      </tr>
      <tr>
        <td id="L4759" class="blob-num js-line-number" data-line-number="4759"></td>
        <td id="LC4759" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L4760" class="blob-num js-line-number" data-line-number="4760"></td>
        <td id="LC4760" class="blob-code blob-code-inner js-file-line">                        _a <span class="pl-k">=</span> extractedFaces;</td>
      </tr>
      <tr>
        <td id="L4761" class="blob-num js-line-number" data-line-number="4761"></td>
        <td id="LC4761" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (_a) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">5</span>];</td>
      </tr>
      <tr>
        <td id="L4762" class="blob-num js-line-number" data-line-number="4762"></td>
        <td id="LC4762" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-k">!</span>(input <span class="pl-k">instanceof</span> Tensor)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L4763" class="blob-num js-line-number" data-line-number="4763"></td>
        <td id="LC4763" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractFaceTensors</span>(input, faceBoxes)];</td>
      </tr>
      <tr>
        <td id="L4764" class="blob-num js-line-number" data-line-number="4764"></td>
        <td id="LC4764" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L4765" class="blob-num js-line-number" data-line-number="4765"></td>
        <td id="LC4765" class="blob-code blob-code-inner js-file-line">                        _b <span class="pl-k">=</span> <span class="pl-smi">_c</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L4766" class="blob-num js-line-number" data-line-number="4766"></td>
        <td id="LC4766" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">4</span>];</td>
      </tr>
      <tr>
        <td id="L4767" class="blob-num js-line-number" data-line-number="4767"></td>
        <td id="LC4767" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">2</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractFaces</span>(input, faceBoxes)];</td>
      </tr>
      <tr>
        <td id="L4768" class="blob-num js-line-number" data-line-number="4768"></td>
        <td id="LC4768" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">3</span>:</td>
      </tr>
      <tr>
        <td id="L4769" class="blob-num js-line-number" data-line-number="4769"></td>
        <td id="LC4769" class="blob-code blob-code-inner js-file-line">                        _b <span class="pl-k">=</span> <span class="pl-smi">_c</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L4770" class="blob-num js-line-number" data-line-number="4770"></td>
        <td id="LC4770" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">_c</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L4771" class="blob-num js-line-number" data-line-number="4771"></td>
        <td id="LC4771" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">4</span>:</td>
      </tr>
      <tr>
        <td id="L4772" class="blob-num js-line-number" data-line-number="4772"></td>
        <td id="LC4772" class="blob-code blob-code-inner js-file-line">                        _a <span class="pl-k">=</span> (_b);</td>
      </tr>
      <tr>
        <td id="L4773" class="blob-num js-line-number" data-line-number="4773"></td>
        <td id="LC4773" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">_c</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L4774" class="blob-num js-line-number" data-line-number="4774"></td>
        <td id="LC4774" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">5</span>:</td>
      </tr>
      <tr>
        <td id="L4775" class="blob-num js-line-number" data-line-number="4775"></td>
        <td id="LC4775" class="blob-code blob-code-inner js-file-line">                        faces <span class="pl-k">=</span> _a;</td>
      </tr>
      <tr>
        <td id="L4776" class="blob-num js-line-number" data-line-number="4776"></td>
        <td id="LC4776" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">computeResults</span>(faces)];</td>
      </tr>
      <tr>
        <td id="L4777" class="blob-num js-line-number" data-line-number="4777"></td>
        <td id="LC4777" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">6</span>:</td>
      </tr>
      <tr>
        <td id="L4778" class="blob-num js-line-number" data-line-number="4778"></td>
        <td id="LC4778" class="blob-code blob-code-inner js-file-line">                        results <span class="pl-k">=</span> <span class="pl-smi">_c</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L4779" class="blob-num js-line-number" data-line-number="4779"></td>
        <td id="LC4779" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">faces</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">f</span>) { <span class="pl-k">return</span> f <span class="pl-k">instanceof</span> Tensor <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">f</span>.<span class="pl-en">dispose</span>(); });</td>
      </tr>
      <tr>
        <td id="L4780" class="blob-num js-line-number" data-line-number="4780"></td>
        <td id="LC4780" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, results];</td>
      </tr>
      <tr>
        <td id="L4781" class="blob-num js-line-number" data-line-number="4781"></td>
        <td id="LC4781" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4782" class="blob-num js-line-number" data-line-number="4782"></td>
        <td id="LC4782" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4783" class="blob-num js-line-number" data-line-number="4783"></td>
        <td id="LC4783" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4784" class="blob-num js-line-number" data-line-number="4784"></td>
        <td id="LC4784" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4785" class="blob-num js-line-number" data-line-number="4785"></td>
        <td id="LC4785" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractSingleFaceAndComputeResult</span>(<span class="pl-smi">parentResult</span>, <span class="pl-smi">input</span>, <span class="pl-smi">computeResult</span>, <span class="pl-smi">extractedFaces</span>, <span class="pl-smi">getRectForAlignment</span>) {</td>
      </tr>
      <tr>
        <td id="L4786" class="blob-num js-line-number" data-line-number="4786"></td>
        <td id="LC4786" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4787" class="blob-num js-line-number" data-line-number="4787"></td>
        <td id="LC4787" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L4788" class="blob-num js-line-number" data-line-number="4788"></td>
        <td id="LC4788" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L4789" class="blob-num js-line-number" data-line-number="4789"></td>
        <td id="LC4789" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">extractAllFacesAndComputeResults</span>([parentResult], input, <span class="pl-k">function</span> (<span class="pl-smi">faces</span>) { <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(_this, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L4790" class="blob-num js-line-number" data-line-number="4790"></td>
        <td id="LC4790" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">computeResult</span>(faces[<span class="pl-c1">0</span>])];</td>
      </tr>
      <tr>
        <td id="L4791" class="blob-num js-line-number" data-line-number="4791"></td>
        <td id="LC4791" class="blob-code blob-code-inner js-file-line">                    }); }); }, extractedFaces, getRectForAlignment)];</td>
      </tr>
      <tr>
        <td id="L4792" class="blob-num js-line-number" data-line-number="4792"></td>
        <td id="LC4792" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4793" class="blob-num js-line-number" data-line-number="4793"></td>
        <td id="LC4793" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4794" class="blob-num js-line-number" data-line-number="4794"></td>
        <td id="LC4794" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4795" class="blob-num js-line-number" data-line-number="4795"></td>
        <td id="LC4795" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4796" class="blob-num js-line-number" data-line-number="4796"></td>
        <td id="LC4796" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">bgrToRgbTensor</span>(<span class="pl-smi">tensor</span>) {</td>
      </tr>
      <tr>
        <td id="L4797" class="blob-num js-line-number" data-line-number="4797"></td>
        <td id="LC4797" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">stack</span>(<span class="pl-en">unstack</span>(tensor, <span class="pl-c1">3</span>).<span class="pl-c1">reverse</span>(), <span class="pl-c1">3</span>); });</td>
      </tr>
      <tr>
        <td id="L4798" class="blob-num js-line-number" data-line-number="4798"></td>
        <td id="LC4798" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4799" class="blob-num js-line-number" data-line-number="4799"></td>
        <td id="LC4799" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4800" class="blob-num js-line-number" data-line-number="4800"></td>
        <td id="LC4800" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CELL_STRIDE</span> <span class="pl-k">=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L4801" class="blob-num js-line-number" data-line-number="4801"></td>
        <td id="LC4801" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CELL_SIZE</span> <span class="pl-k">=</span> <span class="pl-c1">12</span>;</td>
      </tr>
      <tr>
        <td id="L4802" class="blob-num js-line-number" data-line-number="4802"></td>
        <td id="LC4802" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4803" class="blob-num js-line-number" data-line-number="4803"></td>
        <td id="LC4803" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory$8</span>(<span class="pl-smi">extractWeights</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L4804" class="blob-num js-line-number" data-line-number="4804"></td>
        <td id="LC4804" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractConvParams <span class="pl-k">=</span> <span class="pl-en">extractConvParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L4805" class="blob-num js-line-number" data-line-number="4805"></td>
        <td id="LC4805" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractFCParams <span class="pl-k">=</span> <span class="pl-en">extractFCParamsFactory</span>(extractWeights, paramMappings);</td>
      </tr>
      <tr>
        <td id="L4806" class="blob-num js-line-number" data-line-number="4806"></td>
        <td id="LC4806" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractPReluParams</span>(<span class="pl-smi">size</span>, <span class="pl-smi">paramPath</span>) {</td>
      </tr>
      <tr>
        <td id="L4807" class="blob-num js-line-number" data-line-number="4807"></td>
        <td id="LC4807" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> alpha <span class="pl-k">=</span> <span class="pl-en">tensor1d</span>(<span class="pl-en">extractWeights</span>(size));</td>
      </tr>
      <tr>
        <td id="L4808" class="blob-num js-line-number" data-line-number="4808"></td>
        <td id="LC4808" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">paramMappings</span>.<span class="pl-c1">push</span>({ paramPath<span class="pl-k">:</span> paramPath });</td>
      </tr>
      <tr>
        <td id="L4809" class="blob-num js-line-number" data-line-number="4809"></td>
        <td id="LC4809" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> alpha;</td>
      </tr>
      <tr>
        <td id="L4810" class="blob-num js-line-number" data-line-number="4810"></td>
        <td id="LC4810" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4811" class="blob-num js-line-number" data-line-number="4811"></td>
        <td id="LC4811" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractSharedParams</span>(<span class="pl-smi">numFilters</span>, <span class="pl-smi">mappedPrefix</span>, <span class="pl-smi">isRnet</span>) {</td>
      </tr>
      <tr>
        <td id="L4812" class="blob-num js-line-number" data-line-number="4812"></td>
        <td id="LC4812" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isRnet <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isRnet <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L4813" class="blob-num js-line-number" data-line-number="4813"></td>
        <td id="LC4813" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv1 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(numFilters[<span class="pl-c1">0</span>], numFilters[<span class="pl-c1">1</span>], <span class="pl-c1">3</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4814" class="blob-num js-line-number" data-line-number="4814"></td>
        <td id="LC4814" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu1_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(numFilters[<span class="pl-c1">1</span>], mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/prelu1_alpha<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4815" class="blob-num js-line-number" data-line-number="4815"></td>
        <td id="LC4815" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv2 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(numFilters[<span class="pl-c1">1</span>], numFilters[<span class="pl-c1">2</span>], <span class="pl-c1">3</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv2<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4816" class="blob-num js-line-number" data-line-number="4816"></td>
        <td id="LC4816" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu2_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(numFilters[<span class="pl-c1">2</span>], mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/prelu2_alpha<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4817" class="blob-num js-line-number" data-line-number="4817"></td>
        <td id="LC4817" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv3 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(numFilters[<span class="pl-c1">2</span>], numFilters[<span class="pl-c1">3</span>], isRnet <span class="pl-k">?</span> <span class="pl-c1">2</span> <span class="pl-k">:</span> <span class="pl-c1">3</span>, mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv3<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4818" class="blob-num js-line-number" data-line-number="4818"></td>
        <td id="LC4818" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu3_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(numFilters[<span class="pl-c1">3</span>], mappedPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/prelu3_alpha<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4819" class="blob-num js-line-number" data-line-number="4819"></td>
        <td id="LC4819" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv1<span class="pl-k">:</span> conv1, prelu1_alpha<span class="pl-k">:</span> prelu1_alpha, conv2<span class="pl-k">:</span> conv2, prelu2_alpha<span class="pl-k">:</span> prelu2_alpha, conv3<span class="pl-k">:</span> conv3, prelu3_alpha<span class="pl-k">:</span> prelu3_alpha };</td>
      </tr>
      <tr>
        <td id="L4820" class="blob-num js-line-number" data-line-number="4820"></td>
        <td id="LC4820" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4821" class="blob-num js-line-number" data-line-number="4821"></td>
        <td id="LC4821" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractPNetParams</span>() {</td>
      </tr>
      <tr>
        <td id="L4822" class="blob-num js-line-number" data-line-number="4822"></td>
        <td id="LC4822" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sharedParams <span class="pl-k">=</span> <span class="pl-en">extractSharedParams</span>([<span class="pl-c1">3</span>, <span class="pl-c1">10</span>, <span class="pl-c1">16</span>, <span class="pl-c1">32</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>pnet<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4823" class="blob-num js-line-number" data-line-number="4823"></td>
        <td id="LC4823" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv4_1 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">32</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>pnet/conv4_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4824" class="blob-num js-line-number" data-line-number="4824"></td>
        <td id="LC4824" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv4_2 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">32</span>, <span class="pl-c1">4</span>, <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>pnet/conv4_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4825" class="blob-num js-line-number" data-line-number="4825"></td>
        <td id="LC4825" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__assign</span>({}, sharedParams, { conv4_1<span class="pl-k">:</span> conv4_1, conv4_2<span class="pl-k">:</span> conv4_2 });</td>
      </tr>
      <tr>
        <td id="L4826" class="blob-num js-line-number" data-line-number="4826"></td>
        <td id="LC4826" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4827" class="blob-num js-line-number" data-line-number="4827"></td>
        <td id="LC4827" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractRNetParams</span>() {</td>
      </tr>
      <tr>
        <td id="L4828" class="blob-num js-line-number" data-line-number="4828"></td>
        <td id="LC4828" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sharedParams <span class="pl-k">=</span> <span class="pl-en">extractSharedParams</span>([<span class="pl-c1">3</span>, <span class="pl-c1">28</span>, <span class="pl-c1">48</span>, <span class="pl-c1">64</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>rnet<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4829" class="blob-num js-line-number" data-line-number="4829"></td>
        <td id="LC4829" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc1 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-c1">576</span>, <span class="pl-c1">128</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>rnet/fc1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4830" class="blob-num js-line-number" data-line-number="4830"></td>
        <td id="LC4830" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu4_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(<span class="pl-c1">128</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>rnet/prelu4_alpha<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4831" class="blob-num js-line-number" data-line-number="4831"></td>
        <td id="LC4831" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_1 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-c1">128</span>, <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>rnet/fc2_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4832" class="blob-num js-line-number" data-line-number="4832"></td>
        <td id="LC4832" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_2 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-c1">128</span>, <span class="pl-c1">4</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>rnet/fc2_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4833" class="blob-num js-line-number" data-line-number="4833"></td>
        <td id="LC4833" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__assign</span>({}, sharedParams, { fc1<span class="pl-k">:</span> fc1, prelu4_alpha<span class="pl-k">:</span> prelu4_alpha, fc2_1<span class="pl-k">:</span> fc2_1, fc2_2<span class="pl-k">:</span> fc2_2 });</td>
      </tr>
      <tr>
        <td id="L4834" class="blob-num js-line-number" data-line-number="4834"></td>
        <td id="LC4834" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4835" class="blob-num js-line-number" data-line-number="4835"></td>
        <td id="LC4835" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractONetParams</span>() {</td>
      </tr>
      <tr>
        <td id="L4836" class="blob-num js-line-number" data-line-number="4836"></td>
        <td id="LC4836" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sharedParams <span class="pl-k">=</span> <span class="pl-en">extractSharedParams</span>([<span class="pl-c1">3</span>, <span class="pl-c1">32</span>, <span class="pl-c1">64</span>, <span class="pl-c1">64</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>onet<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4837" class="blob-num js-line-number" data-line-number="4837"></td>
        <td id="LC4837" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv4 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-c1">64</span>, <span class="pl-c1">128</span>, <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>onet/conv4<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4838" class="blob-num js-line-number" data-line-number="4838"></td>
        <td id="LC4838" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu4_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(<span class="pl-c1">128</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>onet/prelu4_alpha<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4839" class="blob-num js-line-number" data-line-number="4839"></td>
        <td id="LC4839" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc1 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-c1">1152</span>, <span class="pl-c1">256</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>onet/fc1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4840" class="blob-num js-line-number" data-line-number="4840"></td>
        <td id="LC4840" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu5_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(<span class="pl-c1">256</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>onet/prelu5_alpha<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4841" class="blob-num js-line-number" data-line-number="4841"></td>
        <td id="LC4841" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_1 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>onet/fc2_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4842" class="blob-num js-line-number" data-line-number="4842"></td>
        <td id="LC4842" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_2 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">4</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>onet/fc2_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4843" class="blob-num js-line-number" data-line-number="4843"></td>
        <td id="LC4843" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_3 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-c1">256</span>, <span class="pl-c1">10</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>onet/fc2_3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4844" class="blob-num js-line-number" data-line-number="4844"></td>
        <td id="LC4844" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__assign</span>({}, sharedParams, { conv4<span class="pl-k">:</span> conv4, prelu4_alpha<span class="pl-k">:</span> prelu4_alpha, fc1<span class="pl-k">:</span> fc1, prelu5_alpha<span class="pl-k">:</span> prelu5_alpha, fc2_1<span class="pl-k">:</span> fc2_1, fc2_2<span class="pl-k">:</span> fc2_2, fc2_3<span class="pl-k">:</span> fc2_3 });</td>
      </tr>
      <tr>
        <td id="L4845" class="blob-num js-line-number" data-line-number="4845"></td>
        <td id="LC4845" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4846" class="blob-num js-line-number" data-line-number="4846"></td>
        <td id="LC4846" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4847" class="blob-num js-line-number" data-line-number="4847"></td>
        <td id="LC4847" class="blob-code blob-code-inner js-file-line">            extractPNetParams<span class="pl-k">:</span> extractPNetParams,</td>
      </tr>
      <tr>
        <td id="L4848" class="blob-num js-line-number" data-line-number="4848"></td>
        <td id="LC4848" class="blob-code blob-code-inner js-file-line">            extractRNetParams<span class="pl-k">:</span> extractRNetParams,</td>
      </tr>
      <tr>
        <td id="L4849" class="blob-num js-line-number" data-line-number="4849"></td>
        <td id="LC4849" class="blob-code blob-code-inner js-file-line">            extractONetParams<span class="pl-k">:</span> extractONetParams</td>
      </tr>
      <tr>
        <td id="L4850" class="blob-num js-line-number" data-line-number="4850"></td>
        <td id="LC4850" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4851" class="blob-num js-line-number" data-line-number="4851"></td>
        <td id="LC4851" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4852" class="blob-num js-line-number" data-line-number="4852"></td>
        <td id="LC4852" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParams$7</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L4853" class="blob-num js-line-number" data-line-number="4853"></td>
        <td id="LC4853" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractWeightsFactory</span>(weights), extractWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractWeights</span>, getRemainingWeights <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">getRemainingWeights</span>;</td>
      </tr>
      <tr>
        <td id="L4854" class="blob-num js-line-number" data-line-number="4854"></td>
        <td id="LC4854" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4855" class="blob-num js-line-number" data-line-number="4855"></td>
        <td id="LC4855" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _b <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$8</span>(extractWeights, paramMappings), extractPNetParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractPNetParams</span>, extractRNetParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractRNetParams</span>, extractONetParams <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">extractONetParams</span>;</td>
      </tr>
      <tr>
        <td id="L4856" class="blob-num js-line-number" data-line-number="4856"></td>
        <td id="LC4856" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> pnet <span class="pl-k">=</span> <span class="pl-en">extractPNetParams</span>();</td>
      </tr>
      <tr>
        <td id="L4857" class="blob-num js-line-number" data-line-number="4857"></td>
        <td id="LC4857" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> rnet <span class="pl-k">=</span> <span class="pl-en">extractRNetParams</span>();</td>
      </tr>
      <tr>
        <td id="L4858" class="blob-num js-line-number" data-line-number="4858"></td>
        <td id="LC4858" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> onet <span class="pl-k">=</span> <span class="pl-en">extractONetParams</span>();</td>
      </tr>
      <tr>
        <td id="L4859" class="blob-num js-line-number" data-line-number="4859"></td>
        <td id="LC4859" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4860" class="blob-num js-line-number" data-line-number="4860"></td>
        <td id="LC4860" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>weights remaing after extract: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">getRemainingWeights</span>().<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L4861" class="blob-num js-line-number" data-line-number="4861"></td>
        <td id="LC4861" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4862" class="blob-num js-line-number" data-line-number="4862"></td>
        <td id="LC4862" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> { pnet<span class="pl-k">:</span> pnet, rnet<span class="pl-k">:</span> rnet, onet<span class="pl-k">:</span> onet }, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L4863" class="blob-num js-line-number" data-line-number="4863"></td>
        <td id="LC4863" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4864" class="blob-num js-line-number" data-line-number="4864"></td>
        <td id="LC4864" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4865" class="blob-num js-line-number" data-line-number="4865"></td>
        <td id="LC4865" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractorsFactory$9</span>(<span class="pl-smi">weightMap</span>, <span class="pl-smi">paramMappings</span>) {</td>
      </tr>
      <tr>
        <td id="L4866" class="blob-num js-line-number" data-line-number="4866"></td>
        <td id="LC4866" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extractWeightEntry <span class="pl-k">=</span> <span class="pl-en">extractWeightEntryFactory</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L4867" class="blob-num js-line-number" data-line-number="4867"></td>
        <td id="LC4867" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractConvParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4868" class="blob-num js-line-number" data-line-number="4868"></td>
        <td id="LC4868" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> filters <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/weights<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">4</span>, prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/filters<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4869" class="blob-num js-line-number" data-line-number="4869"></td>
        <td id="LC4869" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L4870" class="blob-num js-line-number" data-line-number="4870"></td>
        <td id="LC4870" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { filters<span class="pl-k">:</span> filters, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L4871" class="blob-num js-line-number" data-line-number="4871"></td>
        <td id="LC4871" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4872" class="blob-num js-line-number" data-line-number="4872"></td>
        <td id="LC4872" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractFCParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4873" class="blob-num js-line-number" data-line-number="4873"></td>
        <td id="LC4873" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> weights <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/weights<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L4874" class="blob-num js-line-number" data-line-number="4874"></td>
        <td id="LC4874" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bias <span class="pl-k">=</span> <span class="pl-en">extractWeightEntry</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/bias<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L4875" class="blob-num js-line-number" data-line-number="4875"></td>
        <td id="LC4875" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { weights<span class="pl-k">:</span> weights, bias<span class="pl-k">:</span> bias };</td>
      </tr>
      <tr>
        <td id="L4876" class="blob-num js-line-number" data-line-number="4876"></td>
        <td id="LC4876" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4877" class="blob-num js-line-number" data-line-number="4877"></td>
        <td id="LC4877" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractPReluParams</span>(<span class="pl-smi">paramPath</span>) {</td>
      </tr>
      <tr>
        <td id="L4878" class="blob-num js-line-number" data-line-number="4878"></td>
        <td id="LC4878" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractWeightEntry</span>(paramPath, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L4879" class="blob-num js-line-number" data-line-number="4879"></td>
        <td id="LC4879" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4880" class="blob-num js-line-number" data-line-number="4880"></td>
        <td id="LC4880" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractSharedParams</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4881" class="blob-num js-line-number" data-line-number="4881"></td>
        <td id="LC4881" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv1 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4882" class="blob-num js-line-number" data-line-number="4882"></td>
        <td id="LC4882" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu1_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/prelu1_alpha<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4883" class="blob-num js-line-number" data-line-number="4883"></td>
        <td id="LC4883" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv2 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv2<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4884" class="blob-num js-line-number" data-line-number="4884"></td>
        <td id="LC4884" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu2_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/prelu2_alpha<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4885" class="blob-num js-line-number" data-line-number="4885"></td>
        <td id="LC4885" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv3 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/conv3<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4886" class="blob-num js-line-number" data-line-number="4886"></td>
        <td id="LC4886" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu3_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(prefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>/prelu3_alpha<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4887" class="blob-num js-line-number" data-line-number="4887"></td>
        <td id="LC4887" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { conv1<span class="pl-k">:</span> conv1, prelu1_alpha<span class="pl-k">:</span> prelu1_alpha, conv2<span class="pl-k">:</span> conv2, prelu2_alpha<span class="pl-k">:</span> prelu2_alpha, conv3<span class="pl-k">:</span> conv3, prelu3_alpha<span class="pl-k">:</span> prelu3_alpha };</td>
      </tr>
      <tr>
        <td id="L4888" class="blob-num js-line-number" data-line-number="4888"></td>
        <td id="LC4888" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4889" class="blob-num js-line-number" data-line-number="4889"></td>
        <td id="LC4889" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractPNetParams</span>() {</td>
      </tr>
      <tr>
        <td id="L4890" class="blob-num js-line-number" data-line-number="4890"></td>
        <td id="LC4890" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sharedParams <span class="pl-k">=</span> <span class="pl-en">extractSharedParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>pnet<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4891" class="blob-num js-line-number" data-line-number="4891"></td>
        <td id="LC4891" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv4_1 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>pnet/conv4_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4892" class="blob-num js-line-number" data-line-number="4892"></td>
        <td id="LC4892" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv4_2 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>pnet/conv4_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4893" class="blob-num js-line-number" data-line-number="4893"></td>
        <td id="LC4893" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__assign</span>({}, sharedParams, { conv4_1<span class="pl-k">:</span> conv4_1, conv4_2<span class="pl-k">:</span> conv4_2 });</td>
      </tr>
      <tr>
        <td id="L4894" class="blob-num js-line-number" data-line-number="4894"></td>
        <td id="LC4894" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4895" class="blob-num js-line-number" data-line-number="4895"></td>
        <td id="LC4895" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractRNetParams</span>() {</td>
      </tr>
      <tr>
        <td id="L4896" class="blob-num js-line-number" data-line-number="4896"></td>
        <td id="LC4896" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sharedParams <span class="pl-k">=</span> <span class="pl-en">extractSharedParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>rnet<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4897" class="blob-num js-line-number" data-line-number="4897"></td>
        <td id="LC4897" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc1 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>rnet/fc1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4898" class="blob-num js-line-number" data-line-number="4898"></td>
        <td id="LC4898" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu4_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>rnet/prelu4_alpha<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4899" class="blob-num js-line-number" data-line-number="4899"></td>
        <td id="LC4899" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_1 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>rnet/fc2_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4900" class="blob-num js-line-number" data-line-number="4900"></td>
        <td id="LC4900" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_2 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>rnet/fc2_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4901" class="blob-num js-line-number" data-line-number="4901"></td>
        <td id="LC4901" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__assign</span>({}, sharedParams, { fc1<span class="pl-k">:</span> fc1, prelu4_alpha<span class="pl-k">:</span> prelu4_alpha, fc2_1<span class="pl-k">:</span> fc2_1, fc2_2<span class="pl-k">:</span> fc2_2 });</td>
      </tr>
      <tr>
        <td id="L4902" class="blob-num js-line-number" data-line-number="4902"></td>
        <td id="LC4902" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4903" class="blob-num js-line-number" data-line-number="4903"></td>
        <td id="LC4903" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">extractONetParams</span>() {</td>
      </tr>
      <tr>
        <td id="L4904" class="blob-num js-line-number" data-line-number="4904"></td>
        <td id="LC4904" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sharedParams <span class="pl-k">=</span> <span class="pl-en">extractSharedParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>onet<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4905" class="blob-num js-line-number" data-line-number="4905"></td>
        <td id="LC4905" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv4 <span class="pl-k">=</span> <span class="pl-en">extractConvParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>onet/conv4<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4906" class="blob-num js-line-number" data-line-number="4906"></td>
        <td id="LC4906" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu4_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>onet/prelu4_alpha<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4907" class="blob-num js-line-number" data-line-number="4907"></td>
        <td id="LC4907" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc1 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>onet/fc1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4908" class="blob-num js-line-number" data-line-number="4908"></td>
        <td id="LC4908" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu5_alpha <span class="pl-k">=</span> <span class="pl-en">extractPReluParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>onet/prelu5_alpha<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4909" class="blob-num js-line-number" data-line-number="4909"></td>
        <td id="LC4909" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_1 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>onet/fc2_1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4910" class="blob-num js-line-number" data-line-number="4910"></td>
        <td id="LC4910" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_2 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>onet/fc2_2<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4911" class="blob-num js-line-number" data-line-number="4911"></td>
        <td id="LC4911" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_3 <span class="pl-k">=</span> <span class="pl-en">extractFCParams</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>onet/fc2_3<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4912" class="blob-num js-line-number" data-line-number="4912"></td>
        <td id="LC4912" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__assign</span>({}, sharedParams, { conv4<span class="pl-k">:</span> conv4, prelu4_alpha<span class="pl-k">:</span> prelu4_alpha, fc1<span class="pl-k">:</span> fc1, prelu5_alpha<span class="pl-k">:</span> prelu5_alpha, fc2_1<span class="pl-k">:</span> fc2_1, fc2_2<span class="pl-k">:</span> fc2_2, fc2_3<span class="pl-k">:</span> fc2_3 });</td>
      </tr>
      <tr>
        <td id="L4913" class="blob-num js-line-number" data-line-number="4913"></td>
        <td id="LC4913" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4914" class="blob-num js-line-number" data-line-number="4914"></td>
        <td id="LC4914" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4915" class="blob-num js-line-number" data-line-number="4915"></td>
        <td id="LC4915" class="blob-code blob-code-inner js-file-line">            extractPNetParams<span class="pl-k">:</span> extractPNetParams,</td>
      </tr>
      <tr>
        <td id="L4916" class="blob-num js-line-number" data-line-number="4916"></td>
        <td id="LC4916" class="blob-code blob-code-inner js-file-line">            extractRNetParams<span class="pl-k">:</span> extractRNetParams,</td>
      </tr>
      <tr>
        <td id="L4917" class="blob-num js-line-number" data-line-number="4917"></td>
        <td id="LC4917" class="blob-code blob-code-inner js-file-line">            extractONetParams<span class="pl-k">:</span> extractONetParams</td>
      </tr>
      <tr>
        <td id="L4918" class="blob-num js-line-number" data-line-number="4918"></td>
        <td id="LC4918" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4919" class="blob-num js-line-number" data-line-number="4919"></td>
        <td id="LC4919" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4920" class="blob-num js-line-number" data-line-number="4920"></td>
        <td id="LC4920" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractParamsFromWeigthMap$7</span>(<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L4921" class="blob-num js-line-number" data-line-number="4921"></td>
        <td id="LC4921" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> paramMappings <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4922" class="blob-num js-line-number" data-line-number="4922"></td>
        <td id="LC4922" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">extractorsFactory$9</span>(weightMap, paramMappings), extractPNetParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractPNetParams</span>, extractRNetParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractRNetParams</span>, extractONetParams <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">extractONetParams</span>;</td>
      </tr>
      <tr>
        <td id="L4923" class="blob-num js-line-number" data-line-number="4923"></td>
        <td id="LC4923" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> pnet <span class="pl-k">=</span> <span class="pl-en">extractPNetParams</span>();</td>
      </tr>
      <tr>
        <td id="L4924" class="blob-num js-line-number" data-line-number="4924"></td>
        <td id="LC4924" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> rnet <span class="pl-k">=</span> <span class="pl-en">extractRNetParams</span>();</td>
      </tr>
      <tr>
        <td id="L4925" class="blob-num js-line-number" data-line-number="4925"></td>
        <td id="LC4925" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> onet <span class="pl-k">=</span> <span class="pl-en">extractONetParams</span>();</td>
      </tr>
      <tr>
        <td id="L4926" class="blob-num js-line-number" data-line-number="4926"></td>
        <td id="LC4926" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">disposeUnusedWeightTensors</span>(weightMap, paramMappings);</td>
      </tr>
      <tr>
        <td id="L4927" class="blob-num js-line-number" data-line-number="4927"></td>
        <td id="LC4927" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> { params<span class="pl-k">:</span> { pnet<span class="pl-k">:</span> pnet, rnet<span class="pl-k">:</span> rnet, onet<span class="pl-k">:</span> onet }, paramMappings<span class="pl-k">:</span> paramMappings };</td>
      </tr>
      <tr>
        <td id="L4928" class="blob-num js-line-number" data-line-number="4928"></td>
        <td id="LC4928" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4929" class="blob-num js-line-number" data-line-number="4929"></td>
        <td id="LC4929" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4930" class="blob-num js-line-number" data-line-number="4930"></td>
        <td id="LC4930" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getSizesForScale</span>(<span class="pl-smi">scale</span>, <span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L4931" class="blob-num js-line-number" data-line-number="4931"></td>
        <td id="LC4931" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> height <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], width <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4932" class="blob-num js-line-number" data-line-number="4932"></td>
        <td id="LC4932" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4933" class="blob-num js-line-number" data-line-number="4933"></td>
        <td id="LC4933" class="blob-code blob-code-inner js-file-line">            height<span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(height <span class="pl-k">*</span> scale),</td>
      </tr>
      <tr>
        <td id="L4934" class="blob-num js-line-number" data-line-number="4934"></td>
        <td id="LC4934" class="blob-code blob-code-inner js-file-line">            width<span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(width <span class="pl-k">*</span> scale)</td>
      </tr>
      <tr>
        <td id="L4935" class="blob-num js-line-number" data-line-number="4935"></td>
        <td id="LC4935" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4936" class="blob-num js-line-number" data-line-number="4936"></td>
        <td id="LC4936" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4937" class="blob-num js-line-number" data-line-number="4937"></td>
        <td id="LC4937" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4938" class="blob-num js-line-number" data-line-number="4938"></td>
        <td id="LC4938" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pyramidDown</span>(<span class="pl-smi">minFaceSize</span>, <span class="pl-smi">scaleFactor</span>, <span class="pl-smi">dims</span>) {</td>
      </tr>
      <tr>
        <td id="L4939" class="blob-num js-line-number" data-line-number="4939"></td>
        <td id="LC4939" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> height <span class="pl-k">=</span> dims[<span class="pl-c1">0</span>], width <span class="pl-k">=</span> dims[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4940" class="blob-num js-line-number" data-line-number="4940"></td>
        <td id="LC4940" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> m <span class="pl-k">=</span> <span class="pl-c1">CELL_SIZE</span> <span class="pl-k">/</span> minFaceSize;</td>
      </tr>
      <tr>
        <td id="L4941" class="blob-num js-line-number" data-line-number="4941"></td>
        <td id="LC4941" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> scales <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4942" class="blob-num js-line-number" data-line-number="4942"></td>
        <td id="LC4942" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> minLayer <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(height, width) <span class="pl-k">*</span> m;</td>
      </tr>
      <tr>
        <td id="L4943" class="blob-num js-line-number" data-line-number="4943"></td>
        <td id="LC4943" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> exp <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4944" class="blob-num js-line-number" data-line-number="4944"></td>
        <td id="LC4944" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (minLayer <span class="pl-k">&gt;=</span> <span class="pl-c1">12</span>) {</td>
      </tr>
      <tr>
        <td id="L4945" class="blob-num js-line-number" data-line-number="4945"></td>
        <td id="LC4945" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">scales</span>.<span class="pl-c1">push</span>(m <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(scaleFactor, exp));</td>
      </tr>
      <tr>
        <td id="L4946" class="blob-num js-line-number" data-line-number="4946"></td>
        <td id="LC4946" class="blob-code blob-code-inner js-file-line">            minLayer <span class="pl-k">=</span> minLayer <span class="pl-k">*</span> scaleFactor;</td>
      </tr>
      <tr>
        <td id="L4947" class="blob-num js-line-number" data-line-number="4947"></td>
        <td id="LC4947" class="blob-code blob-code-inner js-file-line">            exp <span class="pl-k">+=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L4948" class="blob-num js-line-number" data-line-number="4948"></td>
        <td id="LC4948" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4949" class="blob-num js-line-number" data-line-number="4949"></td>
        <td id="LC4949" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> scales;</td>
      </tr>
      <tr>
        <td id="L4950" class="blob-num js-line-number" data-line-number="4950"></td>
        <td id="LC4950" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4951" class="blob-num js-line-number" data-line-number="4951"></td>
        <td id="LC4951" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4952" class="blob-num js-line-number" data-line-number="4952"></td>
        <td id="LC4952" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> MtcnnBox <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L4953" class="blob-num js-line-number" data-line-number="4953"></td>
        <td id="LC4953" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(MtcnnBox, _super);</td>
      </tr>
      <tr>
        <td id="L4954" class="blob-num js-line-number" data-line-number="4954"></td>
        <td id="LC4954" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">MtcnnBox</span>(<span class="pl-smi">left</span>, <span class="pl-smi">top</span>, <span class="pl-smi">right</span>, <span class="pl-smi">bottom</span>) {</td>
      </tr>
      <tr>
        <td id="L4955" class="blob-num js-line-number" data-line-number="4955"></td>
        <td id="LC4955" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, { left<span class="pl-k">:</span> left, top<span class="pl-k">:</span> top, right<span class="pl-k">:</span> right, bottom<span class="pl-k">:</span> bottom }, <span class="pl-c1">true</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L4956" class="blob-num js-line-number" data-line-number="4956"></td>
        <td id="LC4956" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4957" class="blob-num js-line-number" data-line-number="4957"></td>
        <td id="LC4957" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> MtcnnBox;</td>
      </tr>
      <tr>
        <td id="L4958" class="blob-num js-line-number" data-line-number="4958"></td>
        <td id="LC4958" class="blob-code blob-code-inner js-file-line">    }(Box));</td>
      </tr>
      <tr>
        <td id="L4959" class="blob-num js-line-number" data-line-number="4959"></td>
        <td id="LC4959" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4960" class="blob-num js-line-number" data-line-number="4960"></td>
        <td id="LC4960" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">normalize$1</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4961" class="blob-num js-line-number" data-line-number="4961"></td>
        <td id="LC4961" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-en">mul</span>(<span class="pl-en">sub</span>(x, <span class="pl-en">scalar</span>(<span class="pl-c1">127.5</span>)), <span class="pl-en">scalar</span>(<span class="pl-c1">0.0078125</span>)); });</td>
      </tr>
      <tr>
        <td id="L4962" class="blob-num js-line-number" data-line-number="4962"></td>
        <td id="LC4962" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4963" class="blob-num js-line-number" data-line-number="4963"></td>
        <td id="LC4963" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4964" class="blob-num js-line-number" data-line-number="4964"></td>
        <td id="LC4964" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">prelu$1</span>(<span class="pl-smi">x</span>, <span class="pl-smi">alpha</span>) {</td>
      </tr>
      <tr>
        <td id="L4965" class="blob-num js-line-number" data-line-number="4965"></td>
        <td id="LC4965" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4966" class="blob-num js-line-number" data-line-number="4966"></td>
        <td id="LC4966" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">add</span>(<span class="pl-en">relu</span>(x), <span class="pl-en">mul</span>(alpha, <span class="pl-en">neg</span>(<span class="pl-en">relu</span>(<span class="pl-en">neg</span>(x)))));</td>
      </tr>
      <tr>
        <td id="L4967" class="blob-num js-line-number" data-line-number="4967"></td>
        <td id="LC4967" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4968" class="blob-num js-line-number" data-line-number="4968"></td>
        <td id="LC4968" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4969" class="blob-num js-line-number" data-line-number="4969"></td>
        <td id="LC4969" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4970" class="blob-num js-line-number" data-line-number="4970"></td>
        <td id="LC4970" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">sharedLayer</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>, <span class="pl-smi">isPnet</span>) {</td>
      </tr>
      <tr>
        <td id="L4971" class="blob-num js-line-number" data-line-number="4971"></td>
        <td id="LC4971" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isPnet <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { isPnet <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L4972" class="blob-num js-line-number" data-line-number="4972"></td>
        <td id="LC4972" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4973" class="blob-num js-line-number" data-line-number="4973"></td>
        <td id="LC4973" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">convLayer</span>(x, <span class="pl-smi">params</span>.<span class="pl-smi">conv1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4974" class="blob-num js-line-number" data-line-number="4974"></td>
        <td id="LC4974" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">prelu$1</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">prelu1_alpha</span>);</td>
      </tr>
      <tr>
        <td id="L4975" class="blob-num js-line-number" data-line-number="4975"></td>
        <td id="LC4975" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, isPnet <span class="pl-k">?</span> [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>] <span class="pl-k">:</span> [<span class="pl-c1">3</span>, <span class="pl-c1">3</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4976" class="blob-num js-line-number" data-line-number="4976"></td>
        <td id="LC4976" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convLayer</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4977" class="blob-num js-line-number" data-line-number="4977"></td>
        <td id="LC4977" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">prelu$1</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">prelu2_alpha</span>);</td>
      </tr>
      <tr>
        <td id="L4978" class="blob-num js-line-number" data-line-number="4978"></td>
        <td id="LC4978" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> isPnet <span class="pl-k">?</span> out <span class="pl-k">:</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">3</span>, <span class="pl-c1">3</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4979" class="blob-num js-line-number" data-line-number="4979"></td>
        <td id="LC4979" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convLayer</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4980" class="blob-num js-line-number" data-line-number="4980"></td>
        <td id="LC4980" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">prelu$1</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">prelu3_alpha</span>);</td>
      </tr>
      <tr>
        <td id="L4981" class="blob-num js-line-number" data-line-number="4981"></td>
        <td id="LC4981" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L4982" class="blob-num js-line-number" data-line-number="4982"></td>
        <td id="LC4982" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4983" class="blob-num js-line-number" data-line-number="4983"></td>
        <td id="LC4983" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4984" class="blob-num js-line-number" data-line-number="4984"></td>
        <td id="LC4984" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4985" class="blob-num js-line-number" data-line-number="4985"></td>
        <td id="LC4985" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">PNet</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L4986" class="blob-num js-line-number" data-line-number="4986"></td>
        <td id="LC4986" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4987" class="blob-num js-line-number" data-line-number="4987"></td>
        <td id="LC4987" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">sharedLayer</span>(x, params, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4988" class="blob-num js-line-number" data-line-number="4988"></td>
        <td id="LC4988" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> conv <span class="pl-k">=</span> <span class="pl-en">convLayer</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv4_1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4989" class="blob-num js-line-number" data-line-number="4989"></td>
        <td id="LC4989" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> max$1 <span class="pl-k">=</span> <span class="pl-en">expandDims</span>(<span class="pl-en">max</span>(conv, <span class="pl-c1">3</span>), <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L4990" class="blob-num js-line-number" data-line-number="4990"></td>
        <td id="LC4990" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prob <span class="pl-k">=</span> <span class="pl-en">softmax</span>(<span class="pl-en">sub</span>(conv, max$1), <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L4991" class="blob-num js-line-number" data-line-number="4991"></td>
        <td id="LC4991" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> regions <span class="pl-k">=</span> <span class="pl-en">convLayer</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv4_2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4992" class="blob-num js-line-number" data-line-number="4992"></td>
        <td id="LC4992" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { prob<span class="pl-k">:</span> prob, regions<span class="pl-k">:</span> regions };</td>
      </tr>
      <tr>
        <td id="L4993" class="blob-num js-line-number" data-line-number="4993"></td>
        <td id="LC4993" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4994" class="blob-num js-line-number" data-line-number="4994"></td>
        <td id="LC4994" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4995" class="blob-num js-line-number" data-line-number="4995"></td>
        <td id="LC4995" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4996" class="blob-num js-line-number" data-line-number="4996"></td>
        <td id="LC4996" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">rescaleAndNormalize</span>(<span class="pl-smi">x</span>, <span class="pl-smi">scale</span>) {</td>
      </tr>
      <tr>
        <td id="L4997" class="blob-num js-line-number" data-line-number="4997"></td>
        <td id="LC4997" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4998" class="blob-num js-line-number" data-line-number="4998"></td>
        <td id="LC4998" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">getSizesForScale</span>(scale, <span class="pl-smi">x</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>)), height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>, width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>;</td>
      </tr>
      <tr>
        <td id="L4999" class="blob-num js-line-number" data-line-number="4999"></td>
        <td id="LC4999" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> resized <span class="pl-k">=</span> <span class="pl-smi">image_ops</span>.<span class="pl-en">resizeBilinear</span>(x, [height, width]);</td>
      </tr>
      <tr>
        <td id="L5000" class="blob-num js-line-number" data-line-number="5000"></td>
        <td id="LC5000" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> normalized <span class="pl-k">=</span> <span class="pl-en">normalize$1</span>(resized);</td>
      </tr>
      <tr>
        <td id="L5001" class="blob-num js-line-number" data-line-number="5001"></td>
        <td id="LC5001" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">transpose</span>(normalized, [<span class="pl-c1">0</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L5002" class="blob-num js-line-number" data-line-number="5002"></td>
        <td id="LC5002" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5003" class="blob-num js-line-number" data-line-number="5003"></td>
        <td id="LC5003" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5004" class="blob-num js-line-number" data-line-number="5004"></td>
        <td id="LC5004" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractBoundingBoxes</span>(<span class="pl-smi">scoresTensor</span>, <span class="pl-smi">regionsTensor</span>, <span class="pl-smi">scale</span>, <span class="pl-smi">scoreThreshold</span>) {</td>
      </tr>
      <tr>
        <td id="L5005" class="blob-num js-line-number" data-line-number="5005"></td>
        <td id="LC5005" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: fix this!, maybe better to use tf.gather here</span></td>
      </tr>
      <tr>
        <td id="L5006" class="blob-num js-line-number" data-line-number="5006"></td>
        <td id="LC5006" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> indices <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5007" class="blob-num js-line-number" data-line-number="5007"></td>
        <td id="LC5007" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> scoresData <span class="pl-k">=</span> <span class="pl-smi">scoresTensor</span>.<span class="pl-en">arraySync</span>();</td>
      </tr>
      <tr>
        <td id="L5008" class="blob-num js-line-number" data-line-number="5008"></td>
        <td id="LC5008" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> y <span class="pl-k">=</span> <span class="pl-c1">0</span>; y <span class="pl-k">&lt;</span> <span class="pl-smi">scoresTensor</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>]; y<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5009" class="blob-num js-line-number" data-line-number="5009"></td>
        <td id="LC5009" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> x <span class="pl-k">=</span> <span class="pl-c1">0</span>; x <span class="pl-k">&lt;</span> <span class="pl-smi">scoresTensor</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">1</span>]; x<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5010" class="blob-num js-line-number" data-line-number="5010"></td>
        <td id="LC5010" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (scoresData[y][x] <span class="pl-k">&gt;=</span> scoreThreshold) {</td>
      </tr>
      <tr>
        <td id="L5011" class="blob-num js-line-number" data-line-number="5011"></td>
        <td id="LC5011" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">indices</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">Point</span>(x, y));</td>
      </tr>
      <tr>
        <td id="L5012" class="blob-num js-line-number" data-line-number="5012"></td>
        <td id="LC5012" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L5013" class="blob-num js-line-number" data-line-number="5013"></td>
        <td id="LC5013" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5014" class="blob-num js-line-number" data-line-number="5014"></td>
        <td id="LC5014" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5015" class="blob-num js-line-number" data-line-number="5015"></td>
        <td id="LC5015" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> boundingBoxes <span class="pl-k">=</span> <span class="pl-smi">indices</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L5016" class="blob-num js-line-number" data-line-number="5016"></td>
        <td id="LC5016" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> cell <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">BoundingBox</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((<span class="pl-smi">idx</span>.<span class="pl-c1">y</span> <span class="pl-k">*</span> <span class="pl-c1">CELL_STRIDE</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">/</span> scale), <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((<span class="pl-smi">idx</span>.<span class="pl-c1">x</span> <span class="pl-k">*</span> <span class="pl-c1">CELL_STRIDE</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">/</span> scale), <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((<span class="pl-smi">idx</span>.<span class="pl-c1">y</span> <span class="pl-k">*</span> <span class="pl-c1">CELL_STRIDE</span> <span class="pl-k">+</span> <span class="pl-c1">CELL_SIZE</span>) <span class="pl-k">/</span> scale), <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((<span class="pl-smi">idx</span>.<span class="pl-c1">x</span> <span class="pl-k">*</span> <span class="pl-c1">CELL_STRIDE</span> <span class="pl-k">+</span> <span class="pl-c1">CELL_SIZE</span>) <span class="pl-k">/</span> scale));</td>
      </tr>
      <tr>
        <td id="L5017" class="blob-num js-line-number" data-line-number="5017"></td>
        <td id="LC5017" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> score <span class="pl-k">=</span> scoresData[<span class="pl-smi">idx</span>.<span class="pl-c1">y</span>][<span class="pl-smi">idx</span>.<span class="pl-c1">x</span>];</td>
      </tr>
      <tr>
        <td id="L5018" class="blob-num js-line-number" data-line-number="5018"></td>
        <td id="LC5018" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> regionsData <span class="pl-k">=</span> <span class="pl-smi">regionsTensor</span>.<span class="pl-en">arraySync</span>();</td>
      </tr>
      <tr>
        <td id="L5019" class="blob-num js-line-number" data-line-number="5019"></td>
        <td id="LC5019" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> region <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">MtcnnBox</span>(regionsData[<span class="pl-smi">idx</span>.<span class="pl-c1">y</span>][<span class="pl-smi">idx</span>.<span class="pl-c1">x</span>][<span class="pl-c1">0</span>], regionsData[<span class="pl-smi">idx</span>.<span class="pl-c1">y</span>][<span class="pl-smi">idx</span>.<span class="pl-c1">x</span>][<span class="pl-c1">1</span>], regionsData[<span class="pl-smi">idx</span>.<span class="pl-c1">y</span>][<span class="pl-smi">idx</span>.<span class="pl-c1">x</span>][<span class="pl-c1">2</span>], regionsData[<span class="pl-smi">idx</span>.<span class="pl-c1">y</span>][<span class="pl-smi">idx</span>.<span class="pl-c1">x</span>][<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L5020" class="blob-num js-line-number" data-line-number="5020"></td>
        <td id="LC5020" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L5021" class="blob-num js-line-number" data-line-number="5021"></td>
        <td id="LC5021" class="blob-code blob-code-inner js-file-line">                cell<span class="pl-k">:</span> cell,</td>
      </tr>
      <tr>
        <td id="L5022" class="blob-num js-line-number" data-line-number="5022"></td>
        <td id="LC5022" class="blob-code blob-code-inner js-file-line">                score<span class="pl-k">:</span> score,</td>
      </tr>
      <tr>
        <td id="L5023" class="blob-num js-line-number" data-line-number="5023"></td>
        <td id="LC5023" class="blob-code blob-code-inner js-file-line">                region<span class="pl-k">:</span> region</td>
      </tr>
      <tr>
        <td id="L5024" class="blob-num js-line-number" data-line-number="5024"></td>
        <td id="LC5024" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L5025" class="blob-num js-line-number" data-line-number="5025"></td>
        <td id="LC5025" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5026" class="blob-num js-line-number" data-line-number="5026"></td>
        <td id="LC5026" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> boundingBoxes;</td>
      </tr>
      <tr>
        <td id="L5027" class="blob-num js-line-number" data-line-number="5027"></td>
        <td id="LC5027" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5028" class="blob-num js-line-number" data-line-number="5028"></td>
        <td id="LC5028" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">stage1</span>(<span class="pl-smi">imgTensor</span>, <span class="pl-smi">scales</span>, <span class="pl-smi">scoreThreshold</span>, <span class="pl-smi">params</span>, <span class="pl-smi">stats</span>) {</td>
      </tr>
      <tr>
        <td id="L5029" class="blob-num js-line-number" data-line-number="5029"></td>
        <td id="LC5029" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">stats</span>.<span class="pl-smi">stage1</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5030" class="blob-num js-line-number" data-line-number="5030"></td>
        <td id="LC5030" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> pnetOutputs <span class="pl-k">=</span> <span class="pl-smi">scales</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">scale</span>) { <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5031" class="blob-num js-line-number" data-line-number="5031"></td>
        <td id="LC5031" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> statsForScale <span class="pl-k">=</span> { scale<span class="pl-k">:</span> scale };</td>
      </tr>
      <tr>
        <td id="L5032" class="blob-num js-line-number" data-line-number="5032"></td>
        <td id="LC5032" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> resized <span class="pl-k">=</span> <span class="pl-en">rescaleAndNormalize</span>(imgTensor, scale);</td>
      </tr>
      <tr>
        <td id="L5033" class="blob-num js-line-number" data-line-number="5033"></td>
        <td id="LC5033" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5034" class="blob-num js-line-number" data-line-number="5034"></td>
        <td id="LC5034" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-en">PNet</span>(resized, params), prob <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">prob</span>, regions <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">regions</span>;</td>
      </tr>
      <tr>
        <td id="L5035" class="blob-num js-line-number" data-line-number="5035"></td>
        <td id="LC5035" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">statsForScale</span>.<span class="pl-smi">pnet</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5036" class="blob-num js-line-number" data-line-number="5036"></td>
        <td id="LC5036" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scoresTensor <span class="pl-k">=</span> <span class="pl-en">unstack</span>(<span class="pl-en">unstack</span>(prob, <span class="pl-c1">3</span>)[<span class="pl-c1">1</span>])[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L5037" class="blob-num js-line-number" data-line-number="5037"></td>
        <td id="LC5037" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> regionsTensor <span class="pl-k">=</span> <span class="pl-en">unstack</span>(regions)[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L5038" class="blob-num js-line-number" data-line-number="5038"></td>
        <td id="LC5038" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L5039" class="blob-num js-line-number" data-line-number="5039"></td>
        <td id="LC5039" class="blob-code blob-code-inner js-file-line">                scoresTensor<span class="pl-k">:</span> scoresTensor,</td>
      </tr>
      <tr>
        <td id="L5040" class="blob-num js-line-number" data-line-number="5040"></td>
        <td id="LC5040" class="blob-code blob-code-inner js-file-line">                regionsTensor<span class="pl-k">:</span> regionsTensor,</td>
      </tr>
      <tr>
        <td id="L5041" class="blob-num js-line-number" data-line-number="5041"></td>
        <td id="LC5041" class="blob-code blob-code-inner js-file-line">                scale<span class="pl-k">:</span> scale,</td>
      </tr>
      <tr>
        <td id="L5042" class="blob-num js-line-number" data-line-number="5042"></td>
        <td id="LC5042" class="blob-code blob-code-inner js-file-line">                statsForScale<span class="pl-k">:</span> statsForScale</td>
      </tr>
      <tr>
        <td id="L5043" class="blob-num js-line-number" data-line-number="5043"></td>
        <td id="LC5043" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L5044" class="blob-num js-line-number" data-line-number="5044"></td>
        <td id="LC5044" class="blob-code blob-code-inner js-file-line">        }); });</td>
      </tr>
      <tr>
        <td id="L5045" class="blob-num js-line-number" data-line-number="5045"></td>
        <td id="LC5045" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> boxesForScale <span class="pl-k">=</span> <span class="pl-smi">pnetOutputs</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5046" class="blob-num js-line-number" data-line-number="5046"></td>
        <td id="LC5046" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scoresTensor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">scoresTensor</span>, regionsTensor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">regionsTensor</span>, scale <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">scale</span>, statsForScale <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">statsForScale</span>;</td>
      </tr>
      <tr>
        <td id="L5047" class="blob-num js-line-number" data-line-number="5047"></td>
        <td id="LC5047" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> boundingBoxes <span class="pl-k">=</span> <span class="pl-en">extractBoundingBoxes</span>(scoresTensor, regionsTensor, scale, scoreThreshold);</td>
      </tr>
      <tr>
        <td id="L5048" class="blob-num js-line-number" data-line-number="5048"></td>
        <td id="LC5048" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">scoresTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5049" class="blob-num js-line-number" data-line-number="5049"></td>
        <td id="LC5049" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">regionsTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5050" class="blob-num js-line-number" data-line-number="5050"></td>
        <td id="LC5050" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">boundingBoxes</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5051" class="blob-num js-line-number" data-line-number="5051"></td>
        <td id="LC5051" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">stats</span>.<span class="pl-smi">stage1</span>.<span class="pl-c1">push</span>(statsForScale);</td>
      </tr>
      <tr>
        <td id="L5052" class="blob-num js-line-number" data-line-number="5052"></td>
        <td id="LC5052" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> [];</td>
      </tr>
      <tr>
        <td id="L5053" class="blob-num js-line-number" data-line-number="5053"></td>
        <td id="LC5053" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5054" class="blob-num js-line-number" data-line-number="5054"></td>
        <td id="LC5054" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5055" class="blob-num js-line-number" data-line-number="5055"></td>
        <td id="LC5055" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> indices <span class="pl-k">=</span> <span class="pl-en">nonMaxSuppression$1</span>(<span class="pl-smi">boundingBoxes</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">bbox</span>) { <span class="pl-k">return</span> <span class="pl-smi">bbox</span>.<span class="pl-smi">cell</span>; }), <span class="pl-smi">boundingBoxes</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">bbox</span>) { <span class="pl-k">return</span> <span class="pl-smi">bbox</span>.<span class="pl-smi">score</span>; }), <span class="pl-c1">0.5</span>);</td>
      </tr>
      <tr>
        <td id="L5056" class="blob-num js-line-number" data-line-number="5056"></td>
        <td id="LC5056" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">statsForScale</span>.<span class="pl-smi">nms</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5057" class="blob-num js-line-number" data-line-number="5057"></td>
        <td id="LC5057" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">statsForScale</span>.<span class="pl-smi">numBoxes</span> <span class="pl-k">=</span> <span class="pl-smi">indices</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L5058" class="blob-num js-line-number" data-line-number="5058"></td>
        <td id="LC5058" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">stats</span>.<span class="pl-smi">stage1</span>.<span class="pl-c1">push</span>(statsForScale);</td>
      </tr>
      <tr>
        <td id="L5059" class="blob-num js-line-number" data-line-number="5059"></td>
        <td id="LC5059" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">indices</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">boxIdx</span>) { <span class="pl-k">return</span> boundingBoxes[boxIdx]; });</td>
      </tr>
      <tr>
        <td id="L5060" class="blob-num js-line-number" data-line-number="5060"></td>
        <td id="LC5060" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5061" class="blob-num js-line-number" data-line-number="5061"></td>
        <td id="LC5061" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> allBoxes <span class="pl-k">=</span> <span class="pl-smi">boxesForScale</span>.<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">all</span>, <span class="pl-smi">boxes</span>) { <span class="pl-k">return</span> <span class="pl-smi">all</span>.<span class="pl-c1">concat</span>(boxes); }, []);</td>
      </tr>
      <tr>
        <td id="L5062" class="blob-num js-line-number" data-line-number="5062"></td>
        <td id="LC5062" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> finalBoxes <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5063" class="blob-num js-line-number" data-line-number="5063"></td>
        <td id="LC5063" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> finalScores <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5064" class="blob-num js-line-number" data-line-number="5064"></td>
        <td id="LC5064" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">allBoxes</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L5065" class="blob-num js-line-number" data-line-number="5065"></td>
        <td id="LC5065" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5066" class="blob-num js-line-number" data-line-number="5066"></td>
        <td id="LC5066" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> indices <span class="pl-k">=</span> <span class="pl-en">nonMaxSuppression$1</span>(<span class="pl-smi">allBoxes</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">bbox</span>) { <span class="pl-k">return</span> <span class="pl-smi">bbox</span>.<span class="pl-smi">cell</span>; }), <span class="pl-smi">allBoxes</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">bbox</span>) { <span class="pl-k">return</span> <span class="pl-smi">bbox</span>.<span class="pl-smi">score</span>; }), <span class="pl-c1">0.7</span>);</td>
      </tr>
      <tr>
        <td id="L5067" class="blob-num js-line-number" data-line-number="5067"></td>
        <td id="LC5067" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">stats</span>.<span class="pl-smi">stage1_nms</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5068" class="blob-num js-line-number" data-line-number="5068"></td>
        <td id="LC5068" class="blob-code blob-code-inner js-file-line">            finalScores <span class="pl-k">=</span> <span class="pl-smi">indices</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> allBoxes[idx].<span class="pl-smi">score</span>; });</td>
      </tr>
      <tr>
        <td id="L5069" class="blob-num js-line-number" data-line-number="5069"></td>
        <td id="LC5069" class="blob-code blob-code-inner js-file-line">            finalBoxes <span class="pl-k">=</span> indices</td>
      </tr>
      <tr>
        <td id="L5070" class="blob-num js-line-number" data-line-number="5070"></td>
        <td id="LC5070" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> allBoxes[idx]; })</td>
      </tr>
      <tr>
        <td id="L5071" class="blob-num js-line-number" data-line-number="5071"></td>
        <td id="LC5071" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5072" class="blob-num js-line-number" data-line-number="5072"></td>
        <td id="LC5072" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> cell <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">cell</span>, region <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">region</span>;</td>
      </tr>
      <tr>
        <td id="L5073" class="blob-num js-line-number" data-line-number="5073"></td>
        <td id="LC5073" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">BoundingBox</span>(<span class="pl-smi">cell</span>.<span class="pl-c1">left</span> <span class="pl-k">+</span> (<span class="pl-smi">region</span>.<span class="pl-c1">left</span> <span class="pl-k">*</span> <span class="pl-smi">cell</span>.<span class="pl-c1">width</span>), <span class="pl-smi">cell</span>.<span class="pl-c1">top</span> <span class="pl-k">+</span> (<span class="pl-smi">region</span>.<span class="pl-c1">top</span> <span class="pl-k">*</span> <span class="pl-smi">cell</span>.<span class="pl-c1">height</span>), <span class="pl-smi">cell</span>.<span class="pl-c1">right</span> <span class="pl-k">+</span> (<span class="pl-smi">region</span>.<span class="pl-c1">right</span> <span class="pl-k">*</span> <span class="pl-smi">cell</span>.<span class="pl-c1">width</span>), <span class="pl-smi">cell</span>.<span class="pl-c1">bottom</span> <span class="pl-k">+</span> (<span class="pl-smi">region</span>.<span class="pl-c1">bottom</span> <span class="pl-k">*</span> <span class="pl-smi">cell</span>.<span class="pl-c1">height</span>)).<span class="pl-en">toSquare</span>().<span class="pl-en">round</span>();</td>
      </tr>
      <tr>
        <td id="L5074" class="blob-num js-line-number" data-line-number="5074"></td>
        <td id="LC5074" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5075" class="blob-num js-line-number" data-line-number="5075"></td>
        <td id="LC5075" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5076" class="blob-num js-line-number" data-line-number="5076"></td>
        <td id="LC5076" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L5077" class="blob-num js-line-number" data-line-number="5077"></td>
        <td id="LC5077" class="blob-code blob-code-inner js-file-line">            boxes<span class="pl-k">:</span> finalBoxes,</td>
      </tr>
      <tr>
        <td id="L5078" class="blob-num js-line-number" data-line-number="5078"></td>
        <td id="LC5078" class="blob-code blob-code-inner js-file-line">            scores<span class="pl-k">:</span> finalScores</td>
      </tr>
      <tr>
        <td id="L5079" class="blob-num js-line-number" data-line-number="5079"></td>
        <td id="LC5079" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5080" class="blob-num js-line-number" data-line-number="5080"></td>
        <td id="LC5080" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5081" class="blob-num js-line-number" data-line-number="5081"></td>
        <td id="LC5081" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5082" class="blob-num js-line-number" data-line-number="5082"></td>
        <td id="LC5082" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extractImagePatches</span>(<span class="pl-smi">img</span>, <span class="pl-smi">boxes</span>, <span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5083" class="blob-num js-line-number" data-line-number="5083"></td>
        <td id="LC5083" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L5084" class="blob-num js-line-number" data-line-number="5084"></td>
        <td id="LC5084" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5085" class="blob-num js-line-number" data-line-number="5085"></td>
        <td id="LC5085" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> imgCtx, bitmaps, imagePatchesDatas;</td>
      </tr>
      <tr>
        <td id="L5086" class="blob-num js-line-number" data-line-number="5086"></td>
        <td id="LC5086" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5087" class="blob-num js-line-number" data-line-number="5087"></td>
        <td id="LC5087" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L5088" class="blob-num js-line-number" data-line-number="5088"></td>
        <td id="LC5088" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5089" class="blob-num js-line-number" data-line-number="5089"></td>
        <td id="LC5089" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L5090" class="blob-num js-line-number" data-line-number="5090"></td>
        <td id="LC5090" class="blob-code blob-code-inner js-file-line">                        imgCtx <span class="pl-k">=</span> <span class="pl-en">getContext2dOrThrow</span>(img);</td>
      </tr>
      <tr>
        <td id="L5091" class="blob-num js-line-number" data-line-number="5091"></td>
        <td id="LC5091" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">boxes</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">box</span>) { <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(_this, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5092" class="blob-num js-line-number" data-line-number="5092"></td>
        <td id="LC5092" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> _a, y, ey, x, ex, fromX, fromY, imgData;</td>
      </tr>
      <tr>
        <td id="L5093" class="blob-num js-line-number" data-line-number="5093"></td>
        <td id="LC5093" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L5094" class="blob-num js-line-number" data-line-number="5094"></td>
        <td id="LC5094" class="blob-code blob-code-inner js-file-line">                                    _a <span class="pl-k">=</span> <span class="pl-smi">box</span>.<span class="pl-en">padAtBorders</span>(<span class="pl-smi">img</span>.<span class="pl-c1">height</span>, <span class="pl-smi">img</span>.<span class="pl-c1">width</span>), y <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">y</span>, ey <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">ey</span>, x <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">x</span>, ex <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">ex</span>;</td>
      </tr>
      <tr>
        <td id="L5095" class="blob-num js-line-number" data-line-number="5095"></td>
        <td id="LC5095" class="blob-code blob-code-inner js-file-line">                                    fromX <span class="pl-k">=</span> x <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5096" class="blob-num js-line-number" data-line-number="5096"></td>
        <td id="LC5096" class="blob-code blob-code-inner js-file-line">                                    fromY <span class="pl-k">=</span> y <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5097" class="blob-num js-line-number" data-line-number="5097"></td>
        <td id="LC5097" class="blob-code blob-code-inner js-file-line">                                    imgData <span class="pl-k">=</span> <span class="pl-smi">imgCtx</span>.<span class="pl-en">getImageData</span>(fromX, fromY, (ex <span class="pl-k">-</span> fromX), (ey <span class="pl-k">-</span> fromY));</td>
      </tr>
      <tr>
        <td id="L5098" class="blob-num js-line-number" data-line-number="5098"></td>
        <td id="LC5098" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">env</span>.<span class="pl-en">isNodejs</span>() <span class="pl-k">?</span> <span class="pl-en">createCanvasFromMedia</span>(imgData) <span class="pl-k">:</span> <span class="pl-en">createImageBitmap</span>(imgData)];</td>
      </tr>
      <tr>
        <td id="L5099" class="blob-num js-line-number" data-line-number="5099"></td>
        <td id="LC5099" class="blob-code blob-code-inner js-file-line">                                });</td>
      </tr>
      <tr>
        <td id="L5100" class="blob-num js-line-number" data-line-number="5100"></td>
        <td id="LC5100" class="blob-code blob-code-inner js-file-line">                            }); }))];</td>
      </tr>
      <tr>
        <td id="L5101" class="blob-num js-line-number" data-line-number="5101"></td>
        <td id="LC5101" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5102" class="blob-num js-line-number" data-line-number="5102"></td>
        <td id="LC5102" class="blob-code blob-code-inner js-file-line">                        bitmaps <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5103" class="blob-num js-line-number" data-line-number="5103"></td>
        <td id="LC5103" class="blob-code blob-code-inner js-file-line">                        imagePatchesDatas <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5104" class="blob-num js-line-number" data-line-number="5104"></td>
        <td id="LC5104" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">bitmaps</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">bmp</span>) {</td>
      </tr>
      <tr>
        <td id="L5105" class="blob-num js-line-number" data-line-number="5105"></td>
        <td id="LC5105" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> patch <span class="pl-k">=</span> <span class="pl-en">createCanvas</span>({ width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height });</td>
      </tr>
      <tr>
        <td id="L5106" class="blob-num js-line-number" data-line-number="5106"></td>
        <td id="LC5106" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> patchCtx <span class="pl-k">=</span> <span class="pl-en">getContext2dOrThrow</span>(patch);</td>
      </tr>
      <tr>
        <td id="L5107" class="blob-num js-line-number" data-line-number="5107"></td>
        <td id="LC5107" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">patchCtx</span>.<span class="pl-en">drawImage</span>(bmp, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, width, height);</td>
      </tr>
      <tr>
        <td id="L5108" class="blob-num js-line-number" data-line-number="5108"></td>
        <td id="LC5108" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> data <span class="pl-k">=</span> <span class="pl-smi">patchCtx</span>.<span class="pl-en">getImageData</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, width, height).<span class="pl-c1">data</span>;</td>
      </tr>
      <tr>
        <td id="L5109" class="blob-num js-line-number" data-line-number="5109"></td>
        <td id="LC5109" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> currData <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5110" class="blob-num js-line-number" data-line-number="5110"></td>
        <td id="LC5110" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">//</span> RGBA -&gt; BGR</span></td>
      </tr>
      <tr>
        <td id="L5111" class="blob-num js-line-number" data-line-number="5111"></td>
        <td id="LC5111" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">data</span>.<span class="pl-c1">length</span>; i <span class="pl-k">+=</span> <span class="pl-c1">4</span>) {</td>
      </tr>
      <tr>
        <td id="L5112" class="blob-num js-line-number" data-line-number="5112"></td>
        <td id="LC5112" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">currData</span>.<span class="pl-c1">push</span>(data[i <span class="pl-k">+</span> <span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L5113" class="blob-num js-line-number" data-line-number="5113"></td>
        <td id="LC5113" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">currData</span>.<span class="pl-c1">push</span>(data[i <span class="pl-k">+</span> <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L5114" class="blob-num js-line-number" data-line-number="5114"></td>
        <td id="LC5114" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">currData</span>.<span class="pl-c1">push</span>(data[i]);</td>
      </tr>
      <tr>
        <td id="L5115" class="blob-num js-line-number" data-line-number="5115"></td>
        <td id="LC5115" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L5116" class="blob-num js-line-number" data-line-number="5116"></td>
        <td id="LC5116" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">imagePatchesDatas</span>.<span class="pl-c1">push</span>(currData);</td>
      </tr>
      <tr>
        <td id="L5117" class="blob-num js-line-number" data-line-number="5117"></td>
        <td id="LC5117" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L5118" class="blob-num js-line-number" data-line-number="5118"></td>
        <td id="LC5118" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">imagePatchesDatas</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L5119" class="blob-num js-line-number" data-line-number="5119"></td>
        <td id="LC5119" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> t <span class="pl-k">=</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5120" class="blob-num js-line-number" data-line-number="5120"></td>
        <td id="LC5120" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">var</span> imagePatchTensor <span class="pl-k">=</span> <span class="pl-en">transpose</span>(<span class="pl-en">tensor4d</span>(data, [<span class="pl-c1">1</span>, width, height, <span class="pl-c1">3</span>]), [<span class="pl-c1">0</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>]).<span class="pl-en">toFloat</span>();</td>
      </tr>
      <tr>
        <td id="L5121" class="blob-num js-line-number" data-line-number="5121"></td>
        <td id="LC5121" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-en">normalize$1</span>(imagePatchTensor);</td>
      </tr>
      <tr>
        <td id="L5122" class="blob-num js-line-number" data-line-number="5122"></td>
        <td id="LC5122" class="blob-code blob-code-inner js-file-line">                                });</td>
      </tr>
      <tr>
        <td id="L5123" class="blob-num js-line-number" data-line-number="5123"></td>
        <td id="LC5123" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> t;</td>
      </tr>
      <tr>
        <td id="L5124" class="blob-num js-line-number" data-line-number="5124"></td>
        <td id="LC5124" class="blob-code blob-code-inner js-file-line">                            })];</td>
      </tr>
      <tr>
        <td id="L5125" class="blob-num js-line-number" data-line-number="5125"></td>
        <td id="LC5125" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L5126" class="blob-num js-line-number" data-line-number="5126"></td>
        <td id="LC5126" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5127" class="blob-num js-line-number" data-line-number="5127"></td>
        <td id="LC5127" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5128" class="blob-num js-line-number" data-line-number="5128"></td>
        <td id="LC5128" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5129" class="blob-num js-line-number" data-line-number="5129"></td>
        <td id="LC5129" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5130" class="blob-num js-line-number" data-line-number="5130"></td>
        <td id="LC5130" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">RNet</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L5131" class="blob-num js-line-number" data-line-number="5131"></td>
        <td id="LC5131" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5132" class="blob-num js-line-number" data-line-number="5132"></td>
        <td id="LC5132" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> convOut <span class="pl-k">=</span> <span class="pl-en">sharedLayer</span>(x, params);</td>
      </tr>
      <tr>
        <td id="L5133" class="blob-num js-line-number" data-line-number="5133"></td>
        <td id="LC5133" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> vectorized <span class="pl-k">=</span> <span class="pl-en">reshape</span>(convOut, [<span class="pl-smi">convOut</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>], <span class="pl-smi">params</span>.<span class="pl-smi">fc1</span>.<span class="pl-smi">weights</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>]]);</td>
      </tr>
      <tr>
        <td id="L5134" class="blob-num js-line-number" data-line-number="5134"></td>
        <td id="LC5134" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc1 <span class="pl-k">=</span> <span class="pl-en">fullyConnectedLayer</span>(vectorized, <span class="pl-smi">params</span>.<span class="pl-smi">fc1</span>);</td>
      </tr>
      <tr>
        <td id="L5135" class="blob-num js-line-number" data-line-number="5135"></td>
        <td id="LC5135" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu4 <span class="pl-k">=</span> <span class="pl-en">prelu$1</span>(fc1, <span class="pl-smi">params</span>.<span class="pl-smi">prelu4_alpha</span>);</td>
      </tr>
      <tr>
        <td id="L5136" class="blob-num js-line-number" data-line-number="5136"></td>
        <td id="LC5136" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_1 <span class="pl-k">=</span> <span class="pl-en">fullyConnectedLayer</span>(prelu4, <span class="pl-smi">params</span>.<span class="pl-smi">fc2_1</span>);</td>
      </tr>
      <tr>
        <td id="L5137" class="blob-num js-line-number" data-line-number="5137"></td>
        <td id="LC5137" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> max$1 <span class="pl-k">=</span> <span class="pl-en">expandDims</span>(<span class="pl-en">max</span>(fc2_1, <span class="pl-c1">1</span>), <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L5138" class="blob-num js-line-number" data-line-number="5138"></td>
        <td id="LC5138" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prob <span class="pl-k">=</span> <span class="pl-en">softmax</span>(<span class="pl-en">sub</span>(fc2_1, max$1), <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L5139" class="blob-num js-line-number" data-line-number="5139"></td>
        <td id="LC5139" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> regions <span class="pl-k">=</span> <span class="pl-en">fullyConnectedLayer</span>(prelu4, <span class="pl-smi">params</span>.<span class="pl-smi">fc2_2</span>);</td>
      </tr>
      <tr>
        <td id="L5140" class="blob-num js-line-number" data-line-number="5140"></td>
        <td id="LC5140" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scores <span class="pl-k">=</span> <span class="pl-en">unstack</span>(prob, <span class="pl-c1">1</span>)[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L5141" class="blob-num js-line-number" data-line-number="5141"></td>
        <td id="LC5141" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { scores<span class="pl-k">:</span> scores, regions<span class="pl-k">:</span> regions };</td>
      </tr>
      <tr>
        <td id="L5142" class="blob-num js-line-number" data-line-number="5142"></td>
        <td id="LC5142" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5143" class="blob-num js-line-number" data-line-number="5143"></td>
        <td id="LC5143" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5144" class="blob-num js-line-number" data-line-number="5144"></td>
        <td id="LC5144" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5145" class="blob-num js-line-number" data-line-number="5145"></td>
        <td id="LC5145" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">stage2</span>(<span class="pl-smi">img</span>, <span class="pl-smi">inputBoxes</span>, <span class="pl-smi">scoreThreshold</span>, <span class="pl-smi">params</span>, <span class="pl-smi">stats</span>) {</td>
      </tr>
      <tr>
        <td id="L5146" class="blob-num js-line-number" data-line-number="5146"></td>
        <td id="LC5146" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5147" class="blob-num js-line-number" data-line-number="5147"></td>
        <td id="LC5147" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ts, rnetInputs, rnetOuts, scoresTensor, scores, _a, _b, indices, filteredBoxes, filteredScores, finalBoxes, finalScores, indicesNms, regions_1;</td>
      </tr>
      <tr>
        <td id="L5148" class="blob-num js-line-number" data-line-number="5148"></td>
        <td id="LC5148" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_c</span>) {</td>
      </tr>
      <tr>
        <td id="L5149" class="blob-num js-line-number" data-line-number="5149"></td>
        <td id="LC5149" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_c</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5150" class="blob-num js-line-number" data-line-number="5150"></td>
        <td id="LC5150" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L5151" class="blob-num js-line-number" data-line-number="5151"></td>
        <td id="LC5151" class="blob-code blob-code-inner js-file-line">                        ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5152" class="blob-num js-line-number" data-line-number="5152"></td>
        <td id="LC5152" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractImagePatches</span>(img, inputBoxes, { width<span class="pl-k">:</span> <span class="pl-c1">24</span>, height<span class="pl-k">:</span> <span class="pl-c1">24</span> })];</td>
      </tr>
      <tr>
        <td id="L5153" class="blob-num js-line-number" data-line-number="5153"></td>
        <td id="LC5153" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5154" class="blob-num js-line-number" data-line-number="5154"></td>
        <td id="LC5154" class="blob-code blob-code-inner js-file-line">                        rnetInputs <span class="pl-k">=</span> <span class="pl-smi">_c</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5155" class="blob-num js-line-number" data-line-number="5155"></td>
        <td id="LC5155" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">stats</span>.<span class="pl-smi">stage2_extractImagePatches</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5156" class="blob-num js-line-number" data-line-number="5156"></td>
        <td id="LC5156" class="blob-code blob-code-inner js-file-line">                        ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5157" class="blob-num js-line-number" data-line-number="5157"></td>
        <td id="LC5157" class="blob-code blob-code-inner js-file-line">                        rnetOuts <span class="pl-k">=</span> <span class="pl-smi">rnetInputs</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">rnetInput</span>) {</td>
      </tr>
      <tr>
        <td id="L5158" class="blob-num js-line-number" data-line-number="5158"></td>
        <td id="LC5158" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">RNet</span>(rnetInput, params);</td>
      </tr>
      <tr>
        <td id="L5159" class="blob-num js-line-number" data-line-number="5159"></td>
        <td id="LC5159" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">rnetInput</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5160" class="blob-num js-line-number" data-line-number="5160"></td>
        <td id="LC5160" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L5161" class="blob-num js-line-number" data-line-number="5161"></td>
        <td id="LC5161" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L5162" class="blob-num js-line-number" data-line-number="5162"></td>
        <td id="LC5162" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">stats</span>.<span class="pl-smi">stage2_rnet</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5163" class="blob-num js-line-number" data-line-number="5163"></td>
        <td id="LC5163" class="blob-code blob-code-inner js-file-line">                        scoresTensor <span class="pl-k">=</span> <span class="pl-smi">rnetOuts</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L5164" class="blob-num js-line-number" data-line-number="5164"></td>
        <td id="LC5164" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">?</span> <span class="pl-en">concat</span>(<span class="pl-smi">rnetOuts</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">out</span>) { <span class="pl-k">return</span> <span class="pl-smi">out</span>.<span class="pl-smi">scores</span>; }))</td>
      </tr>
      <tr>
        <td id="L5165" class="blob-num js-line-number" data-line-number="5165"></td>
        <td id="LC5165" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">:</span> rnetOuts[<span class="pl-c1">0</span>].<span class="pl-smi">scores</span>;</td>
      </tr>
      <tr>
        <td id="L5166" class="blob-num js-line-number" data-line-number="5166"></td>
        <td id="LC5166" class="blob-code blob-code-inner js-file-line">                        _b <span class="pl-k">=</span> (_a <span class="pl-k">=</span> <span class="pl-c1">Array</span>).<span class="pl-smi">from</span>;</td>
      </tr>
      <tr>
        <td id="L5167" class="blob-num js-line-number" data-line-number="5167"></td>
        <td id="LC5167" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">scoresTensor</span>.<span class="pl-c1">data</span>()];</td>
      </tr>
      <tr>
        <td id="L5168" class="blob-num js-line-number" data-line-number="5168"></td>
        <td id="LC5168" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L5169" class="blob-num js-line-number" data-line-number="5169"></td>
        <td id="LC5169" class="blob-code blob-code-inner js-file-line">                        scores <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-c1">apply</span>(_a, [<span class="pl-smi">_c</span>.<span class="pl-en">sent</span>()]);</td>
      </tr>
      <tr>
        <td id="L5170" class="blob-num js-line-number" data-line-number="5170"></td>
        <td id="LC5170" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">scoresTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5171" class="blob-num js-line-number" data-line-number="5171"></td>
        <td id="LC5171" class="blob-code blob-code-inner js-file-line">                        indices <span class="pl-k">=</span> scores</td>
      </tr>
      <tr>
        <td id="L5172" class="blob-num js-line-number" data-line-number="5172"></td>
        <td id="LC5172" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">score</span>, <span class="pl-smi">idx</span>) { <span class="pl-k">return</span> ({ score<span class="pl-k">:</span> score, idx<span class="pl-k">:</span> idx }); })</td>
      </tr>
      <tr>
        <td id="L5173" class="blob-num js-line-number" data-line-number="5173"></td>
        <td id="LC5173" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">c</span>) { <span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">score</span> <span class="pl-k">&gt;</span> scoreThreshold; })</td>
      </tr>
      <tr>
        <td id="L5174" class="blob-num js-line-number" data-line-number="5174"></td>
        <td id="LC5174" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5175" class="blob-num js-line-number" data-line-number="5175"></td>
        <td id="LC5175" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> idx <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">idx</span>;</td>
      </tr>
      <tr>
        <td id="L5176" class="blob-num js-line-number" data-line-number="5176"></td>
        <td id="LC5176" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> idx;</td>
      </tr>
      <tr>
        <td id="L5177" class="blob-num js-line-number" data-line-number="5177"></td>
        <td id="LC5177" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L5178" class="blob-num js-line-number" data-line-number="5178"></td>
        <td id="LC5178" class="blob-code blob-code-inner js-file-line">                        filteredBoxes <span class="pl-k">=</span> <span class="pl-smi">indices</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> inputBoxes[idx]; });</td>
      </tr>
      <tr>
        <td id="L5179" class="blob-num js-line-number" data-line-number="5179"></td>
        <td id="LC5179" class="blob-code blob-code-inner js-file-line">                        filteredScores <span class="pl-k">=</span> <span class="pl-smi">indices</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> scores[idx]; });</td>
      </tr>
      <tr>
        <td id="L5180" class="blob-num js-line-number" data-line-number="5180"></td>
        <td id="LC5180" class="blob-code blob-code-inner js-file-line">                        finalBoxes <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5181" class="blob-num js-line-number" data-line-number="5181"></td>
        <td id="LC5181" class="blob-code blob-code-inner js-file-line">                        finalScores <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5182" class="blob-num js-line-number" data-line-number="5182"></td>
        <td id="LC5182" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-smi">filteredBoxes</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L5183" class="blob-num js-line-number" data-line-number="5183"></td>
        <td id="LC5183" class="blob-code blob-code-inner js-file-line">                            ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5184" class="blob-num js-line-number" data-line-number="5184"></td>
        <td id="LC5184" class="blob-code blob-code-inner js-file-line">                            indicesNms <span class="pl-k">=</span> <span class="pl-en">nonMaxSuppression$1</span>(filteredBoxes, filteredScores, <span class="pl-c1">0.7</span>);</td>
      </tr>
      <tr>
        <td id="L5185" class="blob-num js-line-number" data-line-number="5185"></td>
        <td id="LC5185" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">stats</span>.<span class="pl-smi">stage2_nms</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5186" class="blob-num js-line-number" data-line-number="5186"></td>
        <td id="LC5186" class="blob-code blob-code-inner js-file-line">                            regions_1 <span class="pl-k">=</span> <span class="pl-smi">indicesNms</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L5187" class="blob-num js-line-number" data-line-number="5187"></td>
        <td id="LC5187" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> regionsData <span class="pl-k">=</span> rnetOuts[indices[idx]].<span class="pl-smi">regions</span>.<span class="pl-en">arraySync</span>();</td>
      </tr>
      <tr>
        <td id="L5188" class="blob-num js-line-number" data-line-number="5188"></td>
        <td id="LC5188" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">MtcnnBox</span>(regionsData[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], regionsData[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], regionsData[<span class="pl-c1">0</span>][<span class="pl-c1">2</span>], regionsData[<span class="pl-c1">0</span>][<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L5189" class="blob-num js-line-number" data-line-number="5189"></td>
        <td id="LC5189" class="blob-code blob-code-inner js-file-line">                            });</td>
      </tr>
      <tr>
        <td id="L5190" class="blob-num js-line-number" data-line-number="5190"></td>
        <td id="LC5190" class="blob-code blob-code-inner js-file-line">                            finalScores <span class="pl-k">=</span> <span class="pl-smi">indicesNms</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> filteredScores[idx]; });</td>
      </tr>
      <tr>
        <td id="L5191" class="blob-num js-line-number" data-line-number="5191"></td>
        <td id="LC5191" class="blob-code blob-code-inner js-file-line">                            finalBoxes <span class="pl-k">=</span> <span class="pl-smi">indicesNms</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> filteredBoxes[idx].<span class="pl-en">calibrate</span>(regions_1[i]); });</td>
      </tr>
      <tr>
        <td id="L5192" class="blob-num js-line-number" data-line-number="5192"></td>
        <td id="LC5192" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L5193" class="blob-num js-line-number" data-line-number="5193"></td>
        <td id="LC5193" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">rnetOuts</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5194" class="blob-num js-line-number" data-line-number="5194"></td>
        <td id="LC5194" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">t</span>.<span class="pl-smi">regions</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5195" class="blob-num js-line-number" data-line-number="5195"></td>
        <td id="LC5195" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">t</span>.<span class="pl-smi">scores</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5196" class="blob-num js-line-number" data-line-number="5196"></td>
        <td id="LC5196" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L5197" class="blob-num js-line-number" data-line-number="5197"></td>
        <td id="LC5197" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, {</td>
      </tr>
      <tr>
        <td id="L5198" class="blob-num js-line-number" data-line-number="5198"></td>
        <td id="LC5198" class="blob-code blob-code-inner js-file-line">                                boxes<span class="pl-k">:</span> finalBoxes,</td>
      </tr>
      <tr>
        <td id="L5199" class="blob-num js-line-number" data-line-number="5199"></td>
        <td id="LC5199" class="blob-code blob-code-inner js-file-line">                                scores<span class="pl-k">:</span> finalScores</td>
      </tr>
      <tr>
        <td id="L5200" class="blob-num js-line-number" data-line-number="5200"></td>
        <td id="LC5200" class="blob-code blob-code-inner js-file-line">                            }];</td>
      </tr>
      <tr>
        <td id="L5201" class="blob-num js-line-number" data-line-number="5201"></td>
        <td id="LC5201" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L5202" class="blob-num js-line-number" data-line-number="5202"></td>
        <td id="LC5202" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5203" class="blob-num js-line-number" data-line-number="5203"></td>
        <td id="LC5203" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5204" class="blob-num js-line-number" data-line-number="5204"></td>
        <td id="LC5204" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5205" class="blob-num js-line-number" data-line-number="5205"></td>
        <td id="LC5205" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5206" class="blob-num js-line-number" data-line-number="5206"></td>
        <td id="LC5206" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">ONet</span>(<span class="pl-smi">x</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L5207" class="blob-num js-line-number" data-line-number="5207"></td>
        <td id="LC5207" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5208" class="blob-num js-line-number" data-line-number="5208"></td>
        <td id="LC5208" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">sharedLayer</span>(x, params);</td>
      </tr>
      <tr>
        <td id="L5209" class="blob-num js-line-number" data-line-number="5209"></td>
        <td id="LC5209" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">maxPool</span>(out, [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], <span class="pl-s"><span class="pl-pds">&#39;</span>same<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5210" class="blob-num js-line-number" data-line-number="5210"></td>
        <td id="LC5210" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">convLayer</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">conv4</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>valid<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5211" class="blob-num js-line-number" data-line-number="5211"></td>
        <td id="LC5211" class="blob-code blob-code-inner js-file-line">            out <span class="pl-k">=</span> <span class="pl-en">prelu$1</span>(out, <span class="pl-smi">params</span>.<span class="pl-smi">prelu4_alpha</span>);</td>
      </tr>
      <tr>
        <td id="L5212" class="blob-num js-line-number" data-line-number="5212"></td>
        <td id="LC5212" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> vectorized <span class="pl-k">=</span> <span class="pl-en">reshape</span>(out, [<span class="pl-smi">out</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>], <span class="pl-smi">params</span>.<span class="pl-smi">fc1</span>.<span class="pl-smi">weights</span>.<span class="pl-c1">shape</span>[<span class="pl-c1">0</span>]]);</td>
      </tr>
      <tr>
        <td id="L5213" class="blob-num js-line-number" data-line-number="5213"></td>
        <td id="LC5213" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc1 <span class="pl-k">=</span> <span class="pl-en">fullyConnectedLayer</span>(vectorized, <span class="pl-smi">params</span>.<span class="pl-smi">fc1</span>);</td>
      </tr>
      <tr>
        <td id="L5214" class="blob-num js-line-number" data-line-number="5214"></td>
        <td id="LC5214" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prelu5 <span class="pl-k">=</span> <span class="pl-en">prelu$1</span>(fc1, <span class="pl-smi">params</span>.<span class="pl-smi">prelu5_alpha</span>);</td>
      </tr>
      <tr>
        <td id="L5215" class="blob-num js-line-number" data-line-number="5215"></td>
        <td id="LC5215" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fc2_1 <span class="pl-k">=</span> <span class="pl-en">fullyConnectedLayer</span>(prelu5, <span class="pl-smi">params</span>.<span class="pl-smi">fc2_1</span>);</td>
      </tr>
      <tr>
        <td id="L5216" class="blob-num js-line-number" data-line-number="5216"></td>
        <td id="LC5216" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> max$1 <span class="pl-k">=</span> <span class="pl-en">expandDims</span>(<span class="pl-en">max</span>(fc2_1, <span class="pl-c1">1</span>), <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L5217" class="blob-num js-line-number" data-line-number="5217"></td>
        <td id="LC5217" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> prob <span class="pl-k">=</span> <span class="pl-en">softmax</span>(<span class="pl-en">sub</span>(fc2_1, max$1), <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L5218" class="blob-num js-line-number" data-line-number="5218"></td>
        <td id="LC5218" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> regions <span class="pl-k">=</span> <span class="pl-en">fullyConnectedLayer</span>(prelu5, <span class="pl-smi">params</span>.<span class="pl-smi">fc2_2</span>);</td>
      </tr>
      <tr>
        <td id="L5219" class="blob-num js-line-number" data-line-number="5219"></td>
        <td id="LC5219" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> points <span class="pl-k">=</span> <span class="pl-en">fullyConnectedLayer</span>(prelu5, <span class="pl-smi">params</span>.<span class="pl-smi">fc2_3</span>);</td>
      </tr>
      <tr>
        <td id="L5220" class="blob-num js-line-number" data-line-number="5220"></td>
        <td id="LC5220" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> scores <span class="pl-k">=</span> <span class="pl-en">unstack</span>(prob, <span class="pl-c1">1</span>)[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L5221" class="blob-num js-line-number" data-line-number="5221"></td>
        <td id="LC5221" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> { scores<span class="pl-k">:</span> scores, regions<span class="pl-k">:</span> regions, points<span class="pl-k">:</span> points };</td>
      </tr>
      <tr>
        <td id="L5222" class="blob-num js-line-number" data-line-number="5222"></td>
        <td id="LC5222" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5223" class="blob-num js-line-number" data-line-number="5223"></td>
        <td id="LC5223" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5224" class="blob-num js-line-number" data-line-number="5224"></td>
        <td id="LC5224" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5225" class="blob-num js-line-number" data-line-number="5225"></td>
        <td id="LC5225" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">stage3</span>(<span class="pl-smi">img</span>, <span class="pl-smi">inputBoxes</span>, <span class="pl-smi">scoreThreshold</span>, <span class="pl-smi">params</span>, <span class="pl-smi">stats</span>) {</td>
      </tr>
      <tr>
        <td id="L5226" class="blob-num js-line-number" data-line-number="5226"></td>
        <td id="LC5226" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5227" class="blob-num js-line-number" data-line-number="5227"></td>
        <td id="LC5227" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> ts, onetInputs, onetOuts, scoresTensor, scores, _a, _b, indices, filteredRegions, filteredBoxes, filteredScores, finalBoxes, finalScores, points, indicesNms;</td>
      </tr>
      <tr>
        <td id="L5228" class="blob-num js-line-number" data-line-number="5228"></td>
        <td id="LC5228" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_c</span>) {</td>
      </tr>
      <tr>
        <td id="L5229" class="blob-num js-line-number" data-line-number="5229"></td>
        <td id="LC5229" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_c</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5230" class="blob-num js-line-number" data-line-number="5230"></td>
        <td id="LC5230" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L5231" class="blob-num js-line-number" data-line-number="5231"></td>
        <td id="LC5231" class="blob-code blob-code-inner js-file-line">                        ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5232" class="blob-num js-line-number" data-line-number="5232"></td>
        <td id="LC5232" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractImagePatches</span>(img, inputBoxes, { width<span class="pl-k">:</span> <span class="pl-c1">48</span>, height<span class="pl-k">:</span> <span class="pl-c1">48</span> })];</td>
      </tr>
      <tr>
        <td id="L5233" class="blob-num js-line-number" data-line-number="5233"></td>
        <td id="LC5233" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5234" class="blob-num js-line-number" data-line-number="5234"></td>
        <td id="LC5234" class="blob-code blob-code-inner js-file-line">                        onetInputs <span class="pl-k">=</span> <span class="pl-smi">_c</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5235" class="blob-num js-line-number" data-line-number="5235"></td>
        <td id="LC5235" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">stats</span>.<span class="pl-smi">stage3_extractImagePatches</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5236" class="blob-num js-line-number" data-line-number="5236"></td>
        <td id="LC5236" class="blob-code blob-code-inner js-file-line">                        ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5237" class="blob-num js-line-number" data-line-number="5237"></td>
        <td id="LC5237" class="blob-code blob-code-inner js-file-line">                        onetOuts <span class="pl-k">=</span> <span class="pl-smi">onetInputs</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">onetInput</span>) {</td>
      </tr>
      <tr>
        <td id="L5238" class="blob-num js-line-number" data-line-number="5238"></td>
        <td id="LC5238" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> out <span class="pl-k">=</span> <span class="pl-en">ONet</span>(onetInput, params);</td>
      </tr>
      <tr>
        <td id="L5239" class="blob-num js-line-number" data-line-number="5239"></td>
        <td id="LC5239" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">onetInput</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5240" class="blob-num js-line-number" data-line-number="5240"></td>
        <td id="LC5240" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L5241" class="blob-num js-line-number" data-line-number="5241"></td>
        <td id="LC5241" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L5242" class="blob-num js-line-number" data-line-number="5242"></td>
        <td id="LC5242" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">stats</span>.<span class="pl-smi">stage3_onet</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5243" class="blob-num js-line-number" data-line-number="5243"></td>
        <td id="LC5243" class="blob-code blob-code-inner js-file-line">                        scoresTensor <span class="pl-k">=</span> <span class="pl-smi">onetOuts</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L5244" class="blob-num js-line-number" data-line-number="5244"></td>
        <td id="LC5244" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">?</span> <span class="pl-en">concat</span>(<span class="pl-smi">onetOuts</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">out</span>) { <span class="pl-k">return</span> <span class="pl-smi">out</span>.<span class="pl-smi">scores</span>; }))</td>
      </tr>
      <tr>
        <td id="L5245" class="blob-num js-line-number" data-line-number="5245"></td>
        <td id="LC5245" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">:</span> onetOuts[<span class="pl-c1">0</span>].<span class="pl-smi">scores</span>;</td>
      </tr>
      <tr>
        <td id="L5246" class="blob-num js-line-number" data-line-number="5246"></td>
        <td id="LC5246" class="blob-code blob-code-inner js-file-line">                        _b <span class="pl-k">=</span> (_a <span class="pl-k">=</span> <span class="pl-c1">Array</span>).<span class="pl-smi">from</span>;</td>
      </tr>
      <tr>
        <td id="L5247" class="blob-num js-line-number" data-line-number="5247"></td>
        <td id="LC5247" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">scoresTensor</span>.<span class="pl-c1">data</span>()];</td>
      </tr>
      <tr>
        <td id="L5248" class="blob-num js-line-number" data-line-number="5248"></td>
        <td id="LC5248" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L5249" class="blob-num js-line-number" data-line-number="5249"></td>
        <td id="LC5249" class="blob-code blob-code-inner js-file-line">                        scores <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-c1">apply</span>(_a, [<span class="pl-smi">_c</span>.<span class="pl-en">sent</span>()]);</td>
      </tr>
      <tr>
        <td id="L5250" class="blob-num js-line-number" data-line-number="5250"></td>
        <td id="LC5250" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">scoresTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5251" class="blob-num js-line-number" data-line-number="5251"></td>
        <td id="LC5251" class="blob-code blob-code-inner js-file-line">                        indices <span class="pl-k">=</span> scores</td>
      </tr>
      <tr>
        <td id="L5252" class="blob-num js-line-number" data-line-number="5252"></td>
        <td id="LC5252" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">score</span>, <span class="pl-smi">idx</span>) { <span class="pl-k">return</span> ({ score<span class="pl-k">:</span> score, idx<span class="pl-k">:</span> idx }); })</td>
      </tr>
      <tr>
        <td id="L5253" class="blob-num js-line-number" data-line-number="5253"></td>
        <td id="LC5253" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">c</span>) { <span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">score</span> <span class="pl-k">&gt;</span> scoreThreshold; })</td>
      </tr>
      <tr>
        <td id="L5254" class="blob-num js-line-number" data-line-number="5254"></td>
        <td id="LC5254" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5255" class="blob-num js-line-number" data-line-number="5255"></td>
        <td id="LC5255" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> idx <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">idx</span>;</td>
      </tr>
      <tr>
        <td id="L5256" class="blob-num js-line-number" data-line-number="5256"></td>
        <td id="LC5256" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> idx;</td>
      </tr>
      <tr>
        <td id="L5257" class="blob-num js-line-number" data-line-number="5257"></td>
        <td id="LC5257" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L5258" class="blob-num js-line-number" data-line-number="5258"></td>
        <td id="LC5258" class="blob-code blob-code-inner js-file-line">                        filteredRegions <span class="pl-k">=</span> <span class="pl-smi">indices</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) {</td>
      </tr>
      <tr>
        <td id="L5259" class="blob-num js-line-number" data-line-number="5259"></td>
        <td id="LC5259" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> regionsData <span class="pl-k">=</span> onetOuts[idx].<span class="pl-smi">regions</span>.<span class="pl-en">arraySync</span>();</td>
      </tr>
      <tr>
        <td id="L5260" class="blob-num js-line-number" data-line-number="5260"></td>
        <td id="LC5260" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">MtcnnBox</span>(regionsData[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], regionsData[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], regionsData[<span class="pl-c1">0</span>][<span class="pl-c1">2</span>], regionsData[<span class="pl-c1">0</span>][<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L5261" class="blob-num js-line-number" data-line-number="5261"></td>
        <td id="LC5261" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L5262" class="blob-num js-line-number" data-line-number="5262"></td>
        <td id="LC5262" class="blob-code blob-code-inner js-file-line">                        filteredBoxes <span class="pl-k">=</span> indices</td>
      </tr>
      <tr>
        <td id="L5263" class="blob-num js-line-number" data-line-number="5263"></td>
        <td id="LC5263" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> inputBoxes[idx].<span class="pl-en">calibrate</span>(filteredRegions[i]); });</td>
      </tr>
      <tr>
        <td id="L5264" class="blob-num js-line-number" data-line-number="5264"></td>
        <td id="LC5264" class="blob-code blob-code-inner js-file-line">                        filteredScores <span class="pl-k">=</span> <span class="pl-smi">indices</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> scores[idx]; });</td>
      </tr>
      <tr>
        <td id="L5265" class="blob-num js-line-number" data-line-number="5265"></td>
        <td id="LC5265" class="blob-code blob-code-inner js-file-line">                        finalBoxes <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5266" class="blob-num js-line-number" data-line-number="5266"></td>
        <td id="LC5266" class="blob-code blob-code-inner js-file-line">                        finalScores <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5267" class="blob-num js-line-number" data-line-number="5267"></td>
        <td id="LC5267" class="blob-code blob-code-inner js-file-line">                        points <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5268" class="blob-num js-line-number" data-line-number="5268"></td>
        <td id="LC5268" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-smi">filteredBoxes</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L5269" class="blob-num js-line-number" data-line-number="5269"></td>
        <td id="LC5269" class="blob-code blob-code-inner js-file-line">                            ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5270" class="blob-num js-line-number" data-line-number="5270"></td>
        <td id="LC5270" class="blob-code blob-code-inner js-file-line">                            indicesNms <span class="pl-k">=</span> <span class="pl-en">nonMaxSuppression$1</span>(filteredBoxes, filteredScores, <span class="pl-c1">0.7</span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L5271" class="blob-num js-line-number" data-line-number="5271"></td>
        <td id="LC5271" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">stats</span>.<span class="pl-smi">stage3_nms</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5272" class="blob-num js-line-number" data-line-number="5272"></td>
        <td id="LC5272" class="blob-code blob-code-inner js-file-line">                            finalBoxes <span class="pl-k">=</span> <span class="pl-smi">indicesNms</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> filteredBoxes[idx]; });</td>
      </tr>
      <tr>
        <td id="L5273" class="blob-num js-line-number" data-line-number="5273"></td>
        <td id="LC5273" class="blob-code blob-code-inner js-file-line">                            finalScores <span class="pl-k">=</span> <span class="pl-smi">indicesNms</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>) { <span class="pl-k">return</span> filteredScores[idx]; });</td>
      </tr>
      <tr>
        <td id="L5274" class="blob-num js-line-number" data-line-number="5274"></td>
        <td id="LC5274" class="blob-code blob-code-inner js-file-line">                            points <span class="pl-k">=</span> <span class="pl-smi">indicesNms</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">idx</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L5275" class="blob-num js-line-number" data-line-number="5275"></td>
        <td id="LC5275" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> <span class="pl-c1">Array</span>(<span class="pl-c1">5</span>).<span class="pl-en">fill</span>(<span class="pl-c1">0</span>).<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_</span>, <span class="pl-smi">ptIdx</span>) {</td>
      </tr>
      <tr>
        <td id="L5276" class="blob-num js-line-number" data-line-number="5276"></td>
        <td id="LC5276" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">var</span> pointsData <span class="pl-k">=</span> onetOuts[idx].<span class="pl-smi">points</span>.<span class="pl-en">arraySync</span>();</td>
      </tr>
      <tr>
        <td id="L5277" class="blob-num js-line-number" data-line-number="5277"></td>
        <td id="LC5277" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Point</span>(((pointsData[<span class="pl-c1">0</span>][ptIdx] <span class="pl-k">*</span> (finalBoxes[i].<span class="pl-c1">width</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>)) <span class="pl-k">+</span> finalBoxes[i].<span class="pl-c1">left</span>), ((pointsData[<span class="pl-c1">0</span>][ptIdx <span class="pl-k">+</span> <span class="pl-c1">5</span>] <span class="pl-k">*</span> (finalBoxes[i].<span class="pl-c1">height</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>)) <span class="pl-k">+</span> finalBoxes[i].<span class="pl-c1">top</span>));</td>
      </tr>
      <tr>
        <td id="L5278" class="blob-num js-line-number" data-line-number="5278"></td>
        <td id="LC5278" class="blob-code blob-code-inner js-file-line">                                });</td>
      </tr>
      <tr>
        <td id="L5279" class="blob-num js-line-number" data-line-number="5279"></td>
        <td id="LC5279" class="blob-code blob-code-inner js-file-line">                            });</td>
      </tr>
      <tr>
        <td id="L5280" class="blob-num js-line-number" data-line-number="5280"></td>
        <td id="LC5280" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L5281" class="blob-num js-line-number" data-line-number="5281"></td>
        <td id="LC5281" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">onetOuts</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5282" class="blob-num js-line-number" data-line-number="5282"></td>
        <td id="LC5282" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">t</span>.<span class="pl-smi">regions</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5283" class="blob-num js-line-number" data-line-number="5283"></td>
        <td id="LC5283" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">t</span>.<span class="pl-smi">scores</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5284" class="blob-num js-line-number" data-line-number="5284"></td>
        <td id="LC5284" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">t</span>.<span class="pl-smi">points</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5285" class="blob-num js-line-number" data-line-number="5285"></td>
        <td id="LC5285" class="blob-code blob-code-inner js-file-line">                        });</td>
      </tr>
      <tr>
        <td id="L5286" class="blob-num js-line-number" data-line-number="5286"></td>
        <td id="LC5286" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, {</td>
      </tr>
      <tr>
        <td id="L5287" class="blob-num js-line-number" data-line-number="5287"></td>
        <td id="LC5287" class="blob-code blob-code-inner js-file-line">                                boxes<span class="pl-k">:</span> finalBoxes,</td>
      </tr>
      <tr>
        <td id="L5288" class="blob-num js-line-number" data-line-number="5288"></td>
        <td id="LC5288" class="blob-code blob-code-inner js-file-line">                                scores<span class="pl-k">:</span> finalScores,</td>
      </tr>
      <tr>
        <td id="L5289" class="blob-num js-line-number" data-line-number="5289"></td>
        <td id="LC5289" class="blob-code blob-code-inner js-file-line">                                points<span class="pl-k">:</span> points</td>
      </tr>
      <tr>
        <td id="L5290" class="blob-num js-line-number" data-line-number="5290"></td>
        <td id="LC5290" class="blob-code blob-code-inner js-file-line">                            }];</td>
      </tr>
      <tr>
        <td id="L5291" class="blob-num js-line-number" data-line-number="5291"></td>
        <td id="LC5291" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L5292" class="blob-num js-line-number" data-line-number="5292"></td>
        <td id="LC5292" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5293" class="blob-num js-line-number" data-line-number="5293"></td>
        <td id="LC5293" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5294" class="blob-num js-line-number" data-line-number="5294"></td>
        <td id="LC5294" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5295" class="blob-num js-line-number" data-line-number="5295"></td>
        <td id="LC5295" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5296" class="blob-num js-line-number" data-line-number="5296"></td>
        <td id="LC5296" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Mtcnn <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5297" class="blob-num js-line-number" data-line-number="5297"></td>
        <td id="LC5297" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(Mtcnn, _super);</td>
      </tr>
      <tr>
        <td id="L5298" class="blob-num js-line-number" data-line-number="5298"></td>
        <td id="LC5298" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">Mtcnn</span>() {</td>
      </tr>
      <tr>
        <td id="L5299" class="blob-num js-line-number" data-line-number="5299"></td>
        <td id="LC5299" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>Mtcnn<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5300" class="blob-num js-line-number" data-line-number="5300"></td>
        <td id="LC5300" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5301" class="blob-num js-line-number" data-line-number="5301"></td>
        <td id="LC5301" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Mtcnn</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardInput</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">forwardParams</span>) {</td>
      </tr>
      <tr>
        <td id="L5302" class="blob-num js-line-number" data-line-number="5302"></td>
        <td id="LC5302" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (forwardParams <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { forwardParams <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L5303" class="blob-num js-line-number" data-line-number="5303"></td>
        <td id="LC5303" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5304" class="blob-num js-line-number" data-line-number="5304"></td>
        <td id="LC5304" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> params, inputCanvas, stats, tsTotal, imgTensor, onReturn, _a, height, width, _b, minFaceSize, scaleFactor, maxNumScales, scoreThresholds, scaleSteps, scales, ts, out1, out2, out3, results;</td>
      </tr>
      <tr>
        <td id="L5305" class="blob-num js-line-number" data-line-number="5305"></td>
        <td id="LC5305" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_c</span>) {</td>
      </tr>
      <tr>
        <td id="L5306" class="blob-num js-line-number" data-line-number="5306"></td>
        <td id="LC5306" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_c</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5307" class="blob-num js-line-number" data-line-number="5307"></td>
        <td id="LC5307" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L5308" class="blob-num js-line-number" data-line-number="5308"></td>
        <td id="LC5308" class="blob-code blob-code-inner js-file-line">                            params <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">params</span>;</td>
      </tr>
      <tr>
        <td id="L5309" class="blob-num js-line-number" data-line-number="5309"></td>
        <td id="LC5309" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>params) {</td>
      </tr>
      <tr>
        <td id="L5310" class="blob-num js-line-number" data-line-number="5310"></td>
        <td id="LC5310" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Mtcnn - load model before inference<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5311" class="blob-num js-line-number" data-line-number="5311"></td>
        <td id="LC5311" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L5312" class="blob-num js-line-number" data-line-number="5312"></td>
        <td id="LC5312" class="blob-code blob-code-inner js-file-line">                            inputCanvas <span class="pl-k">=</span> <span class="pl-smi">input</span>.<span class="pl-smi">canvases</span>[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L5313" class="blob-num js-line-number" data-line-number="5313"></td>
        <td id="LC5313" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>inputCanvas) {</td>
      </tr>
      <tr>
        <td id="L5314" class="blob-num js-line-number" data-line-number="5314"></td>
        <td id="LC5314" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Mtcnn - inputCanvas is not defined, note that passing tensors into Mtcnn.forwardInput is not supported yet.<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5315" class="blob-num js-line-number" data-line-number="5315"></td>
        <td id="LC5315" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L5316" class="blob-num js-line-number" data-line-number="5316"></td>
        <td id="LC5316" class="blob-code blob-code-inner js-file-line">                            stats <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L5317" class="blob-num js-line-number" data-line-number="5317"></td>
        <td id="LC5317" class="blob-code blob-code-inner js-file-line">                            tsTotal <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5318" class="blob-num js-line-number" data-line-number="5318"></td>
        <td id="LC5318" class="blob-code blob-code-inner js-file-line">                            imgTensor <span class="pl-k">=</span> <span class="pl-en">tidy</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5319" class="blob-num js-line-number" data-line-number="5319"></td>
        <td id="LC5319" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> <span class="pl-en">bgrToRgbTensor</span>(<span class="pl-en">expandDims</span>(<span class="pl-smi">browser</span>.<span class="pl-en">fromPixels</span>(inputCanvas)).<span class="pl-en">toFloat</span>());</td>
      </tr>
      <tr>
        <td id="L5320" class="blob-num js-line-number" data-line-number="5320"></td>
        <td id="LC5320" class="blob-code blob-code-inner js-file-line">                            });</td>
      </tr>
      <tr>
        <td id="L5321" class="blob-num js-line-number" data-line-number="5321"></td>
        <td id="LC5321" class="blob-code blob-code-inner js-file-line">                            <span class="pl-en">onReturn</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">results</span>) {</td>
      </tr>
      <tr>
        <td id="L5322" class="blob-num js-line-number" data-line-number="5322"></td>
        <td id="LC5322" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> dispose tensors on return</span></td>
      </tr>
      <tr>
        <td id="L5323" class="blob-num js-line-number" data-line-number="5323"></td>
        <td id="LC5323" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">imgTensor</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L5324" class="blob-num js-line-number" data-line-number="5324"></td>
        <td id="LC5324" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">stats</span>.<span class="pl-smi">total</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> tsTotal;</td>
      </tr>
      <tr>
        <td id="L5325" class="blob-num js-line-number" data-line-number="5325"></td>
        <td id="LC5325" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> results;</td>
      </tr>
      <tr>
        <td id="L5326" class="blob-num js-line-number" data-line-number="5326"></td>
        <td id="LC5326" class="blob-code blob-code-inner js-file-line">                            };</td>
      </tr>
      <tr>
        <td id="L5327" class="blob-num js-line-number" data-line-number="5327"></td>
        <td id="LC5327" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-smi">imgTensor</span>.<span class="pl-c1">shape</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>), height <span class="pl-k">=</span> _a[<span class="pl-c1">0</span>], width <span class="pl-k">=</span> _a[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L5328" class="blob-num js-line-number" data-line-number="5328"></td>
        <td id="LC5328" class="blob-code blob-code-inner js-file-line">                            _b <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">MtcnnOptions</span>(forwardParams), minFaceSize <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">minFaceSize</span>, scaleFactor <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">scaleFactor</span>, maxNumScales <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">maxNumScales</span>, scoreThresholds <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">scoreThresholds</span>, scaleSteps <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-smi">scaleSteps</span>;</td>
      </tr>
      <tr>
        <td id="L5329" class="blob-num js-line-number" data-line-number="5329"></td>
        <td id="LC5329" class="blob-code blob-code-inner js-file-line">                            scales <span class="pl-k">=</span> (scaleSteps <span class="pl-k">||</span> <span class="pl-en">pyramidDown</span>(minFaceSize, scaleFactor, [height, width]))</td>
      </tr>
      <tr>
        <td id="L5330" class="blob-num js-line-number" data-line-number="5330"></td>
        <td id="LC5330" class="blob-code blob-code-inner js-file-line">                                .<span class="pl-en">filter</span>(<span class="pl-k">function</span> (<span class="pl-smi">scale</span>) {</td>
      </tr>
      <tr>
        <td id="L5331" class="blob-num js-line-number" data-line-number="5331"></td>
        <td id="LC5331" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> sizes <span class="pl-k">=</span> <span class="pl-en">getSizesForScale</span>(scale, [height, width]);</td>
      </tr>
      <tr>
        <td id="L5332" class="blob-num js-line-number" data-line-number="5332"></td>
        <td id="LC5332" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">sizes</span>.<span class="pl-c1">width</span>, <span class="pl-smi">sizes</span>.<span class="pl-c1">height</span>) <span class="pl-k">&gt;</span> <span class="pl-c1">CELL_SIZE</span>;</td>
      </tr>
      <tr>
        <td id="L5333" class="blob-num js-line-number" data-line-number="5333"></td>
        <td id="LC5333" class="blob-code blob-code-inner js-file-line">                            })</td>
      </tr>
      <tr>
        <td id="L5334" class="blob-num js-line-number" data-line-number="5334"></td>
        <td id="LC5334" class="blob-code blob-code-inner js-file-line">                                .<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, maxNumScales);</td>
      </tr>
      <tr>
        <td id="L5335" class="blob-num js-line-number" data-line-number="5335"></td>
        <td id="LC5335" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">stats</span>.<span class="pl-smi">scales</span> <span class="pl-k">=</span> scales;</td>
      </tr>
      <tr>
        <td id="L5336" class="blob-num js-line-number" data-line-number="5336"></td>
        <td id="LC5336" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">stats</span>.<span class="pl-smi">pyramid</span> <span class="pl-k">=</span> <span class="pl-smi">scales</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">scale</span>) { <span class="pl-k">return</span> <span class="pl-en">getSizesForScale</span>(scale, [height, width]); });</td>
      </tr>
      <tr>
        <td id="L5337" class="blob-num js-line-number" data-line-number="5337"></td>
        <td id="LC5337" class="blob-code blob-code-inner js-file-line">                            ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5338" class="blob-num js-line-number" data-line-number="5338"></td>
        <td id="LC5338" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">stage1</span>(imgTensor, scales, scoreThresholds[<span class="pl-c1">0</span>], <span class="pl-smi">params</span>.<span class="pl-smi">pnet</span>, stats)];</td>
      </tr>
      <tr>
        <td id="L5339" class="blob-num js-line-number" data-line-number="5339"></td>
        <td id="LC5339" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5340" class="blob-num js-line-number" data-line-number="5340"></td>
        <td id="LC5340" class="blob-code blob-code-inner js-file-line">                            out1 <span class="pl-k">=</span> <span class="pl-smi">_c</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5341" class="blob-num js-line-number" data-line-number="5341"></td>
        <td id="LC5341" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">stats</span>.<span class="pl-smi">total_stage1</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5342" class="blob-num js-line-number" data-line-number="5342"></td>
        <td id="LC5342" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">out1</span>.<span class="pl-smi">boxes</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5343" class="blob-num js-line-number" data-line-number="5343"></td>
        <td id="LC5343" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">onReturn</span>({ results<span class="pl-k">:</span> [], stats<span class="pl-k">:</span> stats })];</td>
      </tr>
      <tr>
        <td id="L5344" class="blob-num js-line-number" data-line-number="5344"></td>
        <td id="LC5344" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L5345" class="blob-num js-line-number" data-line-number="5345"></td>
        <td id="LC5345" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">stats</span>.<span class="pl-smi">stage2_numInputBoxes</span> <span class="pl-k">=</span> <span class="pl-smi">out1</span>.<span class="pl-smi">boxes</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L5346" class="blob-num js-line-number" data-line-number="5346"></td>
        <td id="LC5346" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">//</span> using the inputCanvas to extract and resize the image patches, since it is faster</span></td>
      </tr>
      <tr>
        <td id="L5347" class="blob-num js-line-number" data-line-number="5347"></td>
        <td id="LC5347" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">//</span> than doing this on the gpu</span></td>
      </tr>
      <tr>
        <td id="L5348" class="blob-num js-line-number" data-line-number="5348"></td>
        <td id="LC5348" class="blob-code blob-code-inner js-file-line">                            ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5349" class="blob-num js-line-number" data-line-number="5349"></td>
        <td id="LC5349" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">stage2</span>(inputCanvas, <span class="pl-smi">out1</span>.<span class="pl-smi">boxes</span>, scoreThresholds[<span class="pl-c1">1</span>], <span class="pl-smi">params</span>.<span class="pl-smi">rnet</span>, stats)];</td>
      </tr>
      <tr>
        <td id="L5350" class="blob-num js-line-number" data-line-number="5350"></td>
        <td id="LC5350" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L5351" class="blob-num js-line-number" data-line-number="5351"></td>
        <td id="LC5351" class="blob-code blob-code-inner js-file-line">                            out2 <span class="pl-k">=</span> <span class="pl-smi">_c</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5352" class="blob-num js-line-number" data-line-number="5352"></td>
        <td id="LC5352" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">stats</span>.<span class="pl-smi">total_stage2</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5353" class="blob-num js-line-number" data-line-number="5353"></td>
        <td id="LC5353" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">out2</span>.<span class="pl-smi">boxes</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5354" class="blob-num js-line-number" data-line-number="5354"></td>
        <td id="LC5354" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">onReturn</span>({ results<span class="pl-k">:</span> [], stats<span class="pl-k">:</span> stats })];</td>
      </tr>
      <tr>
        <td id="L5355" class="blob-num js-line-number" data-line-number="5355"></td>
        <td id="LC5355" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L5356" class="blob-num js-line-number" data-line-number="5356"></td>
        <td id="LC5356" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">stats</span>.<span class="pl-smi">stage3_numInputBoxes</span> <span class="pl-k">=</span> <span class="pl-smi">out2</span>.<span class="pl-smi">boxes</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L5357" class="blob-num js-line-number" data-line-number="5357"></td>
        <td id="LC5357" class="blob-code blob-code-inner js-file-line">                            ts <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>();</td>
      </tr>
      <tr>
        <td id="L5358" class="blob-num js-line-number" data-line-number="5358"></td>
        <td id="LC5358" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">stage3</span>(inputCanvas, <span class="pl-smi">out2</span>.<span class="pl-smi">boxes</span>, scoreThresholds[<span class="pl-c1">2</span>], <span class="pl-smi">params</span>.<span class="pl-smi">onet</span>, stats)];</td>
      </tr>
      <tr>
        <td id="L5359" class="blob-num js-line-number" data-line-number="5359"></td>
        <td id="LC5359" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">3</span>:</td>
      </tr>
      <tr>
        <td id="L5360" class="blob-num js-line-number" data-line-number="5360"></td>
        <td id="LC5360" class="blob-code blob-code-inner js-file-line">                            out3 <span class="pl-k">=</span> <span class="pl-smi">_c</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5361" class="blob-num js-line-number" data-line-number="5361"></td>
        <td id="LC5361" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">stats</span>.<span class="pl-smi">total_stage3</span> <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> ts;</td>
      </tr>
      <tr>
        <td id="L5362" class="blob-num js-line-number" data-line-number="5362"></td>
        <td id="LC5362" class="blob-code blob-code-inner js-file-line">                            results <span class="pl-k">=</span> <span class="pl-smi">out3</span>.<span class="pl-smi">boxes</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">box</span>, <span class="pl-smi">idx</span>) { <span class="pl-k">return</span> <span class="pl-en">extendWithFaceLandmarks</span>(<span class="pl-en">extendWithFaceDetection</span>({}, <span class="pl-k">new</span> <span class="pl-en">FaceDetection</span>(<span class="pl-smi">out3</span>.<span class="pl-smi">scores</span>[idx], <span class="pl-k">new</span> <span class="pl-en">Rect</span>(<span class="pl-smi">box</span>.<span class="pl-c1">left</span> <span class="pl-k">/</span> width, <span class="pl-smi">box</span>.<span class="pl-c1">top</span> <span class="pl-k">/</span> height, <span class="pl-smi">box</span>.<span class="pl-c1">width</span> <span class="pl-k">/</span> width, <span class="pl-smi">box</span>.<span class="pl-c1">height</span> <span class="pl-k">/</span> height), {</td>
      </tr>
      <tr>
        <td id="L5363" class="blob-num js-line-number" data-line-number="5363"></td>
        <td id="LC5363" class="blob-code blob-code-inner js-file-line">                                height<span class="pl-k">:</span> height,</td>
      </tr>
      <tr>
        <td id="L5364" class="blob-num js-line-number" data-line-number="5364"></td>
        <td id="LC5364" class="blob-code blob-code-inner js-file-line">                                width<span class="pl-k">:</span> width</td>
      </tr>
      <tr>
        <td id="L5365" class="blob-num js-line-number" data-line-number="5365"></td>
        <td id="LC5365" class="blob-code blob-code-inner js-file-line">                            })), <span class="pl-k">new</span> <span class="pl-en">FaceLandmarks5</span>(<span class="pl-smi">out3</span>.<span class="pl-smi">points</span>[idx].<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">pt</span>) { <span class="pl-k">return</span> <span class="pl-smi">pt</span>.<span class="pl-c1">sub</span>(<span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-smi">box</span>.<span class="pl-c1">left</span>, <span class="pl-smi">box</span>.<span class="pl-c1">top</span>)).<span class="pl-en">div</span>(<span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-smi">box</span>.<span class="pl-c1">width</span>, <span class="pl-smi">box</span>.<span class="pl-c1">height</span>)); }), { width<span class="pl-k">:</span> <span class="pl-smi">box</span>.<span class="pl-c1">width</span>, height<span class="pl-k">:</span> <span class="pl-smi">box</span>.<span class="pl-c1">height</span> })); });</td>
      </tr>
      <tr>
        <td id="L5366" class="blob-num js-line-number" data-line-number="5366"></td>
        <td id="LC5366" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">onReturn</span>({ results<span class="pl-k">:</span> results, stats<span class="pl-k">:</span> stats })];</td>
      </tr>
      <tr>
        <td id="L5367" class="blob-num js-line-number" data-line-number="5367"></td>
        <td id="LC5367" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5368" class="blob-num js-line-number" data-line-number="5368"></td>
        <td id="LC5368" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5369" class="blob-num js-line-number" data-line-number="5369"></td>
        <td id="LC5369" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5370" class="blob-num js-line-number" data-line-number="5370"></td>
        <td id="LC5370" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5371" class="blob-num js-line-number" data-line-number="5371"></td>
        <td id="LC5371" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Mtcnn</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forward</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">forwardParams</span>) {</td>
      </tr>
      <tr>
        <td id="L5372" class="blob-num js-line-number" data-line-number="5372"></td>
        <td id="LC5372" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (forwardParams <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { forwardParams <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L5373" class="blob-num js-line-number" data-line-number="5373"></td>
        <td id="LC5373" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5374" class="blob-num js-line-number" data-line-number="5374"></td>
        <td id="LC5374" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L5375" class="blob-num js-line-number" data-line-number="5375"></td>
        <td id="LC5375" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L5376" class="blob-num js-line-number" data-line-number="5376"></td>
        <td id="LC5376" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5377" class="blob-num js-line-number" data-line-number="5377"></td>
        <td id="LC5377" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L5378" class="blob-num js-line-number" data-line-number="5378"></td>
        <td id="LC5378" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L5379" class="blob-num js-line-number" data-line-number="5379"></td>
        <td id="LC5379" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L5380" class="blob-num js-line-number" data-line-number="5380"></td>
        <td id="LC5380" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>(),</td>
      </tr>
      <tr>
        <td id="L5381" class="blob-num js-line-number" data-line-number="5381"></td>
        <td id="LC5381" class="blob-code blob-code-inner js-file-line">                                forwardParams])];</td>
      </tr>
      <tr>
        <td id="L5382" class="blob-num js-line-number" data-line-number="5382"></td>
        <td id="LC5382" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, (<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>()).<span class="pl-smi">results</span>];</td>
      </tr>
      <tr>
        <td id="L5383" class="blob-num js-line-number" data-line-number="5383"></td>
        <td id="LC5383" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5384" class="blob-num js-line-number" data-line-number="5384"></td>
        <td id="LC5384" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5385" class="blob-num js-line-number" data-line-number="5385"></td>
        <td id="LC5385" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5386" class="blob-num js-line-number" data-line-number="5386"></td>
        <td id="LC5386" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5387" class="blob-num js-line-number" data-line-number="5387"></td>
        <td id="LC5387" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Mtcnn</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">forwardWithStats</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">forwardParams</span>) {</td>
      </tr>
      <tr>
        <td id="L5388" class="blob-num js-line-number" data-line-number="5388"></td>
        <td id="LC5388" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (forwardParams <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { forwardParams <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L5389" class="blob-num js-line-number" data-line-number="5389"></td>
        <td id="LC5389" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5390" class="blob-num js-line-number" data-line-number="5390"></td>
        <td id="LC5390" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L5391" class="blob-num js-line-number" data-line-number="5391"></td>
        <td id="LC5391" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L5392" class="blob-num js-line-number" data-line-number="5392"></td>
        <td id="LC5392" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5393" class="blob-num js-line-number" data-line-number="5393"></td>
        <td id="LC5393" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L5394" class="blob-num js-line-number" data-line-number="5394"></td>
        <td id="LC5394" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">forwardInput</span>;</td>
      </tr>
      <tr>
        <td id="L5395" class="blob-num js-line-number" data-line-number="5395"></td>
        <td id="LC5395" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">toNetInput</span>(input)];</td>
      </tr>
      <tr>
        <td id="L5396" class="blob-num js-line-number" data-line-number="5396"></td>
        <td id="LC5396" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, [<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>(),</td>
      </tr>
      <tr>
        <td id="L5397" class="blob-num js-line-number" data-line-number="5397"></td>
        <td id="LC5397" class="blob-code blob-code-inner js-file-line">                                forwardParams])];</td>
      </tr>
      <tr>
        <td id="L5398" class="blob-num js-line-number" data-line-number="5398"></td>
        <td id="LC5398" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5399" class="blob-num js-line-number" data-line-number="5399"></td>
        <td id="LC5399" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5400" class="blob-num js-line-number" data-line-number="5400"></td>
        <td id="LC5400" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5401" class="blob-num js-line-number" data-line-number="5401"></td>
        <td id="LC5401" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5402" class="blob-num js-line-number" data-line-number="5402"></td>
        <td id="LC5402" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Mtcnn</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5403" class="blob-num js-line-number" data-line-number="5403"></td>
        <td id="LC5403" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mtcnn_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5404" class="blob-num js-line-number" data-line-number="5404"></td>
        <td id="LC5404" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5405" class="blob-num js-line-number" data-line-number="5405"></td>
        <td id="LC5405" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Mtcnn</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L5406" class="blob-num js-line-number" data-line-number="5406"></td>
        <td id="LC5406" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParamsFromWeigthMap$7</span>(weightMap);</td>
      </tr>
      <tr>
        <td id="L5407" class="blob-num js-line-number" data-line-number="5407"></td>
        <td id="LC5407" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5408" class="blob-num js-line-number" data-line-number="5408"></td>
        <td id="LC5408" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Mtcnn</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParams</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L5409" class="blob-num js-line-number" data-line-number="5409"></td>
        <td id="LC5409" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extractParams$7</span>(weights);</td>
      </tr>
      <tr>
        <td id="L5410" class="blob-num js-line-number" data-line-number="5410"></td>
        <td id="LC5410" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5411" class="blob-num js-line-number" data-line-number="5411"></td>
        <td id="LC5411" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> Mtcnn;</td>
      </tr>
      <tr>
        <td id="L5412" class="blob-num js-line-number" data-line-number="5412"></td>
        <td id="LC5412" class="blob-code blob-code-inner js-file-line">    }(NeuralNetwork));</td>
      </tr>
      <tr>
        <td id="L5413" class="blob-num js-line-number" data-line-number="5413"></td>
        <td id="LC5413" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5414" class="blob-num js-line-number" data-line-number="5414"></td>
        <td id="LC5414" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">IOU_THRESHOLD</span> <span class="pl-k">=</span> <span class="pl-c1">0.4</span>;</td>
      </tr>
      <tr>
        <td id="L5415" class="blob-num js-line-number" data-line-number="5415"></td>
        <td id="LC5415" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">BOX_ANCHORS</span> <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L5416" class="blob-num js-line-number" data-line-number="5416"></td>
        <td id="LC5416" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">1.603231</span>, <span class="pl-c1">2.094468</span>),</td>
      </tr>
      <tr>
        <td id="L5417" class="blob-num js-line-number" data-line-number="5417"></td>
        <td id="LC5417" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">6.041143</span>, <span class="pl-c1">7.080126</span>),</td>
      </tr>
      <tr>
        <td id="L5418" class="blob-num js-line-number" data-line-number="5418"></td>
        <td id="LC5418" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">2.882459</span>, <span class="pl-c1">3.518061</span>),</td>
      </tr>
      <tr>
        <td id="L5419" class="blob-num js-line-number" data-line-number="5419"></td>
        <td id="LC5419" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">4.266906</span>, <span class="pl-c1">5.178857</span>),</td>
      </tr>
      <tr>
        <td id="L5420" class="blob-num js-line-number" data-line-number="5420"></td>
        <td id="LC5420" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">9.041765</span>, <span class="pl-c1">10.66308</span>)</td>
      </tr>
      <tr>
        <td id="L5421" class="blob-num js-line-number" data-line-number="5421"></td>
        <td id="LC5421" class="blob-code blob-code-inner js-file-line">    ];</td>
      </tr>
      <tr>
        <td id="L5422" class="blob-num js-line-number" data-line-number="5422"></td>
        <td id="LC5422" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">MEAN_RGB</span> <span class="pl-k">=</span> [<span class="pl-c1">117.001</span>, <span class="pl-c1">114.697</span>, <span class="pl-c1">97.404</span>];</td>
      </tr>
      <tr>
        <td id="L5423" class="blob-num js-line-number" data-line-number="5423"></td>
        <td id="LC5423" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5424" class="blob-num js-line-number" data-line-number="5424"></td>
        <td id="LC5424" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> TinyFaceDetector <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5425" class="blob-num js-line-number" data-line-number="5425"></td>
        <td id="LC5425" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(TinyFaceDetector, _super);</td>
      </tr>
      <tr>
        <td id="L5426" class="blob-num js-line-number" data-line-number="5426"></td>
        <td id="LC5426" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">TinyFaceDetector</span>() {</td>
      </tr>
      <tr>
        <td id="L5427" class="blob-num js-line-number" data-line-number="5427"></td>
        <td id="LC5427" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5428" class="blob-num js-line-number" data-line-number="5428"></td>
        <td id="LC5428" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> config <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5429" class="blob-num js-line-number" data-line-number="5429"></td>
        <td id="LC5429" class="blob-code blob-code-inner js-file-line">                withSeparableConvs<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L5430" class="blob-num js-line-number" data-line-number="5430"></td>
        <td id="LC5430" class="blob-code blob-code-inner js-file-line">                iouThreshold<span class="pl-k">:</span> <span class="pl-c1">IOU_THRESHOLD</span>,</td>
      </tr>
      <tr>
        <td id="L5431" class="blob-num js-line-number" data-line-number="5431"></td>
        <td id="LC5431" class="blob-code blob-code-inner js-file-line">                classes<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>face<span class="pl-pds">&#39;</span></span>],</td>
      </tr>
      <tr>
        <td id="L5432" class="blob-num js-line-number" data-line-number="5432"></td>
        <td id="LC5432" class="blob-code blob-code-inner js-file-line">                anchors<span class="pl-k">:</span> <span class="pl-c1">BOX_ANCHORS</span>,</td>
      </tr>
      <tr>
        <td id="L5433" class="blob-num js-line-number" data-line-number="5433"></td>
        <td id="LC5433" class="blob-code blob-code-inner js-file-line">                meanRgb<span class="pl-k">:</span> <span class="pl-c1">MEAN_RGB</span>,</td>
      </tr>
      <tr>
        <td id="L5434" class="blob-num js-line-number" data-line-number="5434"></td>
        <td id="LC5434" class="blob-code blob-code-inner js-file-line">                isFirstLayerConv2d<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L5435" class="blob-num js-line-number" data-line-number="5435"></td>
        <td id="LC5435" class="blob-code blob-code-inner js-file-line">                filterSizes<span class="pl-k">:</span> [<span class="pl-c1">3</span>, <span class="pl-c1">16</span>, <span class="pl-c1">32</span>, <span class="pl-c1">64</span>, <span class="pl-c1">128</span>, <span class="pl-c1">256</span>, <span class="pl-c1">512</span>]</td>
      </tr>
      <tr>
        <td id="L5436" class="blob-num js-line-number" data-line-number="5436"></td>
        <td id="LC5436" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L5437" class="blob-num js-line-number" data-line-number="5437"></td>
        <td id="LC5437" class="blob-code blob-code-inner js-file-line">            _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, config) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5438" class="blob-num js-line-number" data-line-number="5438"></td>
        <td id="LC5438" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L5439" class="blob-num js-line-number" data-line-number="5439"></td>
        <td id="LC5439" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5440" class="blob-num js-line-number" data-line-number="5440"></td>
        <td id="LC5440" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">TinyFaceDetector</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>anchors<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L5441" class="blob-num js-line-number" data-line-number="5441"></td>
        <td id="LC5441" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5442" class="blob-num js-line-number" data-line-number="5442"></td>
        <td id="LC5442" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">anchors</span>;</td>
      </tr>
      <tr>
        <td id="L5443" class="blob-num js-line-number" data-line-number="5443"></td>
        <td id="LC5443" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L5444" class="blob-num js-line-number" data-line-number="5444"></td>
        <td id="LC5444" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L5445" class="blob-num js-line-number" data-line-number="5445"></td>
        <td id="LC5445" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L5446" class="blob-num js-line-number" data-line-number="5446"></td>
        <td id="LC5446" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5447" class="blob-num js-line-number" data-line-number="5447"></td>
        <td id="LC5447" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyFaceDetector</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">locateFaces</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">forwardParams</span>) {</td>
      </tr>
      <tr>
        <td id="L5448" class="blob-num js-line-number" data-line-number="5448"></td>
        <td id="LC5448" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5449" class="blob-num js-line-number" data-line-number="5449"></td>
        <td id="LC5449" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> objectDetections;</td>
      </tr>
      <tr>
        <td id="L5450" class="blob-num js-line-number" data-line-number="5450"></td>
        <td id="LC5450" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5451" class="blob-num js-line-number" data-line-number="5451"></td>
        <td id="LC5451" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5452" class="blob-num js-line-number" data-line-number="5452"></td>
        <td id="LC5452" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">detect</span>(input, forwardParams)];</td>
      </tr>
      <tr>
        <td id="L5453" class="blob-num js-line-number" data-line-number="5453"></td>
        <td id="LC5453" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5454" class="blob-num js-line-number" data-line-number="5454"></td>
        <td id="LC5454" class="blob-code blob-code-inner js-file-line">                            objectDetections <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5455" class="blob-num js-line-number" data-line-number="5455"></td>
        <td id="LC5455" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">objectDetections</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">det</span>) { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FaceDetection</span>(<span class="pl-smi">det</span>.<span class="pl-smi">score</span>, <span class="pl-smi">det</span>.<span class="pl-smi">relativeBox</span>, { width<span class="pl-k">:</span> <span class="pl-smi">det</span>.<span class="pl-smi">imageWidth</span>, height<span class="pl-k">:</span> <span class="pl-smi">det</span>.<span class="pl-smi">imageHeight</span> }); })];</td>
      </tr>
      <tr>
        <td id="L5456" class="blob-num js-line-number" data-line-number="5456"></td>
        <td id="LC5456" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5457" class="blob-num js-line-number" data-line-number="5457"></td>
        <td id="LC5457" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5458" class="blob-num js-line-number" data-line-number="5458"></td>
        <td id="LC5458" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5459" class="blob-num js-line-number" data-line-number="5459"></td>
        <td id="LC5459" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5460" class="blob-num js-line-number" data-line-number="5460"></td>
        <td id="LC5460" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyFaceDetector</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5461" class="blob-num js-line-number" data-line-number="5461"></td>
        <td id="LC5461" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>tiny_face_detector_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5462" class="blob-num js-line-number" data-line-number="5462"></td>
        <td id="LC5462" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5463" class="blob-num js-line-number" data-line-number="5463"></td>
        <td id="LC5463" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyFaceDetector</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L5464" class="blob-num js-line-number" data-line-number="5464"></td>
        <td id="LC5464" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">extractParamsFromWeigthMap</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, weightMap);</td>
      </tr>
      <tr>
        <td id="L5465" class="blob-num js-line-number" data-line-number="5465"></td>
        <td id="LC5465" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5466" class="blob-num js-line-number" data-line-number="5466"></td>
        <td id="LC5466" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> TinyFaceDetector;</td>
      </tr>
      <tr>
        <td id="L5467" class="blob-num js-line-number" data-line-number="5467"></td>
        <td id="LC5467" class="blob-code blob-code-inner js-file-line">    }(TinyYolov2));</td>
      </tr>
      <tr>
        <td id="L5468" class="blob-num js-line-number" data-line-number="5468"></td>
        <td id="LC5468" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5469" class="blob-num js-line-number" data-line-number="5469"></td>
        <td id="LC5469" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">IOU_THRESHOLD$1</span> <span class="pl-k">=</span> <span class="pl-c1">0.4</span>;</td>
      </tr>
      <tr>
        <td id="L5470" class="blob-num js-line-number" data-line-number="5470"></td>
        <td id="LC5470" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">BOX_ANCHORS$1</span> <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L5471" class="blob-num js-line-number" data-line-number="5471"></td>
        <td id="LC5471" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">0.738768</span>, <span class="pl-c1">0.874946</span>),</td>
      </tr>
      <tr>
        <td id="L5472" class="blob-num js-line-number" data-line-number="5472"></td>
        <td id="LC5472" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">2.42204</span>, <span class="pl-c1">2.65704</span>),</td>
      </tr>
      <tr>
        <td id="L5473" class="blob-num js-line-number" data-line-number="5473"></td>
        <td id="LC5473" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">4.30971</span>, <span class="pl-c1">7.04493</span>),</td>
      </tr>
      <tr>
        <td id="L5474" class="blob-num js-line-number" data-line-number="5474"></td>
        <td id="LC5474" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">10.246</span>, <span class="pl-c1">4.59428</span>),</td>
      </tr>
      <tr>
        <td id="L5475" class="blob-num js-line-number" data-line-number="5475"></td>
        <td id="LC5475" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">12.6868</span>, <span class="pl-c1">11.8741</span>)</td>
      </tr>
      <tr>
        <td id="L5476" class="blob-num js-line-number" data-line-number="5476"></td>
        <td id="LC5476" class="blob-code blob-code-inner js-file-line">    ];</td>
      </tr>
      <tr>
        <td id="L5477" class="blob-num js-line-number" data-line-number="5477"></td>
        <td id="LC5477" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">BOX_ANCHORS_SEPARABLE</span> <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L5478" class="blob-num js-line-number" data-line-number="5478"></td>
        <td id="LC5478" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">1.603231</span>, <span class="pl-c1">2.094468</span>),</td>
      </tr>
      <tr>
        <td id="L5479" class="blob-num js-line-number" data-line-number="5479"></td>
        <td id="LC5479" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">6.041143</span>, <span class="pl-c1">7.080126</span>),</td>
      </tr>
      <tr>
        <td id="L5480" class="blob-num js-line-number" data-line-number="5480"></td>
        <td id="LC5480" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">2.882459</span>, <span class="pl-c1">3.518061</span>),</td>
      </tr>
      <tr>
        <td id="L5481" class="blob-num js-line-number" data-line-number="5481"></td>
        <td id="LC5481" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">4.266906</span>, <span class="pl-c1">5.178857</span>),</td>
      </tr>
      <tr>
        <td id="L5482" class="blob-num js-line-number" data-line-number="5482"></td>
        <td id="LC5482" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Point</span>(<span class="pl-c1">9.041765</span>, <span class="pl-c1">10.66308</span>)</td>
      </tr>
      <tr>
        <td id="L5483" class="blob-num js-line-number" data-line-number="5483"></td>
        <td id="LC5483" class="blob-code blob-code-inner js-file-line">    ];</td>
      </tr>
      <tr>
        <td id="L5484" class="blob-num js-line-number" data-line-number="5484"></td>
        <td id="LC5484" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">MEAN_RGB_SEPARABLE</span> <span class="pl-k">=</span> [<span class="pl-c1">117.001</span>, <span class="pl-c1">114.697</span>, <span class="pl-c1">97.404</span>];</td>
      </tr>
      <tr>
        <td id="L5485" class="blob-num js-line-number" data-line-number="5485"></td>
        <td id="LC5485" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">DEFAULT_MODEL_NAME</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>tiny_yolov2_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5486" class="blob-num js-line-number" data-line-number="5486"></td>
        <td id="LC5486" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">DEFAULT_MODEL_NAME_SEPARABLE_CONV</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>tiny_yolov2_separable_conv_model<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5487" class="blob-num js-line-number" data-line-number="5487"></td>
        <td id="LC5487" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5488" class="blob-num js-line-number" data-line-number="5488"></td>
        <td id="LC5488" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> TinyYolov2$1 <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5489" class="blob-num js-line-number" data-line-number="5489"></td>
        <td id="LC5489" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(TinyYolov2, _super);</td>
      </tr>
      <tr>
        <td id="L5490" class="blob-num js-line-number" data-line-number="5490"></td>
        <td id="LC5490" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">TinyYolov2</span>(<span class="pl-smi">withSeparableConvs</span>) {</td>
      </tr>
      <tr>
        <td id="L5491" class="blob-num js-line-number" data-line-number="5491"></td>
        <td id="LC5491" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (withSeparableConvs <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { withSeparableConvs <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L5492" class="blob-num js-line-number" data-line-number="5492"></td>
        <td id="LC5492" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5493" class="blob-num js-line-number" data-line-number="5493"></td>
        <td id="LC5493" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> config <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({}, {</td>
      </tr>
      <tr>
        <td id="L5494" class="blob-num js-line-number" data-line-number="5494"></td>
        <td id="LC5494" class="blob-code blob-code-inner js-file-line">                withSeparableConvs<span class="pl-k">:</span> withSeparableConvs,</td>
      </tr>
      <tr>
        <td id="L5495" class="blob-num js-line-number" data-line-number="5495"></td>
        <td id="LC5495" class="blob-code blob-code-inner js-file-line">                iouThreshold<span class="pl-k">:</span> <span class="pl-c1">IOU_THRESHOLD$1</span>,</td>
      </tr>
      <tr>
        <td id="L5496" class="blob-num js-line-number" data-line-number="5496"></td>
        <td id="LC5496" class="blob-code blob-code-inner js-file-line">                classes<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>face<span class="pl-pds">&#39;</span></span>]</td>
      </tr>
      <tr>
        <td id="L5497" class="blob-num js-line-number" data-line-number="5497"></td>
        <td id="LC5497" class="blob-code blob-code-inner js-file-line">            }, withSeparableConvs</td>
      </tr>
      <tr>
        <td id="L5498" class="blob-num js-line-number" data-line-number="5498"></td>
        <td id="LC5498" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> {</td>
      </tr>
      <tr>
        <td id="L5499" class="blob-num js-line-number" data-line-number="5499"></td>
        <td id="LC5499" class="blob-code blob-code-inner js-file-line">                    anchors<span class="pl-k">:</span> <span class="pl-c1">BOX_ANCHORS_SEPARABLE</span>,</td>
      </tr>
      <tr>
        <td id="L5500" class="blob-num js-line-number" data-line-number="5500"></td>
        <td id="LC5500" class="blob-code blob-code-inner js-file-line">                    meanRgb<span class="pl-k">:</span> <span class="pl-c1">MEAN_RGB_SEPARABLE</span></td>
      </tr>
      <tr>
        <td id="L5501" class="blob-num js-line-number" data-line-number="5501"></td>
        <td id="LC5501" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L5502" class="blob-num js-line-number" data-line-number="5502"></td>
        <td id="LC5502" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L5503" class="blob-num js-line-number" data-line-number="5503"></td>
        <td id="LC5503" class="blob-code blob-code-inner js-file-line">                    anchors<span class="pl-k">:</span> <span class="pl-c1">BOX_ANCHORS$1</span>,</td>
      </tr>
      <tr>
        <td id="L5504" class="blob-num js-line-number" data-line-number="5504"></td>
        <td id="LC5504" class="blob-code blob-code-inner js-file-line">                    withClassScores<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L5505" class="blob-num js-line-number" data-line-number="5505"></td>
        <td id="LC5505" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5506" class="blob-num js-line-number" data-line-number="5506"></td>
        <td id="LC5506" class="blob-code blob-code-inner js-file-line">            _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, config) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5507" class="blob-num js-line-number" data-line-number="5507"></td>
        <td id="LC5507" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L5508" class="blob-num js-line-number" data-line-number="5508"></td>
        <td id="LC5508" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5509" class="blob-num js-line-number" data-line-number="5509"></td>
        <td id="LC5509" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>withSeparableConvs<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L5510" class="blob-num js-line-number" data-line-number="5510"></td>
        <td id="LC5510" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5511" class="blob-num js-line-number" data-line-number="5511"></td>
        <td id="LC5511" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-smi">withSeparableConvs</span>;</td>
      </tr>
      <tr>
        <td id="L5512" class="blob-num js-line-number" data-line-number="5512"></td>
        <td id="LC5512" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L5513" class="blob-num js-line-number" data-line-number="5513"></td>
        <td id="LC5513" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L5514" class="blob-num js-line-number" data-line-number="5514"></td>
        <td id="LC5514" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L5515" class="blob-num js-line-number" data-line-number="5515"></td>
        <td id="LC5515" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5516" class="blob-num js-line-number" data-line-number="5516"></td>
        <td id="LC5516" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>anchors<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L5517" class="blob-num js-line-number" data-line-number="5517"></td>
        <td id="LC5517" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5518" class="blob-num js-line-number" data-line-number="5518"></td>
        <td id="LC5518" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">config</span>.<span class="pl-c1">anchors</span>;</td>
      </tr>
      <tr>
        <td id="L5519" class="blob-num js-line-number" data-line-number="5519"></td>
        <td id="LC5519" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L5520" class="blob-num js-line-number" data-line-number="5520"></td>
        <td id="LC5520" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L5521" class="blob-num js-line-number" data-line-number="5521"></td>
        <td id="LC5521" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L5522" class="blob-num js-line-number" data-line-number="5522"></td>
        <td id="LC5522" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5523" class="blob-num js-line-number" data-line-number="5523"></td>
        <td id="LC5523" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">locateFaces</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">forwardParams</span>) {</td>
      </tr>
      <tr>
        <td id="L5524" class="blob-num js-line-number" data-line-number="5524"></td>
        <td id="LC5524" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5525" class="blob-num js-line-number" data-line-number="5525"></td>
        <td id="LC5525" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> objectDetections;</td>
      </tr>
      <tr>
        <td id="L5526" class="blob-num js-line-number" data-line-number="5526"></td>
        <td id="LC5526" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5527" class="blob-num js-line-number" data-line-number="5527"></td>
        <td id="LC5527" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5528" class="blob-num js-line-number" data-line-number="5528"></td>
        <td id="LC5528" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">detect</span>(input, forwardParams)];</td>
      </tr>
      <tr>
        <td id="L5529" class="blob-num js-line-number" data-line-number="5529"></td>
        <td id="LC5529" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5530" class="blob-num js-line-number" data-line-number="5530"></td>
        <td id="LC5530" class="blob-code blob-code-inner js-file-line">                            objectDetections <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5531" class="blob-num js-line-number" data-line-number="5531"></td>
        <td id="LC5531" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">objectDetections</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">det</span>) { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FaceDetection</span>(<span class="pl-smi">det</span>.<span class="pl-smi">score</span>, <span class="pl-smi">det</span>.<span class="pl-smi">relativeBox</span>, { width<span class="pl-k">:</span> <span class="pl-smi">det</span>.<span class="pl-smi">imageWidth</span>, height<span class="pl-k">:</span> <span class="pl-smi">det</span>.<span class="pl-smi">imageHeight</span> }); })];</td>
      </tr>
      <tr>
        <td id="L5532" class="blob-num js-line-number" data-line-number="5532"></td>
        <td id="LC5532" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5533" class="blob-num js-line-number" data-line-number="5533"></td>
        <td id="LC5533" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5534" class="blob-num js-line-number" data-line-number="5534"></td>
        <td id="LC5534" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5535" class="blob-num js-line-number" data-line-number="5535"></td>
        <td id="LC5535" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5536" class="blob-num js-line-number" data-line-number="5536"></td>
        <td id="LC5536" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDefaultModelName</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5537" class="blob-num js-line-number" data-line-number="5537"></td>
        <td id="LC5537" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">withSeparableConvs</span> <span class="pl-k">?</span> <span class="pl-c1">DEFAULT_MODEL_NAME_SEPARABLE_CONV</span> <span class="pl-k">:</span> <span class="pl-c1">DEFAULT_MODEL_NAME</span>;</td>
      </tr>
      <tr>
        <td id="L5538" class="blob-num js-line-number" data-line-number="5538"></td>
        <td id="LC5538" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5539" class="blob-num js-line-number" data-line-number="5539"></td>
        <td id="LC5539" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">TinyYolov2</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extractParamsFromWeigthMap</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">weightMap</span>) {</td>
      </tr>
      <tr>
        <td id="L5540" class="blob-num js-line-number" data-line-number="5540"></td>
        <td id="LC5540" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">_super</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">extractParamsFromWeigthMap</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>, weightMap);</td>
      </tr>
      <tr>
        <td id="L5541" class="blob-num js-line-number" data-line-number="5541"></td>
        <td id="LC5541" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5542" class="blob-num js-line-number" data-line-number="5542"></td>
        <td id="LC5542" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> TinyYolov2;</td>
      </tr>
      <tr>
        <td id="L5543" class="blob-num js-line-number" data-line-number="5543"></td>
        <td id="LC5543" class="blob-code blob-code-inner js-file-line">    }(TinyYolov2));</td>
      </tr>
      <tr>
        <td id="L5544" class="blob-num js-line-number" data-line-number="5544"></td>
        <td id="LC5544" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5545" class="blob-num js-line-number" data-line-number="5545"></td>
        <td id="LC5545" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createTinyYolov2</span>(<span class="pl-smi">weights</span>, <span class="pl-smi">withSeparableConvs</span>) {</td>
      </tr>
      <tr>
        <td id="L5546" class="blob-num js-line-number" data-line-number="5546"></td>
        <td id="LC5546" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (withSeparableConvs <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { withSeparableConvs <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L5547" class="blob-num js-line-number" data-line-number="5547"></td>
        <td id="LC5547" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> net <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">TinyYolov2$1</span>(withSeparableConvs);</td>
      </tr>
      <tr>
        <td id="L5548" class="blob-num js-line-number" data-line-number="5548"></td>
        <td id="LC5548" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">net</span>.<span class="pl-en">extractWeights</span>(weights);</td>
      </tr>
      <tr>
        <td id="L5549" class="blob-num js-line-number" data-line-number="5549"></td>
        <td id="LC5549" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> net;</td>
      </tr>
      <tr>
        <td id="L5550" class="blob-num js-line-number" data-line-number="5550"></td>
        <td id="LC5550" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5551" class="blob-num js-line-number" data-line-number="5551"></td>
        <td id="LC5551" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5552" class="blob-num js-line-number" data-line-number="5552"></td>
        <td id="LC5552" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> nets <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5553" class="blob-num js-line-number" data-line-number="5553"></td>
        <td id="LC5553" class="blob-code blob-code-inner js-file-line">        ssdMobilenetv1<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">SsdMobilenetv1</span>(),</td>
      </tr>
      <tr>
        <td id="L5554" class="blob-num js-line-number" data-line-number="5554"></td>
        <td id="LC5554" class="blob-code blob-code-inner js-file-line">        tinyFaceDetector<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">TinyFaceDetector</span>(),</td>
      </tr>
      <tr>
        <td id="L5555" class="blob-num js-line-number" data-line-number="5555"></td>
        <td id="LC5555" class="blob-code blob-code-inner js-file-line">        tinyYolov2<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">TinyYolov2$1</span>(),</td>
      </tr>
      <tr>
        <td id="L5556" class="blob-num js-line-number" data-line-number="5556"></td>
        <td id="LC5556" class="blob-code blob-code-inner js-file-line">        mtcnn<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">Mtcnn</span>(),</td>
      </tr>
      <tr>
        <td id="L5557" class="blob-num js-line-number" data-line-number="5557"></td>
        <td id="LC5557" class="blob-code blob-code-inner js-file-line">        faceLandmark68Net<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">FaceLandmark68Net</span>(),</td>
      </tr>
      <tr>
        <td id="L5558" class="blob-num js-line-number" data-line-number="5558"></td>
        <td id="LC5558" class="blob-code blob-code-inner js-file-line">        faceLandmark68TinyNet<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">FaceLandmark68TinyNet</span>(),</td>
      </tr>
      <tr>
        <td id="L5559" class="blob-num js-line-number" data-line-number="5559"></td>
        <td id="LC5559" class="blob-code blob-code-inner js-file-line">        faceRecognitionNet<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">FaceRecognitionNet</span>(),</td>
      </tr>
      <tr>
        <td id="L5560" class="blob-num js-line-number" data-line-number="5560"></td>
        <td id="LC5560" class="blob-code blob-code-inner js-file-line">        faceExpressionNet<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">FaceExpressionNet</span>(),</td>
      </tr>
      <tr>
        <td id="L5561" class="blob-num js-line-number" data-line-number="5561"></td>
        <td id="LC5561" class="blob-code blob-code-inner js-file-line">        ageGenderNet<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">AgeGenderNet</span>()</td>
      </tr>
      <tr>
        <td id="L5562" class="blob-num js-line-number" data-line-number="5562"></td>
        <td id="LC5562" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5563" class="blob-num js-line-number" data-line-number="5563"></td>
        <td id="LC5563" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L5564" class="blob-num js-line-number" data-line-number="5564"></td>
        <td id="LC5564" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Attempts to detect all faces in an image using SSD Mobilenetv1 Network.</span></td>
      </tr>
      <tr>
        <td id="L5565" class="blob-num js-line-number" data-line-number="5565"></td>
        <td id="LC5565" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5566" class="blob-num js-line-number" data-line-number="5566"></td>
        <td id="LC5566" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">input</span> The input image.</span></td>
      </tr>
      <tr>
        <td id="L5567" class="blob-num js-line-number" data-line-number="5567"></td>
        <td id="LC5567" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">options</span> (optional, default: see SsdMobilenetv1Options constructor for default parameters).</span></td>
      </tr>
      <tr>
        <td id="L5568" class="blob-num js-line-number" data-line-number="5568"></td>
        <td id="LC5568" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> Bounding box of each face with score.</span></td>
      </tr>
      <tr>
        <td id="L5569" class="blob-num js-line-number" data-line-number="5569"></td>
        <td id="LC5569" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L5570" class="blob-num js-line-number" data-line-number="5570"></td>
        <td id="LC5570" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">ssdMobilenetv1</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L5571" class="blob-num js-line-number" data-line-number="5571"></td>
        <td id="LC5571" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">ssdMobilenetv1</span>.<span class="pl-en">locateFaces</span>(input, options);</td>
      </tr>
      <tr>
        <td id="L5572" class="blob-num js-line-number" data-line-number="5572"></td>
        <td id="LC5572" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5573" class="blob-num js-line-number" data-line-number="5573"></td>
        <td id="LC5573" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L5574" class="blob-num js-line-number" data-line-number="5574"></td>
        <td id="LC5574" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Attempts to detect all faces in an image using the Tiny Face Detector.</span></td>
      </tr>
      <tr>
        <td id="L5575" class="blob-num js-line-number" data-line-number="5575"></td>
        <td id="LC5575" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5576" class="blob-num js-line-number" data-line-number="5576"></td>
        <td id="LC5576" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">input</span> The input image.</span></td>
      </tr>
      <tr>
        <td id="L5577" class="blob-num js-line-number" data-line-number="5577"></td>
        <td id="LC5577" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">options</span> (optional, default: see TinyFaceDetectorOptions constructor for default parameters).</span></td>
      </tr>
      <tr>
        <td id="L5578" class="blob-num js-line-number" data-line-number="5578"></td>
        <td id="LC5578" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> Bounding box of each face with score.</span></td>
      </tr>
      <tr>
        <td id="L5579" class="blob-num js-line-number" data-line-number="5579"></td>
        <td id="LC5579" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L5580" class="blob-num js-line-number" data-line-number="5580"></td>
        <td id="LC5580" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">tinyFaceDetector</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L5581" class="blob-num js-line-number" data-line-number="5581"></td>
        <td id="LC5581" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">tinyFaceDetector</span>.<span class="pl-en">locateFaces</span>(input, options);</td>
      </tr>
      <tr>
        <td id="L5582" class="blob-num js-line-number" data-line-number="5582"></td>
        <td id="LC5582" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5583" class="blob-num js-line-number" data-line-number="5583"></td>
        <td id="LC5583" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L5584" class="blob-num js-line-number" data-line-number="5584"></td>
        <td id="LC5584" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Attempts to detect all faces in an image using the Tiny Yolov2 Network.</span></td>
      </tr>
      <tr>
        <td id="L5585" class="blob-num js-line-number" data-line-number="5585"></td>
        <td id="LC5585" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5586" class="blob-num js-line-number" data-line-number="5586"></td>
        <td id="LC5586" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">input</span> The input image.</span></td>
      </tr>
      <tr>
        <td id="L5587" class="blob-num js-line-number" data-line-number="5587"></td>
        <td id="LC5587" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">options</span> (optional, default: see TinyYolov2Options constructor for default parameters).</span></td>
      </tr>
      <tr>
        <td id="L5588" class="blob-num js-line-number" data-line-number="5588"></td>
        <td id="LC5588" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> Bounding box of each face with score.</span></td>
      </tr>
      <tr>
        <td id="L5589" class="blob-num js-line-number" data-line-number="5589"></td>
        <td id="LC5589" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L5590" class="blob-num js-line-number" data-line-number="5590"></td>
        <td id="LC5590" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">tinyYolov2</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L5591" class="blob-num js-line-number" data-line-number="5591"></td>
        <td id="LC5591" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">tinyYolov2</span>.<span class="pl-en">locateFaces</span>(input, options);</td>
      </tr>
      <tr>
        <td id="L5592" class="blob-num js-line-number" data-line-number="5592"></td>
        <td id="LC5592" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5593" class="blob-num js-line-number" data-line-number="5593"></td>
        <td id="LC5593" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L5594" class="blob-num js-line-number" data-line-number="5594"></td>
        <td id="LC5594" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Attempts to detect all faces in an image and the 5 point face landmarks</span></td>
      </tr>
      <tr>
        <td id="L5595" class="blob-num js-line-number" data-line-number="5595"></td>
        <td id="LC5595" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * of each detected face using the MTCNN Network.</span></td>
      </tr>
      <tr>
        <td id="L5596" class="blob-num js-line-number" data-line-number="5596"></td>
        <td id="LC5596" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5597" class="blob-num js-line-number" data-line-number="5597"></td>
        <td id="LC5597" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">input</span> The input image.</span></td>
      </tr>
      <tr>
        <td id="L5598" class="blob-num js-line-number" data-line-number="5598"></td>
        <td id="LC5598" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">options</span> (optional, default: see MtcnnOptions constructor for default parameters).</span></td>
      </tr>
      <tr>
        <td id="L5599" class="blob-num js-line-number" data-line-number="5599"></td>
        <td id="LC5599" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> Bounding box of each face with score and 5 point face landmarks.</span></td>
      </tr>
      <tr>
        <td id="L5600" class="blob-num js-line-number" data-line-number="5600"></td>
        <td id="LC5600" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L5601" class="blob-num js-line-number" data-line-number="5601"></td>
        <td id="LC5601" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">mtcnn</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L5602" class="blob-num js-line-number" data-line-number="5602"></td>
        <td id="LC5602" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">mtcnn</span>.<span class="pl-c1">forward</span>(input, options);</td>
      </tr>
      <tr>
        <td id="L5603" class="blob-num js-line-number" data-line-number="5603"></td>
        <td id="LC5603" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5604" class="blob-num js-line-number" data-line-number="5604"></td>
        <td id="LC5604" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L5605" class="blob-num js-line-number" data-line-number="5605"></td>
        <td id="LC5605" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Detects the 68 point face landmark positions of the face shown in an image.</span></td>
      </tr>
      <tr>
        <td id="L5606" class="blob-num js-line-number" data-line-number="5606"></td>
        <td id="LC5606" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5607" class="blob-num js-line-number" data-line-number="5607"></td>
        <td id="LC5607" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">inputs</span> The face image extracted from the bounding box of a face. Can</span></td>
      </tr>
      <tr>
        <td id="L5608" class="blob-num js-line-number" data-line-number="5608"></td>
        <td id="LC5608" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * also be an array of input images, which will be batch processed.</span></td>
      </tr>
      <tr>
        <td id="L5609" class="blob-num js-line-number" data-line-number="5609"></td>
        <td id="LC5609" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> 68 point face landmarks or array thereof in case of batch input.</span></td>
      </tr>
      <tr>
        <td id="L5610" class="blob-num js-line-number" data-line-number="5610"></td>
        <td id="LC5610" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L5611" class="blob-num js-line-number" data-line-number="5611"></td>
        <td id="LC5611" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">detectFaceLandmarks</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L5612" class="blob-num js-line-number" data-line-number="5612"></td>
        <td id="LC5612" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceLandmark68Net</span>.<span class="pl-en">detectLandmarks</span>(input);</td>
      </tr>
      <tr>
        <td id="L5613" class="blob-num js-line-number" data-line-number="5613"></td>
        <td id="LC5613" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5614" class="blob-num js-line-number" data-line-number="5614"></td>
        <td id="LC5614" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L5615" class="blob-num js-line-number" data-line-number="5615"></td>
        <td id="LC5615" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Detects the 68 point face landmark positions of the face shown in an image</span></td>
      </tr>
      <tr>
        <td id="L5616" class="blob-num js-line-number" data-line-number="5616"></td>
        <td id="LC5616" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * using a tinier version of the 68 point face landmark model, which is slightly</span></td>
      </tr>
      <tr>
        <td id="L5617" class="blob-num js-line-number" data-line-number="5617"></td>
        <td id="LC5617" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * faster at inference, but also slightly less accurate.</span></td>
      </tr>
      <tr>
        <td id="L5618" class="blob-num js-line-number" data-line-number="5618"></td>
        <td id="LC5618" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5619" class="blob-num js-line-number" data-line-number="5619"></td>
        <td id="LC5619" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">inputs</span> The face image extracted from the bounding box of a face. Can</span></td>
      </tr>
      <tr>
        <td id="L5620" class="blob-num js-line-number" data-line-number="5620"></td>
        <td id="LC5620" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * also be an array of input images, which will be batch processed.</span></td>
      </tr>
      <tr>
        <td id="L5621" class="blob-num js-line-number" data-line-number="5621"></td>
        <td id="LC5621" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> 68 point face landmarks or array thereof in case of batch input.</span></td>
      </tr>
      <tr>
        <td id="L5622" class="blob-num js-line-number" data-line-number="5622"></td>
        <td id="LC5622" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L5623" class="blob-num js-line-number" data-line-number="5623"></td>
        <td id="LC5623" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">detectFaceLandmarksTiny</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L5624" class="blob-num js-line-number" data-line-number="5624"></td>
        <td id="LC5624" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceLandmark68TinyNet</span>.<span class="pl-en">detectLandmarks</span>(input);</td>
      </tr>
      <tr>
        <td id="L5625" class="blob-num js-line-number" data-line-number="5625"></td>
        <td id="LC5625" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5626" class="blob-num js-line-number" data-line-number="5626"></td>
        <td id="LC5626" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L5627" class="blob-num js-line-number" data-line-number="5627"></td>
        <td id="LC5627" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Computes a 128 entry vector (face descriptor / face embeddings) from the face shown in an image,</span></td>
      </tr>
      <tr>
        <td id="L5628" class="blob-num js-line-number" data-line-number="5628"></td>
        <td id="LC5628" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * which uniquely represents the features of that persons face. The computed face descriptor can</span></td>
      </tr>
      <tr>
        <td id="L5629" class="blob-num js-line-number" data-line-number="5629"></td>
        <td id="LC5629" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * be used to measure the similarity between faces, by computing the euclidean distance of two</span></td>
      </tr>
      <tr>
        <td id="L5630" class="blob-num js-line-number" data-line-number="5630"></td>
        <td id="LC5630" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * face descriptors.</span></td>
      </tr>
      <tr>
        <td id="L5631" class="blob-num js-line-number" data-line-number="5631"></td>
        <td id="LC5631" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5632" class="blob-num js-line-number" data-line-number="5632"></td>
        <td id="LC5632" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">inputs</span> The face image extracted from the aligned bounding box of a face. Can</span></td>
      </tr>
      <tr>
        <td id="L5633" class="blob-num js-line-number" data-line-number="5633"></td>
        <td id="LC5633" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * also be an array of input images, which will be batch processed.</span></td>
      </tr>
      <tr>
        <td id="L5634" class="blob-num js-line-number" data-line-number="5634"></td>
        <td id="LC5634" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> Face descriptor with 128 entries or array thereof in case of batch input.</span></td>
      </tr>
      <tr>
        <td id="L5635" class="blob-num js-line-number" data-line-number="5635"></td>
        <td id="LC5635" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L5636" class="blob-num js-line-number" data-line-number="5636"></td>
        <td id="LC5636" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">computeFaceDescriptor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L5637" class="blob-num js-line-number" data-line-number="5637"></td>
        <td id="LC5637" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceRecognitionNet</span>.<span class="pl-en">computeFaceDescriptor</span>(input);</td>
      </tr>
      <tr>
        <td id="L5638" class="blob-num js-line-number" data-line-number="5638"></td>
        <td id="LC5638" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5639" class="blob-num js-line-number" data-line-number="5639"></td>
        <td id="LC5639" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L5640" class="blob-num js-line-number" data-line-number="5640"></td>
        <td id="LC5640" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Recognizes the facial expressions from a face image.</span></td>
      </tr>
      <tr>
        <td id="L5641" class="blob-num js-line-number" data-line-number="5641"></td>
        <td id="LC5641" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5642" class="blob-num js-line-number" data-line-number="5642"></td>
        <td id="LC5642" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">inputs</span> The face image extracted from the bounding box of a face. Can</span></td>
      </tr>
      <tr>
        <td id="L5643" class="blob-num js-line-number" data-line-number="5643"></td>
        <td id="LC5643" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * also be an array of input images, which will be batch processed.</span></td>
      </tr>
      <tr>
        <td id="L5644" class="blob-num js-line-number" data-line-number="5644"></td>
        <td id="LC5644" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> Facial expressions with corresponding probabilities or array thereof in case of batch input.</span></td>
      </tr>
      <tr>
        <td id="L5645" class="blob-num js-line-number" data-line-number="5645"></td>
        <td id="LC5645" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L5646" class="blob-num js-line-number" data-line-number="5646"></td>
        <td id="LC5646" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">recognizeFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L5647" class="blob-num js-line-number" data-line-number="5647"></td>
        <td id="LC5647" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceExpressionNet</span>.<span class="pl-en">predictExpressions</span>(input);</td>
      </tr>
      <tr>
        <td id="L5648" class="blob-num js-line-number" data-line-number="5648"></td>
        <td id="LC5648" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5649" class="blob-num js-line-number" data-line-number="5649"></td>
        <td id="LC5649" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L5650" class="blob-num js-line-number" data-line-number="5650"></td>
        <td id="LC5650" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Predicts age and gender from a face image.</span></td>
      </tr>
      <tr>
        <td id="L5651" class="blob-num js-line-number" data-line-number="5651"></td>
        <td id="LC5651" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5652" class="blob-num js-line-number" data-line-number="5652"></td>
        <td id="LC5652" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">inputs</span> The face image extracted from the bounding box of a face. Can</span></td>
      </tr>
      <tr>
        <td id="L5653" class="blob-num js-line-number" data-line-number="5653"></td>
        <td id="LC5653" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * also be an array of input images, which will be batch processed.</span></td>
      </tr>
      <tr>
        <td id="L5654" class="blob-num js-line-number" data-line-number="5654"></td>
        <td id="LC5654" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> Predictions with age, gender and gender probability or array thereof in case of batch input.</span></td>
      </tr>
      <tr>
        <td id="L5655" class="blob-num js-line-number" data-line-number="5655"></td>
        <td id="LC5655" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L5656" class="blob-num js-line-number" data-line-number="5656"></td>
        <td id="LC5656" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">predictAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L5657" class="blob-num js-line-number" data-line-number="5657"></td>
        <td id="LC5657" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">ageGenderNet</span>.<span class="pl-en">predictAgeAndGender</span>(input);</td>
      </tr>
      <tr>
        <td id="L5658" class="blob-num js-line-number" data-line-number="5658"></td>
        <td id="LC5658" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5659" class="blob-num js-line-number" data-line-number="5659"></td>
        <td id="LC5659" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">loadSsdMobilenetv1Model</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">url</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">ssdMobilenetv1</span>.<span class="pl-c1">load</span>(url); };</td>
      </tr>
      <tr>
        <td id="L5660" class="blob-num js-line-number" data-line-number="5660"></td>
        <td id="LC5660" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">loadTinyFaceDetectorModel</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">url</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">tinyFaceDetector</span>.<span class="pl-c1">load</span>(url); };</td>
      </tr>
      <tr>
        <td id="L5661" class="blob-num js-line-number" data-line-number="5661"></td>
        <td id="LC5661" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">loadMtcnnModel</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">url</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">mtcnn</span>.<span class="pl-c1">load</span>(url); };</td>
      </tr>
      <tr>
        <td id="L5662" class="blob-num js-line-number" data-line-number="5662"></td>
        <td id="LC5662" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">loadTinyYolov2Model</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">url</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">tinyYolov2</span>.<span class="pl-c1">load</span>(url); };</td>
      </tr>
      <tr>
        <td id="L5663" class="blob-num js-line-number" data-line-number="5663"></td>
        <td id="LC5663" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">loadFaceLandmarkModel</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">url</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceLandmark68Net</span>.<span class="pl-c1">load</span>(url); };</td>
      </tr>
      <tr>
        <td id="L5664" class="blob-num js-line-number" data-line-number="5664"></td>
        <td id="LC5664" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">loadFaceLandmarkTinyModel</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">url</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceLandmark68TinyNet</span>.<span class="pl-c1">load</span>(url); };</td>
      </tr>
      <tr>
        <td id="L5665" class="blob-num js-line-number" data-line-number="5665"></td>
        <td id="LC5665" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">loadFaceRecognitionModel</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">url</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceRecognitionNet</span>.<span class="pl-c1">load</span>(url); };</td>
      </tr>
      <tr>
        <td id="L5666" class="blob-num js-line-number" data-line-number="5666"></td>
        <td id="LC5666" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">loadFaceExpressionModel</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">url</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceExpressionNet</span>.<span class="pl-c1">load</span>(url); };</td>
      </tr>
      <tr>
        <td id="L5667" class="blob-num js-line-number" data-line-number="5667"></td>
        <td id="LC5667" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">loadAgeGenderModel</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">url</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">ageGenderNet</span>.<span class="pl-c1">load</span>(url); };</td>
      </tr>
      <tr>
        <td id="L5668" class="blob-num js-line-number" data-line-number="5668"></td>
        <td id="LC5668" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> backward compatibility</span></td>
      </tr>
      <tr>
        <td id="L5669" class="blob-num js-line-number" data-line-number="5669"></td>
        <td id="LC5669" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> loadFaceDetectionModel <span class="pl-k">=</span> loadSsdMobilenetv1Model;</td>
      </tr>
      <tr>
        <td id="L5670" class="blob-num js-line-number" data-line-number="5670"></td>
        <td id="LC5670" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> locateFaces <span class="pl-k">=</span> ssdMobilenetv1;</td>
      </tr>
      <tr>
        <td id="L5671" class="blob-num js-line-number" data-line-number="5671"></td>
        <td id="LC5671" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> detectLandmarks <span class="pl-k">=</span> detectFaceLandmarks;</td>
      </tr>
      <tr>
        <td id="L5672" class="blob-num js-line-number" data-line-number="5672"></td>
        <td id="LC5672" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5673" class="blob-num js-line-number" data-line-number="5673"></td>
        <td id="LC5673" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extendWithAge</span>(<span class="pl-smi">sourceObj</span>, <span class="pl-smi">age</span>) {</td>
      </tr>
      <tr>
        <td id="L5674" class="blob-num js-line-number" data-line-number="5674"></td>
        <td id="LC5674" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extension <span class="pl-k">=</span> { age<span class="pl-k">:</span> age };</td>
      </tr>
      <tr>
        <td id="L5675" class="blob-num js-line-number" data-line-number="5675"></td>
        <td id="LC5675" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({}, sourceObj, extension);</td>
      </tr>
      <tr>
        <td id="L5676" class="blob-num js-line-number" data-line-number="5676"></td>
        <td id="LC5676" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5677" class="blob-num js-line-number" data-line-number="5677"></td>
        <td id="LC5677" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5678" class="blob-num js-line-number" data-line-number="5678"></td>
        <td id="LC5678" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">extendWithGender</span>(<span class="pl-smi">sourceObj</span>, <span class="pl-smi">gender</span>, <span class="pl-smi">genderProbability</span>) {</td>
      </tr>
      <tr>
        <td id="L5679" class="blob-num js-line-number" data-line-number="5679"></td>
        <td id="LC5679" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> extension <span class="pl-k">=</span> { gender<span class="pl-k">:</span> gender, genderProbability<span class="pl-k">:</span> genderProbability };</td>
      </tr>
      <tr>
        <td id="L5680" class="blob-num js-line-number" data-line-number="5680"></td>
        <td id="LC5680" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({}, sourceObj, extension);</td>
      </tr>
      <tr>
        <td id="L5681" class="blob-num js-line-number" data-line-number="5681"></td>
        <td id="LC5681" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5682" class="blob-num js-line-number" data-line-number="5682"></td>
        <td id="LC5682" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5683" class="blob-num js-line-number" data-line-number="5683"></td>
        <td id="LC5683" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictFaceExpressionsTaskBase <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5684" class="blob-num js-line-number" data-line-number="5684"></td>
        <td id="LC5684" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictFaceExpressionsTaskBase, _super);</td>
      </tr>
      <tr>
        <td id="L5685" class="blob-num js-line-number" data-line-number="5685"></td>
        <td id="LC5685" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictFaceExpressionsTaskBase</span>(<span class="pl-smi">parentTask</span>, <span class="pl-smi">input</span>, <span class="pl-smi">extractedFaces</span>) {</td>
      </tr>
      <tr>
        <td id="L5686" class="blob-num js-line-number" data-line-number="5686"></td>
        <td id="LC5686" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5687" class="blob-num js-line-number" data-line-number="5687"></td>
        <td id="LC5687" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">parentTask</span> <span class="pl-k">=</span> parentTask;</td>
      </tr>
      <tr>
        <td id="L5688" class="blob-num js-line-number" data-line-number="5688"></td>
        <td id="LC5688" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-c1">input</span> <span class="pl-k">=</span> input;</td>
      </tr>
      <tr>
        <td id="L5689" class="blob-num js-line-number" data-line-number="5689"></td>
        <td id="LC5689" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">extractedFaces</span> <span class="pl-k">=</span> extractedFaces;</td>
      </tr>
      <tr>
        <td id="L5690" class="blob-num js-line-number" data-line-number="5690"></td>
        <td id="LC5690" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L5691" class="blob-num js-line-number" data-line-number="5691"></td>
        <td id="LC5691" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5692" class="blob-num js-line-number" data-line-number="5692"></td>
        <td id="LC5692" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictFaceExpressionsTaskBase;</td>
      </tr>
      <tr>
        <td id="L5693" class="blob-num js-line-number" data-line-number="5693"></td>
        <td id="LC5693" class="blob-code blob-code-inner js-file-line">    }(ComposableTask));</td>
      </tr>
      <tr>
        <td id="L5694" class="blob-num js-line-number" data-line-number="5694"></td>
        <td id="LC5694" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictAllFaceExpressionsTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5695" class="blob-num js-line-number" data-line-number="5695"></td>
        <td id="LC5695" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictAllFaceExpressionsTask, _super);</td>
      </tr>
      <tr>
        <td id="L5696" class="blob-num js-line-number" data-line-number="5696"></td>
        <td id="LC5696" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictAllFaceExpressionsTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5697" class="blob-num js-line-number" data-line-number="5697"></td>
        <td id="LC5697" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5698" class="blob-num js-line-number" data-line-number="5698"></td>
        <td id="LC5698" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5699" class="blob-num js-line-number" data-line-number="5699"></td>
        <td id="LC5699" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictAllFaceExpressionsTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5700" class="blob-num js-line-number" data-line-number="5700"></td>
        <td id="LC5700" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5701" class="blob-num js-line-number" data-line-number="5701"></td>
        <td id="LC5701" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> parentResults, faceExpressionsByFace;</td>
      </tr>
      <tr>
        <td id="L5702" class="blob-num js-line-number" data-line-number="5702"></td>
        <td id="LC5702" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5703" class="blob-num js-line-number" data-line-number="5703"></td>
        <td id="LC5703" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5704" class="blob-num js-line-number" data-line-number="5704"></td>
        <td id="LC5704" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5705" class="blob-num js-line-number" data-line-number="5705"></td>
        <td id="LC5705" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">parentTask</span>];</td>
      </tr>
      <tr>
        <td id="L5706" class="blob-num js-line-number" data-line-number="5706"></td>
        <td id="LC5706" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5707" class="blob-num js-line-number" data-line-number="5707"></td>
        <td id="LC5707" class="blob-code blob-code-inner js-file-line">                            parentResults <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5708" class="blob-num js-line-number" data-line-number="5708"></td>
        <td id="LC5708" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractAllFacesAndComputeResults</span>(parentResults, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>, <span class="pl-k">function</span> (<span class="pl-smi">faces</span>) { <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(_this, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5709" class="blob-num js-line-number" data-line-number="5709"></td>
        <td id="LC5709" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5710" class="blob-num js-line-number" data-line-number="5710"></td>
        <td id="LC5710" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5711" class="blob-num js-line-number" data-line-number="5711"></td>
        <td id="LC5711" class="blob-code blob-code-inner js-file-line">                                            <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">faces</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">face</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceExpressionNet</span>.<span class="pl-en">predictExpressions</span>(face); }))];</td>
      </tr>
      <tr>
        <td id="L5712" class="blob-num js-line-number" data-line-number="5712"></td>
        <td id="LC5712" class="blob-code blob-code-inner js-file-line">                                            <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>()];</td>
      </tr>
      <tr>
        <td id="L5713" class="blob-num js-line-number" data-line-number="5713"></td>
        <td id="LC5713" class="blob-code blob-code-inner js-file-line">                                        }</td>
      </tr>
      <tr>
        <td id="L5714" class="blob-num js-line-number" data-line-number="5714"></td>
        <td id="LC5714" class="blob-code blob-code-inner js-file-line">                                    });</td>
      </tr>
      <tr>
        <td id="L5715" class="blob-num js-line-number" data-line-number="5715"></td>
        <td id="LC5715" class="blob-code blob-code-inner js-file-line">                                }); }, <span class="pl-c1">this</span>.<span class="pl-smi">extractedFaces</span>)];</td>
      </tr>
      <tr>
        <td id="L5716" class="blob-num js-line-number" data-line-number="5716"></td>
        <td id="LC5716" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L5717" class="blob-num js-line-number" data-line-number="5717"></td>
        <td id="LC5717" class="blob-code blob-code-inner js-file-line">                            faceExpressionsByFace <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5718" class="blob-num js-line-number" data-line-number="5718"></td>
        <td id="LC5718" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">parentResults</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">parentResult</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> <span class="pl-en">extendWithFaceExpressions</span>(parentResult, faceExpressionsByFace[i]); })];</td>
      </tr>
      <tr>
        <td id="L5719" class="blob-num js-line-number" data-line-number="5719"></td>
        <td id="LC5719" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5720" class="blob-num js-line-number" data-line-number="5720"></td>
        <td id="LC5720" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5721" class="blob-num js-line-number" data-line-number="5721"></td>
        <td id="LC5721" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5722" class="blob-num js-line-number" data-line-number="5722"></td>
        <td id="LC5722" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5723" class="blob-num js-line-number" data-line-number="5723"></td>
        <td id="LC5723" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictAllFaceExpressionsTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5724" class="blob-num js-line-number" data-line-number="5724"></td>
        <td id="LC5724" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllAgeAndGenderTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5725" class="blob-num js-line-number" data-line-number="5725"></td>
        <td id="LC5725" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5726" class="blob-num js-line-number" data-line-number="5726"></td>
        <td id="LC5726" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictAllFaceExpressionsTask;</td>
      </tr>
      <tr>
        <td id="L5727" class="blob-num js-line-number" data-line-number="5727"></td>
        <td id="LC5727" class="blob-code blob-code-inner js-file-line">    }(PredictFaceExpressionsTaskBase));</td>
      </tr>
      <tr>
        <td id="L5728" class="blob-num js-line-number" data-line-number="5728"></td>
        <td id="LC5728" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictSingleFaceExpressionsTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5729" class="blob-num js-line-number" data-line-number="5729"></td>
        <td id="LC5729" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictSingleFaceExpressionsTask, _super);</td>
      </tr>
      <tr>
        <td id="L5730" class="blob-num js-line-number" data-line-number="5730"></td>
        <td id="LC5730" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictSingleFaceExpressionsTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5731" class="blob-num js-line-number" data-line-number="5731"></td>
        <td id="LC5731" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5732" class="blob-num js-line-number" data-line-number="5732"></td>
        <td id="LC5732" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5733" class="blob-num js-line-number" data-line-number="5733"></td>
        <td id="LC5733" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictSingleFaceExpressionsTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5734" class="blob-num js-line-number" data-line-number="5734"></td>
        <td id="LC5734" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5735" class="blob-num js-line-number" data-line-number="5735"></td>
        <td id="LC5735" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> parentResult, faceExpressions;</td>
      </tr>
      <tr>
        <td id="L5736" class="blob-num js-line-number" data-line-number="5736"></td>
        <td id="LC5736" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5737" class="blob-num js-line-number" data-line-number="5737"></td>
        <td id="LC5737" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5738" class="blob-num js-line-number" data-line-number="5738"></td>
        <td id="LC5738" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">parentTask</span>];</td>
      </tr>
      <tr>
        <td id="L5739" class="blob-num js-line-number" data-line-number="5739"></td>
        <td id="LC5739" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5740" class="blob-num js-line-number" data-line-number="5740"></td>
        <td id="LC5740" class="blob-code blob-code-inner js-file-line">                            parentResult <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5741" class="blob-num js-line-number" data-line-number="5741"></td>
        <td id="LC5741" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>parentResult) {</td>
      </tr>
      <tr>
        <td id="L5742" class="blob-num js-line-number" data-line-number="5742"></td>
        <td id="LC5742" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>];</td>
      </tr>
      <tr>
        <td id="L5743" class="blob-num js-line-number" data-line-number="5743"></td>
        <td id="LC5743" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L5744" class="blob-num js-line-number" data-line-number="5744"></td>
        <td id="LC5744" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractSingleFaceAndComputeResult</span>(parentResult, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>, <span class="pl-k">function</span> (<span class="pl-smi">face</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceExpressionNet</span>.<span class="pl-en">predictExpressions</span>(face); }, <span class="pl-c1">this</span>.<span class="pl-smi">extractedFaces</span>)];</td>
      </tr>
      <tr>
        <td id="L5745" class="blob-num js-line-number" data-line-number="5745"></td>
        <td id="LC5745" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L5746" class="blob-num js-line-number" data-line-number="5746"></td>
        <td id="LC5746" class="blob-code blob-code-inner js-file-line">                            faceExpressions <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5747" class="blob-num js-line-number" data-line-number="5747"></td>
        <td id="LC5747" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">extendWithFaceExpressions</span>(parentResult, faceExpressions)];</td>
      </tr>
      <tr>
        <td id="L5748" class="blob-num js-line-number" data-line-number="5748"></td>
        <td id="LC5748" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5749" class="blob-num js-line-number" data-line-number="5749"></td>
        <td id="LC5749" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5750" class="blob-num js-line-number" data-line-number="5750"></td>
        <td id="LC5750" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5751" class="blob-num js-line-number" data-line-number="5751"></td>
        <td id="LC5751" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5752" class="blob-num js-line-number" data-line-number="5752"></td>
        <td id="LC5752" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictSingleFaceExpressionsTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5753" class="blob-num js-line-number" data-line-number="5753"></td>
        <td id="LC5753" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleAgeAndGenderTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5754" class="blob-num js-line-number" data-line-number="5754"></td>
        <td id="LC5754" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5755" class="blob-num js-line-number" data-line-number="5755"></td>
        <td id="LC5755" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictSingleFaceExpressionsTask;</td>
      </tr>
      <tr>
        <td id="L5756" class="blob-num js-line-number" data-line-number="5756"></td>
        <td id="LC5756" class="blob-code blob-code-inner js-file-line">    }(PredictFaceExpressionsTaskBase));</td>
      </tr>
      <tr>
        <td id="L5757" class="blob-num js-line-number" data-line-number="5757"></td>
        <td id="LC5757" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictAllFaceExpressionsWithFaceAlignmentTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5758" class="blob-num js-line-number" data-line-number="5758"></td>
        <td id="LC5758" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictAllFaceExpressionsWithFaceAlignmentTask, _super);</td>
      </tr>
      <tr>
        <td id="L5759" class="blob-num js-line-number" data-line-number="5759"></td>
        <td id="LC5759" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictAllFaceExpressionsWithFaceAlignmentTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5760" class="blob-num js-line-number" data-line-number="5760"></td>
        <td id="LC5760" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5761" class="blob-num js-line-number" data-line-number="5761"></td>
        <td id="LC5761" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5762" class="blob-num js-line-number" data-line-number="5762"></td>
        <td id="LC5762" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictAllFaceExpressionsWithFaceAlignmentTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5763" class="blob-num js-line-number" data-line-number="5763"></td>
        <td id="LC5763" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllAgeAndGenderWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5764" class="blob-num js-line-number" data-line-number="5764"></td>
        <td id="LC5764" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5765" class="blob-num js-line-number" data-line-number="5765"></td>
        <td id="LC5765" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictAllFaceExpressionsWithFaceAlignmentTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceDescriptors</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5766" class="blob-num js-line-number" data-line-number="5766"></td>
        <td id="LC5766" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ComputeAllFaceDescriptorsTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5767" class="blob-num js-line-number" data-line-number="5767"></td>
        <td id="LC5767" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5768" class="blob-num js-line-number" data-line-number="5768"></td>
        <td id="LC5768" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictAllFaceExpressionsWithFaceAlignmentTask;</td>
      </tr>
      <tr>
        <td id="L5769" class="blob-num js-line-number" data-line-number="5769"></td>
        <td id="LC5769" class="blob-code blob-code-inner js-file-line">    }(PredictAllFaceExpressionsTask));</td>
      </tr>
      <tr>
        <td id="L5770" class="blob-num js-line-number" data-line-number="5770"></td>
        <td id="LC5770" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictSingleFaceExpressionsWithFaceAlignmentTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5771" class="blob-num js-line-number" data-line-number="5771"></td>
        <td id="LC5771" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictSingleFaceExpressionsWithFaceAlignmentTask, _super);</td>
      </tr>
      <tr>
        <td id="L5772" class="blob-num js-line-number" data-line-number="5772"></td>
        <td id="LC5772" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictSingleFaceExpressionsWithFaceAlignmentTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5773" class="blob-num js-line-number" data-line-number="5773"></td>
        <td id="LC5773" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5774" class="blob-num js-line-number" data-line-number="5774"></td>
        <td id="LC5774" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5775" class="blob-num js-line-number" data-line-number="5775"></td>
        <td id="LC5775" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictSingleFaceExpressionsWithFaceAlignmentTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5776" class="blob-num js-line-number" data-line-number="5776"></td>
        <td id="LC5776" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleAgeAndGenderWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5777" class="blob-num js-line-number" data-line-number="5777"></td>
        <td id="LC5777" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5778" class="blob-num js-line-number" data-line-number="5778"></td>
        <td id="LC5778" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictSingleFaceExpressionsWithFaceAlignmentTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceDescriptor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5779" class="blob-num js-line-number" data-line-number="5779"></td>
        <td id="LC5779" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ComputeSingleFaceDescriptorTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5780" class="blob-num js-line-number" data-line-number="5780"></td>
        <td id="LC5780" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5781" class="blob-num js-line-number" data-line-number="5781"></td>
        <td id="LC5781" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictSingleFaceExpressionsWithFaceAlignmentTask;</td>
      </tr>
      <tr>
        <td id="L5782" class="blob-num js-line-number" data-line-number="5782"></td>
        <td id="LC5782" class="blob-code blob-code-inner js-file-line">    }(PredictSingleFaceExpressionsTask));</td>
      </tr>
      <tr>
        <td id="L5783" class="blob-num js-line-number" data-line-number="5783"></td>
        <td id="LC5783" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5784" class="blob-num js-line-number" data-line-number="5784"></td>
        <td id="LC5784" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictAgeAndGenderTaskBase <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5785" class="blob-num js-line-number" data-line-number="5785"></td>
        <td id="LC5785" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictAgeAndGenderTaskBase, _super);</td>
      </tr>
      <tr>
        <td id="L5786" class="blob-num js-line-number" data-line-number="5786"></td>
        <td id="LC5786" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictAgeAndGenderTaskBase</span>(<span class="pl-smi">parentTask</span>, <span class="pl-smi">input</span>, <span class="pl-smi">extractedFaces</span>) {</td>
      </tr>
      <tr>
        <td id="L5787" class="blob-num js-line-number" data-line-number="5787"></td>
        <td id="LC5787" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5788" class="blob-num js-line-number" data-line-number="5788"></td>
        <td id="LC5788" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">parentTask</span> <span class="pl-k">=</span> parentTask;</td>
      </tr>
      <tr>
        <td id="L5789" class="blob-num js-line-number" data-line-number="5789"></td>
        <td id="LC5789" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-c1">input</span> <span class="pl-k">=</span> input;</td>
      </tr>
      <tr>
        <td id="L5790" class="blob-num js-line-number" data-line-number="5790"></td>
        <td id="LC5790" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">extractedFaces</span> <span class="pl-k">=</span> extractedFaces;</td>
      </tr>
      <tr>
        <td id="L5791" class="blob-num js-line-number" data-line-number="5791"></td>
        <td id="LC5791" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L5792" class="blob-num js-line-number" data-line-number="5792"></td>
        <td id="LC5792" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5793" class="blob-num js-line-number" data-line-number="5793"></td>
        <td id="LC5793" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictAgeAndGenderTaskBase;</td>
      </tr>
      <tr>
        <td id="L5794" class="blob-num js-line-number" data-line-number="5794"></td>
        <td id="LC5794" class="blob-code blob-code-inner js-file-line">    }(ComposableTask));</td>
      </tr>
      <tr>
        <td id="L5795" class="blob-num js-line-number" data-line-number="5795"></td>
        <td id="LC5795" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictAllAgeAndGenderTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5796" class="blob-num js-line-number" data-line-number="5796"></td>
        <td id="LC5796" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictAllAgeAndGenderTask, _super);</td>
      </tr>
      <tr>
        <td id="L5797" class="blob-num js-line-number" data-line-number="5797"></td>
        <td id="LC5797" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictAllAgeAndGenderTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5798" class="blob-num js-line-number" data-line-number="5798"></td>
        <td id="LC5798" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5799" class="blob-num js-line-number" data-line-number="5799"></td>
        <td id="LC5799" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5800" class="blob-num js-line-number" data-line-number="5800"></td>
        <td id="LC5800" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictAllAgeAndGenderTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5801" class="blob-num js-line-number" data-line-number="5801"></td>
        <td id="LC5801" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5802" class="blob-num js-line-number" data-line-number="5802"></td>
        <td id="LC5802" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> parentResults, ageAndGenderByFace;</td>
      </tr>
      <tr>
        <td id="L5803" class="blob-num js-line-number" data-line-number="5803"></td>
        <td id="LC5803" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5804" class="blob-num js-line-number" data-line-number="5804"></td>
        <td id="LC5804" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5805" class="blob-num js-line-number" data-line-number="5805"></td>
        <td id="LC5805" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5806" class="blob-num js-line-number" data-line-number="5806"></td>
        <td id="LC5806" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">parentTask</span>];</td>
      </tr>
      <tr>
        <td id="L5807" class="blob-num js-line-number" data-line-number="5807"></td>
        <td id="LC5807" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5808" class="blob-num js-line-number" data-line-number="5808"></td>
        <td id="LC5808" class="blob-code blob-code-inner js-file-line">                            parentResults <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5809" class="blob-num js-line-number" data-line-number="5809"></td>
        <td id="LC5809" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractAllFacesAndComputeResults</span>(parentResults, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>, <span class="pl-k">function</span> (<span class="pl-smi">faces</span>) { <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(_this, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5810" class="blob-num js-line-number" data-line-number="5810"></td>
        <td id="LC5810" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5811" class="blob-num js-line-number" data-line-number="5811"></td>
        <td id="LC5811" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5812" class="blob-num js-line-number" data-line-number="5812"></td>
        <td id="LC5812" class="blob-code blob-code-inner js-file-line">                                            <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">faces</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">face</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">ageGenderNet</span>.<span class="pl-en">predictAgeAndGender</span>(face); }))];</td>
      </tr>
      <tr>
        <td id="L5813" class="blob-num js-line-number" data-line-number="5813"></td>
        <td id="LC5813" class="blob-code blob-code-inner js-file-line">                                            <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>()];</td>
      </tr>
      <tr>
        <td id="L5814" class="blob-num js-line-number" data-line-number="5814"></td>
        <td id="LC5814" class="blob-code blob-code-inner js-file-line">                                        }</td>
      </tr>
      <tr>
        <td id="L5815" class="blob-num js-line-number" data-line-number="5815"></td>
        <td id="LC5815" class="blob-code blob-code-inner js-file-line">                                    });</td>
      </tr>
      <tr>
        <td id="L5816" class="blob-num js-line-number" data-line-number="5816"></td>
        <td id="LC5816" class="blob-code blob-code-inner js-file-line">                                }); }, <span class="pl-c1">this</span>.<span class="pl-smi">extractedFaces</span>)];</td>
      </tr>
      <tr>
        <td id="L5817" class="blob-num js-line-number" data-line-number="5817"></td>
        <td id="LC5817" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L5818" class="blob-num js-line-number" data-line-number="5818"></td>
        <td id="LC5818" class="blob-code blob-code-inner js-file-line">                            ageAndGenderByFace <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5819" class="blob-num js-line-number" data-line-number="5819"></td>
        <td id="LC5819" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">parentResults</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">parentResult</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L5820" class="blob-num js-line-number" data-line-number="5820"></td>
        <td id="LC5820" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">var</span> _a <span class="pl-k">=</span> ageAndGenderByFace[i], age <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">age</span>, gender <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">gender</span>, genderProbability <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">genderProbability</span>;</td>
      </tr>
      <tr>
        <td id="L5821" class="blob-num js-line-number" data-line-number="5821"></td>
        <td id="LC5821" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-en">extendWithAge</span>(<span class="pl-en">extendWithGender</span>(parentResult, gender, genderProbability), age);</td>
      </tr>
      <tr>
        <td id="L5822" class="blob-num js-line-number" data-line-number="5822"></td>
        <td id="LC5822" class="blob-code blob-code-inner js-file-line">                                })];</td>
      </tr>
      <tr>
        <td id="L5823" class="blob-num js-line-number" data-line-number="5823"></td>
        <td id="LC5823" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5824" class="blob-num js-line-number" data-line-number="5824"></td>
        <td id="LC5824" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5825" class="blob-num js-line-number" data-line-number="5825"></td>
        <td id="LC5825" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5826" class="blob-num js-line-number" data-line-number="5826"></td>
        <td id="LC5826" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5827" class="blob-num js-line-number" data-line-number="5827"></td>
        <td id="LC5827" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictAllAgeAndGenderTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5828" class="blob-num js-line-number" data-line-number="5828"></td>
        <td id="LC5828" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllFaceExpressionsTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5829" class="blob-num js-line-number" data-line-number="5829"></td>
        <td id="LC5829" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5830" class="blob-num js-line-number" data-line-number="5830"></td>
        <td id="LC5830" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictAllAgeAndGenderTask;</td>
      </tr>
      <tr>
        <td id="L5831" class="blob-num js-line-number" data-line-number="5831"></td>
        <td id="LC5831" class="blob-code blob-code-inner js-file-line">    }(PredictAgeAndGenderTaskBase));</td>
      </tr>
      <tr>
        <td id="L5832" class="blob-num js-line-number" data-line-number="5832"></td>
        <td id="LC5832" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictSingleAgeAndGenderTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5833" class="blob-num js-line-number" data-line-number="5833"></td>
        <td id="LC5833" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictSingleAgeAndGenderTask, _super);</td>
      </tr>
      <tr>
        <td id="L5834" class="blob-num js-line-number" data-line-number="5834"></td>
        <td id="LC5834" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictSingleAgeAndGenderTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5835" class="blob-num js-line-number" data-line-number="5835"></td>
        <td id="LC5835" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5836" class="blob-num js-line-number" data-line-number="5836"></td>
        <td id="LC5836" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5837" class="blob-num js-line-number" data-line-number="5837"></td>
        <td id="LC5837" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictSingleAgeAndGenderTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5838" class="blob-num js-line-number" data-line-number="5838"></td>
        <td id="LC5838" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5839" class="blob-num js-line-number" data-line-number="5839"></td>
        <td id="LC5839" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> parentResult, _a, age, gender, genderProbability;</td>
      </tr>
      <tr>
        <td id="L5840" class="blob-num js-line-number" data-line-number="5840"></td>
        <td id="LC5840" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L5841" class="blob-num js-line-number" data-line-number="5841"></td>
        <td id="LC5841" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5842" class="blob-num js-line-number" data-line-number="5842"></td>
        <td id="LC5842" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">parentTask</span>];</td>
      </tr>
      <tr>
        <td id="L5843" class="blob-num js-line-number" data-line-number="5843"></td>
        <td id="LC5843" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5844" class="blob-num js-line-number" data-line-number="5844"></td>
        <td id="LC5844" class="blob-code blob-code-inner js-file-line">                            parentResult <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5845" class="blob-num js-line-number" data-line-number="5845"></td>
        <td id="LC5845" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>parentResult) {</td>
      </tr>
      <tr>
        <td id="L5846" class="blob-num js-line-number" data-line-number="5846"></td>
        <td id="LC5846" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>];</td>
      </tr>
      <tr>
        <td id="L5847" class="blob-num js-line-number" data-line-number="5847"></td>
        <td id="LC5847" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L5848" class="blob-num js-line-number" data-line-number="5848"></td>
        <td id="LC5848" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractSingleFaceAndComputeResult</span>(parentResult, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>, <span class="pl-k">function</span> (<span class="pl-smi">face</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">ageGenderNet</span>.<span class="pl-en">predictAgeAndGender</span>(face); }, <span class="pl-c1">this</span>.<span class="pl-smi">extractedFaces</span>)];</td>
      </tr>
      <tr>
        <td id="L5849" class="blob-num js-line-number" data-line-number="5849"></td>
        <td id="LC5849" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L5850" class="blob-num js-line-number" data-line-number="5850"></td>
        <td id="LC5850" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>(), age <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">age</span>, gender <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">gender</span>, genderProbability <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">genderProbability</span>;</td>
      </tr>
      <tr>
        <td id="L5851" class="blob-num js-line-number" data-line-number="5851"></td>
        <td id="LC5851" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">extendWithAge</span>(<span class="pl-en">extendWithGender</span>(parentResult, gender, genderProbability), age)];</td>
      </tr>
      <tr>
        <td id="L5852" class="blob-num js-line-number" data-line-number="5852"></td>
        <td id="LC5852" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5853" class="blob-num js-line-number" data-line-number="5853"></td>
        <td id="LC5853" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5854" class="blob-num js-line-number" data-line-number="5854"></td>
        <td id="LC5854" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5855" class="blob-num js-line-number" data-line-number="5855"></td>
        <td id="LC5855" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5856" class="blob-num js-line-number" data-line-number="5856"></td>
        <td id="LC5856" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictSingleAgeAndGenderTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5857" class="blob-num js-line-number" data-line-number="5857"></td>
        <td id="LC5857" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleFaceExpressionsTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5858" class="blob-num js-line-number" data-line-number="5858"></td>
        <td id="LC5858" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5859" class="blob-num js-line-number" data-line-number="5859"></td>
        <td id="LC5859" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictSingleAgeAndGenderTask;</td>
      </tr>
      <tr>
        <td id="L5860" class="blob-num js-line-number" data-line-number="5860"></td>
        <td id="LC5860" class="blob-code blob-code-inner js-file-line">    }(PredictAgeAndGenderTaskBase));</td>
      </tr>
      <tr>
        <td id="L5861" class="blob-num js-line-number" data-line-number="5861"></td>
        <td id="LC5861" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictAllAgeAndGenderWithFaceAlignmentTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5862" class="blob-num js-line-number" data-line-number="5862"></td>
        <td id="LC5862" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictAllAgeAndGenderWithFaceAlignmentTask, _super);</td>
      </tr>
      <tr>
        <td id="L5863" class="blob-num js-line-number" data-line-number="5863"></td>
        <td id="LC5863" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictAllAgeAndGenderWithFaceAlignmentTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5864" class="blob-num js-line-number" data-line-number="5864"></td>
        <td id="LC5864" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5865" class="blob-num js-line-number" data-line-number="5865"></td>
        <td id="LC5865" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5866" class="blob-num js-line-number" data-line-number="5866"></td>
        <td id="LC5866" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictAllAgeAndGenderWithFaceAlignmentTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5867" class="blob-num js-line-number" data-line-number="5867"></td>
        <td id="LC5867" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllFaceExpressionsWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5868" class="blob-num js-line-number" data-line-number="5868"></td>
        <td id="LC5868" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5869" class="blob-num js-line-number" data-line-number="5869"></td>
        <td id="LC5869" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictAllAgeAndGenderWithFaceAlignmentTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceDescriptors</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5870" class="blob-num js-line-number" data-line-number="5870"></td>
        <td id="LC5870" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ComputeAllFaceDescriptorsTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5871" class="blob-num js-line-number" data-line-number="5871"></td>
        <td id="LC5871" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5872" class="blob-num js-line-number" data-line-number="5872"></td>
        <td id="LC5872" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictAllAgeAndGenderWithFaceAlignmentTask;</td>
      </tr>
      <tr>
        <td id="L5873" class="blob-num js-line-number" data-line-number="5873"></td>
        <td id="LC5873" class="blob-code blob-code-inner js-file-line">    }(PredictAllAgeAndGenderTask));</td>
      </tr>
      <tr>
        <td id="L5874" class="blob-num js-line-number" data-line-number="5874"></td>
        <td id="LC5874" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> PredictSingleAgeAndGenderWithFaceAlignmentTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5875" class="blob-num js-line-number" data-line-number="5875"></td>
        <td id="LC5875" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(PredictSingleAgeAndGenderWithFaceAlignmentTask, _super);</td>
      </tr>
      <tr>
        <td id="L5876" class="blob-num js-line-number" data-line-number="5876"></td>
        <td id="LC5876" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">PredictSingleAgeAndGenderWithFaceAlignmentTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5877" class="blob-num js-line-number" data-line-number="5877"></td>
        <td id="LC5877" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5878" class="blob-num js-line-number" data-line-number="5878"></td>
        <td id="LC5878" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5879" class="blob-num js-line-number" data-line-number="5879"></td>
        <td id="LC5879" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictSingleAgeAndGenderWithFaceAlignmentTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5880" class="blob-num js-line-number" data-line-number="5880"></td>
        <td id="LC5880" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleFaceExpressionsWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5881" class="blob-num js-line-number" data-line-number="5881"></td>
        <td id="LC5881" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5882" class="blob-num js-line-number" data-line-number="5882"></td>
        <td id="LC5882" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">PredictSingleAgeAndGenderWithFaceAlignmentTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceDescriptor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5883" class="blob-num js-line-number" data-line-number="5883"></td>
        <td id="LC5883" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ComputeSingleFaceDescriptorTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5884" class="blob-num js-line-number" data-line-number="5884"></td>
        <td id="LC5884" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5885" class="blob-num js-line-number" data-line-number="5885"></td>
        <td id="LC5885" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> PredictSingleAgeAndGenderWithFaceAlignmentTask;</td>
      </tr>
      <tr>
        <td id="L5886" class="blob-num js-line-number" data-line-number="5886"></td>
        <td id="LC5886" class="blob-code blob-code-inner js-file-line">    }(PredictSingleAgeAndGenderTask));</td>
      </tr>
      <tr>
        <td id="L5887" class="blob-num js-line-number" data-line-number="5887"></td>
        <td id="LC5887" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5888" class="blob-num js-line-number" data-line-number="5888"></td>
        <td id="LC5888" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ComputeFaceDescriptorsTaskBase <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5889" class="blob-num js-line-number" data-line-number="5889"></td>
        <td id="LC5889" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(ComputeFaceDescriptorsTaskBase, _super);</td>
      </tr>
      <tr>
        <td id="L5890" class="blob-num js-line-number" data-line-number="5890"></td>
        <td id="LC5890" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">ComputeFaceDescriptorsTaskBase</span>(<span class="pl-smi">parentTask</span>, <span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L5891" class="blob-num js-line-number" data-line-number="5891"></td>
        <td id="LC5891" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5892" class="blob-num js-line-number" data-line-number="5892"></td>
        <td id="LC5892" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">parentTask</span> <span class="pl-k">=</span> parentTask;</td>
      </tr>
      <tr>
        <td id="L5893" class="blob-num js-line-number" data-line-number="5893"></td>
        <td id="LC5893" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-c1">input</span> <span class="pl-k">=</span> input;</td>
      </tr>
      <tr>
        <td id="L5894" class="blob-num js-line-number" data-line-number="5894"></td>
        <td id="LC5894" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L5895" class="blob-num js-line-number" data-line-number="5895"></td>
        <td id="LC5895" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5896" class="blob-num js-line-number" data-line-number="5896"></td>
        <td id="LC5896" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ComputeFaceDescriptorsTaskBase;</td>
      </tr>
      <tr>
        <td id="L5897" class="blob-num js-line-number" data-line-number="5897"></td>
        <td id="LC5897" class="blob-code blob-code-inner js-file-line">    }(ComposableTask));</td>
      </tr>
      <tr>
        <td id="L5898" class="blob-num js-line-number" data-line-number="5898"></td>
        <td id="LC5898" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ComputeAllFaceDescriptorsTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5899" class="blob-num js-line-number" data-line-number="5899"></td>
        <td id="LC5899" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(ComputeAllFaceDescriptorsTask, _super);</td>
      </tr>
      <tr>
        <td id="L5900" class="blob-num js-line-number" data-line-number="5900"></td>
        <td id="LC5900" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">ComputeAllFaceDescriptorsTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5901" class="blob-num js-line-number" data-line-number="5901"></td>
        <td id="LC5901" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5902" class="blob-num js-line-number" data-line-number="5902"></td>
        <td id="LC5902" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5903" class="blob-num js-line-number" data-line-number="5903"></td>
        <td id="LC5903" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ComputeAllFaceDescriptorsTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5904" class="blob-num js-line-number" data-line-number="5904"></td>
        <td id="LC5904" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5905" class="blob-num js-line-number" data-line-number="5905"></td>
        <td id="LC5905" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> parentResults, descriptors;</td>
      </tr>
      <tr>
        <td id="L5906" class="blob-num js-line-number" data-line-number="5906"></td>
        <td id="LC5906" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5907" class="blob-num js-line-number" data-line-number="5907"></td>
        <td id="LC5907" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5908" class="blob-num js-line-number" data-line-number="5908"></td>
        <td id="LC5908" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">parentTask</span>];</td>
      </tr>
      <tr>
        <td id="L5909" class="blob-num js-line-number" data-line-number="5909"></td>
        <td id="LC5909" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5910" class="blob-num js-line-number" data-line-number="5910"></td>
        <td id="LC5910" class="blob-code blob-code-inner js-file-line">                            parentResults <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5911" class="blob-num js-line-number" data-line-number="5911"></td>
        <td id="LC5911" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractAllFacesAndComputeResults</span>(parentResults, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>, <span class="pl-k">function</span> (<span class="pl-smi">faces</span>) { <span class="pl-k">return</span> <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">faces</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">face</span>) {</td>
      </tr>
      <tr>
        <td id="L5912" class="blob-num js-line-number" data-line-number="5912"></td>
        <td id="LC5912" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceRecognitionNet</span>.<span class="pl-en">computeFaceDescriptor</span>(face);</td>
      </tr>
      <tr>
        <td id="L5913" class="blob-num js-line-number" data-line-number="5913"></td>
        <td id="LC5913" class="blob-code blob-code-inner js-file-line">                                })); }, <span class="pl-c1">null</span>, <span class="pl-k">function</span> (<span class="pl-smi">parentResult</span>) { <span class="pl-k">return</span> <span class="pl-smi">parentResult</span>.<span class="pl-smi">landmarks</span>.<span class="pl-c1">align</span>(<span class="pl-c1">null</span>, { useDlibAlignment<span class="pl-k">:</span> <span class="pl-c1">true</span> }); })];</td>
      </tr>
      <tr>
        <td id="L5914" class="blob-num js-line-number" data-line-number="5914"></td>
        <td id="LC5914" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L5915" class="blob-num js-line-number" data-line-number="5915"></td>
        <td id="LC5915" class="blob-code blob-code-inner js-file-line">                            descriptors <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5916" class="blob-num js-line-number" data-line-number="5916"></td>
        <td id="LC5916" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">descriptors</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">descriptor</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> <span class="pl-en">extendWithFaceDescriptor</span>(parentResults[i], descriptor); })];</td>
      </tr>
      <tr>
        <td id="L5917" class="blob-num js-line-number" data-line-number="5917"></td>
        <td id="LC5917" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5918" class="blob-num js-line-number" data-line-number="5918"></td>
        <td id="LC5918" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5919" class="blob-num js-line-number" data-line-number="5919"></td>
        <td id="LC5919" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5920" class="blob-num js-line-number" data-line-number="5920"></td>
        <td id="LC5920" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5921" class="blob-num js-line-number" data-line-number="5921"></td>
        <td id="LC5921" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ComputeAllFaceDescriptorsTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5922" class="blob-num js-line-number" data-line-number="5922"></td>
        <td id="LC5922" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllFaceExpressionsWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5923" class="blob-num js-line-number" data-line-number="5923"></td>
        <td id="LC5923" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5924" class="blob-num js-line-number" data-line-number="5924"></td>
        <td id="LC5924" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ComputeAllFaceDescriptorsTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5925" class="blob-num js-line-number" data-line-number="5925"></td>
        <td id="LC5925" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllAgeAndGenderWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5926" class="blob-num js-line-number" data-line-number="5926"></td>
        <td id="LC5926" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5927" class="blob-num js-line-number" data-line-number="5927"></td>
        <td id="LC5927" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ComputeAllFaceDescriptorsTask;</td>
      </tr>
      <tr>
        <td id="L5928" class="blob-num js-line-number" data-line-number="5928"></td>
        <td id="LC5928" class="blob-code blob-code-inner js-file-line">    }(ComputeFaceDescriptorsTaskBase));</td>
      </tr>
      <tr>
        <td id="L5929" class="blob-num js-line-number" data-line-number="5929"></td>
        <td id="LC5929" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ComputeSingleFaceDescriptorTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5930" class="blob-num js-line-number" data-line-number="5930"></td>
        <td id="LC5930" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(ComputeSingleFaceDescriptorTask, _super);</td>
      </tr>
      <tr>
        <td id="L5931" class="blob-num js-line-number" data-line-number="5931"></td>
        <td id="LC5931" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">ComputeSingleFaceDescriptorTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5932" class="blob-num js-line-number" data-line-number="5932"></td>
        <td id="LC5932" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5933" class="blob-num js-line-number" data-line-number="5933"></td>
        <td id="LC5933" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5934" class="blob-num js-line-number" data-line-number="5934"></td>
        <td id="LC5934" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ComputeSingleFaceDescriptorTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5935" class="blob-num js-line-number" data-line-number="5935"></td>
        <td id="LC5935" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5936" class="blob-num js-line-number" data-line-number="5936"></td>
        <td id="LC5936" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> parentResult, descriptor;</td>
      </tr>
      <tr>
        <td id="L5937" class="blob-num js-line-number" data-line-number="5937"></td>
        <td id="LC5937" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L5938" class="blob-num js-line-number" data-line-number="5938"></td>
        <td id="LC5938" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5939" class="blob-num js-line-number" data-line-number="5939"></td>
        <td id="LC5939" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">parentTask</span>];</td>
      </tr>
      <tr>
        <td id="L5940" class="blob-num js-line-number" data-line-number="5940"></td>
        <td id="LC5940" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5941" class="blob-num js-line-number" data-line-number="5941"></td>
        <td id="LC5941" class="blob-code blob-code-inner js-file-line">                            parentResult <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5942" class="blob-num js-line-number" data-line-number="5942"></td>
        <td id="LC5942" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>parentResult) {</td>
      </tr>
      <tr>
        <td id="L5943" class="blob-num js-line-number" data-line-number="5943"></td>
        <td id="LC5943" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>];</td>
      </tr>
      <tr>
        <td id="L5944" class="blob-num js-line-number" data-line-number="5944"></td>
        <td id="LC5944" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L5945" class="blob-num js-line-number" data-line-number="5945"></td>
        <td id="LC5945" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractSingleFaceAndComputeResult</span>(parentResult, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>, <span class="pl-k">function</span> (<span class="pl-smi">face</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceRecognitionNet</span>.<span class="pl-en">computeFaceDescriptor</span>(face); }, <span class="pl-c1">null</span>, <span class="pl-k">function</span> (<span class="pl-smi">parentResult</span>) { <span class="pl-k">return</span> <span class="pl-smi">parentResult</span>.<span class="pl-smi">landmarks</span>.<span class="pl-c1">align</span>(<span class="pl-c1">null</span>, { useDlibAlignment<span class="pl-k">:</span> <span class="pl-c1">true</span> }); })];</td>
      </tr>
      <tr>
        <td id="L5946" class="blob-num js-line-number" data-line-number="5946"></td>
        <td id="LC5946" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L5947" class="blob-num js-line-number" data-line-number="5947"></td>
        <td id="LC5947" class="blob-code blob-code-inner js-file-line">                            descriptor <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5948" class="blob-num js-line-number" data-line-number="5948"></td>
        <td id="LC5948" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">extendWithFaceDescriptor</span>(parentResult, descriptor)];</td>
      </tr>
      <tr>
        <td id="L5949" class="blob-num js-line-number" data-line-number="5949"></td>
        <td id="LC5949" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L5950" class="blob-num js-line-number" data-line-number="5950"></td>
        <td id="LC5950" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L5951" class="blob-num js-line-number" data-line-number="5951"></td>
        <td id="LC5951" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L5952" class="blob-num js-line-number" data-line-number="5952"></td>
        <td id="LC5952" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5953" class="blob-num js-line-number" data-line-number="5953"></td>
        <td id="LC5953" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ComputeSingleFaceDescriptorTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5954" class="blob-num js-line-number" data-line-number="5954"></td>
        <td id="LC5954" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleFaceExpressionsWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5955" class="blob-num js-line-number" data-line-number="5955"></td>
        <td id="LC5955" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5956" class="blob-num js-line-number" data-line-number="5956"></td>
        <td id="LC5956" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">ComputeSingleFaceDescriptorTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5957" class="blob-num js-line-number" data-line-number="5957"></td>
        <td id="LC5957" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleAgeAndGenderWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L5958" class="blob-num js-line-number" data-line-number="5958"></td>
        <td id="LC5958" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5959" class="blob-num js-line-number" data-line-number="5959"></td>
        <td id="LC5959" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ComputeSingleFaceDescriptorTask;</td>
      </tr>
      <tr>
        <td id="L5960" class="blob-num js-line-number" data-line-number="5960"></td>
        <td id="LC5960" class="blob-code blob-code-inner js-file-line">    }(ComputeFaceDescriptorsTaskBase));</td>
      </tr>
      <tr>
        <td id="L5961" class="blob-num js-line-number" data-line-number="5961"></td>
        <td id="LC5961" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5962" class="blob-num js-line-number" data-line-number="5962"></td>
        <td id="LC5962" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DetectFaceLandmarksTaskBase <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5963" class="blob-num js-line-number" data-line-number="5963"></td>
        <td id="LC5963" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(DetectFaceLandmarksTaskBase, _super);</td>
      </tr>
      <tr>
        <td id="L5964" class="blob-num js-line-number" data-line-number="5964"></td>
        <td id="LC5964" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DetectFaceLandmarksTaskBase</span>(<span class="pl-smi">parentTask</span>, <span class="pl-smi">input</span>, <span class="pl-smi">useTinyLandmarkNet</span>) {</td>
      </tr>
      <tr>
        <td id="L5965" class="blob-num js-line-number" data-line-number="5965"></td>
        <td id="LC5965" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5966" class="blob-num js-line-number" data-line-number="5966"></td>
        <td id="LC5966" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">parentTask</span> <span class="pl-k">=</span> parentTask;</td>
      </tr>
      <tr>
        <td id="L5967" class="blob-num js-line-number" data-line-number="5967"></td>
        <td id="LC5967" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-c1">input</span> <span class="pl-k">=</span> input;</td>
      </tr>
      <tr>
        <td id="L5968" class="blob-num js-line-number" data-line-number="5968"></td>
        <td id="LC5968" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-smi">useTinyLandmarkNet</span> <span class="pl-k">=</span> useTinyLandmarkNet;</td>
      </tr>
      <tr>
        <td id="L5969" class="blob-num js-line-number" data-line-number="5969"></td>
        <td id="LC5969" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L5970" class="blob-num js-line-number" data-line-number="5970"></td>
        <td id="LC5970" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5971" class="blob-num js-line-number" data-line-number="5971"></td>
        <td id="LC5971" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">DetectFaceLandmarksTaskBase</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>landmarkNet<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L5972" class="blob-num js-line-number" data-line-number="5972"></td>
        <td id="LC5972" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5973" class="blob-num js-line-number" data-line-number="5973"></td>
        <td id="LC5973" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">useTinyLandmarkNet</span></td>
      </tr>
      <tr>
        <td id="L5974" class="blob-num js-line-number" data-line-number="5974"></td>
        <td id="LC5974" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">?</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceLandmark68TinyNet</span></td>
      </tr>
      <tr>
        <td id="L5975" class="blob-num js-line-number" data-line-number="5975"></td>
        <td id="LC5975" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">:</span> <span class="pl-smi">nets</span>.<span class="pl-smi">faceLandmark68Net</span>;</td>
      </tr>
      <tr>
        <td id="L5976" class="blob-num js-line-number" data-line-number="5976"></td>
        <td id="LC5976" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L5977" class="blob-num js-line-number" data-line-number="5977"></td>
        <td id="LC5977" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L5978" class="blob-num js-line-number" data-line-number="5978"></td>
        <td id="LC5978" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L5979" class="blob-num js-line-number" data-line-number="5979"></td>
        <td id="LC5979" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5980" class="blob-num js-line-number" data-line-number="5980"></td>
        <td id="LC5980" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DetectFaceLandmarksTaskBase;</td>
      </tr>
      <tr>
        <td id="L5981" class="blob-num js-line-number" data-line-number="5981"></td>
        <td id="LC5981" class="blob-code blob-code-inner js-file-line">    }(ComposableTask));</td>
      </tr>
      <tr>
        <td id="L5982" class="blob-num js-line-number" data-line-number="5982"></td>
        <td id="LC5982" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DetectAllFaceLandmarksTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L5983" class="blob-num js-line-number" data-line-number="5983"></td>
        <td id="LC5983" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(DetectAllFaceLandmarksTask, _super);</td>
      </tr>
      <tr>
        <td id="L5984" class="blob-num js-line-number" data-line-number="5984"></td>
        <td id="LC5984" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DetectAllFaceLandmarksTask</span>() {</td>
      </tr>
      <tr>
        <td id="L5985" class="blob-num js-line-number" data-line-number="5985"></td>
        <td id="LC5985" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5986" class="blob-num js-line-number" data-line-number="5986"></td>
        <td id="LC5986" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5987" class="blob-num js-line-number" data-line-number="5987"></td>
        <td id="LC5987" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectAllFaceLandmarksTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5988" class="blob-num js-line-number" data-line-number="5988"></td>
        <td id="LC5988" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L5989" class="blob-num js-line-number" data-line-number="5989"></td>
        <td id="LC5989" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> parentResults, detections, faces, _a, faceLandmarksByFace;</td>
      </tr>
      <tr>
        <td id="L5990" class="blob-num js-line-number" data-line-number="5990"></td>
        <td id="LC5990" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L5991" class="blob-num js-line-number" data-line-number="5991"></td>
        <td id="LC5991" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L5992" class="blob-num js-line-number" data-line-number="5992"></td>
        <td id="LC5992" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L5993" class="blob-num js-line-number" data-line-number="5993"></td>
        <td id="LC5993" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">parentTask</span>];</td>
      </tr>
      <tr>
        <td id="L5994" class="blob-num js-line-number" data-line-number="5994"></td>
        <td id="LC5994" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L5995" class="blob-num js-line-number" data-line-number="5995"></td>
        <td id="LC5995" class="blob-code blob-code-inner js-file-line">                            parentResults <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L5996" class="blob-num js-line-number" data-line-number="5996"></td>
        <td id="LC5996" class="blob-code blob-code-inner js-file-line">                            detections <span class="pl-k">=</span> <span class="pl-smi">parentResults</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>) { <span class="pl-k">return</span> <span class="pl-smi">res</span>.<span class="pl-smi">detection</span>; });</td>
      </tr>
      <tr>
        <td id="L5997" class="blob-num js-line-number" data-line-number="5997"></td>
        <td id="LC5997" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-c1">this</span>.<span class="pl-c1">input</span> <span class="pl-k">instanceof</span> Tensor)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L5998" class="blob-num js-line-number" data-line-number="5998"></td>
        <td id="LC5998" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractFaceTensors</span>(<span class="pl-c1">this</span>.<span class="pl-c1">input</span>, detections)];</td>
      </tr>
      <tr>
        <td id="L5999" class="blob-num js-line-number" data-line-number="5999"></td>
        <td id="LC5999" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L6000" class="blob-num js-line-number" data-line-number="6000"></td>
        <td id="LC6000" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6001" class="blob-num js-line-number" data-line-number="6001"></td>
        <td id="LC6001" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">5</span>];</td>
      </tr>
      <tr>
        <td id="L6002" class="blob-num js-line-number" data-line-number="6002"></td>
        <td id="LC6002" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">3</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractFaces</span>(<span class="pl-c1">this</span>.<span class="pl-c1">input</span>, detections)];</td>
      </tr>
      <tr>
        <td id="L6003" class="blob-num js-line-number" data-line-number="6003"></td>
        <td id="LC6003" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">4</span>:</td>
      </tr>
      <tr>
        <td id="L6004" class="blob-num js-line-number" data-line-number="6004"></td>
        <td id="LC6004" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6005" class="blob-num js-line-number" data-line-number="6005"></td>
        <td id="LC6005" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">_b</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L6006" class="blob-num js-line-number" data-line-number="6006"></td>
        <td id="LC6006" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">5</span>:</td>
      </tr>
      <tr>
        <td id="L6007" class="blob-num js-line-number" data-line-number="6007"></td>
        <td id="LC6007" class="blob-code blob-code-inner js-file-line">                            faces <span class="pl-k">=</span> _a;</td>
      </tr>
      <tr>
        <td id="L6008" class="blob-num js-line-number" data-line-number="6008"></td>
        <td id="LC6008" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">Promise</span>.<span class="pl-c1">all</span>(<span class="pl-smi">faces</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">face</span>) { <span class="pl-k">return</span> <span class="pl-smi">_this</span>.<span class="pl-smi">landmarkNet</span>.<span class="pl-en">detectLandmarks</span>(face); }))];</td>
      </tr>
      <tr>
        <td id="L6009" class="blob-num js-line-number" data-line-number="6009"></td>
        <td id="LC6009" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">6</span>:</td>
      </tr>
      <tr>
        <td id="L6010" class="blob-num js-line-number" data-line-number="6010"></td>
        <td id="LC6010" class="blob-code blob-code-inner js-file-line">                            faceLandmarksByFace <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6011" class="blob-num js-line-number" data-line-number="6011"></td>
        <td id="LC6011" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">faces</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">f</span>) { <span class="pl-k">return</span> f <span class="pl-k">instanceof</span> Tensor <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">f</span>.<span class="pl-en">dispose</span>(); });</td>
      </tr>
      <tr>
        <td id="L6012" class="blob-num js-line-number" data-line-number="6012"></td>
        <td id="LC6012" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">parentResults</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">parentResult</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6013" class="blob-num js-line-number" data-line-number="6013"></td>
        <td id="LC6013" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">return</span> <span class="pl-en">extendWithFaceLandmarks</span>(parentResult, faceLandmarksByFace[i]);</td>
      </tr>
      <tr>
        <td id="L6014" class="blob-num js-line-number" data-line-number="6014"></td>
        <td id="LC6014" class="blob-code blob-code-inner js-file-line">                                })];</td>
      </tr>
      <tr>
        <td id="L6015" class="blob-num js-line-number" data-line-number="6015"></td>
        <td id="LC6015" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L6016" class="blob-num js-line-number" data-line-number="6016"></td>
        <td id="LC6016" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L6017" class="blob-num js-line-number" data-line-number="6017"></td>
        <td id="LC6017" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6018" class="blob-num js-line-number" data-line-number="6018"></td>
        <td id="LC6018" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6019" class="blob-num js-line-number" data-line-number="6019"></td>
        <td id="LC6019" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectAllFaceLandmarksTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6020" class="blob-num js-line-number" data-line-number="6020"></td>
        <td id="LC6020" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllFaceExpressionsWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6021" class="blob-num js-line-number" data-line-number="6021"></td>
        <td id="LC6021" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6022" class="blob-num js-line-number" data-line-number="6022"></td>
        <td id="LC6022" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectAllFaceLandmarksTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6023" class="blob-num js-line-number" data-line-number="6023"></td>
        <td id="LC6023" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllAgeAndGenderWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6024" class="blob-num js-line-number" data-line-number="6024"></td>
        <td id="LC6024" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6025" class="blob-num js-line-number" data-line-number="6025"></td>
        <td id="LC6025" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectAllFaceLandmarksTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceDescriptors</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6026" class="blob-num js-line-number" data-line-number="6026"></td>
        <td id="LC6026" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ComputeAllFaceDescriptorsTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6027" class="blob-num js-line-number" data-line-number="6027"></td>
        <td id="LC6027" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6028" class="blob-num js-line-number" data-line-number="6028"></td>
        <td id="LC6028" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DetectAllFaceLandmarksTask;</td>
      </tr>
      <tr>
        <td id="L6029" class="blob-num js-line-number" data-line-number="6029"></td>
        <td id="LC6029" class="blob-code blob-code-inner js-file-line">    }(DetectFaceLandmarksTaskBase));</td>
      </tr>
      <tr>
        <td id="L6030" class="blob-num js-line-number" data-line-number="6030"></td>
        <td id="LC6030" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DetectSingleFaceLandmarksTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L6031" class="blob-num js-line-number" data-line-number="6031"></td>
        <td id="LC6031" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(DetectSingleFaceLandmarksTask, _super);</td>
      </tr>
      <tr>
        <td id="L6032" class="blob-num js-line-number" data-line-number="6032"></td>
        <td id="LC6032" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DetectSingleFaceLandmarksTask</span>() {</td>
      </tr>
      <tr>
        <td id="L6033" class="blob-num js-line-number" data-line-number="6033"></td>
        <td id="LC6033" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L6034" class="blob-num js-line-number" data-line-number="6034"></td>
        <td id="LC6034" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6035" class="blob-num js-line-number" data-line-number="6035"></td>
        <td id="LC6035" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectSingleFaceLandmarksTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6036" class="blob-num js-line-number" data-line-number="6036"></td>
        <td id="LC6036" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6037" class="blob-num js-line-number" data-line-number="6037"></td>
        <td id="LC6037" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> parentResult, detection, faces, _a, landmarks;</td>
      </tr>
      <tr>
        <td id="L6038" class="blob-num js-line-number" data-line-number="6038"></td>
        <td id="LC6038" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L6039" class="blob-num js-line-number" data-line-number="6039"></td>
        <td id="LC6039" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L6040" class="blob-num js-line-number" data-line-number="6040"></td>
        <td id="LC6040" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">parentTask</span>];</td>
      </tr>
      <tr>
        <td id="L6041" class="blob-num js-line-number" data-line-number="6041"></td>
        <td id="LC6041" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L6042" class="blob-num js-line-number" data-line-number="6042"></td>
        <td id="LC6042" class="blob-code blob-code-inner js-file-line">                            parentResult <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6043" class="blob-num js-line-number" data-line-number="6043"></td>
        <td id="LC6043" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>parentResult) {</td>
      </tr>
      <tr>
        <td id="L6044" class="blob-num js-line-number" data-line-number="6044"></td>
        <td id="LC6044" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>];</td>
      </tr>
      <tr>
        <td id="L6045" class="blob-num js-line-number" data-line-number="6045"></td>
        <td id="LC6045" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L6046" class="blob-num js-line-number" data-line-number="6046"></td>
        <td id="LC6046" class="blob-code blob-code-inner js-file-line">                            detection <span class="pl-k">=</span> <span class="pl-smi">parentResult</span>.<span class="pl-smi">detection</span>;</td>
      </tr>
      <tr>
        <td id="L6047" class="blob-num js-line-number" data-line-number="6047"></td>
        <td id="LC6047" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-c1">this</span>.<span class="pl-c1">input</span> <span class="pl-k">instanceof</span> Tensor)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L6048" class="blob-num js-line-number" data-line-number="6048"></td>
        <td id="LC6048" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractFaceTensors</span>(<span class="pl-c1">this</span>.<span class="pl-c1">input</span>, [detection])];</td>
      </tr>
      <tr>
        <td id="L6049" class="blob-num js-line-number" data-line-number="6049"></td>
        <td id="LC6049" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L6050" class="blob-num js-line-number" data-line-number="6050"></td>
        <td id="LC6050" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6051" class="blob-num js-line-number" data-line-number="6051"></td>
        <td id="LC6051" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">5</span>];</td>
      </tr>
      <tr>
        <td id="L6052" class="blob-num js-line-number" data-line-number="6052"></td>
        <td id="LC6052" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">3</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">extractFaces</span>(<span class="pl-c1">this</span>.<span class="pl-c1">input</span>, [detection])];</td>
      </tr>
      <tr>
        <td id="L6053" class="blob-num js-line-number" data-line-number="6053"></td>
        <td id="LC6053" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">4</span>:</td>
      </tr>
      <tr>
        <td id="L6054" class="blob-num js-line-number" data-line-number="6054"></td>
        <td id="LC6054" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6055" class="blob-num js-line-number" data-line-number="6055"></td>
        <td id="LC6055" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">_b</span>.<span class="pl-c1">label</span> <span class="pl-k">=</span> <span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L6056" class="blob-num js-line-number" data-line-number="6056"></td>
        <td id="LC6056" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">5</span>:</td>
      </tr>
      <tr>
        <td id="L6057" class="blob-num js-line-number" data-line-number="6057"></td>
        <td id="LC6057" class="blob-code blob-code-inner js-file-line">                            faces <span class="pl-k">=</span> _a;</td>
      </tr>
      <tr>
        <td id="L6058" class="blob-num js-line-number" data-line-number="6058"></td>
        <td id="LC6058" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">landmarkNet</span>.<span class="pl-en">detectLandmarks</span>(faces[<span class="pl-c1">0</span>])];</td>
      </tr>
      <tr>
        <td id="L6059" class="blob-num js-line-number" data-line-number="6059"></td>
        <td id="LC6059" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">6</span>:</td>
      </tr>
      <tr>
        <td id="L6060" class="blob-num js-line-number" data-line-number="6060"></td>
        <td id="LC6060" class="blob-code blob-code-inner js-file-line">                            landmarks <span class="pl-k">=</span> <span class="pl-smi">_b</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6061" class="blob-num js-line-number" data-line-number="6061"></td>
        <td id="LC6061" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">faces</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">f</span>) { <span class="pl-k">return</span> f <span class="pl-k">instanceof</span> Tensor <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">f</span>.<span class="pl-en">dispose</span>(); });</td>
      </tr>
      <tr>
        <td id="L6062" class="blob-num js-line-number" data-line-number="6062"></td>
        <td id="LC6062" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">extendWithFaceLandmarks</span>(parentResult, landmarks)];</td>
      </tr>
      <tr>
        <td id="L6063" class="blob-num js-line-number" data-line-number="6063"></td>
        <td id="LC6063" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L6064" class="blob-num js-line-number" data-line-number="6064"></td>
        <td id="LC6064" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L6065" class="blob-num js-line-number" data-line-number="6065"></td>
        <td id="LC6065" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6066" class="blob-num js-line-number" data-line-number="6066"></td>
        <td id="LC6066" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6067" class="blob-num js-line-number" data-line-number="6067"></td>
        <td id="LC6067" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectSingleFaceLandmarksTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6068" class="blob-num js-line-number" data-line-number="6068"></td>
        <td id="LC6068" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleFaceExpressionsWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6069" class="blob-num js-line-number" data-line-number="6069"></td>
        <td id="LC6069" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6070" class="blob-num js-line-number" data-line-number="6070"></td>
        <td id="LC6070" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectSingleFaceLandmarksTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6071" class="blob-num js-line-number" data-line-number="6071"></td>
        <td id="LC6071" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleAgeAndGenderWithFaceAlignmentTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6072" class="blob-num js-line-number" data-line-number="6072"></td>
        <td id="LC6072" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6073" class="blob-num js-line-number" data-line-number="6073"></td>
        <td id="LC6073" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectSingleFaceLandmarksTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceDescriptor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6074" class="blob-num js-line-number" data-line-number="6074"></td>
        <td id="LC6074" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ComputeSingleFaceDescriptorTask</span>(<span class="pl-c1">this</span>, <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6075" class="blob-num js-line-number" data-line-number="6075"></td>
        <td id="LC6075" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6076" class="blob-num js-line-number" data-line-number="6076"></td>
        <td id="LC6076" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DetectSingleFaceLandmarksTask;</td>
      </tr>
      <tr>
        <td id="L6077" class="blob-num js-line-number" data-line-number="6077"></td>
        <td id="LC6077" class="blob-code blob-code-inner js-file-line">    }(DetectFaceLandmarksTaskBase));</td>
      </tr>
      <tr>
        <td id="L6078" class="blob-num js-line-number" data-line-number="6078"></td>
        <td id="LC6078" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6079" class="blob-num js-line-number" data-line-number="6079"></td>
        <td id="LC6079" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DetectFacesTaskBase <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L6080" class="blob-num js-line-number" data-line-number="6080"></td>
        <td id="LC6080" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(DetectFacesTaskBase, _super);</td>
      </tr>
      <tr>
        <td id="L6081" class="blob-num js-line-number" data-line-number="6081"></td>
        <td id="LC6081" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DetectFacesTaskBase</span>(<span class="pl-smi">input</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L6082" class="blob-num js-line-number" data-line-number="6082"></td>
        <td id="LC6082" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">SsdMobilenetv1Options</span>(); }</td>
      </tr>
      <tr>
        <td id="L6083" class="blob-num js-line-number" data-line-number="6083"></td>
        <td id="LC6083" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-smi">_super</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L6084" class="blob-num js-line-number" data-line-number="6084"></td>
        <td id="LC6084" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-c1">input</span> <span class="pl-k">=</span> input;</td>
      </tr>
      <tr>
        <td id="L6085" class="blob-num js-line-number" data-line-number="6085"></td>
        <td id="LC6085" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">_this</span>.<span class="pl-c1">options</span> <span class="pl-k">=</span> options;</td>
      </tr>
      <tr>
        <td id="L6086" class="blob-num js-line-number" data-line-number="6086"></td>
        <td id="LC6086" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _this;</td>
      </tr>
      <tr>
        <td id="L6087" class="blob-num js-line-number" data-line-number="6087"></td>
        <td id="LC6087" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6088" class="blob-num js-line-number" data-line-number="6088"></td>
        <td id="LC6088" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DetectFacesTaskBase;</td>
      </tr>
      <tr>
        <td id="L6089" class="blob-num js-line-number" data-line-number="6089"></td>
        <td id="LC6089" class="blob-code blob-code-inner js-file-line">    }(ComposableTask));</td>
      </tr>
      <tr>
        <td id="L6090" class="blob-num js-line-number" data-line-number="6090"></td>
        <td id="LC6090" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DetectAllFacesTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L6091" class="blob-num js-line-number" data-line-number="6091"></td>
        <td id="LC6091" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(DetectAllFacesTask, _super);</td>
      </tr>
      <tr>
        <td id="L6092" class="blob-num js-line-number" data-line-number="6092"></td>
        <td id="LC6092" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DetectAllFacesTask</span>() {</td>
      </tr>
      <tr>
        <td id="L6093" class="blob-num js-line-number" data-line-number="6093"></td>
        <td id="LC6093" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L6094" class="blob-num js-line-number" data-line-number="6094"></td>
        <td id="LC6094" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6095" class="blob-num js-line-number" data-line-number="6095"></td>
        <td id="LC6095" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectAllFacesTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6096" class="blob-num js-line-number" data-line-number="6096"></td>
        <td id="LC6096" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6097" class="blob-num js-line-number" data-line-number="6097"></td>
        <td id="LC6097" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> _a, input, options, faceDetectionFunction;</td>
      </tr>
      <tr>
        <td id="L6098" class="blob-num js-line-number" data-line-number="6098"></td>
        <td id="LC6098" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_b</span>) {</td>
      </tr>
      <tr>
        <td id="L6099" class="blob-num js-line-number" data-line-number="6099"></td>
        <td id="LC6099" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_b</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L6100" class="blob-num js-line-number" data-line-number="6100"></td>
        <td id="LC6100" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>:</td>
      </tr>
      <tr>
        <td id="L6101" class="blob-num js-line-number" data-line-number="6101"></td>
        <td id="LC6101" class="blob-code blob-code-inner js-file-line">                            _a <span class="pl-k">=</span> <span class="pl-c1">this</span>, input <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">input</span>, options <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">options</span>;</td>
      </tr>
      <tr>
        <td id="L6102" class="blob-num js-line-number" data-line-number="6102"></td>
        <td id="LC6102" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>(options <span class="pl-k">instanceof</span> MtcnnOptions)) <span class="pl-k">return</span> [<span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">/*</span>break<span class="pl-c">*/</span></span>, <span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L6103" class="blob-num js-line-number" data-line-number="6103"></td>
        <td id="LC6103" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-smi">nets</span>.<span class="pl-smi">mtcnn</span>.<span class="pl-c1">forward</span>(input, options)];</td>
      </tr>
      <tr>
        <td id="L6104" class="blob-num js-line-number" data-line-number="6104"></td>
        <td id="LC6104" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, (<span class="pl-smi">_b</span>.<span class="pl-en">sent</span>())</td>
      </tr>
      <tr>
        <td id="L6105" class="blob-num js-line-number" data-line-number="6105"></td>
        <td id="LC6105" class="blob-code blob-code-inner js-file-line">                                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">result</span>) { <span class="pl-k">return</span> <span class="pl-smi">result</span>.<span class="pl-smi">detection</span>; })];</td>
      </tr>
      <tr>
        <td id="L6106" class="blob-num js-line-number" data-line-number="6106"></td>
        <td id="LC6106" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">2</span>:</td>
      </tr>
      <tr>
        <td id="L6107" class="blob-num js-line-number" data-line-number="6107"></td>
        <td id="LC6107" class="blob-code blob-code-inner js-file-line">                            faceDetectionFunction <span class="pl-k">=</span> options <span class="pl-k">instanceof</span> TinyFaceDetectorOptions</td>
      </tr>
      <tr>
        <td id="L6108" class="blob-num js-line-number" data-line-number="6108"></td>
        <td id="LC6108" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">?</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">tinyFaceDetector</span>.<span class="pl-en">locateFaces</span>(input, options); }</td>
      </tr>
      <tr>
        <td id="L6109" class="blob-num js-line-number" data-line-number="6109"></td>
        <td id="LC6109" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">:</span> (options <span class="pl-k">instanceof</span> SsdMobilenetv1Options</td>
      </tr>
      <tr>
        <td id="L6110" class="blob-num js-line-number" data-line-number="6110"></td>
        <td id="LC6110" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">?</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">ssdMobilenetv1</span>.<span class="pl-en">locateFaces</span>(input, options); }</td>
      </tr>
      <tr>
        <td id="L6111" class="blob-num js-line-number" data-line-number="6111"></td>
        <td id="LC6111" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">:</span> (options <span class="pl-k">instanceof</span> TinyYolov2Options</td>
      </tr>
      <tr>
        <td id="L6112" class="blob-num js-line-number" data-line-number="6112"></td>
        <td id="LC6112" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">?</span> <span class="pl-k">function</span> (<span class="pl-smi">input</span>) { <span class="pl-k">return</span> <span class="pl-smi">nets</span>.<span class="pl-smi">tinyYolov2</span>.<span class="pl-en">locateFaces</span>(input, options); }</td>
      </tr>
      <tr>
        <td id="L6113" class="blob-num js-line-number" data-line-number="6113"></td>
        <td id="LC6113" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">:</span> <span class="pl-c1">null</span>));</td>
      </tr>
      <tr>
        <td id="L6114" class="blob-num js-line-number" data-line-number="6114"></td>
        <td id="LC6114" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-k">!</span>faceDetectionFunction) {</td>
      </tr>
      <tr>
        <td id="L6115" class="blob-num js-line-number" data-line-number="6115"></td>
        <td id="LC6115" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6116" class="blob-num js-line-number" data-line-number="6116"></td>
        <td id="LC6116" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L6117" class="blob-num js-line-number" data-line-number="6117"></td>
        <td id="LC6117" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">faceDetectionFunction</span>(input)];</td>
      </tr>
      <tr>
        <td id="L6118" class="blob-num js-line-number" data-line-number="6118"></td>
        <td id="LC6118" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L6119" class="blob-num js-line-number" data-line-number="6119"></td>
        <td id="LC6119" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L6120" class="blob-num js-line-number" data-line-number="6120"></td>
        <td id="LC6120" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6121" class="blob-num js-line-number" data-line-number="6121"></td>
        <td id="LC6121" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6122" class="blob-num js-line-number" data-line-number="6122"></td>
        <td id="LC6122" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectAllFacesTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">runAndExtendWithFaceDetections</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6123" class="blob-num js-line-number" data-line-number="6123"></td>
        <td id="LC6123" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L6124" class="blob-num js-line-number" data-line-number="6124"></td>
        <td id="LC6124" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Promise</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>) { <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(_this, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6125" class="blob-num js-line-number" data-line-number="6125"></td>
        <td id="LC6125" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> detections;</td>
      </tr>
      <tr>
        <td id="L6126" class="blob-num js-line-number" data-line-number="6126"></td>
        <td id="LC6126" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L6127" class="blob-num js-line-number" data-line-number="6127"></td>
        <td id="LC6127" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L6128" class="blob-num js-line-number" data-line-number="6128"></td>
        <td id="LC6128" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">run</span>()];</td>
      </tr>
      <tr>
        <td id="L6129" class="blob-num js-line-number" data-line-number="6129"></td>
        <td id="LC6129" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L6130" class="blob-num js-line-number" data-line-number="6130"></td>
        <td id="LC6130" class="blob-code blob-code-inner js-file-line">                            detections <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6131" class="blob-num js-line-number" data-line-number="6131"></td>
        <td id="LC6131" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">res</span>(<span class="pl-smi">detections</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">detection</span>) { <span class="pl-k">return</span> <span class="pl-en">extendWithFaceDetection</span>({}, detection); }))];</td>
      </tr>
      <tr>
        <td id="L6132" class="blob-num js-line-number" data-line-number="6132"></td>
        <td id="LC6132" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L6133" class="blob-num js-line-number" data-line-number="6133"></td>
        <td id="LC6133" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L6134" class="blob-num js-line-number" data-line-number="6134"></td>
        <td id="LC6134" class="blob-code blob-code-inner js-file-line">            }); });</td>
      </tr>
      <tr>
        <td id="L6135" class="blob-num js-line-number" data-line-number="6135"></td>
        <td id="LC6135" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6136" class="blob-num js-line-number" data-line-number="6136"></td>
        <td id="LC6136" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectAllFacesTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceLandmarks</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">useTinyLandmarkNet</span>) {</td>
      </tr>
      <tr>
        <td id="L6137" class="blob-num js-line-number" data-line-number="6137"></td>
        <td id="LC6137" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (useTinyLandmarkNet <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { useTinyLandmarkNet <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L6138" class="blob-num js-line-number" data-line-number="6138"></td>
        <td id="LC6138" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">DetectAllFaceLandmarksTask</span>(<span class="pl-c1">this</span>.<span class="pl-en">runAndExtendWithFaceDetections</span>(), <span class="pl-c1">this</span>.<span class="pl-c1">input</span>, useTinyLandmarkNet);</td>
      </tr>
      <tr>
        <td id="L6139" class="blob-num js-line-number" data-line-number="6139"></td>
        <td id="LC6139" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6140" class="blob-num js-line-number" data-line-number="6140"></td>
        <td id="LC6140" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectAllFacesTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6141" class="blob-num js-line-number" data-line-number="6141"></td>
        <td id="LC6141" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllFaceExpressionsTask</span>(<span class="pl-c1">this</span>.<span class="pl-en">runAndExtendWithFaceDetections</span>(), <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6142" class="blob-num js-line-number" data-line-number="6142"></td>
        <td id="LC6142" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6143" class="blob-num js-line-number" data-line-number="6143"></td>
        <td id="LC6143" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectAllFacesTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6144" class="blob-num js-line-number" data-line-number="6144"></td>
        <td id="LC6144" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictAllAgeAndGenderTask</span>(<span class="pl-c1">this</span>.<span class="pl-en">runAndExtendWithFaceDetections</span>(), <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6145" class="blob-num js-line-number" data-line-number="6145"></td>
        <td id="LC6145" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6146" class="blob-num js-line-number" data-line-number="6146"></td>
        <td id="LC6146" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DetectAllFacesTask;</td>
      </tr>
      <tr>
        <td id="L6147" class="blob-num js-line-number" data-line-number="6147"></td>
        <td id="LC6147" class="blob-code blob-code-inner js-file-line">    }(DetectFacesTaskBase));</td>
      </tr>
      <tr>
        <td id="L6148" class="blob-num js-line-number" data-line-number="6148"></td>
        <td id="LC6148" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> DetectSingleFaceTask <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> (<span class="pl-smi">_super</span>) {</td>
      </tr>
      <tr>
        <td id="L6149" class="blob-num js-line-number" data-line-number="6149"></td>
        <td id="LC6149" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">__extends</span>(DetectSingleFaceTask, _super);</td>
      </tr>
      <tr>
        <td id="L6150" class="blob-num js-line-number" data-line-number="6150"></td>
        <td id="LC6150" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">DetectSingleFaceTask</span>() {</td>
      </tr>
      <tr>
        <td id="L6151" class="blob-num js-line-number" data-line-number="6151"></td>
        <td id="LC6151" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _super <span class="pl-k">!==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">_super</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>, <span class="pl-c1">arguments</span>) <span class="pl-k">||</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L6152" class="blob-num js-line-number" data-line-number="6152"></td>
        <td id="LC6152" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6153" class="blob-num js-line-number" data-line-number="6153"></td>
        <td id="LC6153" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectSingleFaceTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6154" class="blob-num js-line-number" data-line-number="6154"></td>
        <td id="LC6154" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6155" class="blob-num js-line-number" data-line-number="6155"></td>
        <td id="LC6155" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> faceDetections, faceDetectionWithHighestScore;</td>
      </tr>
      <tr>
        <td id="L6156" class="blob-num js-line-number" data-line-number="6156"></td>
        <td id="LC6156" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L6157" class="blob-num js-line-number" data-line-number="6157"></td>
        <td id="LC6157" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L6158" class="blob-num js-line-number" data-line-number="6158"></td>
        <td id="LC6158" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-k">new</span> <span class="pl-en">DetectAllFacesTask</span>(<span class="pl-c1">this</span>.<span class="pl-c1">input</span>, <span class="pl-c1">this</span>.<span class="pl-c1">options</span>)];</td>
      </tr>
      <tr>
        <td id="L6159" class="blob-num js-line-number" data-line-number="6159"></td>
        <td id="LC6159" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L6160" class="blob-num js-line-number" data-line-number="6160"></td>
        <td id="LC6160" class="blob-code blob-code-inner js-file-line">                            faceDetections <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6161" class="blob-num js-line-number" data-line-number="6161"></td>
        <td id="LC6161" class="blob-code blob-code-inner js-file-line">                            faceDetectionWithHighestScore <span class="pl-k">=</span> faceDetections[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L6162" class="blob-num js-line-number" data-line-number="6162"></td>
        <td id="LC6162" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">faceDetections</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span> (<span class="pl-smi">faceDetection</span>) {</td>
      </tr>
      <tr>
        <td id="L6163" class="blob-num js-line-number" data-line-number="6163"></td>
        <td id="LC6163" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (<span class="pl-smi">faceDetection</span>.<span class="pl-smi">score</span> <span class="pl-k">&gt;</span> <span class="pl-smi">faceDetectionWithHighestScore</span>.<span class="pl-smi">score</span>) {</td>
      </tr>
      <tr>
        <td id="L6164" class="blob-num js-line-number" data-line-number="6164"></td>
        <td id="LC6164" class="blob-code blob-code-inner js-file-line">                                    faceDetectionWithHighestScore <span class="pl-k">=</span> faceDetection;</td>
      </tr>
      <tr>
        <td id="L6165" class="blob-num js-line-number" data-line-number="6165"></td>
        <td id="LC6165" class="blob-code blob-code-inner js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L6166" class="blob-num js-line-number" data-line-number="6166"></td>
        <td id="LC6166" class="blob-code blob-code-inner js-file-line">                            });</td>
      </tr>
      <tr>
        <td id="L6167" class="blob-num js-line-number" data-line-number="6167"></td>
        <td id="LC6167" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, faceDetectionWithHighestScore];</td>
      </tr>
      <tr>
        <td id="L6168" class="blob-num js-line-number" data-line-number="6168"></td>
        <td id="LC6168" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L6169" class="blob-num js-line-number" data-line-number="6169"></td>
        <td id="LC6169" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L6170" class="blob-num js-line-number" data-line-number="6170"></td>
        <td id="LC6170" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6171" class="blob-num js-line-number" data-line-number="6171"></td>
        <td id="LC6171" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6172" class="blob-num js-line-number" data-line-number="6172"></td>
        <td id="LC6172" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectSingleFaceTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">runAndExtendWithFaceDetection</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6173" class="blob-num js-line-number" data-line-number="6173"></td>
        <td id="LC6173" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L6174" class="blob-num js-line-number" data-line-number="6174"></td>
        <td id="LC6174" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Promise</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>) { <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(_this, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6175" class="blob-num js-line-number" data-line-number="6175"></td>
        <td id="LC6175" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> detection;</td>
      </tr>
      <tr>
        <td id="L6176" class="blob-num js-line-number" data-line-number="6176"></td>
        <td id="LC6176" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L6177" class="blob-num js-line-number" data-line-number="6177"></td>
        <td id="LC6177" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L6178" class="blob-num js-line-number" data-line-number="6178"></td>
        <td id="LC6178" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-c1">this</span>.<span class="pl-en">run</span>()];</td>
      </tr>
      <tr>
        <td id="L6179" class="blob-num js-line-number" data-line-number="6179"></td>
        <td id="LC6179" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">case</span> <span class="pl-c1">1</span>:</td>
      </tr>
      <tr>
        <td id="L6180" class="blob-num js-line-number" data-line-number="6180"></td>
        <td id="LC6180" class="blob-code blob-code-inner js-file-line">                            detection <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>();</td>
      </tr>
      <tr>
        <td id="L6181" class="blob-num js-line-number" data-line-number="6181"></td>
        <td id="LC6181" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-en">res</span>(detection <span class="pl-k">?</span> <span class="pl-en">extendWithFaceDetection</span>({}, detection) <span class="pl-k">:</span> <span class="pl-c1">undefined</span>)];</td>
      </tr>
      <tr>
        <td id="L6182" class="blob-num js-line-number" data-line-number="6182"></td>
        <td id="LC6182" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L6183" class="blob-num js-line-number" data-line-number="6183"></td>
        <td id="LC6183" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L6184" class="blob-num js-line-number" data-line-number="6184"></td>
        <td id="LC6184" class="blob-code blob-code-inner js-file-line">            }); });</td>
      </tr>
      <tr>
        <td id="L6185" class="blob-num js-line-number" data-line-number="6185"></td>
        <td id="LC6185" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6186" class="blob-num js-line-number" data-line-number="6186"></td>
        <td id="LC6186" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectSingleFaceTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceLandmarks</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">useTinyLandmarkNet</span>) {</td>
      </tr>
      <tr>
        <td id="L6187" class="blob-num js-line-number" data-line-number="6187"></td>
        <td id="LC6187" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (useTinyLandmarkNet <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { useTinyLandmarkNet <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L6188" class="blob-num js-line-number" data-line-number="6188"></td>
        <td id="LC6188" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">DetectSingleFaceLandmarksTask</span>(<span class="pl-c1">this</span>.<span class="pl-en">runAndExtendWithFaceDetection</span>(), <span class="pl-c1">this</span>.<span class="pl-c1">input</span>, useTinyLandmarkNet);</td>
      </tr>
      <tr>
        <td id="L6189" class="blob-num js-line-number" data-line-number="6189"></td>
        <td id="LC6189" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6190" class="blob-num js-line-number" data-line-number="6190"></td>
        <td id="LC6190" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectSingleFaceTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withFaceExpressions</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6191" class="blob-num js-line-number" data-line-number="6191"></td>
        <td id="LC6191" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleFaceExpressionsTask</span>(<span class="pl-c1">this</span>.<span class="pl-en">runAndExtendWithFaceDetection</span>(), <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6192" class="blob-num js-line-number" data-line-number="6192"></td>
        <td id="LC6192" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6193" class="blob-num js-line-number" data-line-number="6193"></td>
        <td id="LC6193" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">DetectSingleFaceTask</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">withAgeAndGender</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6194" class="blob-num js-line-number" data-line-number="6194"></td>
        <td id="LC6194" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PredictSingleAgeAndGenderTask</span>(<span class="pl-c1">this</span>.<span class="pl-en">runAndExtendWithFaceDetection</span>(), <span class="pl-c1">this</span>.<span class="pl-c1">input</span>);</td>
      </tr>
      <tr>
        <td id="L6195" class="blob-num js-line-number" data-line-number="6195"></td>
        <td id="LC6195" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6196" class="blob-num js-line-number" data-line-number="6196"></td>
        <td id="LC6196" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> DetectSingleFaceTask;</td>
      </tr>
      <tr>
        <td id="L6197" class="blob-num js-line-number" data-line-number="6197"></td>
        <td id="LC6197" class="blob-code blob-code-inner js-file-line">    }(DetectFacesTaskBase));</td>
      </tr>
      <tr>
        <td id="L6198" class="blob-num js-line-number" data-line-number="6198"></td>
        <td id="LC6198" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6199" class="blob-num js-line-number" data-line-number="6199"></td>
        <td id="LC6199" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">detectSingleFace</span>(<span class="pl-smi">input</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L6200" class="blob-num js-line-number" data-line-number="6200"></td>
        <td id="LC6200" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">SsdMobilenetv1Options</span>(); }</td>
      </tr>
      <tr>
        <td id="L6201" class="blob-num js-line-number" data-line-number="6201"></td>
        <td id="LC6201" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">DetectSingleFaceTask</span>(input, options);</td>
      </tr>
      <tr>
        <td id="L6202" class="blob-num js-line-number" data-line-number="6202"></td>
        <td id="LC6202" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6203" class="blob-num js-line-number" data-line-number="6203"></td>
        <td id="LC6203" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">detectAllFaces</span>(<span class="pl-smi">input</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L6204" class="blob-num js-line-number" data-line-number="6204"></td>
        <td id="LC6204" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (options <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { options <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">SsdMobilenetv1Options</span>(); }</td>
      </tr>
      <tr>
        <td id="L6205" class="blob-num js-line-number" data-line-number="6205"></td>
        <td id="LC6205" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">DetectAllFacesTask</span>(input, options);</td>
      </tr>
      <tr>
        <td id="L6206" class="blob-num js-line-number" data-line-number="6206"></td>
        <td id="LC6206" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6207" class="blob-num js-line-number" data-line-number="6207"></td>
        <td id="LC6207" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6208" class="blob-num js-line-number" data-line-number="6208"></td>
        <td id="LC6208" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> export allFaces API for backward compatibility</span></td>
      </tr>
      <tr>
        <td id="L6209" class="blob-num js-line-number" data-line-number="6209"></td>
        <td id="LC6209" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">allFacesSsdMobilenetv1</span>(<span class="pl-smi">input</span>, <span class="pl-smi">minConfidence</span>) {</td>
      </tr>
      <tr>
        <td id="L6210" class="blob-num js-line-number" data-line-number="6210"></td>
        <td id="LC6210" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6211" class="blob-num js-line-number" data-line-number="6211"></td>
        <td id="LC6211" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L6212" class="blob-num js-line-number" data-line-number="6212"></td>
        <td id="LC6212" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L6213" class="blob-num js-line-number" data-line-number="6213"></td>
        <td id="LC6213" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">detectAllFaces</span>(input, <span class="pl-k">new</span> <span class="pl-en">SsdMobilenetv1Options</span>(minConfidence <span class="pl-k">?</span> { minConfidence<span class="pl-k">:</span> minConfidence } <span class="pl-k">:</span> {}))</td>
      </tr>
      <tr>
        <td id="L6214" class="blob-num js-line-number" data-line-number="6214"></td>
        <td id="LC6214" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">withFaceLandmarks</span>()</td>
      </tr>
      <tr>
        <td id="L6215" class="blob-num js-line-number" data-line-number="6215"></td>
        <td id="LC6215" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">withFaceDescriptors</span>()];</td>
      </tr>
      <tr>
        <td id="L6216" class="blob-num js-line-number" data-line-number="6216"></td>
        <td id="LC6216" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>()];</td>
      </tr>
      <tr>
        <td id="L6217" class="blob-num js-line-number" data-line-number="6217"></td>
        <td id="LC6217" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L6218" class="blob-num js-line-number" data-line-number="6218"></td>
        <td id="LC6218" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6219" class="blob-num js-line-number" data-line-number="6219"></td>
        <td id="LC6219" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6220" class="blob-num js-line-number" data-line-number="6220"></td>
        <td id="LC6220" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6221" class="blob-num js-line-number" data-line-number="6221"></td>
        <td id="LC6221" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">allFacesTinyYolov2</span>(<span class="pl-smi">input</span>, <span class="pl-smi">forwardParams</span>) {</td>
      </tr>
      <tr>
        <td id="L6222" class="blob-num js-line-number" data-line-number="6222"></td>
        <td id="LC6222" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (forwardParams <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { forwardParams <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L6223" class="blob-num js-line-number" data-line-number="6223"></td>
        <td id="LC6223" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6224" class="blob-num js-line-number" data-line-number="6224"></td>
        <td id="LC6224" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L6225" class="blob-num js-line-number" data-line-number="6225"></td>
        <td id="LC6225" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L6226" class="blob-num js-line-number" data-line-number="6226"></td>
        <td id="LC6226" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">detectAllFaces</span>(input, <span class="pl-k">new</span> <span class="pl-en">TinyYolov2Options</span>(forwardParams))</td>
      </tr>
      <tr>
        <td id="L6227" class="blob-num js-line-number" data-line-number="6227"></td>
        <td id="LC6227" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">withFaceLandmarks</span>()</td>
      </tr>
      <tr>
        <td id="L6228" class="blob-num js-line-number" data-line-number="6228"></td>
        <td id="LC6228" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">withFaceDescriptors</span>()];</td>
      </tr>
      <tr>
        <td id="L6229" class="blob-num js-line-number" data-line-number="6229"></td>
        <td id="LC6229" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>()];</td>
      </tr>
      <tr>
        <td id="L6230" class="blob-num js-line-number" data-line-number="6230"></td>
        <td id="LC6230" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L6231" class="blob-num js-line-number" data-line-number="6231"></td>
        <td id="LC6231" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6232" class="blob-num js-line-number" data-line-number="6232"></td>
        <td id="LC6232" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6233" class="blob-num js-line-number" data-line-number="6233"></td>
        <td id="LC6233" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6234" class="blob-num js-line-number" data-line-number="6234"></td>
        <td id="LC6234" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">allFacesMtcnn</span>(<span class="pl-smi">input</span>, <span class="pl-smi">forwardParams</span>) {</td>
      </tr>
      <tr>
        <td id="L6235" class="blob-num js-line-number" data-line-number="6235"></td>
        <td id="LC6235" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (forwardParams <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { forwardParams <span class="pl-k">=</span> {}; }</td>
      </tr>
      <tr>
        <td id="L6236" class="blob-num js-line-number" data-line-number="6236"></td>
        <td id="LC6236" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">__awaiter</span>(<span class="pl-c1">this</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">void</span> <span class="pl-c1">0</span>, <span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6237" class="blob-num js-line-number" data-line-number="6237"></td>
        <td id="LC6237" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">__generator</span>(<span class="pl-c1">this</span>, <span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L6238" class="blob-num js-line-number" data-line-number="6238"></td>
        <td id="LC6238" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (<span class="pl-smi">_a</span>.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L6239" class="blob-num js-line-number" data-line-number="6239"></td>
        <td id="LC6239" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">0</span>: <span class="pl-k">return</span> [<span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span>yield<span class="pl-c">*/</span></span>, <span class="pl-en">detectAllFaces</span>(input, <span class="pl-k">new</span> <span class="pl-en">MtcnnOptions</span>(forwardParams))</td>
      </tr>
      <tr>
        <td id="L6240" class="blob-num js-line-number" data-line-number="6240"></td>
        <td id="LC6240" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">withFaceLandmarks</span>()</td>
      </tr>
      <tr>
        <td id="L6241" class="blob-num js-line-number" data-line-number="6241"></td>
        <td id="LC6241" class="blob-code blob-code-inner js-file-line">                            .<span class="pl-en">withFaceDescriptors</span>()];</td>
      </tr>
      <tr>
        <td id="L6242" class="blob-num js-line-number" data-line-number="6242"></td>
        <td id="LC6242" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">case</span> <span class="pl-c1">1</span>: <span class="pl-k">return</span> [<span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span>return<span class="pl-c">*/</span></span>, <span class="pl-smi">_a</span>.<span class="pl-en">sent</span>()];</td>
      </tr>
      <tr>
        <td id="L6243" class="blob-num js-line-number" data-line-number="6243"></td>
        <td id="LC6243" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L6244" class="blob-num js-line-number" data-line-number="6244"></td>
        <td id="LC6244" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6245" class="blob-num js-line-number" data-line-number="6245"></td>
        <td id="LC6245" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6246" class="blob-num js-line-number" data-line-number="6246"></td>
        <td id="LC6246" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6247" class="blob-num js-line-number" data-line-number="6247"></td>
        <td id="LC6247" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> allFaces <span class="pl-k">=</span> allFacesSsdMobilenetv1;</td>
      </tr>
      <tr>
        <td id="L6248" class="blob-num js-line-number" data-line-number="6248"></td>
        <td id="LC6248" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6249" class="blob-num js-line-number" data-line-number="6249"></td>
        <td id="LC6249" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">euclideanDistance</span>(<span class="pl-smi">arr1</span>, <span class="pl-smi">arr2</span>) {</td>
      </tr>
      <tr>
        <td id="L6250" class="blob-num js-line-number" data-line-number="6250"></td>
        <td id="LC6250" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">arr1</span>.<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-smi">arr2</span>.<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L6251" class="blob-num js-line-number" data-line-number="6251"></td>
        <td id="LC6251" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>euclideanDistance: arr1.length !== arr2.length<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6252" class="blob-num js-line-number" data-line-number="6252"></td>
        <td id="LC6252" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> desc1 <span class="pl-k">=</span> <span class="pl-c1">Array</span>.<span class="pl-en">from</span>(arr1);</td>
      </tr>
      <tr>
        <td id="L6253" class="blob-num js-line-number" data-line-number="6253"></td>
        <td id="LC6253" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> desc2 <span class="pl-k">=</span> <span class="pl-c1">Array</span>.<span class="pl-en">from</span>(arr2);</td>
      </tr>
      <tr>
        <td id="L6254" class="blob-num js-line-number" data-line-number="6254"></td>
        <td id="LC6254" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(desc1</td>
      </tr>
      <tr>
        <td id="L6255" class="blob-num js-line-number" data-line-number="6255"></td>
        <td id="LC6255" class="blob-code blob-code-inner js-file-line">            .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">val</span>, <span class="pl-smi">i</span>) { <span class="pl-k">return</span> val <span class="pl-k">-</span> desc2[i]; })</td>
      </tr>
      <tr>
        <td id="L6256" class="blob-num js-line-number" data-line-number="6256"></td>
        <td id="LC6256" class="blob-code blob-code-inner js-file-line">            .<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">res</span>, <span class="pl-smi">diff</span>) { <span class="pl-k">return</span> res <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(diff, <span class="pl-c1">2</span>); }, <span class="pl-c1">0</span>));</td>
      </tr>
      <tr>
        <td id="L6257" class="blob-num js-line-number" data-line-number="6257"></td>
        <td id="LC6257" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6258" class="blob-num js-line-number" data-line-number="6258"></td>
        <td id="LC6258" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6259" class="blob-num js-line-number" data-line-number="6259"></td>
        <td id="LC6259" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> FaceMatcher <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">/**</span> <span class="pl-k">@class</span> <span class="pl-c">*/</span></span> (<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L6260" class="blob-num js-line-number" data-line-number="6260"></td>
        <td id="LC6260" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">FaceMatcher</span>(<span class="pl-smi">inputs</span>, <span class="pl-smi">distanceThreshold</span>) {</td>
      </tr>
      <tr>
        <td id="L6261" class="blob-num js-line-number" data-line-number="6261"></td>
        <td id="LC6261" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (distanceThreshold <span class="pl-k">===</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>) { distanceThreshold <span class="pl-k">=</span> <span class="pl-c1">0.6</span>; }</td>
      </tr>
      <tr>
        <td id="L6262" class="blob-num js-line-number" data-line-number="6262"></td>
        <td id="LC6262" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_distanceThreshold</span> <span class="pl-k">=</span> distanceThreshold;</td>
      </tr>
      <tr>
        <td id="L6263" class="blob-num js-line-number" data-line-number="6263"></td>
        <td id="LC6263" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> inputArray <span class="pl-k">=</span> <span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(inputs) <span class="pl-k">?</span> inputs <span class="pl-k">:</span> [inputs];</td>
      </tr>
      <tr>
        <td id="L6264" class="blob-num js-line-number" data-line-number="6264"></td>
        <td id="LC6264" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">inputArray</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L6265" class="blob-num js-line-number" data-line-number="6265"></td>
        <td id="LC6265" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FaceRecognizer.constructor - expected atleast one input<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6266" class="blob-num js-line-number" data-line-number="6266"></td>
        <td id="LC6266" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L6267" class="blob-num js-line-number" data-line-number="6267"></td>
        <td id="LC6267" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> count <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6268" class="blob-num js-line-number" data-line-number="6268"></td>
        <td id="LC6268" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> <span class="pl-en">createUniqueLabel</span> <span class="pl-k">=</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>person <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> count<span class="pl-k">++</span>; };</td>
      </tr>
      <tr>
        <td id="L6269" class="blob-num js-line-number" data-line-number="6269"></td>
        <td id="LC6269" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_labeledDescriptors</span> <span class="pl-k">=</span> <span class="pl-smi">inputArray</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">desc</span>) {</td>
      </tr>
      <tr>
        <td id="L6270" class="blob-num js-line-number" data-line-number="6270"></td>
        <td id="LC6270" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (desc <span class="pl-k">instanceof</span> LabeledFaceDescriptors) {</td>
      </tr>
      <tr>
        <td id="L6271" class="blob-num js-line-number" data-line-number="6271"></td>
        <td id="LC6271" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> desc;</td>
      </tr>
      <tr>
        <td id="L6272" class="blob-num js-line-number" data-line-number="6272"></td>
        <td id="LC6272" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L6273" class="blob-num js-line-number" data-line-number="6273"></td>
        <td id="LC6273" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (desc <span class="pl-k">instanceof</span> <span class="pl-c1">Float32Array</span>) {</td>
      </tr>
      <tr>
        <td id="L6274" class="blob-num js-line-number" data-line-number="6274"></td>
        <td id="LC6274" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">LabeledFaceDescriptors</span>(<span class="pl-en">createUniqueLabel</span>(), [desc]);</td>
      </tr>
      <tr>
        <td id="L6275" class="blob-num js-line-number" data-line-number="6275"></td>
        <td id="LC6275" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L6276" class="blob-num js-line-number" data-line-number="6276"></td>
        <td id="LC6276" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">desc</span>.<span class="pl-smi">descriptor</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">desc</span>.<span class="pl-smi">descriptor</span> <span class="pl-k">instanceof</span> <span class="pl-c1">Float32Array</span>) {</td>
      </tr>
      <tr>
        <td id="L6277" class="blob-num js-line-number" data-line-number="6277"></td>
        <td id="LC6277" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">LabeledFaceDescriptors</span>(<span class="pl-en">createUniqueLabel</span>(), [<span class="pl-smi">desc</span>.<span class="pl-smi">descriptor</span>]);</td>
      </tr>
      <tr>
        <td id="L6278" class="blob-num js-line-number" data-line-number="6278"></td>
        <td id="LC6278" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L6279" class="blob-num js-line-number" data-line-number="6279"></td>
        <td id="LC6279" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor&lt;any&gt; | Float32Array | Array&lt;LabeledFaceDescriptors | WithFaceDescriptor&lt;any&gt; | Float32Array&gt;<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6280" class="blob-num js-line-number" data-line-number="6280"></td>
        <td id="LC6280" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6281" class="blob-num js-line-number" data-line-number="6281"></td>
        <td id="LC6281" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6282" class="blob-num js-line-number" data-line-number="6282"></td>
        <td id="LC6282" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceMatcher</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>labeledDescriptors<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L6283" class="blob-num js-line-number" data-line-number="6283"></td>
        <td id="LC6283" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_labeledDescriptors</span>; },</td>
      </tr>
      <tr>
        <td id="L6284" class="blob-num js-line-number" data-line-number="6284"></td>
        <td id="LC6284" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L6285" class="blob-num js-line-number" data-line-number="6285"></td>
        <td id="LC6285" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L6286" class="blob-num js-line-number" data-line-number="6286"></td>
        <td id="LC6286" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6287" class="blob-num js-line-number" data-line-number="6287"></td>
        <td id="LC6287" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">FaceMatcher</span>.<span class="pl-c1">prototype</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>distanceThreshold<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L6288" class="blob-num js-line-number" data-line-number="6288"></td>
        <td id="LC6288" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_distanceThreshold</span>; },</td>
      </tr>
      <tr>
        <td id="L6289" class="blob-num js-line-number" data-line-number="6289"></td>
        <td id="LC6289" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L6290" class="blob-num js-line-number" data-line-number="6290"></td>
        <td id="LC6290" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L6291" class="blob-num js-line-number" data-line-number="6291"></td>
        <td id="LC6291" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6292" class="blob-num js-line-number" data-line-number="6292"></td>
        <td id="LC6292" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceMatcher</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeMeanDistance</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">queryDescriptor</span>, <span class="pl-smi">descriptors</span>) {</td>
      </tr>
      <tr>
        <td id="L6293" class="blob-num js-line-number" data-line-number="6293"></td>
        <td id="LC6293" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> descriptors</td>
      </tr>
      <tr>
        <td id="L6294" class="blob-num js-line-number" data-line-number="6294"></td>
        <td id="LC6294" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">d</span>) { <span class="pl-k">return</span> <span class="pl-en">euclideanDistance</span>(d, queryDescriptor); })</td>
      </tr>
      <tr>
        <td id="L6295" class="blob-num js-line-number" data-line-number="6295"></td>
        <td id="LC6295" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">d1</span>, <span class="pl-smi">d2</span>) { <span class="pl-k">return</span> d1 <span class="pl-k">+</span> d2; }, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L6296" class="blob-num js-line-number" data-line-number="6296"></td>
        <td id="LC6296" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">/</span> (<span class="pl-smi">descriptors</span>.<span class="pl-c1">length</span> <span class="pl-k">||</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L6297" class="blob-num js-line-number" data-line-number="6297"></td>
        <td id="LC6297" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6298" class="blob-num js-line-number" data-line-number="6298"></td>
        <td id="LC6298" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceMatcher</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">matchDescriptor</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">queryDescriptor</span>) {</td>
      </tr>
      <tr>
        <td id="L6299" class="blob-num js-line-number" data-line-number="6299"></td>
        <td id="LC6299" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _this <span class="pl-k">=</span> <span class="pl-c1">this</span>;</td>
      </tr>
      <tr>
        <td id="L6300" class="blob-num js-line-number" data-line-number="6300"></td>
        <td id="LC6300" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">labeledDescriptors</span></td>
      </tr>
      <tr>
        <td id="L6301" class="blob-num js-line-number" data-line-number="6301"></td>
        <td id="LC6301" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">_a</span>) {</td>
      </tr>
      <tr>
        <td id="L6302" class="blob-num js-line-number" data-line-number="6302"></td>
        <td id="LC6302" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> descriptors <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-smi">descriptors</span>, label <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">label</span>;</td>
      </tr>
      <tr>
        <td id="L6303" class="blob-num js-line-number" data-line-number="6303"></td>
        <td id="LC6303" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FaceMatch</span>(label, <span class="pl-smi">_this</span>.<span class="pl-en">computeMeanDistance</span>(queryDescriptor, descriptors));</td>
      </tr>
      <tr>
        <td id="L6304" class="blob-num js-line-number" data-line-number="6304"></td>
        <td id="LC6304" class="blob-code blob-code-inner js-file-line">            })</td>
      </tr>
      <tr>
        <td id="L6305" class="blob-num js-line-number" data-line-number="6305"></td>
        <td id="LC6305" class="blob-code blob-code-inner js-file-line">                .<span class="pl-en">reduce</span>(<span class="pl-k">function</span> (<span class="pl-smi">best</span>, <span class="pl-smi">curr</span>) { <span class="pl-k">return</span> <span class="pl-smi">best</span>.<span class="pl-smi">distance</span> <span class="pl-k">&lt;</span> <span class="pl-smi">curr</span>.<span class="pl-smi">distance</span> <span class="pl-k">?</span> best <span class="pl-k">:</span> curr; });</td>
      </tr>
      <tr>
        <td id="L6306" class="blob-num js-line-number" data-line-number="6306"></td>
        <td id="LC6306" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6307" class="blob-num js-line-number" data-line-number="6307"></td>
        <td id="LC6307" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">FaceMatcher</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">findBestMatch</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">queryDescriptor</span>) {</td>
      </tr>
      <tr>
        <td id="L6308" class="blob-num js-line-number" data-line-number="6308"></td>
        <td id="LC6308" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> bestMatch <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">matchDescriptor</span>(queryDescriptor);</td>
      </tr>
      <tr>
        <td id="L6309" class="blob-num js-line-number" data-line-number="6309"></td>
        <td id="LC6309" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">bestMatch</span>.<span class="pl-smi">distance</span> <span class="pl-k">&lt;</span> <span class="pl-c1">this</span>.<span class="pl-smi">distanceThreshold</span></td>
      </tr>
      <tr>
        <td id="L6310" class="blob-num js-line-number" data-line-number="6310"></td>
        <td id="LC6310" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> bestMatch</td>
      </tr>
      <tr>
        <td id="L6311" class="blob-num js-line-number" data-line-number="6311"></td>
        <td id="LC6311" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">FaceMatch</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>unknown<span class="pl-pds">&#39;</span></span>, <span class="pl-smi">bestMatch</span>.<span class="pl-smi">distance</span>);</td>
      </tr>
      <tr>
        <td id="L6312" class="blob-num js-line-number" data-line-number="6312"></td>
        <td id="LC6312" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6313" class="blob-num js-line-number" data-line-number="6313"></td>
        <td id="LC6313" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> FaceMatcher;</td>
      </tr>
      <tr>
        <td id="L6314" class="blob-num js-line-number" data-line-number="6314"></td>
        <td id="LC6314" class="blob-code blob-code-inner js-file-line">    }());</td>
      </tr>
      <tr>
        <td id="L6315" class="blob-num js-line-number" data-line-number="6315"></td>
        <td id="LC6315" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6316" class="blob-num js-line-number" data-line-number="6316"></td>
        <td id="LC6316" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createMtcnn</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L6317" class="blob-num js-line-number" data-line-number="6317"></td>
        <td id="LC6317" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> net <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Mtcnn</span>();</td>
      </tr>
      <tr>
        <td id="L6318" class="blob-num js-line-number" data-line-number="6318"></td>
        <td id="LC6318" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">net</span>.<span class="pl-en">extractWeights</span>(weights);</td>
      </tr>
      <tr>
        <td id="L6319" class="blob-num js-line-number" data-line-number="6319"></td>
        <td id="LC6319" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> net;</td>
      </tr>
      <tr>
        <td id="L6320" class="blob-num js-line-number" data-line-number="6320"></td>
        <td id="LC6320" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6321" class="blob-num js-line-number" data-line-number="6321"></td>
        <td id="LC6321" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6322" class="blob-num js-line-number" data-line-number="6322"></td>
        <td id="LC6322" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createTinyFaceDetector</span>(<span class="pl-smi">weights</span>) {</td>
      </tr>
      <tr>
        <td id="L6323" class="blob-num js-line-number" data-line-number="6323"></td>
        <td id="LC6323" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> net <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">TinyFaceDetector</span>();</td>
      </tr>
      <tr>
        <td id="L6324" class="blob-num js-line-number" data-line-number="6324"></td>
        <td id="LC6324" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">net</span>.<span class="pl-en">extractWeights</span>(weights);</td>
      </tr>
      <tr>
        <td id="L6325" class="blob-num js-line-number" data-line-number="6325"></td>
        <td id="LC6325" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> net;</td>
      </tr>
      <tr>
        <td id="L6326" class="blob-num js-line-number" data-line-number="6326"></td>
        <td id="LC6326" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6327" class="blob-num js-line-number" data-line-number="6327"></td>
        <td id="LC6327" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6328" class="blob-num js-line-number" data-line-number="6328"></td>
        <td id="LC6328" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">resizeResults</span>(<span class="pl-smi">results</span>, <span class="pl-smi">dimensions</span>) {</td>
      </tr>
      <tr>
        <td id="L6329" class="blob-num js-line-number" data-line-number="6329"></td>
        <td id="LC6329" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Dimensions</span>(<span class="pl-smi">dimensions</span>.<span class="pl-c1">width</span>, <span class="pl-smi">dimensions</span>.<span class="pl-c1">height</span>), width <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">width</span>, height <span class="pl-k">=</span> <span class="pl-smi">_a</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="L6330" class="blob-num js-line-number" data-line-number="6330"></td>
        <td id="LC6330" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (width <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> height <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L6331" class="blob-num js-line-number" data-line-number="6331"></td>
        <td id="LC6331" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resizeResults - invalid dimensions: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>({ width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height }));</td>
      </tr>
      <tr>
        <td id="L6332" class="blob-num js-line-number" data-line-number="6332"></td>
        <td id="LC6332" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6333" class="blob-num js-line-number" data-line-number="6333"></td>
        <td id="LC6333" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(results)) {</td>
      </tr>
      <tr>
        <td id="L6334" class="blob-num js-line-number" data-line-number="6334"></td>
        <td id="LC6334" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">results</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span> (<span class="pl-smi">obj</span>) { <span class="pl-k">return</span> <span class="pl-en">resizeResults</span>(obj, { width<span class="pl-k">:</span> width, height<span class="pl-k">:</span> height }); });</td>
      </tr>
      <tr>
        <td id="L6335" class="blob-num js-line-number" data-line-number="6335"></td>
        <td id="LC6335" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6336" class="blob-num js-line-number" data-line-number="6336"></td>
        <td id="LC6336" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isWithFaceLandmarks</span>(results)) {</td>
      </tr>
      <tr>
        <td id="L6337" class="blob-num js-line-number" data-line-number="6337"></td>
        <td id="LC6337" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> resizedDetection <span class="pl-k">=</span> <span class="pl-smi">results</span>.<span class="pl-smi">detection</span>.<span class="pl-en">forSize</span>(width, height);</td>
      </tr>
      <tr>
        <td id="L6338" class="blob-num js-line-number" data-line-number="6338"></td>
        <td id="LC6338" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> resizedLandmarks <span class="pl-k">=</span> <span class="pl-smi">results</span>.<span class="pl-smi">unshiftedLandmarks</span>.<span class="pl-en">forSize</span>(<span class="pl-smi">resizedDetection</span>.<span class="pl-smi">box</span>.<span class="pl-c1">width</span>, <span class="pl-smi">resizedDetection</span>.<span class="pl-smi">box</span>.<span class="pl-c1">height</span>);</td>
      </tr>
      <tr>
        <td id="L6339" class="blob-num js-line-number" data-line-number="6339"></td>
        <td id="LC6339" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extendWithFaceLandmarks</span>(<span class="pl-en">extendWithFaceDetection</span>(results, resizedDetection), resizedLandmarks);</td>
      </tr>
      <tr>
        <td id="L6340" class="blob-num js-line-number" data-line-number="6340"></td>
        <td id="LC6340" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6341" class="blob-num js-line-number" data-line-number="6341"></td>
        <td id="LC6341" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isWithFaceDetection</span>(results)) {</td>
      </tr>
      <tr>
        <td id="L6342" class="blob-num js-line-number" data-line-number="6342"></td>
        <td id="LC6342" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">extendWithFaceDetection</span>(results, <span class="pl-smi">results</span>.<span class="pl-smi">detection</span>.<span class="pl-en">forSize</span>(width, height));</td>
      </tr>
      <tr>
        <td id="L6343" class="blob-num js-line-number" data-line-number="6343"></td>
        <td id="LC6343" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6344" class="blob-num js-line-number" data-line-number="6344"></td>
        <td id="LC6344" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (results <span class="pl-k">instanceof</span> FaceLandmarks <span class="pl-k">||</span> results <span class="pl-k">instanceof</span> FaceDetection) {</td>
      </tr>
      <tr>
        <td id="L6345" class="blob-num js-line-number" data-line-number="6345"></td>
        <td id="LC6345" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">results</span>.<span class="pl-en">forSize</span>(width, height);</td>
      </tr>
      <tr>
        <td id="L6346" class="blob-num js-line-number" data-line-number="6346"></td>
        <td id="LC6346" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6347" class="blob-num js-line-number" data-line-number="6347"></td>
        <td id="LC6347" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> results;</td>
      </tr>
      <tr>
        <td id="L6348" class="blob-num js-line-number" data-line-number="6348"></td>
        <td id="LC6348" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6349" class="blob-num js-line-number" data-line-number="6349"></td>
        <td id="LC6349" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6350" class="blob-num js-line-number" data-line-number="6350"></td>
        <td id="LC6350" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> draw <span class="pl-k">=</span> <span class="pl-en">__assign</span>({}, drawBase, drawExtended);</td>
      </tr>
      <tr>
        <td id="L6351" class="blob-num js-line-number" data-line-number="6351"></td>
        <td id="LC6351" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6352" class="blob-num js-line-number" data-line-number="6352"></td>
        <td id="LC6352" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">AgeGenderNet</span> <span class="pl-k">=</span> AgeGenderNet;</td>
      </tr>
      <tr>
        <td id="L6353" class="blob-num js-line-number" data-line-number="6353"></td>
        <td id="LC6353" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">BoundingBox</span> <span class="pl-k">=</span> BoundingBox;</td>
      </tr>
      <tr>
        <td id="L6354" class="blob-num js-line-number" data-line-number="6354"></td>
        <td id="LC6354" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">Box</span> <span class="pl-k">=</span> Box;</td>
      </tr>
      <tr>
        <td id="L6355" class="blob-num js-line-number" data-line-number="6355"></td>
        <td id="LC6355" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">ComposableTask</span> <span class="pl-k">=</span> ComposableTask;</td>
      </tr>
      <tr>
        <td id="L6356" class="blob-num js-line-number" data-line-number="6356"></td>
        <td id="LC6356" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">ComputeAllFaceDescriptorsTask</span> <span class="pl-k">=</span> ComputeAllFaceDescriptorsTask;</td>
      </tr>
      <tr>
        <td id="L6357" class="blob-num js-line-number" data-line-number="6357"></td>
        <td id="LC6357" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">ComputeFaceDescriptorsTaskBase</span> <span class="pl-k">=</span> ComputeFaceDescriptorsTaskBase;</td>
      </tr>
      <tr>
        <td id="L6358" class="blob-num js-line-number" data-line-number="6358"></td>
        <td id="LC6358" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">ComputeSingleFaceDescriptorTask</span> <span class="pl-k">=</span> ComputeSingleFaceDescriptorTask;</td>
      </tr>
      <tr>
        <td id="L6359" class="blob-num js-line-number" data-line-number="6359"></td>
        <td id="LC6359" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">DetectAllFaceLandmarksTask</span> <span class="pl-k">=</span> DetectAllFaceLandmarksTask;</td>
      </tr>
      <tr>
        <td id="L6360" class="blob-num js-line-number" data-line-number="6360"></td>
        <td id="LC6360" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">DetectAllFacesTask</span> <span class="pl-k">=</span> DetectAllFacesTask;</td>
      </tr>
      <tr>
        <td id="L6361" class="blob-num js-line-number" data-line-number="6361"></td>
        <td id="LC6361" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">DetectFaceLandmarksTaskBase</span> <span class="pl-k">=</span> DetectFaceLandmarksTaskBase;</td>
      </tr>
      <tr>
        <td id="L6362" class="blob-num js-line-number" data-line-number="6362"></td>
        <td id="LC6362" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">DetectFacesTaskBase</span> <span class="pl-k">=</span> DetectFacesTaskBase;</td>
      </tr>
      <tr>
        <td id="L6363" class="blob-num js-line-number" data-line-number="6363"></td>
        <td id="LC6363" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">DetectSingleFaceLandmarksTask</span> <span class="pl-k">=</span> DetectSingleFaceLandmarksTask;</td>
      </tr>
      <tr>
        <td id="L6364" class="blob-num js-line-number" data-line-number="6364"></td>
        <td id="LC6364" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">DetectSingleFaceTask</span> <span class="pl-k">=</span> DetectSingleFaceTask;</td>
      </tr>
      <tr>
        <td id="L6365" class="blob-num js-line-number" data-line-number="6365"></td>
        <td id="LC6365" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">Dimensions</span> <span class="pl-k">=</span> Dimensions;</td>
      </tr>
      <tr>
        <td id="L6366" class="blob-num js-line-number" data-line-number="6366"></td>
        <td id="LC6366" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-c1">FACE_EXPRESSION_LABELS</span> <span class="pl-k">=</span> <span class="pl-c1">FACE_EXPRESSION_LABELS</span>;</td>
      </tr>
      <tr>
        <td id="L6367" class="blob-num js-line-number" data-line-number="6367"></td>
        <td id="LC6367" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceDetection</span> <span class="pl-k">=</span> FaceDetection;</td>
      </tr>
      <tr>
        <td id="L6368" class="blob-num js-line-number" data-line-number="6368"></td>
        <td id="LC6368" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceDetectionNet</span> <span class="pl-k">=</span> FaceDetectionNet;</td>
      </tr>
      <tr>
        <td id="L6369" class="blob-num js-line-number" data-line-number="6369"></td>
        <td id="LC6369" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceExpressionNet</span> <span class="pl-k">=</span> FaceExpressionNet;</td>
      </tr>
      <tr>
        <td id="L6370" class="blob-num js-line-number" data-line-number="6370"></td>
        <td id="LC6370" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceExpressions</span> <span class="pl-k">=</span> FaceExpressions;</td>
      </tr>
      <tr>
        <td id="L6371" class="blob-num js-line-number" data-line-number="6371"></td>
        <td id="LC6371" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceLandmark68Net</span> <span class="pl-k">=</span> FaceLandmark68Net;</td>
      </tr>
      <tr>
        <td id="L6372" class="blob-num js-line-number" data-line-number="6372"></td>
        <td id="LC6372" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceLandmark68TinyNet</span> <span class="pl-k">=</span> FaceLandmark68TinyNet;</td>
      </tr>
      <tr>
        <td id="L6373" class="blob-num js-line-number" data-line-number="6373"></td>
        <td id="LC6373" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceLandmarkNet</span> <span class="pl-k">=</span> FaceLandmarkNet;</td>
      </tr>
      <tr>
        <td id="L6374" class="blob-num js-line-number" data-line-number="6374"></td>
        <td id="LC6374" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceLandmarks</span> <span class="pl-k">=</span> FaceLandmarks;</td>
      </tr>
      <tr>
        <td id="L6375" class="blob-num js-line-number" data-line-number="6375"></td>
        <td id="LC6375" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceLandmarks5</span> <span class="pl-k">=</span> FaceLandmarks5;</td>
      </tr>
      <tr>
        <td id="L6376" class="blob-num js-line-number" data-line-number="6376"></td>
        <td id="LC6376" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceLandmarks68</span> <span class="pl-k">=</span> FaceLandmarks68;</td>
      </tr>
      <tr>
        <td id="L6377" class="blob-num js-line-number" data-line-number="6377"></td>
        <td id="LC6377" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceMatch</span> <span class="pl-k">=</span> FaceMatch;</td>
      </tr>
      <tr>
        <td id="L6378" class="blob-num js-line-number" data-line-number="6378"></td>
        <td id="LC6378" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceMatcher</span> <span class="pl-k">=</span> FaceMatcher;</td>
      </tr>
      <tr>
        <td id="L6379" class="blob-num js-line-number" data-line-number="6379"></td>
        <td id="LC6379" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">FaceRecognitionNet</span> <span class="pl-k">=</span> FaceRecognitionNet;</td>
      </tr>
      <tr>
        <td id="L6380" class="blob-num js-line-number" data-line-number="6380"></td>
        <td id="LC6380" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">LabeledBox</span> <span class="pl-k">=</span> LabeledBox;</td>
      </tr>
      <tr>
        <td id="L6381" class="blob-num js-line-number" data-line-number="6381"></td>
        <td id="LC6381" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">LabeledFaceDescriptors</span> <span class="pl-k">=</span> LabeledFaceDescriptors;</td>
      </tr>
      <tr>
        <td id="L6382" class="blob-num js-line-number" data-line-number="6382"></td>
        <td id="LC6382" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">Mtcnn</span> <span class="pl-k">=</span> Mtcnn;</td>
      </tr>
      <tr>
        <td id="L6383" class="blob-num js-line-number" data-line-number="6383"></td>
        <td id="LC6383" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">MtcnnOptions</span> <span class="pl-k">=</span> MtcnnOptions;</td>
      </tr>
      <tr>
        <td id="L6384" class="blob-num js-line-number" data-line-number="6384"></td>
        <td id="LC6384" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">NetInput</span> <span class="pl-k">=</span> NetInput;</td>
      </tr>
      <tr>
        <td id="L6385" class="blob-num js-line-number" data-line-number="6385"></td>
        <td id="LC6385" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">NeuralNetwork</span> <span class="pl-k">=</span> NeuralNetwork;</td>
      </tr>
      <tr>
        <td id="L6386" class="blob-num js-line-number" data-line-number="6386"></td>
        <td id="LC6386" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">ObjectDetection</span> <span class="pl-k">=</span> ObjectDetection;</td>
      </tr>
      <tr>
        <td id="L6387" class="blob-num js-line-number" data-line-number="6387"></td>
        <td id="LC6387" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">Point</span> <span class="pl-k">=</span> <span class="pl-c1">Point</span>;</td>
      </tr>
      <tr>
        <td id="L6388" class="blob-num js-line-number" data-line-number="6388"></td>
        <td id="LC6388" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">PredictedBox</span> <span class="pl-k">=</span> PredictedBox;</td>
      </tr>
      <tr>
        <td id="L6389" class="blob-num js-line-number" data-line-number="6389"></td>
        <td id="LC6389" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">Rect</span> <span class="pl-k">=</span> Rect;</td>
      </tr>
      <tr>
        <td id="L6390" class="blob-num js-line-number" data-line-number="6390"></td>
        <td id="LC6390" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">SsdMobilenetv1</span> <span class="pl-k">=</span> SsdMobilenetv1;</td>
      </tr>
      <tr>
        <td id="L6391" class="blob-num js-line-number" data-line-number="6391"></td>
        <td id="LC6391" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">SsdMobilenetv1Options</span> <span class="pl-k">=</span> SsdMobilenetv1Options;</td>
      </tr>
      <tr>
        <td id="L6392" class="blob-num js-line-number" data-line-number="6392"></td>
        <td id="LC6392" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">TfjsImageRecognitionBase</span> <span class="pl-k">=</span> tfjsImageRecognitionBase;</td>
      </tr>
      <tr>
        <td id="L6393" class="blob-num js-line-number" data-line-number="6393"></td>
        <td id="LC6393" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">TinyFaceDetector</span> <span class="pl-k">=</span> TinyFaceDetector;</td>
      </tr>
      <tr>
        <td id="L6394" class="blob-num js-line-number" data-line-number="6394"></td>
        <td id="LC6394" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">TinyFaceDetectorOptions</span> <span class="pl-k">=</span> TinyFaceDetectorOptions;</td>
      </tr>
      <tr>
        <td id="L6395" class="blob-num js-line-number" data-line-number="6395"></td>
        <td id="LC6395" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">TinyYolov2</span> <span class="pl-k">=</span> TinyYolov2$1;</td>
      </tr>
      <tr>
        <td id="L6396" class="blob-num js-line-number" data-line-number="6396"></td>
        <td id="LC6396" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">allFaces</span> <span class="pl-k">=</span> allFaces;</td>
      </tr>
      <tr>
        <td id="L6397" class="blob-num js-line-number" data-line-number="6397"></td>
        <td id="LC6397" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">allFacesMtcnn</span> <span class="pl-k">=</span> allFacesMtcnn;</td>
      </tr>
      <tr>
        <td id="L6398" class="blob-num js-line-number" data-line-number="6398"></td>
        <td id="LC6398" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">allFacesSsdMobilenetv1</span> <span class="pl-k">=</span> allFacesSsdMobilenetv1;</td>
      </tr>
      <tr>
        <td id="L6399" class="blob-num js-line-number" data-line-number="6399"></td>
        <td id="LC6399" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">allFacesTinyYolov2</span> <span class="pl-k">=</span> allFacesTinyYolov2;</td>
      </tr>
      <tr>
        <td id="L6400" class="blob-num js-line-number" data-line-number="6400"></td>
        <td id="LC6400" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">awaitMediaLoaded</span> <span class="pl-k">=</span> awaitMediaLoaded;</td>
      </tr>
      <tr>
        <td id="L6401" class="blob-num js-line-number" data-line-number="6401"></td>
        <td id="LC6401" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">bufferToImage</span> <span class="pl-k">=</span> bufferToImage;</td>
      </tr>
      <tr>
        <td id="L6402" class="blob-num js-line-number" data-line-number="6402"></td>
        <td id="LC6402" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">computeFaceDescriptor</span> <span class="pl-k">=</span> computeFaceDescriptor;</td>
      </tr>
      <tr>
        <td id="L6403" class="blob-num js-line-number" data-line-number="6403"></td>
        <td id="LC6403" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">computeReshapedDimensions</span> <span class="pl-k">=</span> computeReshapedDimensions;</td>
      </tr>
      <tr>
        <td id="L6404" class="blob-num js-line-number" data-line-number="6404"></td>
        <td id="LC6404" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">createCanvas</span> <span class="pl-k">=</span> createCanvas;</td>
      </tr>
      <tr>
        <td id="L6405" class="blob-num js-line-number" data-line-number="6405"></td>
        <td id="LC6405" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">createCanvasFromMedia</span> <span class="pl-k">=</span> createCanvasFromMedia;</td>
      </tr>
      <tr>
        <td id="L6406" class="blob-num js-line-number" data-line-number="6406"></td>
        <td id="LC6406" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">createFaceDetectionNet</span> <span class="pl-k">=</span> createFaceDetectionNet;</td>
      </tr>
      <tr>
        <td id="L6407" class="blob-num js-line-number" data-line-number="6407"></td>
        <td id="LC6407" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">createFaceRecognitionNet</span> <span class="pl-k">=</span> createFaceRecognitionNet;</td>
      </tr>
      <tr>
        <td id="L6408" class="blob-num js-line-number" data-line-number="6408"></td>
        <td id="LC6408" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">createMtcnn</span> <span class="pl-k">=</span> createMtcnn;</td>
      </tr>
      <tr>
        <td id="L6409" class="blob-num js-line-number" data-line-number="6409"></td>
        <td id="LC6409" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">createSsdMobilenetv1</span> <span class="pl-k">=</span> createSsdMobilenetv1;</td>
      </tr>
      <tr>
        <td id="L6410" class="blob-num js-line-number" data-line-number="6410"></td>
        <td id="LC6410" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">createTinyFaceDetector</span> <span class="pl-k">=</span> createTinyFaceDetector;</td>
      </tr>
      <tr>
        <td id="L6411" class="blob-num js-line-number" data-line-number="6411"></td>
        <td id="LC6411" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">createTinyYolov2</span> <span class="pl-k">=</span> createTinyYolov2;</td>
      </tr>
      <tr>
        <td id="L6412" class="blob-num js-line-number" data-line-number="6412"></td>
        <td id="LC6412" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">detectAllFaces</span> <span class="pl-k">=</span> detectAllFaces;</td>
      </tr>
      <tr>
        <td id="L6413" class="blob-num js-line-number" data-line-number="6413"></td>
        <td id="LC6413" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">detectFaceLandmarks</span> <span class="pl-k">=</span> detectFaceLandmarks;</td>
      </tr>
      <tr>
        <td id="L6414" class="blob-num js-line-number" data-line-number="6414"></td>
        <td id="LC6414" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">detectFaceLandmarksTiny</span> <span class="pl-k">=</span> detectFaceLandmarksTiny;</td>
      </tr>
      <tr>
        <td id="L6415" class="blob-num js-line-number" data-line-number="6415"></td>
        <td id="LC6415" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">detectLandmarks</span> <span class="pl-k">=</span> detectLandmarks;</td>
      </tr>
      <tr>
        <td id="L6416" class="blob-num js-line-number" data-line-number="6416"></td>
        <td id="LC6416" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">detectSingleFace</span> <span class="pl-k">=</span> detectSingleFace;</td>
      </tr>
      <tr>
        <td id="L6417" class="blob-num js-line-number" data-line-number="6417"></td>
        <td id="LC6417" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">draw</span> <span class="pl-k">=</span> draw;</td>
      </tr>
      <tr>
        <td id="L6418" class="blob-num js-line-number" data-line-number="6418"></td>
        <td id="LC6418" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">env</span> <span class="pl-k">=</span> env;</td>
      </tr>
      <tr>
        <td id="L6419" class="blob-num js-line-number" data-line-number="6419"></td>
        <td id="LC6419" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">euclideanDistance</span> <span class="pl-k">=</span> euclideanDistance;</td>
      </tr>
      <tr>
        <td id="L6420" class="blob-num js-line-number" data-line-number="6420"></td>
        <td id="LC6420" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">extendWithFaceDescriptor</span> <span class="pl-k">=</span> extendWithFaceDescriptor;</td>
      </tr>
      <tr>
        <td id="L6421" class="blob-num js-line-number" data-line-number="6421"></td>
        <td id="LC6421" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">extendWithFaceDetection</span> <span class="pl-k">=</span> extendWithFaceDetection;</td>
      </tr>
      <tr>
        <td id="L6422" class="blob-num js-line-number" data-line-number="6422"></td>
        <td id="LC6422" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">extendWithFaceExpressions</span> <span class="pl-k">=</span> extendWithFaceExpressions;</td>
      </tr>
      <tr>
        <td id="L6423" class="blob-num js-line-number" data-line-number="6423"></td>
        <td id="LC6423" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">extendWithFaceLandmarks</span> <span class="pl-k">=</span> extendWithFaceLandmarks;</td>
      </tr>
      <tr>
        <td id="L6424" class="blob-num js-line-number" data-line-number="6424"></td>
        <td id="LC6424" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">extractFaceTensors</span> <span class="pl-k">=</span> extractFaceTensors;</td>
      </tr>
      <tr>
        <td id="L6425" class="blob-num js-line-number" data-line-number="6425"></td>
        <td id="LC6425" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">extractFaces</span> <span class="pl-k">=</span> extractFaces;</td>
      </tr>
      <tr>
        <td id="L6426" class="blob-num js-line-number" data-line-number="6426"></td>
        <td id="LC6426" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">fetchImage</span> <span class="pl-k">=</span> fetchImage;</td>
      </tr>
      <tr>
        <td id="L6427" class="blob-num js-line-number" data-line-number="6427"></td>
        <td id="LC6427" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">fetchJson</span> <span class="pl-k">=</span> fetchJson;</td>
      </tr>
      <tr>
        <td id="L6428" class="blob-num js-line-number" data-line-number="6428"></td>
        <td id="LC6428" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">fetchNetWeights</span> <span class="pl-k">=</span> fetchNetWeights;</td>
      </tr>
      <tr>
        <td id="L6429" class="blob-num js-line-number" data-line-number="6429"></td>
        <td id="LC6429" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">fetchOrThrow</span> <span class="pl-k">=</span> fetchOrThrow;</td>
      </tr>
      <tr>
        <td id="L6430" class="blob-num js-line-number" data-line-number="6430"></td>
        <td id="LC6430" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">getCenterPoint</span> <span class="pl-k">=</span> getCenterPoint;</td>
      </tr>
      <tr>
        <td id="L6431" class="blob-num js-line-number" data-line-number="6431"></td>
        <td id="LC6431" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">getContext2dOrThrow</span> <span class="pl-k">=</span> getContext2dOrThrow;</td>
      </tr>
      <tr>
        <td id="L6432" class="blob-num js-line-number" data-line-number="6432"></td>
        <td id="LC6432" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">getMediaDimensions</span> <span class="pl-k">=</span> getMediaDimensions;</td>
      </tr>
      <tr>
        <td id="L6433" class="blob-num js-line-number" data-line-number="6433"></td>
        <td id="LC6433" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">imageTensorToCanvas</span> <span class="pl-k">=</span> imageTensorToCanvas;</td>
      </tr>
      <tr>
        <td id="L6434" class="blob-num js-line-number" data-line-number="6434"></td>
        <td id="LC6434" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">imageToSquare</span> <span class="pl-k">=</span> imageToSquare;</td>
      </tr>
      <tr>
        <td id="L6435" class="blob-num js-line-number" data-line-number="6435"></td>
        <td id="LC6435" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">inverseSigmoid</span> <span class="pl-k">=</span> inverseSigmoid;</td>
      </tr>
      <tr>
        <td id="L6436" class="blob-num js-line-number" data-line-number="6436"></td>
        <td id="LC6436" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">iou</span> <span class="pl-k">=</span> iou;</td>
      </tr>
      <tr>
        <td id="L6437" class="blob-num js-line-number" data-line-number="6437"></td>
        <td id="LC6437" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isDimensions</span> <span class="pl-k">=</span> isDimensions;</td>
      </tr>
      <tr>
        <td id="L6438" class="blob-num js-line-number" data-line-number="6438"></td>
        <td id="LC6438" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isEven</span> <span class="pl-k">=</span> isEven$1;</td>
      </tr>
      <tr>
        <td id="L6439" class="blob-num js-line-number" data-line-number="6439"></td>
        <td id="LC6439" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isFloat</span> <span class="pl-k">=</span> isFloat;</td>
      </tr>
      <tr>
        <td id="L6440" class="blob-num js-line-number" data-line-number="6440"></td>
        <td id="LC6440" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isMediaElement</span> <span class="pl-k">=</span> isMediaElement;</td>
      </tr>
      <tr>
        <td id="L6441" class="blob-num js-line-number" data-line-number="6441"></td>
        <td id="LC6441" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isMediaLoaded</span> <span class="pl-k">=</span> isMediaLoaded;</td>
      </tr>
      <tr>
        <td id="L6442" class="blob-num js-line-number" data-line-number="6442"></td>
        <td id="LC6442" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isTensor</span> <span class="pl-k">=</span> isTensor;</td>
      </tr>
      <tr>
        <td id="L6443" class="blob-num js-line-number" data-line-number="6443"></td>
        <td id="LC6443" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isTensor1D</span> <span class="pl-k">=</span> isTensor1D;</td>
      </tr>
      <tr>
        <td id="L6444" class="blob-num js-line-number" data-line-number="6444"></td>
        <td id="LC6444" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isTensor2D</span> <span class="pl-k">=</span> isTensor2D;</td>
      </tr>
      <tr>
        <td id="L6445" class="blob-num js-line-number" data-line-number="6445"></td>
        <td id="LC6445" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isTensor3D</span> <span class="pl-k">=</span> isTensor3D;</td>
      </tr>
      <tr>
        <td id="L6446" class="blob-num js-line-number" data-line-number="6446"></td>
        <td id="LC6446" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isTensor4D</span> <span class="pl-k">=</span> isTensor4D;</td>
      </tr>
      <tr>
        <td id="L6447" class="blob-num js-line-number" data-line-number="6447"></td>
        <td id="LC6447" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isValidNumber</span> <span class="pl-k">=</span> isValidNumber;</td>
      </tr>
      <tr>
        <td id="L6448" class="blob-num js-line-number" data-line-number="6448"></td>
        <td id="LC6448" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isValidProbablitiy</span> <span class="pl-k">=</span> isValidProbablitiy;</td>
      </tr>
      <tr>
        <td id="L6449" class="blob-num js-line-number" data-line-number="6449"></td>
        <td id="LC6449" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isWithFaceDetection</span> <span class="pl-k">=</span> isWithFaceDetection;</td>
      </tr>
      <tr>
        <td id="L6450" class="blob-num js-line-number" data-line-number="6450"></td>
        <td id="LC6450" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isWithFaceExpressions</span> <span class="pl-k">=</span> isWithFaceExpressions;</td>
      </tr>
      <tr>
        <td id="L6451" class="blob-num js-line-number" data-line-number="6451"></td>
        <td id="LC6451" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">isWithFaceLandmarks</span> <span class="pl-k">=</span> isWithFaceLandmarks;</td>
      </tr>
      <tr>
        <td id="L6452" class="blob-num js-line-number" data-line-number="6452"></td>
        <td id="LC6452" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadAgeGenderModel</span> <span class="pl-k">=</span> loadAgeGenderModel;</td>
      </tr>
      <tr>
        <td id="L6453" class="blob-num js-line-number" data-line-number="6453"></td>
        <td id="LC6453" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadFaceDetectionModel</span> <span class="pl-k">=</span> loadFaceDetectionModel;</td>
      </tr>
      <tr>
        <td id="L6454" class="blob-num js-line-number" data-line-number="6454"></td>
        <td id="LC6454" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadFaceExpressionModel</span> <span class="pl-k">=</span> loadFaceExpressionModel;</td>
      </tr>
      <tr>
        <td id="L6455" class="blob-num js-line-number" data-line-number="6455"></td>
        <td id="LC6455" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadFaceLandmarkModel</span> <span class="pl-k">=</span> loadFaceLandmarkModel;</td>
      </tr>
      <tr>
        <td id="L6456" class="blob-num js-line-number" data-line-number="6456"></td>
        <td id="LC6456" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadFaceLandmarkTinyModel</span> <span class="pl-k">=</span> loadFaceLandmarkTinyModel;</td>
      </tr>
      <tr>
        <td id="L6457" class="blob-num js-line-number" data-line-number="6457"></td>
        <td id="LC6457" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadFaceRecognitionModel</span> <span class="pl-k">=</span> loadFaceRecognitionModel;</td>
      </tr>
      <tr>
        <td id="L6458" class="blob-num js-line-number" data-line-number="6458"></td>
        <td id="LC6458" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadMtcnnModel</span> <span class="pl-k">=</span> loadMtcnnModel;</td>
      </tr>
      <tr>
        <td id="L6459" class="blob-num js-line-number" data-line-number="6459"></td>
        <td id="LC6459" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadSsdMobilenetv1Model</span> <span class="pl-k">=</span> loadSsdMobilenetv1Model;</td>
      </tr>
      <tr>
        <td id="L6460" class="blob-num js-line-number" data-line-number="6460"></td>
        <td id="LC6460" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadTinyFaceDetectorModel</span> <span class="pl-k">=</span> loadTinyFaceDetectorModel;</td>
      </tr>
      <tr>
        <td id="L6461" class="blob-num js-line-number" data-line-number="6461"></td>
        <td id="LC6461" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadTinyYolov2Model</span> <span class="pl-k">=</span> loadTinyYolov2Model;</td>
      </tr>
      <tr>
        <td id="L6462" class="blob-num js-line-number" data-line-number="6462"></td>
        <td id="LC6462" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">loadWeightMap</span> <span class="pl-k">=</span> loadWeightMap;</td>
      </tr>
      <tr>
        <td id="L6463" class="blob-num js-line-number" data-line-number="6463"></td>
        <td id="LC6463" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">locateFaces</span> <span class="pl-k">=</span> locateFaces;</td>
      </tr>
      <tr>
        <td id="L6464" class="blob-num js-line-number" data-line-number="6464"></td>
        <td id="LC6464" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">matchDimensions</span> <span class="pl-k">=</span> matchDimensions;</td>
      </tr>
      <tr>
        <td id="L6465" class="blob-num js-line-number" data-line-number="6465"></td>
        <td id="LC6465" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">mtcnn</span> <span class="pl-k">=</span> mtcnn;</td>
      </tr>
      <tr>
        <td id="L6466" class="blob-num js-line-number" data-line-number="6466"></td>
        <td id="LC6466" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">nets</span> <span class="pl-k">=</span> nets;</td>
      </tr>
      <tr>
        <td id="L6467" class="blob-num js-line-number" data-line-number="6467"></td>
        <td id="LC6467" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">nonMaxSuppression</span> <span class="pl-k">=</span> nonMaxSuppression$1;</td>
      </tr>
      <tr>
        <td id="L6468" class="blob-num js-line-number" data-line-number="6468"></td>
        <td id="LC6468" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">normalize</span> <span class="pl-k">=</span> normalize;</td>
      </tr>
      <tr>
        <td id="L6469" class="blob-num js-line-number" data-line-number="6469"></td>
        <td id="LC6469" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">padToSquare</span> <span class="pl-k">=</span> padToSquare;</td>
      </tr>
      <tr>
        <td id="L6470" class="blob-num js-line-number" data-line-number="6470"></td>
        <td id="LC6470" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">predictAgeAndGender</span> <span class="pl-k">=</span> predictAgeAndGender;</td>
      </tr>
      <tr>
        <td id="L6471" class="blob-num js-line-number" data-line-number="6471"></td>
        <td id="LC6471" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">range</span> <span class="pl-k">=</span> range$1;</td>
      </tr>
      <tr>
        <td id="L6472" class="blob-num js-line-number" data-line-number="6472"></td>
        <td id="LC6472" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">recognizeFaceExpressions</span> <span class="pl-k">=</span> recognizeFaceExpressions;</td>
      </tr>
      <tr>
        <td id="L6473" class="blob-num js-line-number" data-line-number="6473"></td>
        <td id="LC6473" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">resizeResults</span> <span class="pl-k">=</span> resizeResults;</td>
      </tr>
      <tr>
        <td id="L6474" class="blob-num js-line-number" data-line-number="6474"></td>
        <td id="LC6474" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">resolveInput</span> <span class="pl-k">=</span> resolveInput;</td>
      </tr>
      <tr>
        <td id="L6475" class="blob-num js-line-number" data-line-number="6475"></td>
        <td id="LC6475" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">round</span> <span class="pl-k">=</span> round$1;</td>
      </tr>
      <tr>
        <td id="L6476" class="blob-num js-line-number" data-line-number="6476"></td>
        <td id="LC6476" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">shuffleArray</span> <span class="pl-k">=</span> shuffleArray;</td>
      </tr>
      <tr>
        <td id="L6477" class="blob-num js-line-number" data-line-number="6477"></td>
        <td id="LC6477" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">sigmoid</span> <span class="pl-k">=</span> sigmoid$1;</td>
      </tr>
      <tr>
        <td id="L6478" class="blob-num js-line-number" data-line-number="6478"></td>
        <td id="LC6478" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">ssdMobilenetv1</span> <span class="pl-k">=</span> ssdMobilenetv1;</td>
      </tr>
      <tr>
        <td id="L6479" class="blob-num js-line-number" data-line-number="6479"></td>
        <td id="LC6479" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">tf</span> <span class="pl-k">=</span> tfCore_esm;</td>
      </tr>
      <tr>
        <td id="L6480" class="blob-num js-line-number" data-line-number="6480"></td>
        <td id="LC6480" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">tinyFaceDetector</span> <span class="pl-k">=</span> tinyFaceDetector;</td>
      </tr>
      <tr>
        <td id="L6481" class="blob-num js-line-number" data-line-number="6481"></td>
        <td id="LC6481" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">tinyYolov2</span> <span class="pl-k">=</span> tinyYolov2;</td>
      </tr>
      <tr>
        <td id="L6482" class="blob-num js-line-number" data-line-number="6482"></td>
        <td id="LC6482" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exports</span>.<span class="pl-smi">toNetInput</span> <span class="pl-k">=</span> toNetInput;</td>
      </tr>
      <tr>
        <td id="L6483" class="blob-num js-line-number" data-line-number="6483"></td>
        <td id="LC6483" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6484" class="blob-num js-line-number" data-line-number="6484"></td>
        <td id="LC6484" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-c1">exports</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>__esModule<span class="pl-pds">&#39;</span></span>, { value<span class="pl-k">:</span> <span class="pl-c1">true</span> });</td>
      </tr>
      <tr>
        <td id="L6485" class="blob-num js-line-number" data-line-number="6485"></td>
        <td id="LC6485" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6486" class="blob-num js-line-number" data-line-number="6486"></td>
        <td id="LC6486" class="blob-code blob-code-inner js-file-line">}));</td>
      </tr>
      <tr>
        <td id="L6487" class="blob-num js-line-number" data-line-number="6487"></td>
        <td id="LC6487" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span># sourceMappingURL=face-api.js.map</span></td>
      </tr>
</table>

  <details class="details-reset details-overlay BlobToolbar position-absolute js-file-line-actions dropdown d-none" aria-hidden="true">
    <summary class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1" aria-label="Inline file action toolbar">
      <svg class="octicon octicon-kebab-horizontal" viewBox="0 0 13 16" version="1.1" width="13" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm5 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM13 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>
    </summary>
    <details-menu>
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2" style="width:185px">
        <li><clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-lines" style="cursor:pointer;" data-original-text="Copy lines">Copy lines</clipboard-copy></li>
        <li><clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</clipboard-copy></li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" role="menuitem" href="/justadudewhohacks/face-api.js/blame/2e4f59956838f712ab247e185add5c203a362fc1/dist/face-api.js">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" role="menuitem" href="/justadudewhohacks/face-api.js/issues/new">Reference in new issue</a></li>
      </ul>
    </details-menu>
  </details>

  </div>

    </div>

  

  <details class="details-reset details-overlay details-overlay-dark">
    <summary data-hotkey="l" aria-label="Jump to line"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast linejump" aria-label="Jump to line">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form Box-body d-flex" action="" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
        <input class="form-control flex-auto mr-3 linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
        <button type="submit" class="btn" data-close-dialog>Go</button>
</form>    </details-dialog>
  </details>

    <div class="Popover anim-scale-in js-tagsearch-popover"
     hidden data-tagsearch-url="/justadudewhohacks/face-api.js/find-symbols"
     data-tagsearch-ref="master"
     data-tagsearch-path="dist/face-api.js"
     data-tagsearch-lang="JavaScript"
     data-hydro-click="{&quot;event_type&quot;:&quot;code_navigation.click_on_symbol&quot;,&quot;payload&quot;:{&quot;action&quot;:&quot;click_on_symbol&quot;,&quot;repository_id&quot;:134035452,&quot;ref&quot;:&quot;master&quot;,&quot;client_id&quot;:&quot;2069667669.1545833518&quot;,&quot;originating_request_id&quot;:&quot;831A:68CE:1D17C04:3073A53:5D060DEA&quot;,&quot;originating_url&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/blob/master/dist/face-api.js&quot;,&quot;referrer&quot;:&quot;https://github.com/justadudewhohacks/face-api.js/tree/master/dist&quot;,&quot;user_id&quot;:11913893}}"
     data-hydro-click-hmac="7a02cc91088e972d525827fc3bdc2f9c7e498f53497177433bcf7deca36774dc">
  <div class="Popover-message Popover-message--large Popover-message--top-left TagsearchPopover mt-1 mx-auto Box box-shadow-large">
    <div class="TagsearchPopover-content js-tagsearch-popover-content overflow-auto">
    </div>
  </div>
</div>



  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </main>
  </div>
  

  </div>

        
<div class="footer container-lg width-full p-responsive" role="contentinfo">
  <div class="position-relative d-flex flex-row-reverse flex-lg-row flex-wrap flex-lg-nowrap flex-justify-center flex-lg-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
      <li class="mr-3 mr-lg-0">&copy; 2019 <span title="0.75821s from unicorn-5b6b97b8cc-ft8gg">GitHub</span>, Inc.</li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to security, text:security" href="https://github.com/security">Security</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://githubstatus.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon d-none d-lg-block mx-lg-4" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
   <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.com/pricing" data-ga-click="Footer, go to Pricing, text:Pricing">Pricing</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 text-gray-light"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
    You canât perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha512-ztF7ic695vgHWX5TmRR8mlaGAugquO7GpXmQI8quIbJJ/X4sUT0+0dkBoks46LFVC2qgVOcUVYTEIZ2m3kDRUg==" type="application/javascript" src="https://github.githubassets.com/assets/frameworks-f35ef5c6.js"></script>
    
    <script crossorigin="anonymous" async="async" integrity="sha512-pxsQrcZI6bVbt9Ixv3hmtsZJ977hT6AFZ6TPJAa4L4d9/mUx8Nt+acBypJkh6LBlga5xoIjI/at99d+Yftd2ZQ==" type="application/javascript" src="https://github.githubassets.com/assets/github-bootstrap-282b640a.js"></script>
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner" hidden
    >
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm" open>
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large" style="width:360px;">
  </div>
</div>

  <div aria-live="polite" class="js-global-screen-reader-notice sr-only"></div>

  </body>
</html>

